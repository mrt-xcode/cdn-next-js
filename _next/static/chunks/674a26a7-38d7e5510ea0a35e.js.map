{"version":3,"file":"static/chunks/674a26a7-38d7e5510ea0a35e.js","mappings":"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AAuBpD,EAAA,eAAAoD,EAnEvB,EAmEiD,EACjD,IAAuBpD,EAAA,YAAAoD,EAxFvB,CAwFuB,EACvB,IAAuBpD,EAAA,YAAAoD,EAzFvB,CAyFuB,EACvB,IAAuBpD,EAAA,YAAAoD,EA1FvB,CA0FuB,EACvB,IAAuBpD,EAAA,YAAAoD,EAhEvB,EAgEuB,EACvB,IAAuBpD,EAAA,cAAAoD,EAzDvB,EAyDmD,EACnD,IAAuBpD,EAAA,cAAAoD,EA7FvB,CA6FuB,EACvB,OAEA,YAA6BpD,EAAA,SAAAoD,EAnF7B,EAmF6B,EAC7B,YAAApD,EAAA,WAAAoD,EApFA,EAoFA,EACA,eAIAmrC,GAAA,CACA,OACA,OACA,KACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,YAIAC,GAAA,CACA,KACA,QACA,aACA,WACA,YACA,iBACA,eACA,WACA,SACA,WACA,cACA,kBACA,gBACA,YACA,UACA,YACA,eACA,UACA,YAkGAC,GAAA5uC,GAhGkJ6iC,CAOlJ,EACA,SACA,SACA,MACA,IACA,SACA,eAIA,EACA,SACA,SACA,MACA,IACA,SACA,eAGA,QACA,MACA,IACA,QACA,QACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,eAGA,IACA,SACA,SACA,MACA,QACA,QACA,MACA,IACA,MACA,SACA,SACA,SACA,SACA,SACA,kBAGA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,MACA,QACA,MACA,QACA,SACA,SACA,gBAIA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,CAhGkJ91B,GAAA,UAAA9H,CAAA,4BAAAA,IAAAA,EAAA,IAoGl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EA87R7DS,EAAA,CA97R6D,GA87R7D,CACA,IAAAs4C,EAAAK,GAAA75C,EAAA05C,EAAAx8C,GAGA,OAFAgE,IAAAw4C,EAAA94C,GAAA24C,CAAAA,EAAAO,GAAA95C,EAAAkB,EAAAw4C,EAAA94C,EAAA44C,EAAAt8C,EAAA,EACA8C,EAAAS,CAAA,CAAAwhC,EACA,CAAAuX,EAAAD,EAAA,EA6DSv5C,EAAAa,EAAAb,EAAAS,CAAA,CAAAvD,GACT,OAAAgV,KAAAA,EAAA/J,IAAAA,CAAA,IAAAi5C,QAAAwW,EAAAE,OAAA,OAAA/sC,GAAA5iB,CAAA,IACA,CAwBA,SAAA4vD,GAAA96D,CAAA,CAAAiE,CAAA,CAAAhE,CAAA,EACA,IAAAw8C,EAAAz8C,EAAAiD,UAAA,IACAs5C,EAAAK,GAAA58C,EAAAy8C,EAAAx8C,GACAuqC,EAAAxqC,EAAAiD,UAAA,IACAq5C,EAAA9R,EAAA,EAAAqS,GAAA78C,EAAAwqC,EAAA+R,EAAAt8C,GAAA,KACA,OAAAs8C,EAAAD,EAAA,CAeA,IAAA6a,GAAA,CACA,SACA,SACA,eACA,cACA,SACA,YACA,gBACA,eACA,UACA,kBACA,UACA,gBACA,iBACA,iBACA,iBACA,UACA,WACA,SACA,oBACA,sBACA,oBACA,uBACA,UACA,aACA,sBACA,eACA,aACA,mBACA,iBACA,eACA,aACA,iBACA,kBACA,kBACA,UACA,iBACA,WACA,mBACA,eACA,WACA,YACA,qBACA,kBACA,UACA,SACA,UACA,WACA,WACA,mBACA,iBACA,YACA,gBACA,eACA,iBACA,kBACA,kBACA,kBACA,sBACA,sBACA,kBACA,iBACA,oBACA,kBACA,iBACA,qBACA,iBACA,eACA,iBACA,eACA,mBACA,UACA,YACA,iBACA,eACA,kBACA,sBACA,cACA,gBACA,aACA,WACA,mBACA,iBACA,iBACA,WACA,aACA,UACA,YACA,eACA,aACA,kBACA,mBACA,oBACA,qBACA,wBACA,wBACA,eACA,oBACA,oBACA,oBACA,oBACA,mBACA,aACA,kBACA,oBACA,YACA,YACA,YACA,YACA,cACA,cACA,YACA,UACA,kBACA,qBACA,cACA,iBACA,mBACA,mBACA,iBACA,kBACA,kBACA,sBACA,gBACA,qBACA,kBACA,mBACA,mBACA,gBACA,YACA,gBACA,cACA,oBACA,cACA,iBACA,iBACA,oBACA,gBACA,iBACA,cACA,WACA,kBACA,cACA,gBACA,qBACA,kBACA,wBACA,oBACA,mBACA,qBACA,sBACA,kBACA,yBACA,aACA,kBACA,eACA,eACA,mBACA,mBACA,qBACA,mBACA,sBACA,yBACA,iBACA,gBACA,gBACA,oBACA,kBACA,mBACA,sBACA,wBACA,sBACA,qBACA,cACA,gBACA,gBACA,iBACA,kBACA,cACA,aACA,kBACA,cACA,wBACA,sBACA,YACA,iBACA,gBACA,kBACA,uBACA,wBACA,kBACA,kBACA,uBACA,mBACA,iBACA,mBACA,oBACA,iBACA,kBACA,kBACA,qBACA,gBACA,kBACA,mBACA,iBACA,iBACA,oBACA,mBACA,sBACA,oBACA,yBACA,eACA,WACA,oBACA,sBACA,iBACA,iBACA,mBACA,qBACA,kBACA,qBACA,yBACA,gBACA,wBACA,eACA,kBACA,qBACA,eACA,mBACA,oBACA,oBACA,uBACA,qBACA,mBACA,kBACA,gBACA,sBACA,wBACA,qBACA,gBACA,iBACA,wBACA,iBACA,mBACA,qBACA,sBACA,mBACA,oBACA,oBACA,yBACA,uBACA,yBACA,6BACA,kBACA,iBACA,uBACA,0BACA,mBACA,mBACA,oBACA,kBACA,sBACA,kBACA,oBACA,sBACA,+BACA,mBACA,qBACA,iBACA,qBACA,gBACA,uBACA,kBACA,4BACA,sBACA,yBACA,sBACA,sBACA,sBACA,yBACA,iBACA,qBACA,mBACA,uBACA,iBACA,mBACA,sBACA,oBACA,oBACA,sBACA,sBACA,oBACA,qBACA,2BACA,8BACA,qBACA,mBACA,gBACA,kBACA,iBACA,qBACA,sBACA,sBACA,oBACA,sBACA,oBACA,oBACA,yBACA,kBACA,uBACA,2BACA,uBACA,sBACA,uBACA,kBACA,qBACA,sBACA,mBACA,mBACA,wBACA,0BACA,0BACA,uBACA,yBACA,yBACA,oBACA,iBACA,gBACA,kBACA,uBACA,oBACA,4BACA,yBACA,aACA,sBACA,oBACA,sBACA,oBACA,oBACA,uBACA,uBACA,wBACA,mBACA,wBACA,2BACA,kBACA,eACA,eACA,iBACA,iBACA,mBACA,mBACA,kBACA,yBACA,6BACA,uBACA,eACA,qBACA,qBACA,mBACA,gBACA,uBACA,uBACA,qBACA,sBACA,wBACA,uBACA,kBACA,oBACA,eACA,gBACA,kBACA,kBACA,uBACA,wBACA,qBACA,gBACA,aACA,aACA,oBACA,uBACA,qBACA,eACA,oBACA,oBACA,kBACA,qBACA,qBACA,wBACA,0BACA,iBACA,kBACA,kBACA,wBACA,mBACA,oBACA,uBACA,EACAH,GAAA,CACA,UACA,OACA,SACA,YACA,QACA,YACA,QACA,QACA,QACA,WACA,QACA,SACA,WACA,YACA,WACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,QACA,WACA,SACA,SACA,UACA,WACA,YACA,WACA,UACA,SACA,SACA,WACA,UACA,WACA,SACA,QACA,SACA,SACA,YACA,UACA,cACA,UACA,UACA,YACA,SACA,UACA,UACA,YACA,WACA,YACA,YACA,UACA,UACA,YACA,QACA,QACA,UACA,SACA,UACA,UACA,SACA,UACA,WACA,UACA,UACA,SACA,WACA,UACA,aACA,UACA,YACA,YACA,SACA,WACA,UACA,aACA,YACA,YACA,YACA,cACA,YACA,eACA,WACA,UACA,UACA,UACA,cACA,YACA,WACA,aACA,YACA,eACA,iBACA,eACA,YACA,WACA,UACA,UACA,aACA,cACA,cACA,YACA,YACA,YACA,kBACA,eACA,gBACA,UACA,WACA,WACA,YACA,YACA,aACA,WACA,YACA,YACA,WACA,cACA,iBACA,WACA,YACA,gBACA,WACA,WACA,YACA,aACA,eACA,cACA,QACA,QACA,YACA,aACA,YACA,cACA,YACA,eACA,aACA,WACA,gBACA,gBACA,UACA,UACA,UACA,cACA,cACA,cACA,eACA,eACA,WACA,cACA,eACA,kBACA,qBACA,oBACA,qBACA,eACA,kBACA,qBACA,qBACA,iBACA,YACA,cACA,eACA,YACA,YACA,WACA,WACA,aACA,iBACA,UACA,YACA,YACA,WACA,eACA,cACA,WACA,cACA,gBACA,cACA,WACA,cACA,cACA,WACA,eACA,oBACA,iBACA,mBACA,eACA,gBACA,eACA,WACA,aACA,WACA,cACA,YACA,YACA,gBACA,cACA,iBACA,iBACA,eACA,YACA,cACA,eACA,YACA,aACA,WACA,WACA,cACA,gBACA,UACA,WACA,WACA,cACA,cACA,YACA,UACA,WACA,cACA,aACA,eACA,aACA,iBACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,oBACA,eACA,iBACA,kBACA,oBACA,sBACA,oBACA,eACA,WACA,YACA,iBACA,SACA,YACA,aACA,gBACA,kBACA,qBACA,WACA,oBACA,eACA,kBACA,eACA,qBACA,iBACA,gBACA,mBACA,mBACA,kBACA,iBACA,kBACA,mBACA,aACA,eACA,cACA,cACA,gBACA,cACA,aACA,aACA,iBACA,gBACA,WACA,gBACA,YACA,WACA,aACA,gBACA,YACA,gBACA,eACA,cACA,kBACA,kBACA,aACA,mBACA,eACA,gBACA,cACA,eACA,kBACA,UACA,aACA,cACA,YACA,cACA,cACA,eACA,eACA,cACA,aACA,YACA,eACA,YACA,gBACA,cACA,UACA,YACA,YACA,YACA,WACA,YACA,cACA,cACA,YACA,WACA,WACA,YACA,YACA,YACA,eACA,iBACA,kBACA,WACA,eACA,WACA,oBACA,gBACA,kBACA,YACA,qBACA,sBACA,sBACA,qBACA,cACA,cACA,eACA,YACA,cACA,iBACA,mBACA,wBACA,YACA,cACA,iBACA,mBACA,YACA,kBACA,kBACA,eACA,mBACA,gBACA,eACA,eACA,WACA,WACA,cACA,YACA,aACA,WACA,eACA,oBACA,gBACA,sBACA,mBACA,oBACA,uBACA,kBACA,oBACA,kBACA,eACA,UACA,gBACA,iBACA,yBACA,uBACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,YACA,YACA,cACA,YACA,aACA,WACA,aACA,cACA,YACA,YACA,YACA,iBACA,kBACA,gBACA,aACA,cACA,YACA,gBACA,gBACA,iBACA,aACA,eACA,YACA,aACA,aACA,YACA,aACA,UACA,WACA,cACA,cACA,cACA,cACA,WACA,WACA,eACA,eACA,cACA,eACA,WACA,gBACA,gBACA,cACA,iBACA,iBACA,YACA,YACA,eACA,eACA,cACA,aACA,eACA,cACA,YACA,cACA,eACA,gBACA,eACA,iBACA,cACA,cACA,cACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,kBACA,cACA,gBACA,eACA,cACA,cACA,cACA,eACA,cACA,kBACA,UACA,kBACA,UACA,iBACA,oBACA,cACA,mBACA,cACA,eACA,aACA,gBACA,gBACA,EACAD,GAAA,CACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,EAEA,SAAAgE,GAAAl4D,CAAA,EAYA,MAXA,OAAAA,EAAA+H,KAAA,OAAA/H,CAAAA,EAAAA,EAAA+H,KAAA,KAEA,IAAA/H,EAAA6gB,UAAA,KAEA7gB,IAAAA,CADAA,EAAAA,EAAA+H,KAAA,KACA8Y,UAAA,KAAA7gB,CAAAA,EAAAA,EAAA+H,KAAA,KAOA/H,CADAA,EAAAA,CAFAA,EAAAA,CAFAA,EAAAA,EAAAyC,OAAA,0BAEAA,OAAA,0DAAAimB,CAAA,CAAAC,CAAA,SAAAA,EAAAlmB,OAAA,cAEAA,OAAA,uBAAqB,OACrBA,OAAA,cAAAA,OAAA,YASA,SAAA01D,GAAAnoD,CAAA,EACA,IAAA6K,EAAA7K,EAAAjH,KAAA,MAEA,OADA8R,CAAA,IAAA9R,KAAA,SACA8R,CAAA,IAAA9R,KAAA,SAAA8R,CAAAA,EAAAzZ,MAAA,OAAAyZ,CAAAA,CAA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CA,uBACA,eACA,iBACA,kBACA,iBACA,6BACA,uBACA,eACA,gBACA,eACA,gBACA,iBACA,kBACA,kBACA,iBACA,uBACA,WACA,eACA,eACA,iBACA,6BACA,eACA,gBACA,oBACA,iBACA,0BACA,aACA,eACA,gBACA,oBACA,eACA,wBACA,qBACA,kBACA,qBACA,kBACA,kBACA,sBACA,yBACA,wBACA,2BACA,4BACA,kBA5CA,cA6CMksB,GAAA,aAIN,oBAAAlsB,CAAA,KACA,gBACA,eACA,gBACA,eACA,eACA,aACA,aANA,cAOMksB,GAAA,aAIN,oBAAAlsB,CAAA,KACA,uBACA,0BACA,oBACA,mBAHA,cAIMksB,GAAA,aAIN,oBAAAlsB,CAAA,KACA,SACA,qBACA,wBACA,kBACA,gBACA,yBACA,qBACA,gBACA,iBACA,iBACA,kBACA,kBACA,eACA,aACA,iBACA,qBACA,yBACA,yBACA,aACA,aACA,cACA,wBACA,2BACA,qBACA,gBACA,iBACA,UACA,YACA,qBACA,sBACA,yBA9BA,cA+BMksB,GAAA,aAGN,iBACA,OAAAlsB,CAAA,iBAGA,WACA,UACA,UACA,WACA,iBACA,YACA,oBACA,YACA,iBACA,mBACA,iBACA,mBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,aACA,0BAGA,oBAzBA,cA0BMksB,GAAA,aAGN,UACA,4BACA,OAAAlsB,CAAA,KACA,YACA,WACA,UACA,UACA,WACA,iBACA,YACA,oBACA,YACA,iBACA,mBACA,iBACA,oBACA,mBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,aACA,aACA,aAtBA,cAuBMksB,GAAA,aAIN,yCAAAlsB,CAAA,KACA,UACA,YACA,YACA,YACA,YACA,cACA,eACA,gBACA,kBACA,oBAEA,aACA,cACA,kBACA,eACA,UACA,8BAGA,UAnBA,cAoBMksB,GAAA,aAGN,0BAGAA,GAAA,EACA,CACA,GAAAA,IAEAlsB,CAAA,IAAArF,KAAA,aAFA,MAGA,IAAAyK,CAAA,CAAAA,EAAAzI,MAAA,iCAAAqD,CAAA,QAA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","sources":["webpack://_N_E/./node_modules/xlsx/xlsx.mjs","webpack://_N_E/<anon>"],"sourcesContent":["/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported XLSX */\n/*global process:false, Buffer:false, ArrayBuffer:false, DataView:false, Deno:false */\nvar XLSX = {};\nXLSX.version = '0.18.5';\nvar current_codepage = 1200, current_ansi = 1252;\n\nvar VALID_ANSI = [ 874, 932, 936, 949, 950, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 10000 ];\n/* ECMA-376 Part I 18.4.1 charset to codepage mapping */\nvar CS2CP = ({\n\t/*::[*/0/*::]*/:    1252, /* ANSI */\n\t/*::[*/1/*::]*/:   65001, /* DEFAULT */\n\t/*::[*/2/*::]*/:   65001, /* SYMBOL */\n\t/*::[*/77/*::]*/:  10000, /* MAC */\n\t/*::[*/128/*::]*/:   932, /* SHIFTJIS */\n\t/*::[*/129/*::]*/:   949, /* HANGUL */\n\t/*::[*/130/*::]*/:  1361, /* JOHAB */\n\t/*::[*/134/*::]*/:   936, /* GB2312 */\n\t/*::[*/136/*::]*/:   950, /* CHINESEBIG5 */\n\t/*::[*/161/*::]*/:  1253, /* GREEK */\n\t/*::[*/162/*::]*/:  1254, /* TURKISH */\n\t/*::[*/163/*::]*/:  1258, /* VIETNAMESE */\n\t/*::[*/177/*::]*/:  1255, /* HEBREW */\n\t/*::[*/178/*::]*/:  1256, /* ARABIC */\n\t/*::[*/186/*::]*/:  1257, /* BALTIC */\n\t/*::[*/204/*::]*/:  1251, /* RUSSIAN */\n\t/*::[*/222/*::]*/:   874, /* THAI */\n\t/*::[*/238/*::]*/:  1250, /* EASTEUROPE */\n\t/*::[*/255/*::]*/:  1252, /* OEM */\n\t/*::[*/69/*::]*/:   6969  /* MISC */\n}/*:any*/);\n\nvar set_ansi = function(cp/*:number*/) { if(VALID_ANSI.indexOf(cp) == -1) return; current_ansi = CS2CP[0] = cp; };\nfunction reset_ansi() { set_ansi(1252); }\n\nvar set_cp = function(cp/*:number*/) { current_codepage = cp; set_ansi(cp); };\nfunction reset_cp() { set_cp(1200); reset_ansi(); }\n\nfunction char_codes(data/*:string*/)/*:Array<number>*/ { var o/*:Array<number>*/ = []; for(var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i); return o; }\n\nfunction utf16leread(data/*:string*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i) + (data.charCodeAt(2*i+1)<<8));\n\treturn o.join(\"\");\n}\nfunction utf16beread(data/*:string*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i+1) + (data.charCodeAt(2*i)<<8));\n\treturn o.join(\"\");\n}\n\nvar debom = function(data/*:string*/)/*:string*/ {\n\tvar c1 = data.charCodeAt(0), c2 = data.charCodeAt(1);\n\tif(c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\n\tif(c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\n\tif(c1 == 0xFEFF) return data.slice(1);\n\treturn data;\n};\n\nvar _getchar = function _gc1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };\nvar _getansi = function _ga1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };\n\nvar $cptable;\nfunction set_cptable(cptable) {\n\t$cptable = cptable;\n\tset_cp = function(cp/*:number*/) { current_codepage = cp; set_ansi(cp); };\n\tdebom = function(data/*:string*/) {\n\t\tif(data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) { return $cptable.utils.decode(1200, char_codes(data.slice(2))); }\n\t\treturn data;\n\t};\n\t_getchar = function _gc2(x/*:number*/)/*:string*/ {\n\t\tif(current_codepage === 1200) return String.fromCharCode(x);\n\t\treturn $cptable.utils.decode(current_codepage, [x&255,x>>8])[0];\n\t};\n\t_getansi = function _ga2(x/*:number*/)/*:string*/ {\n\t\treturn $cptable.utils.decode(current_ansi, [x])[0];\n\t};\n\tcpdoit();\n}\nexport { set_cptable };\nvar DENSE = null;\nvar DIF_XL = true;\nvar Base64_map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nfunction Base64_encode(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  for (var i = 0; i < input.length; ) {\n    c1 = input.charCodeAt(i++);\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_decode(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  input = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n  for (var i = 0; i < input.length; ) {\n    e1 = Base64_map.indexOf(input.charAt(i++));\n    e2 = Base64_map.indexOf(input.charAt(i++));\n    c1 = e1 << 2 | e2 >> 4;\n    o += String.fromCharCode(c1);\n    e3 = Base64_map.indexOf(input.charAt(i++));\n    c2 = (e2 & 15) << 4 | e3 >> 2;\n    if (e3 !== 64) {\n      o += String.fromCharCode(c2);\n    }\n    e4 = Base64_map.indexOf(input.charAt(i++));\n    c3 = (e3 & 3) << 6 | e4;\n    if (e4 !== 64) {\n      o += String.fromCharCode(c3);\n    }\n  }\n  return o;\n}\nvar has_buf = /*#__PURE__*/(function() { return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node; })();\n\nvar Buffer_from = /*#__PURE__*/(function() {\n\tif(typeof Buffer !== 'undefined') {\n\t\tvar nbfs = !Buffer.from;\n\t\tif(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n\t\treturn nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n\t}\n\treturn function() {};\n})();\n\n\nfunction new_raw_buf(len/*:number*/) {\n\t/* jshint -W056 */\n\tif(has_buf) return Buffer.alloc ? Buffer.alloc(len) : new Buffer(len);\n\treturn typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nfunction new_unsafe_buf(len/*:number*/) {\n\t/* jshint -W056 */\n\tif(has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);\n\treturn typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nvar s2a = function s2a(s/*:string*/)/*:any*/ {\n\tif(has_buf) return Buffer_from(s, \"binary\");\n\treturn s.split(\"\").map(function(x/*:string*/)/*:number*/{ return x.charCodeAt(0) & 0xff; });\n};\n\nfunction s2ab(s/*:string*/)/*:any*/ {\n\tif(typeof ArrayBuffer === 'undefined') return s2a(s);\n\tvar buf = new ArrayBuffer(s.length), view = new Uint8Array(buf);\n\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\treturn buf;\n}\n\nfunction a2s(data/*:any*/)/*:string*/ {\n\tif(Array.isArray(data)) return data.map(function(c) { return String.fromCharCode(c); }).join(\"\");\n\tvar o/*:Array<string>*/ = []; for(var i = 0; i < data.length; ++i) o[i] = String.fromCharCode(data[i]); return o.join(\"\");\n}\n\nfunction a2u(data/*:Array<number>*/)/*:Uint8Array*/ {\n\tif(typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\n\treturn new Uint8Array(data);\n}\n\nfunction ab2a(data/*:ArrayBuffer|Uint8Array*/)/*:Array<number>*/ {\n\tif(typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\n\tif(data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\n\t/*:: if(data instanceof ArrayBuffer) throw new Error(\"unreachable\"); */\n\tvar o = new Array(data.length);\n\tfor(var i = 0; i < data.length; ++i) o[i] = data[i];\n\treturn o;\n}\n\nvar bconcat = has_buf ? function(bufs) { return Buffer.concat(bufs.map(function(buf) { return Buffer.isBuffer(buf) ? buf : Buffer_from(buf); })); } : function(bufs) {\n\tif(typeof Uint8Array !== \"undefined\") {\n\t\tvar i = 0, maxlen = 0;\n\t\tfor(i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n\t\tvar o = new Uint8Array(maxlen);\n\t\tvar len = 0;\n\t\tfor(i = 0, maxlen = 0; i < bufs.length; maxlen += len, ++i) {\n\t\t\tlen = bufs[i].length;\n\t\t\tif(bufs[i] instanceof Uint8Array) o.set(bufs[i], maxlen);\n\t\t\telse if(typeof bufs[i] == \"string\") { throw \"wtf\"; }\n\t\t\telse o.set(new Uint8Array(bufs[i]), maxlen);\n\t\t}\n\t\treturn o;\n\t}\n\treturn [].concat.apply([], bufs.map(function(buf) { return Array.isArray(buf) ? buf : [].slice.call(buf); }));\n};\n\nfunction utf8decode(content/*:string*/) {\n\tvar out = [], widx = 0, L = content.length + 250;\n\tvar o = new_raw_buf(content.length + 255);\n\tfor(var ridx = 0; ridx < content.length; ++ridx) {\n\t\tvar c = content.charCodeAt(ridx);\n\t\tif(c < 0x80) o[widx++] = c;\n\t\telse if(c < 0x800) {\n\t\t\to[widx++] = (192|((c>>6)&31));\n\t\t\to[widx++] = (128|(c&63));\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64;\n\t\t\tvar d = content.charCodeAt(++ridx)&1023;\n\t\t\to[widx++] = (240|((c>>8)&7));\n\t\t\to[widx++] = (128|((c>>2)&63));\n\t\t\to[widx++] = (128|((d>>6)&15)|((c&3)<<4));\n\t\t\to[widx++] = (128|(d&63));\n\t\t} else {\n\t\t\to[widx++] = (224|((c>>12)&15));\n\t\t\to[widx++] = (128|((c>>6)&63));\n\t\t\to[widx++] = (128|(c&63));\n\t\t}\n\t\tif(widx > L) {\n\t\t\tout.push(o.slice(0, widx));\n\t\t\twidx = 0;\n\t\t\to = new_raw_buf(65535);\n\t\t\tL = 65530;\n\t\t}\n\t}\n\tout.push(o.slice(0, widx));\n\treturn bconcat(out);\n}\n\nvar chr0 = /\\u0000/g, chr1 = /[\\u0001-\\u0006]/g;\n/*::\ndeclare type Block = any;\ndeclare type BufArray = {\n\tnewblk(sz:number):Block;\n\tnext(sz:number):Block;\n\tend():any;\n\tpush(buf:Block):void;\n};\n\ntype RecordHopperCB = {(d:any, Rn:string, RT:number):?boolean;};\n\ntype EvertType = {[string]:string};\ntype EvertNumType = {[string]:number};\ntype EvertArrType = {[string]:Array<string>};\n\ntype StringConv = {(string):string};\n\n*/\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/*jshint -W041 */\nfunction _strrev(x/*:string*/)/*:string*/ { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction pad0(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = /*#__PURE__*/Math.pow(2,32);\nfunction pad0r(v/*:any*/,d/*:number*/)/*:string*/{if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\n/* yes, in 2022 this is still faster than string compare */\nfunction SSF_isgeneral(s/*:string*/, i/*:?number*/)/*:boolean*/ { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days/*:Array<Array<string> >*/ = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months/*:Array<Array<string> >*/ = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction SSF_init_table(t/*:any*/) {\n\tif(!t) t = {};\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\treturn t;\n}\n/* repeated to satiate webpack */\nvar table_fmt = {\n\t0:  'General',\n\t1:  '0',\n\t2:  '0.00',\n\t3:  '#,##0',\n\t4:  '#,##0.00',\n\t9:  '0%',\n\t10: '0.00%',\n\t11: '0.00E+00',\n\t12: '# ?/?',\n\t13: '# ??/??',\n\t14: 'm/d/yy',\n\t15: 'd-mmm-yy',\n\t16: 'd-mmm',\n\t17: 'mmm-yy',\n\t18: 'h:mm AM/PM',\n\t19: 'h:mm:ss AM/PM',\n\t20: 'h:mm',\n\t21: 'h:mm:ss',\n\t22: 'm/d/yy h:mm',\n\t37: '#,##0 ;(#,##0)',\n\t38: '#,##0 ;[Red](#,##0)',\n\t39: '#,##0.00;(#,##0.00)',\n\t40: '#,##0.00;[Red](#,##0.00)',\n\t45: 'mm:ss',\n\t46: '[h]:mm:ss',\n\t47: 'mmss.0',\n\t48: '##0.0E+0',\n\t49: '@',\n\t56: '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"'\n};\n\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar SSF_default_map = {\n\t5:  37, 6:  38, 7:  39, 8:  40,         //  5 -> 37 ...  8 -> 40\n\n\t23:  0, 24:  0, 25:  0, 26:  0,         // 23 ->  0 ... 26 ->  0\n\n\t27: 14, 28: 14, 29: 14, 30: 14, 31: 14, // 27 -> 14 ... 31 -> 14\n\n\t50: 14, 51: 14, 52: 14, 53: 14, 54: 14, // 50 -> 14 ... 58 -> 14\n\t55: 14, 56: 14, 57: 14, 58: 14,\n\t59:  1, 60:  2, 61:  3, 62:  4,         // 59 ->  1 ... 62 ->  4\n\n\t67:  9, 68: 10,                         // 67 ->  9 ... 68 -> 10\n\t69: 12, 70: 13, 71: 14,                 // 69 -> 12 ... 71 -> 14\n\t72: 14, 73: 15, 74: 16, 75: 17,         // 72 -> 14 ... 75 -> 17\n\t76: 20, 77: 21, 78: 22,                 // 76 -> 20 ... 78 -> 22\n\t79: 45, 80: 46, 81: 47,                 // 79 -> 45 ... 81 -> 47\n\t82: 0                                   // 82 ->  0 ... 65536 -> 0 (omitted)\n};\n\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar SSF_default_str = {\n\t//  5 -- Currency,   0 decimal, black negative\n\t5:  '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t63: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\n\t//  6 -- Currency,   0 decimal, red   negative\n\t6:  '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t64: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\n\t//  7 -- Currency,   2 decimal, black negative\n\t7:  '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t65: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\n\t//  8 -- Currency,   2 decimal, red   negative\n\t8:  '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t66: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\n\t// 41 -- Accounting, 0 decimal, No Symbol\n\t41: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n\n\t// 42 -- Accounting, 0 decimal, $  Symbol\n\t42: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n\n\t// 43 -- Accounting, 2 decimal, No Symbol\n\t43: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n\n\t// 44 -- Accounting, 2 decimal, $  Symbol\n\t44: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)'\n};\n\nfunction SSF_frac(x/*:number*/, D/*:number*/, mixed/*:?boolean*/)/*:Array<number>*/ {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction SSF_parse_date_code(v/*:number*/,opts/*:?any*/,b2/*:?boolean*/) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = SSF_fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nvar SSFbasedate = /*#__PURE__*/new Date(1899, 11, 31, 0, 0, 0);\nvar SSFdnthresh = /*#__PURE__*/SSFbasedate.getTime();\nvar SSFbase1904 = /*#__PURE__*/new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {\n\tvar epoch = /*#__PURE__*/v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= SSFbase1904) epoch += 24*60*60*1000;\n\treturn (epoch - (SSFdnthresh + (/*#__PURE__*/v.getTimezoneOffset() - /*#__PURE__*/SSFbasedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\n/* exponent >= -9 and <= 9 */\nfunction SSF_strip_decimal(o/*:string*/)/*:string*/ {\n\treturn (o.indexOf(\".\") == -1) ? o : o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)$/, \"$1\");\n}\n\n/* General Exponential always shows 2 digits exp and trims the mantissa */\nfunction SSF_normalize_exp(o/*:string*/)/*:string*/ {\n\tif(o.indexOf(\"E\") == -1) return o;\n\treturn o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/,\"$1E\").replace(/(E[+-])(\\d)$/,\"$10$2\");\n}\n\n/* exponent >= -9 and <= 9 */\nfunction SSF_small_exp(v/*:number*/)/*:string*/ {\n\tvar w = (v<0?12:11);\n\tvar o = SSF_strip_decimal(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\n\n/* exponent >= 11 or <= -10 likely exponential */\nfunction SSF_large_exp(v/*:number*/)/*:string*/ {\n\tvar o = SSF_strip_decimal(v.toFixed(11));\n\treturn (o.length > (v<0?12:11) || o === \"0\" || o === \"-0\") ? v.toPrecision(6) : o;\n}\n\nfunction SSF_general_num(v/*:number*/)/*:string*/ {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = SSF_small_exp(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = SSF_large_exp(v);\n\n\treturn SSF_strip_decimal(SSF_normalize_exp(o.toUpperCase()));\n}\n\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tThe longest 32-bit integer text is \"-2147483648\", exactly 11 chars\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction SSF_general(v/*:any*/, opts/*:any*/) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : SSF_general_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return SSF_format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\n\nfunction SSF_fix_hijri(date/*:Date*/, o/*:[number, number, number]*/) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if(date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\n//var THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\nfunction SSF_write_date(type/*:number*/, fmt/*:string*/, val, ss0/*:?number*/)/*:string*/ {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\n\t\t\t/*::if(!ss0) ss0 = 0; */\n\t\t\tif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1; break;\n\t}\n\tvar outstr = outl > 0 ? pad0(out, outl) : \"\";\n\treturn outstr;\n}\n\n\n/*jshint -W086 */\n/*jshint +W086 */\nfunction commaify(s/*:string*/)/*:string*/ {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar pct1 = /%/g;\nfunction write_num_pct(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\n\nfunction write_num_cm(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\n\nfunction write_num_exp(fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar o/*:string*/;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str/*:string*/)/*:string*/ {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val/*:number*/, d/*:number*/)/*:string*/ { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val/*:number*/, d/*:number*/)/*:number*/ {\n\tvar _frac = val - Math.floor(val), dd = Math.pow(10,d);\n\tif (d < ('' + Math.round(_frac * dd)).length) return 0;\n\treturn Math.round(_frac * dd);\n}\nfunction carry(val/*:number*/, d/*:number*/)/*:number*/ {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val/*:number*/)/*:string*/ {\n\tif(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0));\n\treturn \"\"+Math.floor(val);\n}\nfunction write_num_flt(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(/*::(*/r/*::||[\"\"])*/[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(/*::String(*/r[4]/*::)*/.length,7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", /*::String(*/r[1]/*::)*/, ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + /*::String(*/r[2]/*::)*/ + \"/\" + /*::String(*/r[3]/*::)*/;\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar o/*:string*/;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\t/*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n\t\to = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\n\t\t/*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n\t\t\treturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(/*::String(*/r[4]/*::)*/.length,7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", /*::String(*/r[1]/*::)*/, ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + /*::String(*/r[2]/*::)*/ + \"/\" + /*::String(*/r[3]/*::)*/;\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n}\nfunction SSF_split_fmt(fmt/*:string*/)/*:Array<string>*/ {\n\tvar out/*:Array<string>*/ = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\n\nvar SSF_abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt/*:string*/)/*:boolean*/ {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(SSF_isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"上午/下午\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(SSF_abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction eval_fmt(fmt/*:string*/, v/*:any*/, opts/*:any*/, flen/*:number*/) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!SSF_isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=SSF_parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"上午/下午\") { if(dt!=null) q.v = dt.H >= 12 ? \"下午\" : \"上午\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(SSF_abstime)) {\n\t\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase '$': out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\n\t/* Scan for date/time parts */\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\t/* time rounding depends on presence of minute / second / usec fields */\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\n\t\t\t/*::if(!dt) break;*/\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/*::if(!dt) break;*/\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\n\t\t\t\t/*::if(!dt) throw \"unreachable\"; */\n\t\t\t\tout[i].v = SSF_write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = SSF_general(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\n\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f/*:string*/, v/*:any*/) {\n\tvar fmt = SSF_split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(/\\[[=<>]/) != null || fmt[1].match(/\\[[=<>]/) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction SSF_format(fmt/*:string|number*/,v/*:any*/,o/*:?any*/) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table/*:any*/) : table_fmt)[fmt];\n\t\t\tif(sfmt == null) sfmt = (o.table && o.table[SSF_default_map[fmt]]) || table_fmt[SSF_default_map[fmt]];\n\t\t\tif(sfmt == null) sfmt = SSF_default_str[fmt] || \"General\";\n\t\t\tbreak;\n\t}\n\tif(SSF_isgeneral(sfmt,0)) return SSF_general(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(SSF_isgeneral(f[1])) return SSF_general(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction SSF_load(fmt/*:string*/, idx/*:?number*/)/*:number*/ {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\n/*::if(typeof idx != 'number') return 0x188; */\n\t\tfor(var i = 0; i < 0x0188; ++i) {\n/*::if(typeof idx != 'number') return 0x188; */\n\t\t\tif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\n/*::if(typeof idx != 'number') return 0x188; */\n\t\tif(idx < 0) idx = 0x187;\n\t}\n/*::if(typeof idx != 'number') return 0x188; */\n\ttable_fmt[idx] = fmt;\n\treturn idx;\n}\nfunction SSF_load_table(tbl/*:SSFTable*/)/*:void*/ {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) SSF_load(tbl[i], i);\n}\n\nfunction make_ssf() {\n\ttable_fmt = SSF_init_table();\n}\n\nvar SSF = {\n\tformat: SSF_format,\n\tload: SSF_load,\n\t_table: table_fmt,\n\tload_table: SSF_load_table,\n\tparse_date_code: SSF_parse_date_code,\n\tis_date: fmt_is_date,\n\tget_table: function get_table() { return SSF._table = table_fmt; }\n};\n\nvar SSFImplicit/*{[number]:string}*/ = ({\n\t\"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"23\": 'General', \"24\": 'General', \"25\": 'General', \"26\": 'General',\n\t\"27\": 'm/d/yy', \"28\": 'm/d/yy', \"29\": 'm/d/yy', \"30\": 'm/d/yy', \"31\": 'm/d/yy',\n\t\"32\": 'h:mm:ss', \"33\": 'h:mm:ss', \"34\": 'h:mm:ss', \"35\": 'h:mm:ss',\n\t\"36\": 'm/d/yy',\n\t\"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\n\t\"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\n\t\"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\n\t\"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\n\t\"50\": 'm/d/yy', \"51\": 'm/d/yy', \"52\": 'm/d/yy', \"53\": 'm/d/yy', \"54\": 'm/d/yy',\n\t\"55\": 'm/d/yy', \"56\": 'm/d/yy', \"57\": 'm/d/yy', \"58\": 'm/d/yy',\n\t\"59\": '0',\n\t\"60\": '0.00',\n\t\"61\": '#,##0',\n\t\"62\": '#,##0.00',\n\t\"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"67\": '0%',\n\t\"68\": '0.00%',\n\t\"69\": '# ?/?',\n\t\"70\": '# ??/??',\n\t\"71\": 'm/d/yy',\n\t\"72\": 'm/d/yy',\n\t\"73\": 'd-mmm-yy',\n\t\"74\": 'd-mmm',\n\t\"75\": 'mmm-yy',\n\t\"76\": 'h:mm',\n\t\"77\": 'h:mm:ss',\n\t\"78\": 'm/d/yy h:mm',\n\t\"79\": 'mm:ss',\n\t\"80\": '[h]:mm:ss',\n\t\"81\": 'mmss.0'\n}/*:any*/);\n\n/* dateNF parse TODO: move to SSF */\nvar dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\nfunction dateNF_regex(dateNF/*:string|number*/)/*:RegExp*/ {\n\tvar fmt = typeof dateNF == \"number\" ? table_fmt[dateNF] : dateNF;\n\tfmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\n\treturn new RegExp(\"^\" + fmt + \"$\");\n}\nfunction dateNF_fix(str/*:string*/, dateNF/*:string*/, match/*:Array<string>*/)/*:string*/ {\n\tvar Y = -1, m = -1, d = -1, H = -1, M = -1, S = -1;\n\t(dateNF.match(dateNFregex)||[]).forEach(function(n, i) {\n\t\tvar v = parseInt(match[i+1], 10);\n\t\tswitch(n.toLowerCase().charAt(0)) {\n\t\t\tcase 'y': Y = v; break; case 'd': d = v; break;\n\t\t\tcase 'h': H = v; break; case 's': S = v; break;\n\t\t\tcase 'm': if(H >= 0) M = v; else m = v; break;\n\t\t}\n\t});\n\tif(S >= 0 && M == -1 && m >= 0) { M = m; m = -1; }\n\tvar datestr = ((\"\" + (Y>=0?Y: new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m>=1?m:1)).slice(-2) + \"-\" + (\"00\" + (d>=1?d:1)).slice(-2));\n\tif(datestr.length == 7) datestr = \"0\" + datestr;\n\tif(datestr.length == 8) datestr = \"20\" + datestr;\n\tvar timestr = ((\"00\" + (H>=0?H:0)).slice(-2) + \":\" + (\"00\" + (M>=0?M:0)).slice(-2) + \":\" + (\"00\" + (S>=0?S:0)).slice(-2));\n\tif(H == -1 && M == -1 && S == -1) return datestr;\n\tif(Y == -1 && m == -1 && d == -1) return timestr;\n\treturn datestr + \"T\" + timestr;\n}\n\n/*::\ndeclare var ReadShift:any;\ndeclare var CheckField:any;\ndeclare var prep_blob:any;\ndeclare var __readUInt32LE:any;\ndeclare var __readInt32LE:any;\ndeclare var __toBuffer:any;\ndeclare var __utf16le:any;\ndeclare var bconcat:any;\ndeclare var s2a:any;\ndeclare var chr0:any;\ndeclare var chr1:any;\ndeclare var has_buf:boolean;\ndeclare var new_buf:any;\ndeclare var new_raw_buf:any;\ndeclare var new_unsafe_buf:any;\ndeclare var Buffer_from:any;\n*/\n/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global Uint8Array:false, Uint16Array:false */\n\n/*::\ntype SectorEntry = {\n\tname?:string;\n\tnodes?:Array<number>;\n\tdata:RawBytes;\n};\ntype SectorList = {\n\t[k:string|number]:SectorEntry;\n\tname:?string;\n\tfat_addrs:Array<number>;\n\tssz:number;\n}\ntype CFBFiles = {[n:string]:CFBEntry};\n*/\n/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32 = /*#__PURE__*/(function() {\nvar CRC32 = {};\nCRC32.version = '1.2.0';\n/* see perf/crc32table.js */\n/*global Int32Array */\nfunction signed_crc_table()/*:any*/ {\n\tvar c = 0, table/*:Array<number>*/ = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table/*:Array<number>*/ = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr/*:string*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed/*:: ? 0 : 0 */ ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B/*:Uint8Array|Array<number>*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed/*:: ? 0 : 0 */ ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str/*:string*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\nreturn CRC32;\n})();\n/* [MS-CFB] v20171201 */\nvar CFB = /*#__PURE__*/(function _CFB(){\nvar exports = {};\nexports.version = '1.2.1';\n/* [MS-CFB] 2.6.4 */\nfunction namecmp(l/*:string*/, r/*:string*/)/*:number*/ {\n\tvar L = l.split(\"/\"), R = r.split(\"/\");\n\tfor(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n\t\tif((c = L[i].length - R[i].length)) return c;\n\t\tif(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n\t}\n\treturn L.length - R.length;\n}\nfunction dirname(p/*:string*/)/*:string*/ {\n\tif(p.charAt(p.length - 1) == \"/\") return (p.slice(0,-1).indexOf(\"/\") === -1) ? p : dirname(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(0, c+1);\n}\n\nfunction filename(p/*:string*/)/*:string*/ {\n\tif(p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(c+1);\n}\n/* -------------------------------------------------------------------------- */\n/* DOS Date format:\n   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n   add 1980 to stored year\n   stored second should be doubled\n*/\n\n/* write JS date to buf as a DOS date */\nfunction write_dos_date(buf/*:CFBlob*/, date/*:Date|string*/) {\n\tif(typeof date === \"string\") date = new Date(date);\n\tvar hms/*:number*/ = date.getHours();\n\thms = hms << 6 | date.getMinutes();\n\thms = hms << 5 | (date.getSeconds()>>>1);\n\tbuf.write_shift(2, hms);\n\tvar ymd/*:number*/ = (date.getFullYear() - 1980);\n\tymd = ymd << 4 | (date.getMonth()+1);\n\tymd = ymd << 5 | date.getDate();\n\tbuf.write_shift(2, ymd);\n}\n\n/* read four bytes from buf and interpret as a DOS date */\nfunction parse_dos_date(buf/*:CFBlob*/)/*:Date*/ {\n\tvar hms = buf.read_shift(2) & 0xFFFF;\n\tvar ymd = buf.read_shift(2) & 0xFFFF;\n\tvar val = new Date();\n\tvar d = ymd & 0x1F; ymd >>>= 5;\n\tvar m = ymd & 0x0F; ymd >>>= 4;\n\tval.setMilliseconds(0);\n\tval.setFullYear(ymd + 1980);\n\tval.setMonth(m-1);\n\tval.setDate(d);\n\tvar S = hms & 0x1F; hms >>>= 5;\n\tvar M = hms & 0x3F; hms >>>= 6;\n\tval.setHours(hms);\n\tval.setMinutes(M);\n\tval.setSeconds(S<<1);\n\treturn val;\n}\nfunction parse_extra_field(blob/*:CFBlob*/)/*:any*/ {\n\tprep_blob(blob, 0);\n\tvar o = /*::(*/{}/*:: :any)*/;\n\tvar flags = 0;\n\twhile(blob.l <= blob.length - 4) {\n\t\tvar type = blob.read_shift(2);\n\t\tvar sz = blob.read_shift(2), tgt = blob.l + sz;\n\t\tvar p = {};\n\t\tswitch(type) {\n\t\t\t/* UNIX-style Timestamps */\n\t\t\tcase 0x5455: {\n\t\t\t\tflags = blob.read_shift(1);\n\t\t\t\tif(flags & 1) p.mtime = blob.read_shift(4);\n\t\t\t\t/* for some reason, CD flag corresponds to LFH */\n\t\t\t\tif(sz > 5) {\n\t\t\t\t\tif(flags & 2) p.atime = blob.read_shift(4);\n\t\t\t\t\tif(flags & 4) p.ctime = blob.read_shift(4);\n\t\t\t\t}\n\t\t\t\tif(p.mtime) p.mt = new Date(p.mtime*1000);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tblob.l = tgt;\n\t\to[type] = p;\n\t}\n\treturn o;\n}\nvar fs/*:: = require('fs'); */;\nfunction get_fs() { return fs || (fs = {}); }\nfunction parse(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\nif(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\nif((file[0] | 0x20) == 0x6d && (file[1]|0x20) == 0x69) return parse_mad(file, options);\nif(file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\nvar mver = 3;\nvar ssz = 512;\nvar nmfs = 0; // number of mini FAT sectors\nvar difat_sec_cnt = 0;\nvar dir_start = 0;\nvar minifat_start = 0;\nvar difat_start = 0;\n\nvar fat_addrs/*:Array<number>*/ = []; // locations of FAT sectors\n\n/* [MS-CFB] 2.2 Compound File Header */\nvar blob/*:CFBlob*/ = /*::(*/file.slice(0,512)/*:: :any)*/;\nprep_blob(blob, 0);\n\n/* major version */\nvar mv = check_get_mver(blob);\nmver = mv[0];\nswitch(mver) {\n\tcase 3: ssz = 512; break; case 4: ssz = 4096; break;\n\tcase 0: if(mv[1] == 0) return parse_zip(file, options);\n\t/* falls through */\n\tdefault: throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n}\n\n/* reprocess header */\nif(ssz !== 512) { blob = /*::(*/file.slice(0,ssz)/*:: :any)*/; prep_blob(blob, 28 /* blob.l */); }\n/* Save header for final object */\nvar header/*:RawBytes*/ = file.slice(0,ssz);\n\ncheck_shifts(blob, mver);\n\n// Number of Directory Sectors\nvar dir_cnt/*:number*/ = blob.read_shift(4, 'i');\nif(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n// Number of FAT Sectors\nblob.l += 4;\n\n// First Directory Sector Location\ndir_start = blob.read_shift(4, 'i');\n\n// Transaction Signature\nblob.l += 4;\n\n// Mini Stream Cutoff Size\nblob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n// First Mini FAT Sector Location\nminifat_start = blob.read_shift(4, 'i');\n\n// Number of Mini FAT Sectors\nnmfs = blob.read_shift(4, 'i');\n\n// First DIFAT sector location\ndifat_start = blob.read_shift(4, 'i');\n\n// Number of DIFAT Sectors\ndifat_sec_cnt = blob.read_shift(4, 'i');\n\n// Grab FAT Sector Locations\nfor(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */\n\tq = blob.read_shift(4, 'i');\n\tif(q<0) break;\n\tfat_addrs[j] = q;\n}\n\n/** Break the file up into sectors */\nvar sectors/*:Array<RawBytes>*/ = sectorify(file, ssz);\n\nsleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n/** Chains */\nvar sector_list/*:SectorList*/ = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n\nsector_list[dir_start].name = \"!Directory\";\nif(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\nsector_list[fat_addrs[0]].name = \"!FAT\";\nsector_list.fat_addrs = fat_addrs;\nsector_list.ssz = ssz;\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nvar files/*:CFBFiles*/ = {}, Paths/*:Array<string>*/ = [], FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\nread_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n\nbuild_full_paths(FileIndex, FullPaths, Paths);\nPaths.shift();\n\nvar o = {\n\tFileIndex: FileIndex,\n\tFullPaths: FullPaths\n};\n\n// $FlowIgnore\nif(options && options.raw) o.raw = {header: header, sectors: sectors};\nreturn o;\n} // parse\n\n/* [MS-CFB] 2.2 Compound File Header -- read up to major version */\nfunction check_get_mver(blob/*:CFBlob*/)/*:[number, number]*/ {\n\tif(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n\t// header signature 8\n\tblob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n\t// clsid 16\n\t//blob.chk(HEADER_CLSID, 'CLSID: ');\n\tblob.l += 16;\n\n\t// minor version 2\n\tvar mver/*:number*/ = blob.read_shift(2, 'u');\n\n\treturn [blob.read_shift(2,'u'), mver];\n}\nfunction check_shifts(blob/*:CFBlob*/, mver/*:number*/)/*:void*/ {\n\tvar shift = 0x09;\n\n\t// Byte Order\n\t//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n\tblob.l += 2;\n\n\t// Sector Shift\n\tswitch((shift = blob.read_shift(2))) {\n\t\tcase 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;\n\t\tcase 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;\n\t\tdefault: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n\t}\n\n\t// Mini Sector Shift\n\tblob.chk('0600', 'Mini Sector Shift: ');\n\n\t// Reserved\n\tblob.chk('000000000000', 'Reserved: ');\n}\n\n/** Break the file up into sectors */\nfunction sectorify(file/*:RawBytes*/, ssz/*:number*/)/*:Array<RawBytes>*/ {\n\tvar nsectors = Math.ceil(file.length/ssz)-1;\n\tvar sectors/*:Array<RawBytes>*/ = [];\n\tfor(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);\n\tsectors[nsectors-1] = file.slice(nsectors*ssz);\n\treturn sectors;\n}\n\n/* [MS-CFB] 2.6.4 Red-Black Tree */\nfunction build_full_paths(FI/*:CFBFileIndex*/, FP/*:Array<string>*/, Paths/*:Array<string>*/)/*:void*/ {\n\tvar i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;\n\tvar dad/*:Array<number>*/ = [], q/*:Array<number>*/ = [];\n\n\tfor(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }\n\n\tfor(; j < q.length; ++j) {\n\t\ti = q[j];\n\t\tL = FI[i].L; R = FI[i].R; C = FI[i].C;\n\t\tif(dad[i] === i) {\n\t\t\tif(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n\t\t\tif(R !== -1 && dad[R] !== R) dad[i] = dad[R];\n\t\t}\n\t\tif(C !== -1 /*NOSTREAM*/) dad[C] = i;\n\t\tif(L !== -1 && i != dad[i]) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }\n\t\tif(R !== -1 && i != dad[i]) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }\n\t}\n\tfor(i=1; i < pl; ++i) if(dad[i] === i) {\n\t\tif(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];\n\t\telse if(L !== -1 && dad[L] !== L) dad[i] = dad[L];\n\t}\n\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type === 0 /* unknown */) continue;\n\t\tj = i;\n\t\tif(j != dad[j]) do {\n\t\t\tj = dad[j];\n\t\t\tFP[i] = FP[j] + \"/\" + FP[i];\n\t\t} while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n\t\tdad[i] = -1;\n\t}\n\n\tFP[0] += \"/\";\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n\t}\n}\n\nfunction get_mfat_entry(entry/*:CFBEntry*/, payload/*:RawBytes*/, mini/*:?RawBytes*/)/*:CFBlob*/ {\n\tvar start = entry.start, size = entry.size;\n\t//return (payload.slice(start*MSSZ, start*MSSZ + size)/*:any*/);\n\tvar o = [];\n\tvar idx = start;\n\twhile(mini && size > 0 && idx >= 0) {\n\t\to.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n\t\tsize -= MSSZ;\n\t\tidx = __readInt32LE(mini, idx * 4);\n\t}\n\tif(o.length === 0) return (new_buf(0)/*:any*/);\n\treturn (bconcat(o).slice(0, entry.size)/*:any*/);\n}\n\n/** Chase down the rest of the DIFAT chain to build a comprehensive list\n    DIFAT chains by storing the next sector number as the last 32 bits */\nfunction sleuth_fat(idx/*:number*/, cnt/*:number*/, sectors/*:Array<RawBytes>*/, ssz/*:number*/, fat_addrs)/*:void*/ {\n\tvar q/*:number*/ = ENDOFCHAIN;\n\tif(idx === ENDOFCHAIN) {\n\t\tif(cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n\t} else if(idx !== -1 /*FREESECT*/) {\n\t\tvar sector = sectors[idx], m = (ssz>>>2)-1;\n\t\tif(!sector) return;\n\t\tfor(var i = 0; i < m; ++i) {\n\t\t\tif((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;\n\t\t\tfat_addrs.push(q);\n\t\t}\n\t\tsleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);\n\t}\n}\n\n/** Follow the linked list of sectors for a given starting point */\nfunction get_sector_list(sectors/*:Array<RawBytes>*/, start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/, chkd/*:?Array<boolean>*/)/*:SectorEntry*/ {\n\tvar buf/*:Array<number>*/ = [], buf_chain/*:Array<any>*/ = [];\n\tif(!chkd) chkd = [];\n\tvar modulus = ssz - 1, j = 0, jj = 0;\n\tfor(j=start; j>=0;) {\n\t\tchkd[j] = true;\n\t\tbuf[buf.length] = j;\n\t\tbuf_chain.push(sectors[j]);\n\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\tjj = ((j*4) & modulus);\n\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\tif(!sectors[addr]) break;\n\t\tj = __readInt32LE(sectors[addr], jj);\n\t}\n\treturn {nodes: buf, data:__toBuffer([buf_chain])};\n}\n\n/** Chase down the sector linked lists */\nfunction make_sector_list(sectors/*:Array<RawBytes>*/, dir_start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/)/*:SectorList*/ {\n\tvar sl = sectors.length, sector_list/*:SectorList*/ = ([]/*:any*/);\n\tvar chkd/*:Array<boolean>*/ = [], buf/*:Array<number>*/ = [], buf_chain/*:Array<RawBytes>*/ = [];\n\tvar modulus = ssz - 1, i=0, j=0, k=0, jj=0;\n\tfor(i=0; i < sl; ++i) {\n\t\tbuf = ([]/*:Array<number>*/);\n\t\tk = (i + dir_start); if(k >= sl) k-=sl;\n\t\tif(chkd[k]) continue;\n\t\tbuf_chain = [];\n\t\tvar seen = [];\n\t\tfor(j=k; j>=0;) {\n\t\t\tseen[j] = true;\n\t\t\tchkd[j] = true;\n\t\t\tbuf[buf.length] = j;\n\t\t\tbuf_chain.push(sectors[j]);\n\t\t\tvar addr/*:number*/ = fat_addrs[Math.floor(j*4/ssz)];\n\t\t\tjj = ((j*4) & modulus);\n\t\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\t\tif(!sectors[addr]) break;\n\t\t\tj = __readInt32LE(sectors[addr], jj);\n\t\t\tif(seen[j]) break;\n\t\t}\n\t\tsector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])}/*:SectorEntry*/);\n\t}\n\treturn sector_list;\n}\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nfunction read_directory(dir_start/*:number*/, sector_list/*:SectorList*/, sectors/*:Array<RawBytes>*/, Paths/*:Array<string>*/, nmfs, files, FileIndex, mini) {\n\tvar minifat_store = 0, pl = (Paths.length?2:0);\n\tvar sector = sector_list[dir_start].data;\n\tvar i = 0, namelen = 0, name;\n\tfor(; i < sector.length; i+= 128) {\n\t\tvar blob/*:CFBlob*/ = /*::(*/sector.slice(i, i+128)/*:: :any)*/;\n\t\tprep_blob(blob, 64);\n\t\tnamelen = blob.read_shift(2);\n\t\tname = __utf16le(blob,0,namelen-pl);\n\t\tPaths.push(name);\n\t\tvar o/*:CFBEntry*/ = ({\n\t\t\tname:  name,\n\t\t\ttype:  blob.read_shift(1),\n\t\t\tcolor: blob.read_shift(1),\n\t\t\tL:     blob.read_shift(4, 'i'),\n\t\t\tR:     blob.read_shift(4, 'i'),\n\t\t\tC:     blob.read_shift(4, 'i'),\n\t\t\tclsid: blob.read_shift(16),\n\t\t\tstate: blob.read_shift(4, 'i'),\n\t\t\tstart: 0,\n\t\t\tsize: 0\n\t\t});\n\t\tvar ctime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(ctime !== 0) o.ct = read_date(blob, blob.l-8);\n\t\tvar mtime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(mtime !== 0) o.mt = read_date(blob, blob.l-8);\n\t\to.start = blob.read_shift(4, 'i');\n\t\to.size = blob.read_shift(4, 'i');\n\t\tif(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = \"\"; }\n\t\tif(o.type === 5) { /* root */\n\t\t\tminifat_store = o.start;\n\t\t\tif(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n\t\t\t/*minifat_size = o.size;*/\n\t\t} else if(o.size >= 4096 /* MSCSZ */) {\n\t\t\to.storage = 'fat';\n\t\t\tif(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n\t\t\tsector_list[o.start].name = o.name;\n\t\t\to.content = (sector_list[o.start].data.slice(0,o.size)/*:any*/);\n\t\t} else {\n\t\t\to.storage = 'minifat';\n\t\t\tif(o.size < 0) o.size = 0;\n\t\t\telse if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n\t\t\t\to.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);\n\t\t\t}\n\t\t}\n\t\tif(o.content) prep_blob(o.content, 0);\n\t\tfiles[name] = o;\n\t\tFileIndex.push(o);\n\t}\n}\n\nfunction read_date(blob/*:RawBytes|CFBlob*/, offset/*:number*/)/*:Date*/ {\n\treturn new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);\n}\n\nfunction read_file(filename/*:string*/, options/*:CFBReadOpts*/) {\n\tget_fs();\n\treturn parse(fs.readFileSync(filename), options);\n}\n\nfunction read(blob/*:RawBytes|string*/, options/*:CFBReadOpts*/) {\n\tvar type = options && options.type;\n\tif(!type) {\n\t\tif(has_buf && Buffer.isBuffer(blob)) type = \"buffer\";\n\t}\n\tswitch(type || \"base64\") {\n\t\tcase \"file\": /*:: if(typeof blob !== 'string') throw \"Must pass a filename when type='file'\"; */return read_file(blob, options);\n\t\tcase \"base64\": /*:: if(typeof blob !== 'string') throw \"Must pass a base64-encoded binary string when type='file'\"; */return parse(s2a(Base64_decode(blob)), options);\n\t\tcase \"binary\": /*:: if(typeof blob !== 'string') throw \"Must pass a binary string when type='file'\"; */return parse(s2a(blob), options);\n\t}\n\treturn parse(/*::typeof blob == 'string' ? new Buffer(blob, 'utf-8') : */blob, options);\n}\n\nfunction init_cfb(cfb/*:CFBContainer*/, opts/*:?any*/)/*:void*/ {\n\tvar o = opts || {}, root = o.root || \"Root Entry\";\n\tif(!cfb.FullPaths) cfb.FullPaths = [];\n\tif(!cfb.FileIndex) cfb.FileIndex = [];\n\tif(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n\tif(cfb.FullPaths.length === 0) {\n\t\tcfb.FullPaths[0] = root + \"/\";\n\t\tcfb.FileIndex[0] = ({ name: root, type: 5 }/*:any*/);\n\t}\n\tif(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n\tseed_cfb(cfb);\n}\nfunction seed_cfb(cfb/*:CFBContainer*/)/*:void*/ {\n\tvar nm = \"\\u0001Sh33tJ5\";\n\tif(CFB.find(cfb, \"/\" + nm)) return;\n\tvar p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;\n\tcfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }/*:any*/));\n\tcfb.FullPaths.push(cfb.FullPaths[0] + nm);\n\trebuild_cfb(cfb);\n}\nfunction rebuild_cfb(cfb/*:CFBContainer*/, f/*:?boolean*/)/*:void*/ {\n\tinit_cfb(cfb);\n\tvar gc = false, s = false;\n\tfor(var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n\t\tvar _file = cfb.FileIndex[i];\n\t\tswitch(_file.type) {\n\t\t\tcase 0:\n\t\t\t\tif(s) gc = true;\n\t\t\t\telse { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }\n\t\t\t\tbreak;\n\t\t\tcase 1: case 2: case 5:\n\t\t\t\ts = true;\n\t\t\t\tif(isNaN(_file.R * _file.L * _file.C)) gc = true;\n\t\t\t\tif(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n\t\t\t\tbreak;\n\t\t\tdefault: gc = true; break;\n\t\t}\n\t}\n\tif(!gc && !f) return;\n\n\tvar now = new Date(1987, 1, 19), j = 0;\n\t// Track which names exist\n\tvar fullPaths = Object.create ? Object.create(null) : {};\n\tvar data/*:Array<[string, CFBEntry]>*/ = [];\n\tfor(i = 0; i < cfb.FullPaths.length; ++i) {\n\t\tfullPaths[cfb.FullPaths[i]] = true;\n\t\tif(cfb.FileIndex[i].type === 0) continue;\n\t\tdata.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n\t}\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar dad = dirname(data[i][0]);\n\t\ts = fullPaths[dad];\n\t\tif(!s) {\n\t\t\tdata.push([dad, ({\n\t\t\t\tname: filename(dad).replace(\"/\",\"\"),\n\t\t\t\ttype: 1,\n\t\t\t\tclsid: HEADER_CLSID,\n\t\t\t\tct: now, mt: now,\n\t\t\t\tcontent: null\n\t\t\t}/*:any*/)]);\n\t\t\t// Add name to set\n\t\t\tfullPaths[dad] = true;\n\t\t}\n\t}\n\n\tdata.sort(function(x,y) { return namecmp(x[0], y[0]); });\n\tcfb.FullPaths = []; cfb.FileIndex = [];\n\tfor(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar elt = cfb.FileIndex[i];\n\t\tvar nm = cfb.FullPaths[i];\n\n\t\telt.name =  filename(nm).replace(\"/\",\"\");\n\t\telt.L = elt.R = elt.C = -(elt.color = 1);\n\t\telt.size = elt.content ? elt.content.length : 0;\n\t\telt.start = 0;\n\t\telt.clsid = (elt.clsid || HEADER_CLSID);\n\t\tif(i === 0) {\n\t\t\telt.C = data.length > 1 ? 1 : -1;\n\t\t\telt.size = 0;\n\t\t\telt.type = 5;\n\t\t} else if(nm.slice(-1) == \"/\") {\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;\n\t\t\telt.C = j >= data.length ? -1 : j;\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;\n\t\t\telt.R = j >= data.length ? -1 : j;\n\t\t\telt.type = 1;\n\t\t} else {\n\t\t\tif(dirname(cfb.FullPaths[i+1]||\"\") == dirname(nm)) elt.R = i + 1;\n\t\t\telt.type = 2;\n\t\t}\n\t}\n\n}\n\nfunction _write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {\n\tvar _opts = options || {};\n\t/* MAD is order-sensitive, skip rebuild and sort */\n\tif(_opts.fileType == 'mad') return write_mad(cfb, _opts);\n\trebuild_cfb(cfb);\n\tswitch(_opts.fileType) {\n\t\tcase 'zip': return write_zip(cfb, _opts);\n\t\t//case 'mad': return write_mad(cfb, _opts);\n\t}\n\tvar L = (function(cfb/*:CFBContainer*/)/*:Array<number>*/{\n\t\tvar mini_size = 0, fat_size = 0;\n\t\tfor(var i = 0; i < cfb.FileIndex.length; ++i) {\n\t\t\tvar file = cfb.FileIndex[i];\n\t\t\tif(!file.content) continue;\n\t\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\t\tvar flen = file.content.length;\n\t\t\tif(flen > 0){\n\t\t\t\tif(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;\n\t\t\t\telse fat_size += (flen + 0x01FF) >> 9;\n\t\t\t}\n\t\t}\n\t\tvar dir_cnt = (cfb.FullPaths.length +3) >> 2;\n\t\tvar mini_cnt = (mini_size + 7) >> 3;\n\t\tvar mfat_cnt = (mini_size + 0x7F) >> 7;\n\t\tvar fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n\t\tvar fat_cnt = (fat_base + 0x7F) >> 7;\n\t\tvar difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\twhile(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\tvar L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n\t\tcfb.FileIndex[0].size = mini_size << 6;\n\t\tL[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);\n\t\treturn L;\n\t})(cfb);\n\tvar o = new_buf(L[7] << 9);\n\tvar i = 0, T = 0;\n\t{\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(2, 0);\n\t\to.write_shift(2, 0x003E);\n\t\to.write_shift(2, 0x0003);\n\t\to.write_shift(2, 0xFFFE);\n\t\to.write_shift(2, 0x0009);\n\t\to.write_shift(2, 0x0006);\n\t\tfor(i = 0; i < 3; ++i) o.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, L[2]);\n\t\to.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, 1<<12);\n\t\to.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[3]);\n\t\to.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[1]);\n\t\tfor(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t}\n\tif(L[1]) {\n\t\tfor(T = 0; T < L[1]; ++T) {\n\t\t\tfor(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t\t\to.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n\t\t}\n\t}\n\tvar chainit = function(w/*:number*/)/*:void*/ {\n\t\tfor(T += w; i<T-1; ++i) o.write_shift(-4, i+1);\n\t\tif(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }\n\t};\n\tT = i = 0;\n\tfor(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);\n\tfor(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);\n\tchainit(L[3]);\n\tchainit(L[4]);\n\tvar j/*:number*/ = 0, flen/*:number*/ = 0;\n\tvar file/*:CFBEntry*/ = cfb.FileIndex[0];\n\tfor(; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\n\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\tflen = file.content.length;\n\t\tif(flen < 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x01FF) >> 9);\n\t}\n\tchainit((L[6] + 7) >> 3);\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tT = i = 0;\n\tfor(j = 0; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\n\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\tflen = file.content.length;\n\t\tif(!flen || flen >= 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x3F) >> 6);\n\t}\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tfor(i = 0; i < L[4]<<2; ++i) {\n\t\tvar nm = cfb.FullPaths[i];\n\t\tif(!nm || nm.length === 0) {\n\t\t\tfor(j = 0; j < 17; ++j) o.write_shift(4, 0);\n\t\t\tfor(j = 0; j < 3; ++j) o.write_shift(4, -1);\n\t\t\tfor(j = 0; j < 12; ++j) o.write_shift(4, 0);\n\t\t\tcontinue;\n\t\t}\n\t\tfile = cfb.FileIndex[i];\n\t\tif(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n\t\tvar _nm/*:string*/ = (i === 0 && _opts.root) || file.name;\n\t\tflen = 2*(_nm.length+1);\n\t\to.write_shift(64, _nm, \"utf16le\");\n\t\to.write_shift(2, flen);\n\t\to.write_shift(1, file.type);\n\t\to.write_shift(1, file.color);\n\t\to.write_shift(-4, file.L);\n\t\to.write_shift(-4, file.R);\n\t\to.write_shift(-4, file.C);\n\t\tif(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);\n\t\telse o.write_shift(16, file.clsid, \"hex\");\n\t\to.write_shift(4, file.state || 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, file.start);\n\t\to.write_shift(4, file.size); o.write_shift(4, 0);\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\n\t\t/*:: if(!file.content) throw new Error(\"unreachable\"); */\n\t\tif(file.size >= 0x1000) {\n\t\t\to.l = (file.start+1) << 9;\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 511) & -512;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x1FF; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\n\t\t/*:: if(!file.content) throw new Error(\"unreachable\"); */\n\t\tif(file.size > 0 && file.size < 0x1000) {\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 63) & -64;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x3F; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tif (has_buf) {\n\t\to.l = o.length;\n\t} else {\n\t\t// When using Buffer, already 0-filled\n\t\twhile(o.l < o.length) o.write_shift(1, 0);\n\t}\n\treturn o;\n}\n/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\nfunction find(cfb/*:CFBContainer*/, path/*:string*/)/*:?CFBEntry*/ {\n\tvar UCFullPaths/*:Array<string>*/ = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });\n\tvar UCPaths/*:Array<string>*/ = UCFullPaths.map(function(x) { var y = x.split(\"/\"); return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)]; });\n\tvar k/*:boolean*/ = false;\n\tif(path.charCodeAt(0) === 47 /* \"/\" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }\n\telse k = path.indexOf(\"/\") !== -1;\n\tvar UCPath/*:string*/ = path.toUpperCase();\n\tvar w/*:number*/ = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n\tif(w !== -1) return cfb.FileIndex[w];\n\n\tvar m = !UCPath.match(chr1);\n\tUCPath = UCPath.replace(chr0,'');\n\tif(m) UCPath = UCPath.replace(chr1,'!');\n\tfor(w = 0; w < UCFullPaths.length; ++w) {\n\t\tif((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t\tif((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t}\n\treturn null;\n}\n/** CFB Constants */\nvar MSSZ = 64; /* Mini Sector Size = 1<<6 */\n//var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n/* 2.1 Compound File Sector Numbers and Types */\nvar ENDOFCHAIN = -2;\n/* 2.2 Compound File Header */\nvar HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\nvar HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\nvar HEADER_CLSID = '00000000000000000000000000000000';\nvar consts = {\n\t/* 2.1 Compund File Sector Numbers and Types */\n\tMAXREGSECT: -6,\n\tDIFSECT: -4,\n\tFATSECT: -3,\n\tENDOFCHAIN: ENDOFCHAIN,\n\tFREESECT: -1,\n\t/* 2.2 Compound File Header */\n\tHEADER_SIGNATURE: HEADER_SIGNATURE,\n\tHEADER_MINOR_VERSION: '3e00',\n\tMAXREGSID: -6,\n\tNOSTREAM: -1,\n\tHEADER_CLSID: HEADER_CLSID,\n\t/* 2.6.1 Compound File Directory Entry */\n\tEntryTypes: ['unknown','storage','stream','lockbytes','property','root']\n};\n\nfunction write_file(cfb/*:CFBContainer*/, filename/*:string*/, options/*:CFBWriteOpts*/)/*:void*/ {\n\tget_fs();\n\tvar o = _write(cfb, options);\n\t/*:: if(typeof Buffer == 'undefined' || !Buffer.isBuffer(o) || !(o instanceof Buffer)) throw new Error(\"unreachable\"); */\n\tfs.writeFileSync(filename, o);\n}\n\nfunction a2s(o/*:RawBytes*/)/*:string*/ {\n\tvar out = new Array(o.length);\n\tfor(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n\treturn out.join(\"\");\n}\n\nfunction write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {\n\tvar o = _write(cfb, options);\n\tswitch(options && options.type || \"buffer\") {\n\t\tcase \"file\": get_fs(); fs.writeFileSync(options.filename, (o/*:any*/)); return o;\n\t\tcase \"binary\": return typeof o == \"string\" ? o : a2s(o);\n\t\tcase \"base64\": return Base64_encode(typeof o == \"string\" ? o : a2s(o));\n\t\tcase \"buffer\": if(has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n\t\t\t/* falls through */\n\t\tcase \"array\": return typeof o == \"string\" ? s2a(o) : o;\n\t}\n\treturn o;\n}\n/* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\nvar _zlib;\nfunction use_zlib(zlib) { try {\n\tvar InflateRaw = zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tInflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n\tif(InflRaw.bytesRead) _zlib = zlib;\n\telse throw new Error(\"zlib does not expose bytesRead\");\n} catch(e) {console.error(\"cannot use native zlib: \" + (e.message || e)); } }\n\nfunction _inflateRawSync(payload, usz) {\n\tif(!_zlib) return _inflate(payload, usz);\n\tvar InflateRaw = _zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tvar out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n\tpayload.l += InflRaw.bytesRead;\n\treturn out;\n}\n\nfunction _deflateRawSync(payload) {\n\treturn _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n}\nvar CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n/*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\nvar LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];\n\n/*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\nvar DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];\n\nfunction bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }\n\nvar use_typed_arrays = typeof Uint8Array !== 'undefined';\n\nvar bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];\nfor(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);\n\nfunction bit_swap_n(n, b) {\n\tvar rev = bitswap8[n & 0xFF];\n\tif(b <= 8) return rev >>> (8-b);\n\trev = (rev << 8) | bitswap8[(n>>8)&0xFF];\n\tif(b <= 16) return rev >>> (16-b);\n\trev = (rev << 8) | bitswap8[(n>>16)&0xFF];\n\treturn rev >>> (24-b);\n}\n\n/* helpers for unaligned bit reads */\nfunction read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }\nfunction read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }\nfunction read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }\nfunction read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }\nfunction read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }\n\n/* works up to n = 3 * 8 + 1 = 25 */\nfunction read_bits_n(buf, bl, n) {\n\tvar w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);\n\tvar v = buf[h] >>> w;\n\tif(n < 8 - w) return v & f;\n\tv |= buf[h+1]<<(8-w);\n\tif(n < 16 - w) return v & f;\n\tv |= buf[h+2]<<(16-w);\n\tif(n < 24 - w) return v & f;\n\tv |= buf[h+3]<<(24-w);\n\treturn v & f;\n}\n\n/* helpers for unaligned bit writes */\nfunction write_bits_3(buf, bl, v) { var w = bl & 7, h = bl >>> 3;\n\tif(w <= 5) buf[h] |= (v & 7) << w;\n\telse {\n\t\tbuf[h] |= (v << w) & 0xFF;\n\t\tbuf[h+1] = (v&7) >> (8-w);\n\t}\n\treturn bl + 3;\n}\n\nfunction write_bits_1(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv = (v&1) << w;\n\tbuf[h] |= v;\n\treturn bl + 1;\n}\nfunction write_bits_8(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v;\n\treturn bl + 8;\n}\nfunction write_bits_16(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v & 0xFF;\n\tbuf[h+2] = v >>> 8;\n\treturn bl + 16;\n}\n\n/* until ArrayBuffer#realloc is a thing, fake a realloc */\nfunction realloc(b, sz/*:number*/) {\n\tvar L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;\n\tif(L >= sz) return b;\n\tif(has_buf) {\n\t\tvar o = new_unsafe_buf(M);\n\t\t// $FlowIgnore\n\t\tif(b.copy) b.copy(o);\n\t\telse for(; i < b.length; ++i) o[i] = b[i];\n\t\treturn o;\n\t} else if(use_typed_arrays) {\n\t\tvar a = new Uint8Array(M);\n\t\tif(a.set) a.set(b);\n\t\telse for(; i < L; ++i) a[i] = b[i];\n\t\treturn a;\n\t}\n\tb.length = M;\n\treturn b;\n}\n\n/* zero-filled arrays for older browsers */\nfunction zero_fill_array(n) {\n\tvar o = new Array(n);\n\tfor(var i = 0; i < n; ++i) o[i] = 0;\n\treturn o;\n}\n\n/* build tree (used for literals and lengths) */\nfunction build_tree(clens, cmap, MAX/*:number*/)/*:number*/ {\n\tvar maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;\n\n\tvar bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n\tfor(i = 0; i < 32; ++i) bl_count[i] = 0;\n\n\tfor(i = L; i < MAX; ++i) clens[i] = 0;\n\tL = clens.length;\n\n\tvar ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n\t/* build code tree */\n\tfor(i = 0; i < L; ++i) {\n\t\tbl_count[(w = clens[i])]++;\n\t\tif(maxlen < w) maxlen = w;\n\t\tctree[i] = 0;\n\t}\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);\n\tfor(i = 0; i < L; ++i) {\n\t\tccode = clens[i];\n\t\tif(ccode != 0) ctree[i] = bl_count[ccode+16]++;\n\t}\n\n\t/* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);\n\t\t\tfor(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)\n\t\t\t\tcmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);\n\t\t}\n\t}\n\treturn maxlen;\n}\n\n/* Fixed Huffman */\nvar fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\nvar fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);\nif(!use_typed_arrays) {\n\tfor(var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n\tfor(i = 0; i < 32; ++i) fix_dmap[i] = 0;\n}\n(function() {\n\tvar dlens/*:Array<number>*/ = [];\n\tvar i = 0;\n\tfor(;i<32; i++) dlens.push(5);\n\tbuild_tree(dlens, fix_dmap, 32);\n\n\tvar clens/*:Array<number>*/ = [];\n\ti = 0;\n\tfor(; i<=143; i++) clens.push(8);\n\tfor(; i<=255; i++) clens.push(9);\n\tfor(; i<=279; i++) clens.push(7);\n\tfor(; i<=287; i++) clens.push(8);\n\tbuild_tree(clens, fix_lmap, 288);\n})();var _deflateRaw = /*#__PURE__*/(function _deflateRawIIFE() {\n\tvar DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];\n\tvar j = 0, k = 0;\n\tfor(; j < DST_LN.length - 1; ++j) {\n\t\tfor(; k < DST_LN[j+1]; ++k) DST_LN_RE[k] = j;\n\t}\n\tfor(;k < 32768; ++k) DST_LN_RE[k] = 29;\n\n\tvar LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];\n\tfor(j = 0, k = 0; j < LEN_LN.length - 1; ++j) {\n\t\tfor(; k < LEN_LN[j+1]; ++k) LEN_LN_RE[k] = j;\n\t}\n\n\tfunction write_stored(data, out) {\n\t\tvar boff = 0;\n\t\twhile(boff < data.length) {\n\t\t\tvar L = Math.min(0xFFFF, data.length - boff);\n\t\t\tvar h = boff + L == data.length;\n\t\t\tout.write_shift(1, +h);\n\t\t\tout.write_shift(2, L);\n\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t}\n\t\treturn out.l;\n\t}\n\n\t/* Fixed Huffman */\n\tfunction write_huff_fixed(data, out) {\n\t\tvar bl = 0;\n\t\tvar boff = 0;\n\t\tvar addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];\n\t\twhile(boff < data.length) {\n\t\t\tvar L = /* data.length - boff; */ Math.min(0xFFFF, data.length - boff);\n\n\t\t\t/* write a stored block for short data */\n\t\t\tif(L < 10) {\n\t\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line\n\t\t\t\tif(bl & 7) bl += 8 - (bl & 7);\n\t\t\t\tout.l = (bl / 8) | 0;\n\t\t\t\tout.write_shift(2, L);\n\t\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t\t\tbl = out.l * 8;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line\n\t\t\tvar hash = 0;\n\t\t\twhile(L-- > 0) {\n\t\t\t\tvar d = data[boff];\n\t\t\t\thash = ((hash << 5) ^ d) & 0x7FFF;\n\n\t\t\t\tvar match = -1, mlen = 0;\n\n\t\t\t\tif((match = addrs[hash])) {\n\t\t\t\t\tmatch |= boff & ~0x7FFF;\n\t\t\t\t\tif(match > boff) match -= 0x8000;\n\t\t\t\t\tif(match < boff) while(data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;\n\t\t\t\t}\n\n\t\t\t\tif(mlen > 2) {\n\t\t\t\t\t/* Copy Token  */\n\t\t\t\t\td = LEN_LN_RE[mlen];\n\t\t\t\t\tif(d <= 22) bl = write_bits_8(out, bl, bitswap8[d+1]>>1) - 1;\n\t\t\t\t\telse {\n\t\t\t\t\t\twrite_bits_8(out, bl, 3);\n\t\t\t\t\t\tbl += 5;\n\t\t\t\t\t\twrite_bits_8(out, bl, bitswap8[d-23]>>5);\n\t\t\t\t\t\tbl += 3;\n\t\t\t\t\t}\n\t\t\t\t\tvar len_eb = (d < 8) ? 0 : ((d - 4)>>2);\n\t\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, mlen - LEN_LN[d]);\n\t\t\t\t\t\tbl += len_eb;\n\t\t\t\t\t}\n\n\t\t\t\t\td = DST_LN_RE[boff - match];\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]>>3);\n\t\t\t\t\tbl -= 3;\n\n\t\t\t\t\tvar dst_eb = d < 4 ? 0 : (d-2)>>1;\n\t\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, boff - match - DST_LN[d]);\n\t\t\t\t\t\tbl += dst_eb;\n\t\t\t\t\t}\n\t\t\t\t\tfor(var q = 0; q < mlen; ++q) {\n\t\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t\thash = ((hash << 5) ^ data[boff]) & 0x7FFF;\n\t\t\t\t\t\t++boff;\n\t\t\t\t\t}\n\t\t\t\t\tL-= mlen - 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* Literal Token */\n\t\t\t\t\tif(d <= 143) d = d + 48;\n\t\t\t\t\telse bl = write_bits_1(out, bl, 1);\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]);\n\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t++boff;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbl = write_bits_8(out, bl, 0) - 1;\n\t\t}\n\t\tout.l = ((bl + 7)/8)|0;\n\t\treturn out.l;\n\t}\n\treturn function _deflateRaw(data, out) {\n\t\tif(data.length < 8) return write_stored(data, out);\n\t\treturn write_huff_fixed(data, out);\n\t};\n})();\n\nfunction _deflate(data) {\n\tvar buf = new_buf(50+Math.floor(data.length*1.1));\n\tvar off = _deflateRaw(data, buf);\n\treturn buf.slice(0, off);\n}\n/* modified inflate function also moves original read head */\n\nvar dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);\nvar dyn_len_1 = 1, dyn_len_2 = 1;\n\n/* 5.5.3 Expanding Huffman Codes */\nfunction dyn(data, boff/*:number*/) {\n\t/* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n\tvar _HLIT = read_bits_5(data, boff) + 257; boff += 5;\n\tvar _HDIST = read_bits_5(data, boff) + 1; boff += 5;\n\tvar _HCLEN = read_bits_4(data, boff) + 4; boff += 4;\n\tvar w = 0;\n\n\t/* grab and store code lengths */\n\tvar clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n\tvar ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\tvar maxlen = 1;\n\tvar bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar L = clens.length; /* 19 */\n\tfor(var i = 0; i < _HCLEN; ++i) {\n\t\tclens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n\t\tif(maxlen < w) maxlen = w;\n\t\tbl_count[w]++;\n\t\tboff += 3;\n\t}\n\n\t/* build code tree */\n\tvar ccode = 0;\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;\n\tfor(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n\t/* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bitswap8[ctree[i]]>>(8-cleni);\n\t\t\tfor(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);\n\t\t}\n\t}\n\n\t/* read literal and dist codes at once */\n\tvar hcodes/*:Array<number>*/ = [];\n\tmaxlen = 1;\n\tfor(; hcodes.length < _HLIT + _HDIST;) {\n\t\tccode = dyn_cmap[read_bits_7(data, boff)];\n\t\tboff += ccode & 7;\n\t\tswitch((ccode >>>= 3)) {\n\t\t\tcase 16:\n\t\t\t\tw = 3 + read_bits_2(data, boff); boff += 2;\n\t\t\t\tccode = hcodes[hcodes.length - 1];\n\t\t\t\twhile(w-- > 0) hcodes.push(ccode);\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tw = 3 + read_bits_3(data, boff); boff += 3;\n\t\t\t\twhile(w-- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tcase 18:\n\t\t\t\tw = 11 + read_bits_7(data, boff); boff += 7;\n\t\t\t\twhile(w -- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thcodes.push(ccode);\n\t\t\t\tif(maxlen < ccode) maxlen = ccode;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* build literal / length trees */\n\tvar h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);\n\tfor(i = _HLIT; i < 286; ++i) h1[i] = 0;\n\tfor(i = _HDIST; i < 30; ++i) h2[i] = 0;\n\tdyn_len_1 = build_tree(h1, dyn_lmap, 286);\n\tdyn_len_2 = build_tree(h2, dyn_dmap, 30);\n\treturn boff;\n}\n\n/* return [ data, bytesRead ] */\nfunction inflate(data, usz/*:number*/) {\n\t/* shortcircuit for empty buffer [0x03, 0x00] */\n\tif(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }\n\n\t/* bit offset */\n\tvar boff = 0;\n\n\t/* header includes final bit and type bits */\n\tvar header = 0;\n\n\tvar outbuf = new_unsafe_buf(usz ? usz : (1<<18));\n\tvar woff = 0;\n\tvar OL = outbuf.length>>>0;\n\tvar max_len_1 = 0, max_len_2 = 0;\n\n\twhile((header&1) == 0) {\n\t\theader = read_bits_3(data, boff); boff += 3;\n\t\tif((header >>> 1) == 0) {\n\t\t\t/* Stored block */\n\t\t\tif(boff & 7) boff += 8 - (boff&7);\n\t\t\t/* 2 bytes sz, 2 bytes bit inverse */\n\t\t\tvar sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;\n\t\t\tboff += 32;\n\t\t\t/* push sz bytes */\n\t\t\tif(sz > 0) {\n\t\t\t\tif(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }\n\t\t\t\twhile(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }\n\t\t\t}\n\t\t\tcontinue;\n\t\t} else if((header >> 1) == 1) {\n\t\t\t/* Fixed Huffman */\n\t\t\tmax_len_1 = 9; max_len_2 = 5;\n\t\t} else {\n\t\t\t/* Dynamic Huffman */\n\t\t\tboff = dyn(data, boff);\n\t\t\tmax_len_1 = dyn_len_1; max_len_2 = dyn_len_2;\n\t\t}\n\t\tfor(;;) { // while(true) is apparently out of vogue in modern JS circles\n\t\t\tif(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }\n\t\t\t/* ingest code and move read head */\n\t\t\tvar bits = read_bits_n(data, boff, max_len_1);\n\t\t\tvar code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t/* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n\t\t\tif(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;\n\t\t\telse if(code == 256) break;\n\t\t\telse {\n\t\t\t\tcode -= 257;\n\t\t\t\tvar len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;\n\t\t\t\tvar tgt = woff + LEN_LN[code];\n\t\t\t\t/* length extra bits */\n\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\ttgt += read_bits_n(data, boff, len_eb);\n\t\t\t\t\tboff += len_eb;\n\t\t\t\t}\n\n\t\t\t\t/* dist code */\n\t\t\t\tbits = read_bits_n(data, boff, max_len_2);\n\t\t\t\tcode = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n\t\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t\tvar dst_eb = (code < 4 ? 0 : (code-2)>>1);\n\t\t\t\tvar dst = DST_LN[code];\n\t\t\t\t/* dist extra bits */\n\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\tdst += read_bits_n(data, boff, dst_eb);\n\t\t\t\t\tboff += dst_eb;\n\t\t\t\t}\n\n\t\t\t\t/* in the common case, manual byte copy is faster than TA set / Buffer copy */\n\t\t\t\tif(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt + 100); OL = outbuf.length; }\n\t\t\t\twhile(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }\n\t\t\t}\n\t\t}\n\t}\n\tif(usz) return [outbuf, (boff+7)>>>3];\n\treturn [outbuf.slice(0, woff), (boff+7)>>>3];\n}\n\nfunction _inflate(payload, usz) {\n\tvar data = payload.slice(payload.l||0);\n\tvar out = inflate(data, usz);\n\tpayload.l += out[1];\n\treturn out[0];\n}\n\nfunction warn_or_throw(wrn, msg) {\n\tif(wrn) { if(typeof console !== 'undefined') console.error(msg); }\n\telse throw new Error(msg);\n}\n\nfunction parse_zip(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\n\tvar blob/*:CFBlob*/ = /*::(*/file/*:: :any)*/;\n\tprep_blob(blob, 0);\n\n\tvar FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o, { root: options.root });\n\n\t/* find end of central directory, start just after signature */\n\tvar i = blob.length - 4;\n\twhile((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;\n\tblob.l = i + 4;\n\n\t/* parse end of central directory */\n\tblob.l += 4;\n\tvar fcnt = blob.read_shift(2);\n\tblob.l += 6;\n\tvar start_cd = blob.read_shift(4);\n\n\t/* parse central directory */\n\tblob.l = start_cd;\n\n\tfor(i = 0; i < fcnt; ++i) {\n\t\t/* trust local file header instead of CD entry */\n\t\tblob.l += 20;\n\t\tvar csz = blob.read_shift(4);\n\t\tvar usz = blob.read_shift(4);\n\t\tvar namelen = blob.read_shift(2);\n\t\tvar efsz = blob.read_shift(2);\n\t\tvar fcsz = blob.read_shift(2);\n\t\tblob.l += 8;\n\t\tvar offset = blob.read_shift(4);\n\t\tvar EF = parse_extra_field(/*::(*/blob.slice(blob.l+namelen, blob.l+namelen+efsz)/*:: :any)*/);\n\t\tblob.l += namelen + efsz + fcsz;\n\n\t\tvar L = blob.l;\n\t\tblob.l = offset + 4;\n\t\tparse_local_file(blob, csz, usz, o, EF);\n\t\tblob.l = L;\n\t}\n\treturn o;\n}\n\n\n/* head starts just after local file header signature */\nfunction parse_local_file(blob/*:CFBlob*/, csz/*:number*/, usz/*:number*/, o/*:CFBContainer*/, EF) {\n\t/* [local file header] */\n\tblob.l += 2;\n\tvar flags = blob.read_shift(2);\n\tvar meth = blob.read_shift(2);\n\tvar date = parse_dos_date(blob);\n\n\tif(flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n\tvar crc32 = blob.read_shift(4);\n\tvar _csz = blob.read_shift(4);\n\tvar _usz = blob.read_shift(4);\n\n\tvar namelen = blob.read_shift(2);\n\tvar efsz = blob.read_shift(2);\n\n\t// TODO: flags & (1<<11) // UTF8\n\tvar name = \"\"; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n\tif(efsz) {\n\t\tvar ef = parse_extra_field(/*::(*/blob.slice(blob.l, blob.l + efsz)/*:: :any)*/);\n\t\tif((ef[0x5455]||{}).mt) date = ef[0x5455].mt;\n\t\tif(((EF||{})[0x5455]||{}).mt) date = EF[0x5455].mt;\n\t}\n\tblob.l += efsz;\n\n\t/* [encryption header] */\n\n\t/* [file data] */\n\tvar data = blob.slice(blob.l, blob.l + _csz);\n\tswitch(meth) {\n\t\tcase 8: data = _inflateRawSync(blob, _usz); break;\n\t\tcase 0: break; // TODO: scan for magic number\n\t\tdefault: throw new Error(\"Unsupported ZIP Compression method \" + meth);\n\t}\n\n\t/* [data descriptor] */\n\tvar wrn = false;\n\tif(flags & 8) {\n\t\tcrc32 = blob.read_shift(4);\n\t\tif(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }\n\t\t_csz = blob.read_shift(4);\n\t\t_usz = blob.read_shift(4);\n\t}\n\n\tif(_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n\tif(_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n\t//var _crc32 = CRC32.buf(data, 0);\n\t//if((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n\tcfb_add(o, name, data, {unsafe: true, mt: date});\n}\nfunction write_zip(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes*/ {\n\tvar _opts = options || {};\n\tvar out = [], cdirs = [];\n\tvar o/*:CFBlob*/ = new_buf(1);\n\tvar method = (_opts.compression ? 8 : 0), flags = 0;\n\tvar desc = false;\n\tif(desc) flags |= 8;\n\tvar i = 0, j = 0;\n\n\tvar start_cd = 0, fcnt = 0;\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tvar crcs = [];\n\tvar sz_cd = 0;\n\n\tfor(i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\t\tvar start = start_cd;\n\n\t\t/* TODO: CP437 filename */\n\t\tvar namebuf = new_buf(fp.length);\n\t\tfor(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n\t\tnamebuf = namebuf.slice(0, namebuf.l);\n\t\tcrcs[fcnt] = CRC32.buf(/*::((*/fi.content/*::||[]):any)*/, 0);\n\n\t\tvar outbuf = fi.content/*::||[]*/;\n\t\tif(method == 8) outbuf = _deflateRawSync(outbuf);\n\n\t\t/* local file header */\n\t\to = new_buf(30);\n\t\to.write_shift(4, 0x04034b50);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\t/* TODO: last mod file time/date */\n\t\tif(fi.mt) write_dos_date(o, fi.mt);\n\t\telse o.write_shift(4, 0);\n\t\to.write_shift(-4, (flags & 8) ? 0 : crcs[fcnt]);\n\t\to.write_shift(4,  (flags & 8) ? 0 : outbuf.length);\n\t\to.write_shift(4,  (flags & 8) ? 0 : /*::(*/fi.content/*::||[])*/.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\n\t\tstart_cd += o.length;\n\t\tout.push(o);\n\t\tstart_cd += namebuf.length;\n\t\tout.push(namebuf);\n\n\t\t/* TODO: extra fields? */\n\n\t\t/* TODO: encryption header ? */\n\n\t\tstart_cd += outbuf.length;\n\t\tout.push(outbuf);\n\n\t\t/* data descriptor */\n\t\tif(flags & 8) {\n\t\t\to = new_buf(12);\n\t\t\to.write_shift(-4, crcs[fcnt]);\n\t\t\to.write_shift(4, outbuf.length);\n\t\t\to.write_shift(4, /*::(*/fi.content/*::||[])*/.length);\n\t\t\tstart_cd += o.l;\n\t\t\tout.push(o);\n\t\t}\n\n\t\t/* central directory */\n\t\to = new_buf(46);\n\t\to.write_shift(4, 0x02014b50);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\to.write_shift(4, 0); /* TODO: last mod file time/date */\n\t\to.write_shift(-4, crcs[fcnt]);\n\n\t\to.write_shift(4, outbuf.length);\n\t\to.write_shift(4, /*::(*/fi.content/*::||[])*/.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, start);\n\n\t\tsz_cd += o.l;\n\t\tcdirs.push(o);\n\t\tsz_cd += namebuf.length;\n\t\tcdirs.push(namebuf);\n\t\t++fcnt;\n\t}\n\n\t/* end of central directory */\n\to = new_buf(22);\n\to.write_shift(4, 0x06054b50);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, fcnt);\n\to.write_shift(2, fcnt);\n\to.write_shift(4, sz_cd);\n\to.write_shift(4, start_cd);\n\to.write_shift(2, 0);\n\n\treturn bconcat(([bconcat((out/*:any*/)), bconcat(cdirs), o]/*:any*/));\n}\nvar ContentTypeMap = ({\n\t\"htm\": \"text/html\",\n\t\"xml\": \"text/xml\",\n\n\t\"gif\": \"image/gif\",\n\t\"jpg\": \"image/jpeg\",\n\t\"png\": \"image/png\",\n\n\t\"mso\": \"application/x-mso\",\n\t\"thmx\": \"application/vnd.ms-officetheme\",\n\t\"sh33tj5\": \"application/octet-stream\"\n}/*:any*/);\n\nfunction get_content_type(fi/*:CFBEntry*/, fp/*:string*/)/*:string*/ {\n\tif(fi.ctype) return fi.ctype;\n\n\tvar ext = fi.name || \"\", m = ext.match(/\\.([^\\.]+)$/);\n\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\n\tif(fp) {\n\t\tm = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n\t\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\t}\n\n\treturn \"application/octet-stream\";\n}\n\n/* 76 character chunks TODO: intertwine encoding */\nfunction write_base64_76(bstr/*:string*/)/*:string*/ {\n\tvar data = Base64_encode(bstr);\n\tvar o = [];\n\tfor(var i = 0; i < data.length; i+= 76) o.push(data.slice(i, i+76));\n\treturn o.join(\"\\r\\n\") + \"\\r\\n\";\n}\n\n/*\nRules for QP:\n\t- escape =## applies for all non-display characters and literal \"=\"\n\t- space or tab at end of line must be encoded\n\t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n\t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n\nTODO: Some files from word appear to write line extensions with bare equals:\n\n```\n<table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n=\"70%\"\n```\n*/\nfunction write_quoted_printable(text/*:string*/)/*:string*/ {\n\tvar encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function(c) {\n\t\tvar w = c.charCodeAt(0).toString(16).toUpperCase();\n\t\treturn \"=\" + (w.length == 1 ? \"0\" + w : w);\n\t});\n\n\tencoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n\n\tif(encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n\tencoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n\n\tvar o/*:Array<string>*/ = [], split = encoded.split(\"\\r\\n\");\n\tfor(var si = 0; si < split.length; ++si) {\n\t\tvar str = split[si];\n\t\tif(str.length == 0) { o.push(\"\"); continue; }\n\t\tfor(var i = 0; i < str.length;) {\n\t\t\tvar end = 76;\n\t\t\tvar tmp = str.slice(i, i + end);\n\t\t\tif(tmp.charAt(end - 1) == \"=\") end --;\n\t\t\telse if(tmp.charAt(end - 2) == \"=\") end -= 2;\n\t\t\telse if(tmp.charAt(end - 3) == \"=\") end -= 3;\n\t\t\ttmp = str.slice(i, i + end);\n\t\t\ti += end;\n\t\t\tif(i < str.length) tmp += \"=\";\n\t\t\to.push(tmp);\n\t\t}\n\t}\n\n\treturn o.join(\"\\r\\n\");\n}\nfunction parse_quoted_printable(data/*:Array<string>*/)/*:RawBytes*/ {\n\tvar o = [];\n\n\t/* unify long lines */\n\tfor(var di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\twhile(di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n\t\to.push(line);\n\t}\n\n\t/* decode */\n\tfor(var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function($$) { return String.fromCharCode(parseInt($$.slice(1), 16)); });\n\treturn s2a(o.join(\"\\r\\n\"));\n}\n\n\nfunction parse_mime(cfb/*:CFBContainer*/, data/*:Array<string>*/, root/*:string*/)/*:void*/ {\n\tvar fname = \"\", cte = \"\", ctype = \"\", fdata;\n\tvar di = 0;\n\tfor(;di < 10; ++di) {\n\t\tvar line = data[di];\n\t\tif(!line || line.match(/^\\s*$/)) break;\n\t\tvar m = line.match(/^(.*?):\\s*([^\\s].*)$/);\n\t\tif(m) switch(m[1].toLowerCase()) {\n\t\t\tcase \"content-location\": fname = m[2].trim(); break;\n\t\t\tcase \"content-type\": ctype = m[2].trim(); break;\n\t\t\tcase \"content-transfer-encoding\": cte = m[2].trim(); break;\n\t\t}\n\t}\n\t++di;\n\tswitch(cte.toLowerCase()) {\n\t\tcase 'base64': fdata = s2a(Base64_decode(data.slice(di).join(\"\"))); break;\n\t\tcase 'quoted-printable': fdata = parse_quoted_printable(data.slice(di)); break;\n\t\tdefault: throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n\t}\n\tvar file = cfb_add(cfb, fname.slice(root.length), fdata, {unsafe: true});\n\tif(ctype) file.ctype = ctype;\n}\n\nfunction parse_mad(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\n\tif(a2s(file.slice(0,13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n\tvar root = (options && options.root || \"\");\n\t// $FlowIgnore\n\tvar data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n\tvar di = 0, row = \"\";\n\n\t/* if root is not specified, scan for the common prefix */\n\tfor(di = 0; di < data.length; ++di) {\n\t\trow = data[di];\n\t\tif(!/^Content-Location:/i.test(row)) continue;\n\t\trow = row.slice(row.indexOf(\"file\"));\n\t\tif(!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n\t\tif(row.slice(0, root.length) == root) continue;\n\t\twhile(root.length > 0) {\n\t\t\troot = root.slice(0, root.length - 1);\n\t\t\troot = root.slice(0, root.lastIndexOf(\"/\") + 1);\n\t\t\tif(row.slice(0,root.length) == root) break;\n\t\t}\n\t}\n\n\tvar mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n\tif(!mboundary) throw new Error(\"MAD cannot find boundary\");\n\tvar boundary = \"--\" + (mboundary[1] || \"\");\n\n\tvar FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o);\n\tvar start_di, fcnt = 0;\n\tfor(di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\tif(line !== boundary && line !== boundary + \"--\") continue;\n\t\tif(fcnt++) parse_mime(o, data.slice(start_di, di), root);\n\t\tstart_di = di;\n\t}\n\treturn o;\n}\n\nfunction write_mad(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:string*/ {\n\tvar opts = options || {};\n\tvar boundary = opts.boundary || \"SheetJS\";\n\tboundary = '------=' + boundary;\n\n\tvar out = [\n\t\t'MIME-Version: 1.0',\n\t\t'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"',\n\t\t'',\n\t\t'',\n\t\t''\n\t];\n\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tfor(var i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length);\n\t\tfi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\n\t\t/* Normalize filename */\n\t\tfp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function(c) {\n\t\t\treturn \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n\t\t}).replace(/[\\u0080-\\uFFFF]/g, function(u) {\n\t\t\treturn \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n\t\t});\n\n\t\t/* Extract content as binary string */\n\t\tvar ca = fi.content;\n\t\t// $FlowIgnore\n\t\tvar cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n\n\t\t/* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n\t\tvar dispcnt = 0, L = Math.min(1024, cstr.length), cc = 0;\n\t\tfor(var csl = 0; csl <= L; ++csl) if((cc=cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n\t\tvar qp = dispcnt >= L * 4 / 5;\n\n\t\tout.push(boundary);\n\t\tout.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n\t\tout.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n\t\tout.push('Content-Type: ' + get_content_type(fi, fp));\n\t\tout.push('');\n\n\t\tout.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n\t}\n\tout.push(boundary + '--\\r\\n');\n\treturn out.join(\"\\r\\n\");\n}\nfunction cfb_new(opts/*:?any*/)/*:CFBContainer*/ {\n\tvar o/*:CFBContainer*/ = ({}/*:any*/);\n\tinit_cfb(o, opts);\n\treturn o;\n}\n\nfunction cfb_add(cfb/*:CFBContainer*/, name/*:string*/, content/*:?RawBytes*/, opts/*:?any*/)/*:CFBEntry*/ {\n\tvar unsafe = opts && opts.unsafe;\n\tif(!unsafe) init_cfb(cfb);\n\tvar file = !unsafe && CFB.find(cfb, name);\n\tif(!file) {\n\t\tvar fpath/*:string*/ = cfb.FullPaths[0];\n\t\tif(name.slice(0, fpath.length) == fpath) fpath = name;\n\t\telse {\n\t\t\tif(fpath.slice(-1) != \"/\") fpath += \"/\";\n\t\t\tfpath = (fpath + name).replace(\"//\",\"/\");\n\t\t}\n\t\tfile = ({name: filename(name), type: 2}/*:any*/);\n\t\tcfb.FileIndex.push(file);\n\t\tcfb.FullPaths.push(fpath);\n\t\tif(!unsafe) CFB.utils.cfb_gc(cfb);\n\t}\n\t/*:: if(!file) throw new Error(\"unreachable\"); */\n\tfile.content = (content/*:any*/);\n\tfile.size = content ? content.length : 0;\n\tif(opts) {\n\t\tif(opts.CLSID) file.clsid = opts.CLSID;\n\t\tif(opts.mt) file.mt = opts.mt;\n\t\tif(opts.ct) file.ct = opts.ct;\n\t}\n\treturn file;\n}\n\nfunction cfb_del(cfb/*:CFBContainer*/, name/*:string*/)/*:boolean*/ {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex.splice(j, 1);\n\t\tcfb.FullPaths.splice(j, 1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_mov(cfb/*:CFBContainer*/, old_name/*:string*/, new_name/*:string*/)/*:boolean*/ {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, old_name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex[j].name = filename(new_name);\n\t\tcfb.FullPaths[j] = new_name;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_gc(cfb/*:CFBContainer*/)/*:void*/ { rebuild_cfb(cfb, true); }\n\nexports.find = find;\nexports.read = read;\nexports.parse = parse;\nexports.write = write;\nexports.writeFile = write_file;\nexports.utils = {\n\tcfb_new: cfb_new,\n\tcfb_add: cfb_add,\n\tcfb_del: cfb_del,\n\tcfb_mov: cfb_mov,\n\tcfb_gc: cfb_gc,\n\tReadShift: ReadShift,\n\tCheckField: CheckField,\n\tprep_blob: prep_blob,\n\tbconcat: bconcat,\n\tuse_zlib: use_zlib,\n\t_deflateRaw: _deflate,\n\t_inflateRaw: _inflate,\n\tconsts: consts\n};\n\nreturn exports;\n})();\n\nlet _fs = void 0;\nfunction set_fs(fs) { _fs = fs; }\nexport { set_fs };\n\n/* normalize data for blob ctor */\nfunction blobify(data) {\n\tif(typeof data === \"string\") return s2ab(data);\n\tif(Array.isArray(data)) return a2u(data);\n\treturn data;\n}\n/* write or download file */\nfunction write_dl(fname/*:string*/, payload/*:any*/, enc/*:?string*/) {\n\t/*global IE_SaveFile, Blob, navigator, saveAs, document, File, chrome */\n\tif(typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);\n\tif(typeof Deno !== 'undefined') {\n\t\t/* in this spot, it's safe to assume typed arrays and TextEncoder/TextDecoder exist */\n\t\tif(enc && typeof payload == \"string\") switch(enc) {\n\t\t\tcase \"utf8\": payload = new TextEncoder(enc).encode(payload); break;\n\t\t\tcase \"binary\": payload = s2ab(payload); break;\n\t\t\t/* TODO: binary equivalent */\n\t\t\tdefault: throw new Error(\"Unsupported encoding \" + enc);\n\t\t}\n\t\treturn Deno.writeFileSync(fname, payload);\n\t}\n\tvar data = (enc == \"utf8\") ? utf8write(payload) : payload;\n\t/*:: declare var IE_SaveFile: any; */\n\tif(typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\n\tif(typeof Blob !== 'undefined') {\n\t\tvar blob = new Blob([blobify(data)], {type:\"application/octet-stream\"});\n\t\t/*:: declare var navigator: any; */\n\t\tif(typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\n\t\t/*:: declare var saveAs: any; */\n\t\tif(typeof saveAs !== 'undefined') return saveAs(blob, fname);\n\t\tif(typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\n\t\t\tvar url = URL.createObjectURL(blob);\n\t\t\t/*:: declare var chrome: any; */\n\t\t\tif(typeof chrome === 'object' && typeof (chrome.downloads||{}).download == \"function\") {\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn chrome.downloads.download({ url: url, filename: fname, saveAs: true});\n\t\t\t}\n\t\t\tvar a = document.createElement(\"a\");\n\t\t\tif(a.download != null) {\n\t\t\t\t/*:: if(document.body == null) throw new Error(\"unreachable\"); */\n\t\t\t\ta.download = fname; a.href = url; document.body.appendChild(a); a.click();\n\t\t\t\t/*:: if(document.body == null) throw new Error(\"unreachable\"); */ document.body.removeChild(a);\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\t}\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar out = File(fname); out.open(\"w\"); out.encoding = \"binary\";\n\t\tif(Array.isArray(payload)) payload = a2s(payload);\n\t\tout.write(payload); out.close(); return payload;\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n\tthrow new Error(\"cannot save file \" + fname);\n}\n\n/* read binary data from file */\nfunction read_binary(path/*:string*/) {\n\tif(typeof _fs !== 'undefined') return _fs.readFileSync(path);\n\tif(typeof Deno !== 'undefined') return Deno.readFileSync(path);\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar infile = File(path); infile.open(\"r\"); infile.encoding = \"binary\";\n\t\tvar data = infile.read(); infile.close();\n\t\treturn data;\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n\tthrow new Error(\"Cannot access file \" + path);\n}\nfunction keys(o/*:any*/)/*:Array<any>*/ {\n\tvar ks = Object.keys(o), o2 = [];\n\tfor(var i = 0; i < ks.length; ++i) if(Object.prototype.hasOwnProperty.call(o, ks[i])) o2.push(ks[i]);\n\treturn o2;\n}\n\nfunction evert_key(obj/*:any*/, key/*:string*/)/*:EvertType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) if(o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\n\treturn o;\n}\n\nfunction evert(obj/*:any*/)/*:EvertType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\n\treturn o;\n}\n\nfunction evert_num(obj/*:any*/)/*:EvertNumType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i],10);\n\treturn o;\n}\n\nfunction evert_arr(obj/*:any*/)/*:EvertArrType*/ {\n\tvar o/*:EvertArrType*/ = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) {\n\t\tif(o[obj[K[i]]] == null) o[obj[K[i]]] = [];\n\t\to[obj[K[i]]].push(K[i]);\n\t}\n\treturn o;\n}\n\nvar basedate = /*#__PURE__*/new Date(1899, 11, 30, 0, 0, 0); // 2209161600000\nfunction datenum(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {\n\tvar epoch = /*#__PURE__*/v.getTime();\n\tif(date1904) epoch -= 1462*24*60*60*1000;\n\tvar dnthresh = /*#__PURE__*/basedate.getTime() + (/*#__PURE__*/v.getTimezoneOffset() - /*#__PURE__*/basedate.getTimezoneOffset()) * 60000;\n\treturn (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n}\nvar refdate = /*#__PURE__*/new Date();\nvar dnthresh = /*#__PURE__*/basedate.getTime() + (/*#__PURE__*/refdate.getTimezoneOffset() - /*#__PURE__*/basedate.getTimezoneOffset()) * 60000;\nvar refoffset = /*#__PURE__*/refdate.getTimezoneOffset();\nfunction numdate(v/*:number*/)/*:Date*/ {\n\tvar out = new Date();\n\tout.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);\n\tif (out.getTimezoneOffset() !== refoffset) {\n\t\tout.setTime(out.getTime() + (out.getTimezoneOffset() - refoffset) * 60000);\n\t}\n\treturn out;\n}\n\n/* ISO 8601 Duration */\nfunction parse_isodur(s) {\n\tvar sec = 0, mt = 0, time = false;\n\tvar m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n\tif(!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n\tfor(var i = 1; i != m.length; ++i) {\n\t\tif(!m[i]) continue;\n\t\tmt = 1;\n\t\tif(i > 3) time = true;\n\t\tswitch(m[i].slice(m[i].length-1)) {\n\t\t\tcase 'Y':\n\t\t\t\tthrow new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length-1));\n\t\t\tcase 'D': mt *= 24;\n\t\t\t\t/* falls through */\n\t\t\tcase 'H': mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M':\n\t\t\t\tif(!time) throw new Error(\"Unsupported ISO Duration Field: M\");\n\t\t\t\telse mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'S': break;\n\t\t}\n\t\tsec += mt * parseInt(m[i], 10);\n\t}\n\treturn sec;\n}\n\nvar good_pd_date_1 = /*#__PURE__*/new Date('2017-02-19T19:06:09.000Z');\nvar good_pd_date = /*#__PURE__*/isNaN(/*#__PURE__*/good_pd_date_1.getFullYear()) ? /*#__PURE__*/new Date('2/19/17') : good_pd_date_1;\nvar good_pd = /*#__PURE__*/good_pd_date.getFullYear() == 2017;\n/* parses a date as a local date */\nfunction parseDate(str/*:string|Date*/, fixdate/*:?number*/)/*:Date*/ {\n\tvar d = new Date(str);\n\tif(good_pd) {\n\t\t/*:: if(fixdate == null) fixdate = 0; */\n\t\tif(fixdate > 0) d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);\n\t\telse if(fixdate < 0) d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\n\t\treturn d;\n\t}\n\tif(str instanceof Date) return str;\n\tif(good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {\n\t\tvar s = d.getFullYear();\n\t\tif(str.indexOf(\"\" + s) > -1) return d;\n\t\td.setFullYear(d.getFullYear() + 100); return d;\n\t}\n\tvar n = str.match(/\\d+/g)||[\"2017\",\"2\",\"19\",\"0\",\"0\",\"0\"];\n\tvar out = new Date(+n[0], +n[1] - 1, +n[2], (+n[3]||0), (+n[4]||0), (+n[5]||0));\n\tif(str.indexOf(\"Z\") > -1) out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);\n\treturn out;\n}\n\nfunction cc2str(arr/*:Array<number>*/, debomit)/*:string*/ {\n\tif(has_buf && Buffer.isBuffer(arr)) {\n\t\tif(debomit) {\n\t\t\tif(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(arr.slice(2).toString(\"utf16le\"));\n\t\t\tif(arr[1] == 0xFE && arr[2] == 0xFF) return utf8write(utf16beread(arr.slice(2).toString(\"binary\")));\n\t\t}\n\t\treturn arr.toString(\"binary\");\n\t}\n\n\tif(typeof TextDecoder !== \"undefined\") try {\n\t\tif(debomit) {\n\t\t\tif(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(new TextDecoder(\"utf-16le\").decode(arr.slice(2)));\n\t\t\tif(arr[0] == 0xFE && arr[1] == 0xFF) return utf8write(new TextDecoder(\"utf-16be\").decode(arr.slice(2)));\n\t\t}\n\t\tvar rev = {\n\t\t\t\"\\u20ac\": \"\\x80\", \"\\u201a\": \"\\x82\", \"\\u0192\": \"\\x83\", \"\\u201e\": \"\\x84\",\n\t\t\t\"\\u2026\": \"\\x85\", \"\\u2020\": \"\\x86\", \"\\u2021\": \"\\x87\", \"\\u02c6\": \"\\x88\",\n\t\t\t\"\\u2030\": \"\\x89\", \"\\u0160\": \"\\x8a\", \"\\u2039\": \"\\x8b\", \"\\u0152\": \"\\x8c\",\n\t\t\t\"\\u017d\": \"\\x8e\", \"\\u2018\": \"\\x91\", \"\\u2019\": \"\\x92\", \"\\u201c\": \"\\x93\",\n\t\t\t\"\\u201d\": \"\\x94\", \"\\u2022\": \"\\x95\", \"\\u2013\": \"\\x96\", \"\\u2014\": \"\\x97\",\n\t\t\t\"\\u02dc\": \"\\x98\", \"\\u2122\": \"\\x99\", \"\\u0161\": \"\\x9a\", \"\\u203a\": \"\\x9b\",\n\t\t\t\"\\u0153\": \"\\x9c\", \"\\u017e\": \"\\x9e\", \"\\u0178\": \"\\x9f\"\n\t\t};\n\t\tif(Array.isArray(arr)) arr = new Uint8Array(arr);\n\t\treturn new TextDecoder(\"latin1\").decode(arr).replace(/[€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ]/g, function(c) { return rev[c] || c; });\n\t} catch(e) {}\n\n\tvar o = [];\n\tfor(var i = 0; i != arr.length; ++i) o.push(String.fromCharCode(arr[i]));\n\treturn o.join(\"\");\n}\n\nfunction dup(o/*:any*/)/*:any*/ {\n\tif(typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\n\tif(typeof o != 'object' || o == null) return o;\n\tif(o instanceof Date) return new Date(o.getTime());\n\tvar out = {};\n\tfor(var k in o) if(Object.prototype.hasOwnProperty.call(o, k)) out[k] = dup(o[k]);\n\treturn out;\n}\n\nfunction fill(c/*:string*/,l/*:number*/)/*:string*/ { var o = \"\"; while(o.length < l) o+=c; return o; }\n\n/* TODO: stress test */\nfunction fuzzynum(s/*:string*/)/*:number*/ {\n\tvar v/*:number*/ = Number(s);\n\tif(!isNaN(v)) return isFinite(v) ? v : NaN;\n\tif(!/\\d/.test(s)) return v;\n\tvar wt = 1;\n\tvar ss = s.replace(/([\\d]),([\\d])/g,\"$1$2\").replace(/[$]/g,\"\").replace(/[%]/g, function() { wt *= 100; return \"\";});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\tss = ss.replace(/[(](.*)[)]/,function($$, $1) { wt = -wt; return $1;});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\treturn v;\n}\nvar lower_months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nfunction fuzzydate(s/*:string*/)/*:Date*/ {\n\tvar o = new Date(s), n = new Date(NaN);\n\tvar y = o.getYear(), m = o.getMonth(), d = o.getDate();\n\tif(isNaN(d)) return n;\n\tvar lower = s.toLowerCase();\n\tif(lower.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) {\n\t\tlower = lower.replace(/[^a-z]/g,\"\").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/,\"\");\n\t\tif(lower.length > 3 && lower_months.indexOf(lower) == -1) return n;\n\t} else if(lower.match(/[a-z]/)) return n;\n\tif(y < 0 || y > 8099) return n;\n\tif((m > 0 || d > 1) && y != 101) return o;\n\tif(s.match(/[^-0-9:,\\/\\\\]/)) return n;\n\treturn o;\n}\n\nvar split_regex = /*#__PURE__*/(function() {\n\tvar safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\n\treturn function split_regex(str/*:string*/, re, def/*:string*/)/*:Array<string>*/ {\n\t\tif(safe_split_regex || typeof re == \"string\") return str.split(re);\n\t\tvar p = str.split(re), o = [p[0]];\n\t\tfor(var i = 1; i < p.length; ++i) { o.push(def); o.push(p[i]); }\n\t\treturn o;\n\t};\n})();\nfunction getdatastr(data)/*:?string*/ {\n\tif(!data) return null;\n\tif(data.content && data.type) return cc2str(data.content, true);\n\tif(data.data) return debom(data.data);\n\tif(data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\n\tif(data.asBinary) return debom(data.asBinary());\n\tif(data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(),0)));\n\treturn null;\n}\n\nfunction getdatabin(data) {\n\tif(!data) return null;\n\tif(data.data) return char_codes(data.data);\n\tif(data.asNodeBuffer && has_buf) return data.asNodeBuffer();\n\tif(data._data && data._data.getContent) {\n\t\tvar o = data._data.getContent();\n\t\tif(typeof o == \"string\") return char_codes(o);\n\t\treturn Array.prototype.slice.call(o);\n\t}\n\tif(data.content && data.type) return data.content;\n\treturn null;\n}\n\nfunction getdata(data) { return (data && data.name.slice(-4) === \".bin\") ? getdatabin(data) : getdatastr(data); }\n\n/* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\n/* OASIS does not comment on filename case sensitivity */\nfunction safegetzipfile(zip, file/*:string*/) {\n\tvar k = zip.FullPaths || keys(zip.files);\n\tvar f = file.toLowerCase().replace(/[\\/]/g, '\\\\'), g = f.replace(/\\\\/g,'\\/');\n\tfor(var i=0; i<k.length; ++i) {\n\t\tvar n = k[i].replace(/^Root Entry[\\/]/,\"\").toLowerCase();\n\t\tif(f == n || g == n) return zip.files ? zip.files[k[i]] : zip.FileIndex[i];\n\t}\n\treturn null;\n}\n\nfunction getzipfile(zip, file/*:string*/) {\n\tvar o = safegetzipfile(zip, file);\n\tif(o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n\treturn o;\n}\n\nfunction getzipdata(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {\n\tif(!safe) return getdata(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipdata(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipstr(zip, file/*:string*/, safe/*:?boolean*/)/*:?string*/ {\n\tif(!safe) return getdatastr(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipstr(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipbin(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {\n\tif(!safe) return getdatabin(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipbin(zip, file); } catch(e) { return null; }\n}\n\nfunction zipentries(zip) {\n\tvar k = zip.FullPaths || keys(zip.files), o = [];\n\tfor(var i = 0; i < k.length; ++i) if(k[i].slice(-1) != '/') o.push(k[i].replace(/^Root Entry[\\/]/, \"\"));\n\treturn o.sort();\n}\n\nfunction zip_add_file(zip, path, content) {\n\tif(zip.FullPaths) {\n\t\tif(typeof content == \"string\") {\n\t\t\tvar res;\n\t\t\tif(has_buf) res = Buffer_from(content);\n\t\t\t/* TODO: investigate performance in Edge 13 */\n\t\t\t//else if(typeof TextEncoder !== \"undefined\") res = new TextEncoder().encode(content);\n\t\t\telse res = utf8decode(content);\n\t\t\treturn CFB.utils.cfb_add(zip, path, res);\n\t\t}\n\t\tCFB.utils.cfb_add(zip, path, content);\n\t}\n\telse zip.file(path, content);\n}\n\nfunction zip_new() { return CFB.utils.cfb_new(); }\n\nfunction zip_read(d, o) {\n\tswitch(o.type) {\n\t\tcase \"base64\": return CFB.read(d, { type: \"base64\" });\n\t\tcase \"binary\": return CFB.read(d, { type: \"binary\" });\n\t\tcase \"buffer\": case \"array\": return CFB.read(d, { type: \"buffer\" });\n\t}\n\tthrow new Error(\"Unrecognized type \" + o.type);\n}\n\nfunction resolve_path(path/*:string*/, base/*:string*/)/*:string*/ {\n\tif(path.charAt(0) == \"/\") return path.slice(1);\n\tvar result = base.split('/');\n\tif(base.slice(-1) != \"/\") result.pop(); // folder path\n\tvar target = path.split('/');\n\twhile (target.length !== 0) {\n\t\tvar step = target.shift();\n\t\tif (step === '..') result.pop();\n\t\telse if (step !== '.') result.push(step);\n\t}\n\treturn result.join('/');\n}\nvar XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\nvar attregexg=/([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\nvar tagregex1=/<[\\/\\?]?[a-zA-Z0-9:_-]+(?:\\s+[^\"\\s?>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s=]+))*\\s*[\\/\\?]?>/mg, tagregex2 = /<[^>]*>/g;\nvar tagregex = /*#__PURE__*/XML_HEADER.match(tagregex1) ? tagregex1 : tagregex2;\nvar nsregex=/<\\w*:/, nsregex2 = /<(\\/?)\\w+:/;\nfunction parsexmltag(tag/*:string*/, skip_root/*:?boolean*/, skip_LC/*:?boolean*/)/*:any*/ {\n\tvar z = ({}/*:any*/);\n\tvar eq = 0, c = 0;\n\tfor(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n\tif(!skip_root) z[0] = tag.slice(0, eq);\n\tif(eq === tag.length) return z;\n\tvar m = tag.match(attregexg), j=0, v=\"\", i=0, q=\"\", cc=\"\", quot = 1;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\tcc = m[i];\n\t\tfor(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;\n\t\tq = cc.slice(0,c).trim();\n\t\twhile(cc.charCodeAt(c+1) == 32) ++c;\n\t\tquot = ((eq=cc.charCodeAt(c+1)) == 34 || eq == 39) ? 1 : 0;\n\t\tv = cc.slice(c+1+quot, cc.length-quot);\n\t\tfor(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;\n\t\tif(j===q.length) {\n\t\t\tif(q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\n\t\t\tz[q] = v;\n\t\t\tif(!skip_LC) z[q.toLowerCase()] = v;\n\t\t}\n\t\telse {\n\t\t\tvar k = (j===5 && q.slice(0,5)===\"xmlns\"?\"xmlns\":\"\")+q.slice(j+1);\n\t\t\tif(z[k] && q.slice(j-3,j) == \"ext\") continue; // from ods\n\t\t\tz[k] = v;\n\t\t\tif(!skip_LC) z[k.toLowerCase()] = v;\n\t\t}\n\t}\n\treturn z;\n}\nfunction strip_ns(x/*:string*/)/*:string*/ { return x.replace(nsregex2, \"<$1\"); }\n\nvar encodings = {\n\t'&quot;': '\"',\n\t'&apos;': \"'\",\n\t'&gt;': '>',\n\t'&lt;': '<',\n\t'&amp;': '&'\n};\nvar rencoding = /*#__PURE__*/evert(encodings);\n//var rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\nvar unescapexml/*:StringConv*/ = /*#__PURE__*/(function() {\n\t/* 22.4.2.4 bstr (Basic String) */\n\tvar encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/ig, coderegex = /_x([\\da-fA-F]{4})_/ig;\n\treturn function unescapexml(text/*:string*/)/*:string*/ {\n\t\tvar s = text + '', i = s.indexOf(\"<![CDATA[\");\n\t\tif(i == -1) return s.replace(encregex, function($$, $1) { return encodings[$$]||String.fromCharCode(parseInt($1,$$.indexOf(\"x\")>-1?16:10))||$$; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});\n\t\tvar j = s.indexOf(\"]]>\");\n\t\treturn unescapexml(s.slice(0, i)) + s.slice(i+9,j) + unescapexml(s.slice(j+3));\n\t};\n})();\n\nvar decregex=/[&<>'\"]/g, charegex = /[\\u0000-\\u0008\\u000b-\\u001f]/g;\nfunction escapexml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(charegex,function(s) { return \"_x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \"_\";});\n}\nfunction escapexmltag(text/*:string*/)/*:string*/{ return escapexml(text).replace(/ /g,\"_x0020_\"); }\n\nvar htmlcharegex = /[\\u0000-\\u001f]/g;\nfunction escapehtml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(/\\n/g, \"<br/>\").replace(htmlcharegex,function(s) { return \"&#x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \";\"; });\n}\n\nfunction escapexlml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(htmlcharegex,function(s) { return \"&#x\" + (s.charCodeAt(0).toString(16)).toUpperCase() + \";\"; });\n}\n\n/* TODO: handle codepages */\nvar xlml_fixstr/*:StringConv*/ = /*#__PURE__*/(function() {\n\tvar entregex = /&#(\\d+);/g;\n\tfunction entrepl($$/*:string*/,$1/*:string*/)/*:string*/ { return String.fromCharCode(parseInt($1,10)); }\n\treturn function xlml_fixstr(str/*:string*/)/*:string*/ { return str.replace(entregex,entrepl); };\n})();\nfunction xlml_unfixstr(str/*:string*/)/*:string*/ { return str.replace(/(\\r\\n|[\\r\\n])/g,\"\\&#10;\"); }\n\nfunction parsexmlbool(value/*:any*/)/*:boolean*/ {\n\tswitch(value) {\n\t\tcase 1: case true: case '1': case 'true': case 'TRUE': return true;\n\t\t/* case '0': case 'false': case 'FALSE':*/\n\t\tdefault: return false;\n\t}\n}\n\nfunction utf8reada(orig/*:string*/)/*:string*/ {\n\tvar out = \"\", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;\n\twhile (i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tif (c < 128) { out += String.fromCharCode(c); continue; }\n\t\td = orig.charCodeAt(i++);\n\t\tif (c>191 && c<224) { f = ((c & 31) << 6); f |= (d & 63); out += String.fromCharCode(f); continue; }\n\t\te = orig.charCodeAt(i++);\n\t\tif (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }\n\t\tf = orig.charCodeAt(i++);\n\t\tw = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;\n\t\tout += String.fromCharCode(0xD800 + ((w>>>10)&1023));\n\t\tout += String.fromCharCode(0xDC00 + (w&1023));\n\t}\n\treturn out;\n}\n\nfunction utf8readb(data) {\n\tvar out = new_raw_buf(2*data.length), w, i, j = 1, k = 0, ww=0, c;\n\tfor(i = 0; i < data.length; i+=j) {\n\t\tj = 1;\n\t\tif((c=data.charCodeAt(i)) < 128) w = c;\n\t\telse if(c < 224) { w = (c&31)*64+(data.charCodeAt(i+1)&63); j=2; }\n\t\telse if(c < 240) { w=(c&15)*4096+(data.charCodeAt(i+1)&63)*64+(data.charCodeAt(i+2)&63); j=3; }\n\t\telse { j = 4;\n\t\t\tw = (c & 7)*262144+(data.charCodeAt(i+1)&63)*4096+(data.charCodeAt(i+2)&63)*64+(data.charCodeAt(i+3)&63);\n\t\t\tw -= 65536; ww = 0xD800 + ((w>>>10)&1023); w = 0xDC00 + (w&1023);\n\t\t}\n\t\tif(ww !== 0) { out[k++] = ww&255; out[k++] = ww>>>8; ww = 0; }\n\t\tout[k++] = w%256; out[k++] = w>>>8;\n\t}\n\treturn out.slice(0,k).toString('ucs2');\n}\n\nfunction utf8readc(data) { return Buffer_from(data, 'binary').toString('utf8'); }\n\nvar utf8corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\nvar utf8read = has_buf && (/*#__PURE__*/utf8readc(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readc || /*#__PURE__*/utf8readb(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readb) || utf8reada;\n\nvar utf8write/*:StringConv*/ = has_buf ? function(data) { return Buffer_from(data, 'utf8').toString(\"binary\"); } : function(orig/*:string*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [], i = 0, c = 0, d = 0;\n\twhile(i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tswitch(true) {\n\t\t\tcase c < 128: out.push(String.fromCharCode(c)); break;\n\t\t\tcase c < 2048:\n\t\t\t\tout.push(String.fromCharCode(192 + (c >> 6)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t\t\tbreak;\n\t\t\tcase c >= 55296 && c < 57344:\n\t\t\t\tc -= 55296; d = orig.charCodeAt(i++) - 56320 + (c<<10);\n\t\t\t\tout.push(String.fromCharCode(240 + ((d >>18) & 7)));\n\t\t\t\tout.push(String.fromCharCode(144 + ((d >>12) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((d >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (d & 63)));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tout.push(String.fromCharCode(224 + (c >> 12)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((c >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t}\n\t}\n\treturn out.join(\"\");\n};\n\n// matches <foo>...</foo> extracts content\nvar matchtag = /*#__PURE__*/(function() {\n\tvar mtcache/*:{[k:string]:RegExp}*/ = ({}/*:any*/);\n\treturn function matchtag(f/*:string*/,g/*:?string*/)/*:RegExp*/ {\n\t\tvar t = f+\"|\"+(g||\"\");\n\t\tif(mtcache[t]) return mtcache[t];\n\t\treturn (mtcache[t] = new RegExp('<(?:\\\\w+:)?'+f+'(?: xml:space=\"preserve\")?(?:[^>]*)>([\\\\s\\\\S]*?)</(?:\\\\w+:)?'+f+'>',((g||\"\")/*:any*/)));\n\t};\n})();\n\nvar htmldecode/*:{(s:string):string}*/ = /*#__PURE__*/(function() {\n\tvar entities/*:Array<[RegExp, string]>*/ = [\n\t\t['nbsp', ' '], ['middot', '·'],\n\t\t['quot', '\"'], ['apos', \"'\"], ['gt',   '>'], ['lt',   '<'], ['amp',  '&']\n\t].map(function(x/*:[string, string]*/) { return [new RegExp('&' + x[0] + ';', \"ig\"), x[1]]; });\n\treturn function htmldecode(str/*:string*/)/*:string*/ {\n\t\tvar o = str\n\t\t\t\t// Remove new lines and spaces from start of content\n\t\t\t\t.replace(/^[\\t\\n\\r ]+/, \"\")\n\t\t\t\t// Remove new lines and spaces from end of content\n\t\t\t\t.replace(/[\\t\\n\\r ]+$/,\"\")\n\t\t\t\t// Added line which removes any white space characters after and before html tags\n\t\t\t\t.replace(/>\\s+/g,\">\").replace(/\\s+</g,\"<\")\n\t\t\t\t// Replace remaining new lines and spaces with space\n\t\t\t\t.replace(/[\\t\\n\\r ]+/g, \" \")\n\t\t\t\t// Replace <br> tags with new lines\n\t\t\t\t.replace(/<\\s*[bB][rR]\\s*\\/?>/g,\"\\n\")\n\t\t\t\t// Strip HTML elements\n\t\t\t\t.replace(/<[^>]*>/g,\"\");\n\t\tfor(var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\n\t\treturn o;\n\t};\n})();\n\nvar vtregex = /*#__PURE__*/(function(){ var vt_cache = {};\n\treturn function vt_regex(bt) {\n\t\tif(vt_cache[bt] !== undefined) return vt_cache[bt];\n\t\treturn (vt_cache[bt] = new RegExp(\"<(?:vt:)?\" + bt + \">([\\\\s\\\\S]*?)</(?:vt:)?\" + bt + \">\", 'g') );\n};})();\nvar vtvregex = /<\\/?(?:vt:)?variant>/g, vtmregex = /<(?:vt:)([^>]*)>([\\s\\S]*)</;\nfunction parseVector(data/*:string*/, opts)/*:Array<{v:string,t:string}>*/ {\n\tvar h = parsexmltag(data);\n\n\tvar matches/*:Array<string>*/ = data.match(vtregex(h.baseType))||[];\n\tvar res/*:Array<any>*/ = [];\n\tif(matches.length != h.size) {\n\t\tif(opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\n\t\treturn res;\n\t}\n\tmatches.forEach(function(x/*:string*/) {\n\t\tvar v = x.replace(vtvregex,\"\").match(vtmregex);\n\t\tif(v) res.push({v:utf8read(v[2]), t:v[1]});\n\t});\n\treturn res;\n}\n\nvar wtregex = /(^\\s|\\s$|\\n)/;\nfunction writetag(f/*:string*/,g/*:string*/)/*:string*/ { return '<' + f + (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>'; }\n\nfunction wxt_helper(h)/*:string*/ { return keys(h).map(function(k) { return \" \" + k + '=\"' + h[k] + '\"';}).join(\"\"); }\nfunction writextag(f/*:string*/,g/*:?string*/,h) { return '<' + f + ((h != null) ? wxt_helper(h) : \"\") + ((g != null) ? (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';}\n\nfunction write_w3cdtf(d/*:Date*/, t/*:?boolean*/)/*:string*/ { try { return d.toISOString().replace(/\\.\\d*/,\"\"); } catch(e) { if(t) throw e; } return \"\"; }\n\nfunction write_vt(s, xlsx/*:?boolean*/)/*:string*/ {\n\tswitch(typeof s) {\n\t\tcase 'string':\n\t\t\tvar o = writextag('vt:lpwstr', escapexml(s));\n\t\t\tif(xlsx) o = o.replace(/&quot;/g, \"_x0022_\");\n\t\t\treturn o;\n\t\tcase 'number': return writextag((s|0)==s?'vt:i4':'vt:r8', escapexml(String(s)));\n\t\tcase 'boolean': return writextag('vt:bool',s?'true':'false');\n\t}\n\tif(s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\n\tthrow new Error(\"Unable to serialize \" + s);\n}\n\nfunction xlml_normalize(d)/*:string*/ {\n\tif(has_buf &&/*::typeof Buffer !== \"undefined\" && d != null && d instanceof Buffer &&*/ Buffer.isBuffer(d)) return d.toString('utf8');\n\tif(typeof d === 'string') return d;\n\t/* duktape */\n\tif(typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\n\tthrow new Error(\"Bad input format: expected Buffer or string\");\n}\n/* UOS uses CJK in tags */\nvar xlmlregex = /<(\\/?)([^\\s?><!\\/:]*:|)([^\\s?<>:\\/]+)(?:[\\s?:\\/][^>]*)?>/mg;\n//var xlmlregex = /<(\\/?)([a-z0-9]*:|)(\\w+)[^>]*>/mg;\n\nvar XMLNS = ({\n\tCORE_PROPS: 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n\tCUST_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\",\n\tEXT_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\",\n\tCT: 'http://schemas.openxmlformats.org/package/2006/content-types',\n\tRELS: 'http://schemas.openxmlformats.org/package/2006/relationships',\n\tTCMNT: 'http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments',\n\t'dc': 'http://purl.org/dc/elements/1.1/',\n\t'dcterms': 'http://purl.org/dc/terms/',\n\t'dcmitype': 'http://purl.org/dc/dcmitype/',\n\t'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\n\t'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n\t'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\n\t'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n\t'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n\t'xsd': 'http://www.w3.org/2001/XMLSchema'\n}/*:any*/);\n\nvar XMLNS_main = [\n\t'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n\t'http://purl.oclc.org/ooxml/spreadsheetml/main',\n\t'http://schemas.microsoft.com/office/excel/2006/main',\n\t'http://schemas.microsoft.com/office/excel/2006/2'\n];\n\nvar XLMLNS = ({\n\t'o':    'urn:schemas-microsoft-com:office:office',\n\t'x':    'urn:schemas-microsoft-com:office:excel',\n\t'ss':   'urn:schemas-microsoft-com:office:spreadsheet',\n\t'dt':   'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\n\t'mv':   'http://macVmlSchemaUri',\n\t'v':    'urn:schemas-microsoft-com:vml',\n\t'html': 'http://www.w3.org/TR/REC-html40'\n}/*:any*/);\nfunction read_double_le(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ {\n\tvar s = 1 - 2 * (b[idx + 7] >>> 7);\n\tvar e = ((b[idx + 7] & 0x7f) << 4) + ((b[idx + 6] >>> 4) & 0x0f);\n\tvar m = (b[idx+6]&0x0f);\n\tfor(var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\n\tif(e == 0x7ff) return m == 0 ? (s * Infinity) : NaN;\n\tif(e == 0) e = -1022;\n\telse { e -= 1023; m += Math.pow(2,52); }\n\treturn s * Math.pow(2, e - 52) * m;\n}\n\nfunction write_double_le(b/*:RawBytes|CFBlob*/, v/*:number*/, idx/*:number*/) {\n\tvar bs = ((((v < 0) || (1/v == -Infinity)) ? 1 : 0) << 7), e = 0, m = 0;\n\tvar av = bs ? (-v) : v;\n\tif(!isFinite(av)) { e = 0x7ff; m = isNaN(v) ? 0x6969 : 0; }\n\telse if(av == 0) e = m = 0;\n\telse {\n\t\te = Math.floor(Math.log(av) / Math.LN2);\n\t\tm = av * Math.pow(2, 52 - e);\n\t\tif((e <= -1023) && (!isFinite(m) || (m < Math.pow(2,52)))) { e = -1022; }\n\t\telse { m -= Math.pow(2,52); e+=1023; }\n\t}\n\tfor(var i = 0; i <= 5; ++i, m/=256) b[idx + i] = m & 0xff;\n\tb[idx + 6] = ((e & 0x0f) << 4) | (m & 0xf);\n\tb[idx + 7] = (e >> 4) | bs;\n}\n\nvar ___toBuffer = function(bufs/*:Array<Array<RawBytes> >*/)/*:RawBytes*/ { var x=[],w=10240; for(var i=0;i<bufs[0].length;++i) if(bufs[0][i]) for(var j=0,L=bufs[0][i].length;j<L;j+=w) x.push.apply(x, bufs[0][i].slice(j,j+w)); return x; };\nvar __toBuffer = has_buf ? function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat(bufs[0].map(function(x) { return Buffer.isBuffer(x) ? x : Buffer_from(x); })) : ___toBuffer(bufs);} : ___toBuffer;\n\nvar ___utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join(\"\").replace(chr0,''); };\nvar __utf16le = has_buf ? function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___utf16le(b,s,e); return b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/; } : ___utf16le;\n\nvar ___hexlify = function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<s+l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2)); return ss.join(\"\"); };\nvar __hexlify = has_buf ? function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { return Buffer.isBuffer(b)/*:: && b instanceof Buffer*/ ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); } : ___hexlify;\n\nvar ___utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { var ss=[]; for(var i=s; i<e; i++) ss.push(String.fromCharCode(__readUInt8(b,i))); return ss.join(\"\"); };\nvar __utf8 = has_buf ? function utf8_b(b/*:RawBytes|CFBlob*/, s/*:number*/, e/*:number*/) { return (Buffer.isBuffer(b)/*:: && (b instanceof Buffer)*/) ? b.toString('utf8',s,e) : ___utf8(b,s,e); } : ___utf8;\n\nvar ___lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __lpstr = ___lpstr;\n\nvar ___cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __cpstr = ___cpstr;\n\nvar ___lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __lpwstr = ___lpwstr;\n\nvar ___lpp4 = function lpp4_(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf16le(b, i+4,i+4+len) : \"\";};\nvar __lpp4 = ___lpp4;\n\nvar ___8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len) : \"\";};\nvar __8lpp4 = ___8lpp4;\n\nvar ___double = function(b/*:RawBytes|CFBlob*/, idx/*:number*/) { return read_double_le(b, idx);};\nvar __double = ___double;\n\nvar is_buf = function is_buf_a(a) { return Array.isArray(a) || (typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array); };\n\nif(has_buf/*:: && typeof Buffer !== 'undefined'*/) {\n\t__lpstr = function lpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__cpstr = function cpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___cpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__lpwstr = function lpwstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpwstr(b, i); var len = 2*b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len-1);};\n\t__lpp4 = function lpp4_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len);};\n\t__8lpp4 = function lpp4_8b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___8lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf8',i+4,i+4+len);};\n\t__double = function double_(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(Buffer.isBuffer(b)/*::&& b instanceof Buffer*/) return b.readDoubleLE(i); return ___double(b,i); };\n\tis_buf = function is_buf_b(a) { return Buffer.isBuffer(a) || Array.isArray(a) || (typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array); };\n}\n\n/* from js-xls */\nfunction cpdoit() {\n\t__utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { return $cptable.utils.decode(1200, b.slice(s,e)).replace(chr0, ''); };\n\t__utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { return $cptable.utils.decode(65001, b.slice(s,e)); };\n\t__lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(current_ansi, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(current_codepage, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(1200, b.slice(i+4,i+4+len-1)) : \"\";};\n\t__lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(1200, b.slice(i+4,i+4+len)) : \"\";};\n\t__8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(65001, b.slice(i+4,i+4+len)) : \"\";};\n}\nif(typeof $cptable !== 'undefined') cpdoit();\n\nvar __readUInt8 = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx]; };\nvar __readUInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+1]*(1<<8))+b[idx]; };\nvar __readInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { var u = (b[idx+1]*(1<<8))+b[idx]; return (u < 0x8000) ? u : ((0xffff - u + 1) * -1); };\nvar __readUInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\nvar __readInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+3]<<24)|(b[idx+2]<<16)|(b[idx+1]<<8)|b[idx]; };\nvar __readInt32BE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx]<<24)|(b[idx+1]<<16)|(b[idx+2]<<8)|b[idx+3]; };\n\nfunction ReadShift(size/*:number*/, t/*:?string*/)/*:number|string*/ {\n\tvar o=\"\", oI/*:: :number = 0*/, oR, oo=[], w, vv, i, loc;\n\tswitch(t) {\n\t\tcase 'dbcs':\n\t\t\tloc = this.l;\n\t\t\tif(has_buf && Buffer.isBuffer(this)) o = this.slice(this.l, this.l+2*size).toString(\"utf16le\");\n\t\t\telse for(i = 0; i < size; ++i) { o+=String.fromCharCode(__readUInt16LE(this, loc)); loc+=2; }\n\t\t\tsize *= 2;\n\t\t\tbreak;\n\n\t\tcase 'utf8': o = __utf8(this, this.l, this.l + size); break;\n\t\tcase 'utf16le': size *= 2; o = __utf16le(this, this.l, this.l + size); break;\n\n\t\tcase 'wstr':\n\t\t\tif(typeof $cptable !== 'undefined') o = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l+2*size));\n\t\t\telse return ReadShift.call(this, size, 'dbcs');\n\t\t\tsize = 2 * size; break;\n\n\t\t/* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\n\t\tcase 'lpstr-ansi': o = __lpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\tcase 'lpstr-cp': o = __cpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\n\t\tcase 'lpwstr': o = __lpwstr(this, this.l); size = 4 + 2 * __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\n\t\tcase 'lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __lpp4(this, this.l); if(size & 0x02) size += 2; break;\n\t\t/* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\n\t\tcase '8lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __8lpp4(this, this.l); if(size & 0x03) size += 4 - (size & 0x03); break;\n\n\t\tcase 'cstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt8(this, this.l + size++))!==0) oo.push(_getchar(w));\n\t\t\to = oo.join(\"\"); break;\n\t\tcase '_wstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}\n\t\t\tsize+=2; o = oo.join(\"\"); break;\n\n\t\t/* sbcs and dbcs support continue records in the SST way TODO codepages */\n\t\tcase 'dbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i < size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt16LE(this, loc)));\n\t\t\t\tloc+=2;\n\t\t\t} o = oo.join(\"\"); size *= 2; break;\n\n\t\tcase 'cpstr':\n\t\t\tif(typeof $cptable !== 'undefined') {\n\t\t\t\to = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t/* falls through */\n\t\tcase 'sbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i != size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt8(this, loc)));\n\t\t\t\tloc+=1;\n\t\t\t} o = oo.join(\"\"); break;\n\n\t\tdefault:\n\tswitch(size) {\n\t\tcase 1: oI = __readUInt8(this, this.l); this.l++; return oI;\n\t\tcase 2: oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l); this.l += 2; return oI;\n\t\tcase 4: case -4:\n\t\t\tif(t === 'i' || ((this[this.l+3] & 0x80)===0)) { oI = ((size > 0) ? __readInt32LE : __readInt32BE)(this, this.l); this.l += 4; return oI; }\n\t\t\telse { oR = __readUInt32LE(this, this.l); this.l += 4; } return oR;\n\t\tcase 8: case -8:\n\t\t\tif(t === 'f') {\n\t\t\t\tif(size == 8) oR = __double(this, this.l);\n\t\t\t\telse oR = __double([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]], 0);\n\t\t\t\tthis.l += 8; return oR;\n\t\t\t} else size = 8;\n\t\t/* falls through */\n\t\tcase 16: o = __hexlify(this, this.l, size); break;\n\t}}\n\tthis.l+=size; return o;\n}\n\nvar __writeUInt32LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };\nvar __writeInt32LE  = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };\nvar __writeUInt16LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); };\n\nfunction WriteShift(t/*:number*/, val/*:string|number*/, f/*:?string*/)/*:any*/ {\n\tvar size = 0, i = 0;\n\tif(f === 'dbcs') {\n\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\tfor(i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\n\t\tsize = 2 * val.length;\n\t} else if(f === 'sbcs') {\n\t\tif(typeof $cptable !== 'undefined' && current_ansi == 874) {\n\t\t\t/* TODO: use tables directly, don't encode */\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tfor(i = 0; i != val.length; ++i) {\n\t\t\t\tvar cppayload = $cptable.utils.encode(current_ansi, val.charAt(i));\n\t\t\t\tthis[this.l + i] = cppayload[0];\n\t\t\t}\n\t\t} else {\n\t\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\t\tval = val.replace(/[^\\x00-\\x7F]/g, \"_\");\n\t\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\t\tfor(i = 0; i != val.length; ++i) this[this.l + i] = (val.charCodeAt(i) & 0xFF);\n\t\t}\n\t\tsize = val.length;\n\t} else if(f === 'hex') {\n\t\tfor(; i < t; ++i) {\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tthis[this.l++] = (parseInt(val.slice(2*i, 2*i+2), 16)||0);\n\t\t} return this;\n\t} else if(f === 'utf16le') {\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tvar end/*:number*/ = Math.min(this.l + t, this.length);\n\t\t\tfor(i = 0; i < Math.min(val.length, t); ++i) {\n\t\t\t\tvar cc = val.charCodeAt(i);\n\t\t\t\tthis[this.l++] = (cc & 0xff);\n\t\t\t\tthis[this.l++] = (cc >> 8);\n\t\t\t}\n\t\t\twhile(this.l < end) this[this.l++] = 0;\n\t\t\treturn this;\n\t} else /*:: if(typeof val === 'number') */ switch(t) {\n\t\tcase  1: size = 1; this[this.l] = val&0xFF; break;\n\t\tcase  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;\n\t\tcase  3: size = 3; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; val >>>= 8; this[this.l+2] = val&0xFF; break;\n\t\tcase  4: size = 4; __writeUInt32LE(this, val, this.l); break;\n\t\tcase  8: size = 8; if(f === 'f') { write_double_le(this, val, this.l); break; }\n\t\t/* falls through */\n\t\tcase 16: break;\n\t\tcase -4: size = 4; __writeInt32LE(this, val, this.l); break;\n\t}\n\tthis.l += size; return this;\n}\n\nfunction CheckField(hexstr/*:string*/, fld/*:string*/)/*:void*/ {\n\tvar m = __hexlify(this,this.l,hexstr.length>>1);\n\tif(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n\tthis.l += hexstr.length>>1;\n}\n\nfunction prep_blob(blob, pos/*:number*/)/*:void*/ {\n\tblob.l = pos;\n\tblob.read_shift = /*::(*/ReadShift/*:: :any)*/;\n\tblob.chk = CheckField;\n\tblob.write_shift = WriteShift;\n}\n\nfunction parsenoop(blob, length/*:: :number, opts?:any */) { blob.l += length; }\n\nfunction new_buf(sz/*:number*/)/*:Block*/ {\n\tvar o = new_raw_buf(sz);\n\tprep_blob(o, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.1.4 Record */\nfunction recordhopper(data, cb/*:RecordHopperCB*/, opts/*:?any*/) {\n\tif(!data) return;\n\tvar tmpbyte, cntbyte, length;\n\tprep_blob(data, data.l || 0);\n\tvar L = data.length, RT = 0, tgt = 0;\n\twhile(data.l < L) {\n\t\tRT = data.read_shift(1);\n\t\tif(RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F)<<7);\n\t\tvar R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\n\t\ttmpbyte = data.read_shift(1);\n\t\tlength = tmpbyte & 0x7F;\n\t\tfor(cntbyte = 1; cntbyte <4 && (tmpbyte & 0x80); ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F)<<(7*cntbyte);\n\t\ttgt = data.l + length;\n\t\tvar d = R.f && R.f(data, length, opts);\n\t\tdata.l = tgt;\n\t\tif(cb(d, R, RT)) return;\n\t}\n}\n\n/* control buffer usage for fixed-length buffers */\nfunction buf_array()/*:BufArray*/ {\n\tvar bufs/*:Array<Block>*/ = [], blksz = has_buf ? 256 : 2048;\n\tvar newblk = function ba_newblk(sz/*:number*/)/*:Block*/ {\n\t\tvar o/*:Block*/ = (new_buf(sz)/*:any*/);\n\t\tprep_blob(o, 0);\n\t\treturn o;\n\t};\n\n\tvar curbuf/*:Block*/ = newblk(blksz);\n\n\tvar endbuf = function ba_endbuf() {\n\t\tif(!curbuf) return;\n\t\tif(curbuf.length > curbuf.l) { curbuf = curbuf.slice(0, curbuf.l); curbuf.l = curbuf.length; }\n\t\tif(curbuf.length > 0) bufs.push(curbuf);\n\t\tcurbuf = null;\n\t};\n\n\tvar next = function ba_next(sz/*:number*/)/*:Block*/ {\n\t\tif(curbuf && (sz < (curbuf.length - curbuf.l))) return curbuf;\n\t\tendbuf();\n\t\treturn (curbuf = newblk(Math.max(sz+1, blksz)));\n\t};\n\n\tvar end = function ba_end() {\n\t\tendbuf();\n\t\treturn bconcat(bufs);\n\t};\n\n\tvar push = function ba_push(buf) { endbuf(); curbuf = buf; if(curbuf.l == null) curbuf.l = curbuf.length; next(blksz); };\n\n\treturn ({ next:next, push:push, end:end, _bufs:bufs }/*:any*/);\n}\n\nfunction write_record(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/) {\n\tvar t/*:number*/ = +type, l;\n\tif(isNaN(t)) return; // TODO: throw something here?\n\tif(!length) length = XLSBRecordEnum[t].p || (payload||[]).length || 0;\n\tl = 1 + (t >= 0x80 ? 1 : 0) + 1/* + length*/;\n\tif(length >= 0x80) ++l; if(length >= 0x4000) ++l; if(length >= 0x200000) ++l;\n\tvar o = ba.next(l);\n\tif(t <= 0x7F) o.write_shift(1, t);\n\telse {\n\t\to.write_shift(1, (t & 0x7F) + 0x80);\n\t\to.write_shift(1, (t >> 7));\n\t}\n\tfor(var i = 0; i != 4; ++i) {\n\t\tif(length >= 0x80) { o.write_shift(1, (length & 0x7F)+0x80); length >>= 7; }\n\t\telse { o.write_shift(1, length); break; }\n\t}\n\tif(/*:: length != null &&*/length > 0 && is_buf(payload)) ba.push(payload);\n}\n/* XLS ranges enforced */\nfunction shift_cell_xls(cell/*:CellAddress*/, tgt/*:any*/, opts/*:?any*/)/*:CellAddress*/ {\n\tvar out = dup(cell);\n\tif(tgt.s) {\n\t\tif(out.cRel) out.c += tgt.s.c;\n\t\tif(out.rRel) out.r += tgt.s.r;\n\t} else {\n\t\tif(out.cRel) out.c += tgt.c;\n\t\tif(out.rRel) out.r += tgt.r;\n\t}\n\tif(!opts || opts.biff < 12) {\n\t\twhile(out.c >= 0x100) out.c -= 0x100;\n\t\twhile(out.r >= 0x10000) out.r -= 0x10000;\n\t}\n\treturn out;\n}\n\nfunction shift_range_xls(cell, range, opts) {\n\tvar out = dup(cell);\n\tout.s = shift_cell_xls(out.s, range.s, opts);\n\tout.e = shift_cell_xls(out.e, range.s, opts);\n\treturn out;\n}\n\nfunction encode_cell_xls(c/*:CellAddress*/, biff/*:number*/)/*:string*/ {\n\tif(c.cRel && c.c < 0) { c = dup(c); while(c.c < 0) c.c += (biff > 8) ? 0x4000 : 0x100; }\n\tif(c.rRel && c.r < 0) { c = dup(c); while(c.r < 0) c.r += (biff > 8) ? 0x100000 : ((biff > 5) ? 0x10000 : 0x4000); }\n\tvar s = encode_cell(c);\n\tif(!c.cRel && c.cRel != null) s = fix_col(s);\n\tif(!c.rRel && c.rRel != null) s = fix_row(s);\n\treturn s;\n}\n\nfunction encode_range_xls(r, opts)/*:string*/ {\n\tif(r.s.r == 0 && !r.s.rRel) {\n\t\tif(r.e.r == (opts.biff >= 12 ? 0xFFFFF : (opts.biff >= 8 ? 0x10000 : 0x4000)) && !r.e.rRel) {\n\t\t\treturn (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\n\t\t}\n\t}\n\tif(r.s.c == 0 && !r.s.cRel) {\n\t\tif(r.e.c == (opts.biff >= 12 ? 0x3FFF : 0xFF) && !r.e.cRel) {\n\t\t\treturn (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\n\t\t}\n\t}\n\treturn encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\n}\nfunction decode_row(rowstr/*:string*/)/*:number*/ { return parseInt(unfix_row(rowstr),10) - 1; }\nfunction encode_row(row/*:number*/)/*:string*/ { return \"\" + (row + 1); }\nfunction fix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/([A-Z]|^)(\\d+)$/,\"$1$$$2\"); }\nfunction unfix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/\\$(\\d+)$/,\"$1\"); }\n\nfunction decode_col(colstr/*:string*/)/*:number*/ { var c = unfix_col(colstr), d = 0, i = 0; for(; i !== c.length; ++i) d = 26*d + c.charCodeAt(i) - 64; return d - 1; }\nfunction encode_col(col/*:number*/)/*:string*/ { if(col < 0) throw new Error(\"invalid column \" + col); var s=\"\"; for(++col; col; col=Math.floor((col-1)/26)) s = String.fromCharCode(((col-1)%26) + 65) + s; return s; }\nfunction fix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^([A-Z])/,\"$$$1\"); }\nfunction unfix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^\\$([A-Z])/,\"$1\"); }\n\nfunction split_cell(cstr/*:string*/)/*:Array<string>*/ { return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/,\"$1,$2\").split(\",\"); }\n//function decode_cell(cstr/*:string*/)/*:CellAddress*/ { var splt = split_cell(cstr); return { c:decode_col(splt[0]), r:decode_row(splt[1]) }; }\nfunction decode_cell(cstr/*:string*/)/*:CellAddress*/ {\n\tvar R = 0, C = 0;\n\tfor(var i = 0; i < cstr.length; ++i) {\n\t\tvar cc = cstr.charCodeAt(i);\n\t\tif(cc >= 48 && cc <= 57) R = 10 * R + (cc - 48);\n\t\telse if(cc >= 65 && cc <= 90) C = 26 * C + (cc - 64);\n\t}\n\treturn { c: C - 1, r:R - 1 };\n}\n//function encode_cell(cell/*:CellAddress*/)/*:string*/ { return encode_col(cell.c) + encode_row(cell.r); }\nfunction encode_cell(cell/*:CellAddress*/)/*:string*/ {\n\tvar col = cell.c + 1;\n\tvar s=\"\";\n\tfor(; col; col=((col-1)/26)|0) s = String.fromCharCode(((col-1)%26) + 65) + s;\n\treturn s + (cell.r + 1);\n}\nfunction decode_range(range/*:string*/)/*:Range*/ {\n\tvar idx = range.indexOf(\":\");\n\tif(idx == -1) return { s: decode_cell(range), e: decode_cell(range) };\n\treturn { s: decode_cell(range.slice(0, idx)), e: decode_cell(range.slice(idx + 1)) };\n}\n/*# if only one arg, it is assumed to be a Range.  If 2 args, both are cell addresses */\nfunction encode_range(cs/*:CellAddrSpec|Range*/,ce/*:?CellAddrSpec*/)/*:string*/ {\n\tif(typeof ce === 'undefined' || typeof ce === 'number') {\n/*:: if(!(cs instanceof Range)) throw \"unreachable\"; */\n\t\treturn encode_range(cs.s, cs.e);\n\t}\n/*:: if((cs instanceof Range)) throw \"unreachable\"; */\n\tif(typeof cs !== 'string') cs = encode_cell((cs/*:any*/));\n\tif(typeof ce !== 'string') ce = encode_cell((ce/*:any*/));\n/*:: if(typeof cs !== 'string') throw \"unreachable\"; */\n/*:: if(typeof ce !== 'string') throw \"unreachable\"; */\n\treturn cs == ce ? cs : cs + \":\" + ce;\n}\n\nfunction safe_decode_range(range/*:string*/)/*:Range*/ {\n\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\tvar idx = 0, i = 0, cc = 0;\n\tvar len = range.length;\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.s.c = --idx;\n\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.s.r = --idx;\n\n\tif(i === len || cc != 10) { o.e.c=o.s.c; o.e.r=o.s.r; return o; }\n\t++i;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.e.c = --idx;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.e.r = --idx;\n\treturn o;\n}\n\nfunction safe_format_cell(cell/*:Cell*/, v/*:any*/) {\n\tvar q = (cell.t == 'd' && v instanceof Date);\n\tif(cell.z != null) try { return (cell.w = SSF_format(cell.z, q ? datenum(v) : v)); } catch(e) { }\n\ttry { return (cell.w = SSF_format((cell.XF||{}).numFmtId||(q ? 14 : 0),  q ? datenum(v) : v)); } catch(e) { return ''+v; }\n}\n\nfunction format_cell(cell/*:Cell*/, v/*:any*/, o/*:any*/) {\n\tif(cell == null || cell.t == null || cell.t == 'z') return \"\";\n\tif(cell.w !== undefined) return cell.w;\n\tif(cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\n\tif(cell.t == \"e\") return BErr[cell.v] || cell.v;\n\tif(v == undefined) return safe_format_cell(cell, cell.v);\n\treturn safe_format_cell(cell, v);\n}\n\nfunction sheet_to_workbook(sheet/*:Worksheet*/, opts)/*:Workbook*/ {\n\tvar n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n\tvar sheets = {}; sheets[n] = sheet;\n\treturn { SheetNames: [n], Sheets: sheets };\n}\n\nfunction sheet_add_aoa(_ws/*:?Worksheet*/, data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tvar dense = _ws ? Array.isArray(_ws) : o.dense;\n\tif(DENSE != null && dense == null) dense = DENSE;\n\tvar ws/*:Worksheet*/ = _ws || (dense ? ([]/*:any*/) : ({}/*:any*/));\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t\tif(!ws[\"!ref\"]) ws[\"!ref\"] = \"A1:A1\";\n\t}\n\tvar range/*:Range*/ = ({s: {c:10000000, r:10000000}, e: {c:0, r:0}}/*:any*/);\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.s.c = _range.s.c;\n\t\trange.s.r = _range.s.r;\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) range.e.r = _R = _range.e.r + 1;\n\t}\n\tfor(var R = 0; R != data.length; ++R) {\n\t\tif(!data[R]) continue;\n\t\tif(!Array.isArray(data[R])) throw new Error(\"aoa_to_sheet expects an array of arrays\");\n\t\tfor(var C = 0; C != data[R].length; ++C) {\n\t\t\tif(typeof data[R][C] === 'undefined') continue;\n\t\t\tvar cell/*:Cell*/ = ({v: data[R][C] }/*:any*/);\n\t\t\tvar __R = _R + R, __C = _C + C;\n\t\t\tif(range.s.r > __R) range.s.r = __R;\n\t\t\tif(range.s.c > __C) range.s.c = __C;\n\t\t\tif(range.e.r < __R) range.e.r = __R;\n\t\t\tif(range.e.c < __C) range.e.c = __C;\n\t\t\tif(data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];\n\t\t\telse {\n\t\t\t\tif(Array.isArray(cell.v)) { cell.f = data[R][C][1]; cell.v = cell.v[0]; }\n\t\t\t\tif(cell.v === null) {\n\t\t\t\t\tif(cell.f) cell.t = 'n';\n\t\t\t\t\telse if(o.nullError) { cell.t = 'e'; cell.v = 0; }\n\t\t\t\t\telse if(!o.sheetStubs) continue;\n\t\t\t\t\telse cell.t = 'z';\n\t\t\t\t}\n\t\t\t\telse if(typeof cell.v === 'number') cell.t = 'n';\n\t\t\t\telse if(typeof cell.v === 'boolean') cell.t = 'b';\n\t\t\t\telse if(cell.v instanceof Date) {\n\t\t\t\t\tcell.z = o.dateNF || table_fmt[14];\n\t\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.w = SSF_format(cell.z, datenum(cell.v)); }\n\t\t\t\t\telse { cell.t = 'n'; cell.v = datenum(cell.v); cell.w = SSF_format(cell.z, cell.v); }\n\t\t\t\t}\n\t\t\t\telse cell.t = 's';\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\tif(!ws[__R]) ws[__R] = [];\n\t\t\t\tif(ws[__R][__C] && ws[__R][__C].z) cell.z = ws[__R][__C].z;\n\t\t\t\tws[__R][__C] = cell;\n\t\t\t} else {\n\t\t\t\tvar cell_ref = encode_cell(({c:__C,r:__R}/*:any*/));\n\t\t\t\tif(ws[cell_ref] && ws[cell_ref].z) cell.z = ws[cell_ref].z;\n\t\t\t\tws[cell_ref] = cell;\n\t\t\t}\n\t\t}\n\t}\n\tif(range.s.c < 10000000) ws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction aoa_to_sheet(data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ { return sheet_add_aoa(null, data, opts); }\n\nfunction parse_Int32LE(data) {\n\treturn data.read_shift(4, 'i');\n}\nfunction write_UInt32LE(x/*:number*/, o) {\n\tif (!o) o = new_buf(4);\n\to.write_shift(4, x);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.168 */\nfunction parse_XLWideString(data/*::, length*/)/*:string*/ {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLWideString(data/*:string*/, o) {\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(4 + 2 * data.length); }\n\to.write_shift(4, data.length);\n\tif (data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.91 */\n//function parse_LPWideString(data/*::, length*/)/*:string*/ {\n//\tvar cchCharacters = data.read_shift(2);\n//\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, \"utf16le\");\n//}\n\n/* [MS-XLSB] 2.5.143 */\nfunction parse_StrRun(data) {\n\treturn { ich: data.read_shift(2), ifnt: data.read_shift(2) };\n}\nfunction write_StrRun(run, o) {\n\tif (!o) o = new_buf(4);\n\to.write_shift(2, run.ich || 0);\n\to.write_shift(2, run.ifnt || 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.121 */\nfunction parse_RichStr(data, length/*:number*/)/*:XLString*/ {\n\tvar start = data.l;\n\tvar flags = data.read_shift(1);\n\tvar str = parse_XLWideString(data);\n\tvar rgsStrRun = [];\n\tvar z = ({ t: str, h: str }/*:any*/);\n\tif ((flags & 1) !== 0) { /* fRichStr */\n\t\t/* TODO: formatted string */\n\t\tvar dwSizeStrRun = data.read_shift(4);\n\t\tfor (var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\n\t\tz.r = rgsStrRun;\n\t}\n\telse z.r = [{ ich: 0, ifnt: 0 }];\n\t//if((flags & 2) !== 0) { /* fExtStr */\n\t//\t/* TODO: phonetic string */\n\t//}\n\tdata.l = start + length;\n\treturn z;\n}\nfunction write_RichStr(str/*:XLString*/, o/*:?Block*/)/*:Block*/ {\n\t/* TODO: formatted string */\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(15 + 4 * str.t.length); }\n\to.write_shift(1, 0);\n\twrite_XLWideString(str.t, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\nvar parse_BrtCommentText = parse_RichStr;\nfunction write_BrtCommentText(str/*:XLString*/, o/*:?Block*/)/*:Block*/ {\n\t/* TODO: formatted string */\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(23 + 4 * str.t.length); }\n\to.write_shift(1, 1);\n\twrite_XLWideString(str.t, o);\n\to.write_shift(4, 1);\n\twrite_StrRun({ ich: 0, ifnt: 0 }, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.9 */\nfunction parse_XLSBCell(data)/*:any*/ {\n\tvar col = data.read_shift(4);\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) << 16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c: col, iStyleRef: iStyleRef };\n}\nfunction write_XLSBCell(cell/*:any*/, o/*:?Block*/) {\n\tif (o == null) o = new_buf(8);\n\to.write_shift(-4, cell.c);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n/* Short XLSB Cell does not include column */\nfunction parse_XLSBShortCell(data)/*:any*/ {\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) <<16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c:-1, iStyleRef: iStyleRef };\n}\nfunction write_XLSBShortCell(cell/*:any*/, o/*:?Block*/) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.21 */\nvar parse_XLSBCodeName = parse_XLWideString;\nvar write_XLSBCodeName = write_XLWideString;\n\n/* [MS-XLSB] 2.5.166 */\nfunction parse_XLNullableWideString(data/*::, length*/)/*:string*/ {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLNullableWideString(data/*:string*/, o) {\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(127); }\n\to.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\n\tif (data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.165 */\nvar parse_XLNameWideString = parse_XLWideString;\n//var write_XLNameWideString = write_XLWideString;\n\n/* [MS-XLSB] 2.5.114 */\nvar parse_RelID = parse_XLNullableWideString;\nvar write_RelID = write_XLNullableWideString;\n\n\n/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\nfunction parse_RkNumber(data)/*:number*/ {\n\tvar b = data.slice(data.l, data.l + 4);\n\tvar fX100 = (b[0] & 1), fInt = (b[0] & 2);\n\tdata.l += 4;\n\tvar RK = fInt === 0 ? __double([0, 0, 0, 0, (b[0] & 0xFC), b[1], b[2], b[3]], 0) : __readInt32LE(b, 0) >> 2;\n\treturn fX100 ? (RK / 100) : RK;\n}\nfunction write_RkNumber(data/*:number*/, o) {\n\tif (o == null) o = new_buf(4);\n\tvar fX100 = 0, fInt = 0, d100 = data * 100;\n\tif ((data == (data | 0)) && (data >= -(1 << 29)) && (data < (1 << 29))) { fInt = 1; }\n\telse if ((d100 == (d100 | 0)) && (d100 >= -(1 << 29)) && (d100 < (1 << 29))) { fInt = 1; fX100 = 1; }\n\tif (fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));\n\telse throw new Error(\"unsupported RkNumber \" + data); // TODO\n}\n\n\n/* [MS-XLSB] 2.5.117 RfX */\nfunction parse_RfX(data /*::, length*/)/*:Range*/ {\n\tvar cell/*:Range*/ = ({ s: {}, e: {} }/*:any*/);\n\tcell.s.r = data.read_shift(4);\n\tcell.e.r = data.read_shift(4);\n\tcell.s.c = data.read_shift(4);\n\tcell.e.c = data.read_shift(4);\n\treturn cell;\n}\nfunction write_RfX(r/*:Range*/, o) {\n\tif (!o) o = new_buf(16);\n\to.write_shift(4, r.s.r);\n\to.write_shift(4, r.e.r);\n\to.write_shift(4, r.s.c);\n\to.write_shift(4, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.153 UncheckedRfX */\nvar parse_UncheckedRfX = parse_RfX;\nvar write_UncheckedRfX = write_RfX;\n\n/* [MS-XLSB] 2.5.155 UncheckedSqRfX */\n//function parse_UncheckedSqRfX(data) {\n//\tvar cnt = data.read_shift(4);\n//\tvar out = [];\n//\tfor(var i = 0; i < cnt; ++i) {\n//\t\tvar rng = parse_UncheckedRfX(data);\n//\t\tout.push(encode_range(rng));\n//\t}\n//\treturn out.join(\",\");\n//}\n//function write_UncheckedSqRfX(sqrfx/*:string*/) {\n//\tvar parts = sqrfx.split(/\\s*,\\s*/);\n//\tvar o = new_buf(4); o.write_shift(4, parts.length);\n//\tvar out = [o];\n//\tparts.forEach(function(rng) {\n//\t\tout.push(write_UncheckedRfX(safe_decode_range(rng)));\n//\t});\n//\treturn bconcat(out);\n//}\n\n/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\n/* TODO: error checking, NaN and Infinity values are not valid Xnum */\nfunction parse_Xnum(data/*::, length*/) {\n\tif(data.length - data.l < 8) throw \"XLS Xnum Buffer underflow\";\n\treturn data.read_shift(8, 'f');\n}\nfunction write_Xnum(data, o) { return (o || new_buf(8)).write_shift(8, data, 'f'); }\n\n/* [MS-XLSB] 2.4.324 BrtColor */\nfunction parse_BrtColor(data/*::, length*/) {\n\tvar out = {};\n\tvar d = data.read_shift(1);\n\n\t//var fValidRGB = d & 1;\n\tvar xColorType = d >>> 1;\n\n\tvar index = data.read_shift(1);\n\tvar nTS = data.read_shift(2, 'i');\n\tvar bR = data.read_shift(1);\n\tvar bG = data.read_shift(1);\n\tvar bB = data.read_shift(1);\n\tdata.l++; //var bAlpha = data.read_shift(1);\n\n\tswitch (xColorType) {\n\t\tcase 0: out.auto = 1; break;\n\t\tcase 1:\n\t\t\tout.index = index;\n\t\t\tvar icv = XLSIcv[index];\n\t\t\t/* automatic pseudo index 81 */\n\t\t\tif (icv) out.rgb = rgb2Hex(icv);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/* if(!fValidRGB) throw new Error(\"invalid\"); */\n\t\t\tout.rgb = rgb2Hex([bR, bG, bB]);\n\t\t\tbreak;\n\t\tcase 3: out.theme = index; break;\n\t}\n\tif (nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\n\n\treturn out;\n}\nfunction write_BrtColor(color, o) {\n\tif (!o) o = new_buf(8);\n\tif (!color || color.auto) { o.write_shift(4, 0); o.write_shift(4, 0); return o; }\n\tif (color.index != null) {\n\t\to.write_shift(1, 0x02);\n\t\to.write_shift(1, color.index);\n\t} else if (color.theme != null) {\n\t\to.write_shift(1, 0x06);\n\t\to.write_shift(1, color.theme);\n\t} else {\n\t\to.write_shift(1, 0x05);\n\t\to.write_shift(1, 0);\n\t}\n\tvar nTS = color.tint || 0;\n\tif (nTS > 0) nTS *= 32767;\n\telse if (nTS < 0) nTS *= 32768;\n\to.write_shift(2, nTS);\n\tif (!color.rgb || color.theme != null) {\n\t\to.write_shift(2, 0);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(1, 0);\n\t} else {\n\t\tvar rgb = (color.rgb || 'FFFFFF');\n\t\tif (typeof rgb == 'number') rgb = (\"000000\" + rgb.toString(16)).slice(-6);\n\t\to.write_shift(1, parseInt(rgb.slice(0, 2), 16));\n\t\to.write_shift(1, parseInt(rgb.slice(2, 4), 16));\n\t\to.write_shift(1, parseInt(rgb.slice(4, 6), 16));\n\t\to.write_shift(1, 0xFF);\n\t}\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.52 */\nfunction parse_FontFlags(data/*::, length, opts*/) {\n\tvar d = data.read_shift(1);\n\tdata.l++;\n\tvar out = {\n\t\tfBold: d & 0x01,\n\t\tfItalic: d & 0x02,\n\t\tfUnderline: d & 0x04,\n\t\tfStrikeout: d & 0x08,\n\t\tfOutline: d & 0x10,\n\t\tfShadow: d & 0x20,\n\t\tfCondense: d & 0x40,\n\t\tfExtend: d & 0x80\n\t};\n\treturn out;\n}\nfunction write_FontFlags(font, o) {\n\tif (!o) o = new_buf(2);\n\tvar grbit =\n\t\t(font.italic ? 0x02 : 0) |\n\t\t(font.strike ? 0x08 : 0) |\n\t\t(font.outline ? 0x10 : 0) |\n\t\t(font.shadow ? 0x20 : 0) |\n\t\t(font.condense ? 0x40 : 0) |\n\t\t(font.extend ? 0x80 : 0);\n\to.write_shift(1, grbit);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-OLEDS] 2.3.1 and 2.3.2 */\nfunction parse_ClipboardFormatOrString(o, w/*:number*/)/*:string*/ {\n\t// $FlowIgnore\n\tvar ClipFmt = { 2: \"BITMAP\", 3: \"METAFILEPICT\", 8: \"DIB\", 14: \"ENHMETAFILE\" };\n\tvar m/*:number*/ = o.read_shift(4);\n\tswitch (m) {\n\t\tcase 0x00000000: return \"\";\n\t\tcase 0xffffffff: case 0xfffffffe: return ClipFmt[o.read_shift(4)] || \"\";\n\t}\n\tif (m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\n\to.l -= 4;\n\treturn o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\n}\nfunction parse_ClipboardFormatOrAnsiString(o) { return parse_ClipboardFormatOrString(o, 1); }\nfunction parse_ClipboardFormatOrUnicodeString(o) { return parse_ClipboardFormatOrString(o, 2); }\n\n/* [MS-OLEPS] 2.2 PropertyType */\n// Note: some tree shakers cannot handle VT_VECTOR | $CONST, hence extra vars\n//var VT_EMPTY    = 0x0000;\n//var VT_NULL     = 0x0001;\nvar VT_I2       = 0x0002;\nvar VT_I4       = 0x0003;\n//var VT_R4       = 0x0004;\n//var VT_R8       = 0x0005;\n//var VT_CY       = 0x0006;\n//var VT_DATE     = 0x0007;\n//var VT_BSTR     = 0x0008;\n//var VT_ERROR    = 0x000A;\nvar VT_BOOL     = 0x000B;\nvar VT_VARIANT  = 0x000C;\n//var VT_DECIMAL  = 0x000E;\n//var VT_I1       = 0x0010;\n//var VT_UI1      = 0x0011;\n//var VT_UI2      = 0x0012;\nvar VT_UI4      = 0x0013;\n//var VT_I8       = 0x0014;\n//var VT_UI8      = 0x0015;\n//var VT_INT      = 0x0016;\n//var VT_UINT     = 0x0017;\nvar VT_LPSTR    = 0x001E;\n//var VT_LPWSTR   = 0x001F;\nvar VT_FILETIME = 0x0040;\nvar VT_BLOB     = 0x0041;\n//var VT_STREAM   = 0x0042;\n//var VT_STORAGE  = 0x0043;\n//var VT_STREAMED_Object  = 0x0044;\n//var VT_STORED_Object    = 0x0045;\n//var VT_BLOB_Object      = 0x0046;\nvar VT_CF       = 0x0047;\n//var VT_CLSID    = 0x0048;\n//var VT_VERSIONED_STREAM = 0x0049;\nvar VT_VECTOR   = 0x1000;\nvar VT_VECTOR_VARIANT = 0x100C;\nvar VT_VECTOR_LPSTR   = 0x101E;\n//var VT_ARRAY    = 0x2000;\n\nvar VT_STRING   = 0x0050; // 2.3.3.1.11 VtString\nvar VT_USTR     = 0x0051; // 2.3.3.1.12 VtUnalignedString\nvar VT_CUSTOM   = [VT_STRING, VT_USTR];\n\n/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\nvar DocSummaryPIDDSI = {\n\t/*::[*/0x01/*::]*/: { n: 'CodePage', t: VT_I2 },\n\t/*::[*/0x02/*::]*/: { n: 'Category', t: VT_STRING },\n\t/*::[*/0x03/*::]*/: { n: 'PresentationFormat', t: VT_STRING },\n\t/*::[*/0x04/*::]*/: { n: 'ByteCount', t: VT_I4 },\n\t/*::[*/0x05/*::]*/: { n: 'LineCount', t: VT_I4 },\n\t/*::[*/0x06/*::]*/: { n: 'ParagraphCount', t: VT_I4 },\n\t/*::[*/0x07/*::]*/: { n: 'SlideCount', t: VT_I4 },\n\t/*::[*/0x08/*::]*/: { n: 'NoteCount', t: VT_I4 },\n\t/*::[*/0x09/*::]*/: { n: 'HiddenCount', t: VT_I4 },\n\t/*::[*/0x0a/*::]*/: { n: 'MultimediaClipCount', t: VT_I4 },\n\t/*::[*/0x0b/*::]*/: { n: 'ScaleCrop', t: VT_BOOL },\n\t/*::[*/0x0c/*::]*/: { n: 'HeadingPairs', t: VT_VECTOR_VARIANT /* VT_VECTOR | VT_VARIANT */ },\n\t/*::[*/0x0d/*::]*/: { n: 'TitlesOfParts', t: VT_VECTOR_LPSTR /* VT_VECTOR | VT_LPSTR */ },\n\t/*::[*/0x0e/*::]*/: { n: 'Manager', t: VT_STRING },\n\t/*::[*/0x0f/*::]*/: { n: 'Company', t: VT_STRING },\n\t/*::[*/0x10/*::]*/: { n: 'LinksUpToDate', t: VT_BOOL },\n\t/*::[*/0x11/*::]*/: { n: 'CharacterCount', t: VT_I4 },\n\t/*::[*/0x13/*::]*/: { n: 'SharedDoc', t: VT_BOOL },\n\t/*::[*/0x16/*::]*/: { n: 'HyperlinksChanged', t: VT_BOOL },\n\t/*::[*/0x17/*::]*/: { n: 'AppVersion', t: VT_I4, p: 'version' },\n\t/*::[*/0x18/*::]*/: { n: 'DigSig', t: VT_BLOB },\n\t/*::[*/0x1A/*::]*/: { n: 'ContentType', t: VT_STRING },\n\t/*::[*/0x1B/*::]*/: { n: 'ContentStatus', t: VT_STRING },\n\t/*::[*/0x1C/*::]*/: { n: 'Language', t: VT_STRING },\n\t/*::[*/0x1D/*::]*/: { n: 'Version', t: VT_STRING },\n\t/*::[*/0xFF/*::]*/: {},\n\t/* [MS-OLEPS] 2.18 */\n\t/*::[*/0x80000000/*::]*/: { n: 'Locale', t: VT_UI4 },\n\t/*::[*/0x80000003/*::]*/: { n: 'Behavior', t: VT_UI4 },\n\t/*::[*/0x72627262/*::]*/: {}\n};\n\n/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\nvar SummaryPIDSI = {\n\t/*::[*/0x01/*::]*/: { n: 'CodePage', t: VT_I2 },\n\t/*::[*/0x02/*::]*/: { n: 'Title', t: VT_STRING },\n\t/*::[*/0x03/*::]*/: { n: 'Subject', t: VT_STRING },\n\t/*::[*/0x04/*::]*/: { n: 'Author', t: VT_STRING },\n\t/*::[*/0x05/*::]*/: { n: 'Keywords', t: VT_STRING },\n\t/*::[*/0x06/*::]*/: { n: 'Comments', t: VT_STRING },\n\t/*::[*/0x07/*::]*/: { n: 'Template', t: VT_STRING },\n\t/*::[*/0x08/*::]*/: { n: 'LastAuthor', t: VT_STRING },\n\t/*::[*/0x09/*::]*/: { n: 'RevNumber', t: VT_STRING },\n\t/*::[*/0x0A/*::]*/: { n: 'EditTime', t: VT_FILETIME },\n\t/*::[*/0x0B/*::]*/: { n: 'LastPrinted', t: VT_FILETIME },\n\t/*::[*/0x0C/*::]*/: { n: 'CreatedDate', t: VT_FILETIME },\n\t/*::[*/0x0D/*::]*/: { n: 'ModifiedDate', t: VT_FILETIME },\n\t/*::[*/0x0E/*::]*/: { n: 'PageCount', t: VT_I4 },\n\t/*::[*/0x0F/*::]*/: { n: 'WordCount', t: VT_I4 },\n\t/*::[*/0x10/*::]*/: { n: 'CharCount', t: VT_I4 },\n\t/*::[*/0x11/*::]*/: { n: 'Thumbnail', t: VT_CF },\n\t/*::[*/0x12/*::]*/: { n: 'Application', t: VT_STRING },\n\t/*::[*/0x13/*::]*/: { n: 'DocSecurity', t: VT_I4 },\n\t/*::[*/0xFF/*::]*/: {},\n\t/* [MS-OLEPS] 2.18 */\n\t/*::[*/0x80000000/*::]*/: { n: 'Locale', t: VT_UI4 },\n\t/*::[*/0x80000003/*::]*/: { n: 'Behavior', t: VT_UI4 },\n\t/*::[*/0x72627262/*::]*/: {}\n};\n\n/* [MS-XLS] 2.4.63 Country/Region codes */\nvar CountryEnum = {\n\t/*::[*/0x0001/*::]*/: \"US\", // United States\n\t/*::[*/0x0002/*::]*/: \"CA\", // Canada\n\t/*::[*/0x0003/*::]*/: \"\", // Latin America (except Brazil)\n\t/*::[*/0x0007/*::]*/: \"RU\", // Russia\n\t/*::[*/0x0014/*::]*/: \"EG\", // Egypt\n\t/*::[*/0x001E/*::]*/: \"GR\", // Greece\n\t/*::[*/0x001F/*::]*/: \"NL\", // Netherlands\n\t/*::[*/0x0020/*::]*/: \"BE\", // Belgium\n\t/*::[*/0x0021/*::]*/: \"FR\", // France\n\t/*::[*/0x0022/*::]*/: \"ES\", // Spain\n\t/*::[*/0x0024/*::]*/: \"HU\", // Hungary\n\t/*::[*/0x0027/*::]*/: \"IT\", // Italy\n\t/*::[*/0x0029/*::]*/: \"CH\", // Switzerland\n\t/*::[*/0x002B/*::]*/: \"AT\", // Austria\n\t/*::[*/0x002C/*::]*/: \"GB\", // United Kingdom\n\t/*::[*/0x002D/*::]*/: \"DK\", // Denmark\n\t/*::[*/0x002E/*::]*/: \"SE\", // Sweden\n\t/*::[*/0x002F/*::]*/: \"NO\", // Norway\n\t/*::[*/0x0030/*::]*/: \"PL\", // Poland\n\t/*::[*/0x0031/*::]*/: \"DE\", // Germany\n\t/*::[*/0x0034/*::]*/: \"MX\", // Mexico\n\t/*::[*/0x0037/*::]*/: \"BR\", // Brazil\n\t/*::[*/0x003d/*::]*/: \"AU\", // Australia\n\t/*::[*/0x0040/*::]*/: \"NZ\", // New Zealand\n\t/*::[*/0x0042/*::]*/: \"TH\", // Thailand\n\t/*::[*/0x0051/*::]*/: \"JP\", // Japan\n\t/*::[*/0x0052/*::]*/: \"KR\", // Korea\n\t/*::[*/0x0054/*::]*/: \"VN\", // Viet Nam\n\t/*::[*/0x0056/*::]*/: \"CN\", // China\n\t/*::[*/0x005A/*::]*/: \"TR\", // Turkey\n\t/*::[*/0x0069/*::]*/: \"JS\", // Ramastan\n\t/*::[*/0x00D5/*::]*/: \"DZ\", // Algeria\n\t/*::[*/0x00D8/*::]*/: \"MA\", // Morocco\n\t/*::[*/0x00DA/*::]*/: \"LY\", // Libya\n\t/*::[*/0x015F/*::]*/: \"PT\", // Portugal\n\t/*::[*/0x0162/*::]*/: \"IS\", // Iceland\n\t/*::[*/0x0166/*::]*/: \"FI\", // Finland\n\t/*::[*/0x01A4/*::]*/: \"CZ\", // Czech Republic\n\t/*::[*/0x0376/*::]*/: \"TW\", // Taiwan\n\t/*::[*/0x03C1/*::]*/: \"LB\", // Lebanon\n\t/*::[*/0x03C2/*::]*/: \"JO\", // Jordan\n\t/*::[*/0x03C3/*::]*/: \"SY\", // Syria\n\t/*::[*/0x03C4/*::]*/: \"IQ\", // Iraq\n\t/*::[*/0x03C5/*::]*/: \"KW\", // Kuwait\n\t/*::[*/0x03C6/*::]*/: \"SA\", // Saudi Arabia\n\t/*::[*/0x03CB/*::]*/: \"AE\", // United Arab Emirates\n\t/*::[*/0x03CC/*::]*/: \"IL\", // Israel\n\t/*::[*/0x03CE/*::]*/: \"QA\", // Qatar\n\t/*::[*/0x03D5/*::]*/: \"IR\", // Iran\n\t/*::[*/0xFFFF/*::]*/: \"US\"  // United States\n};\n\n/* [MS-XLS] 2.5.127 */\nvar XLSFillPattern = [\n\tnull,\n\t'solid',\n\t'mediumGray',\n\t'darkGray',\n\t'lightGray',\n\t'darkHorizontal',\n\t'darkVertical',\n\t'darkDown',\n\t'darkUp',\n\t'darkGrid',\n\t'darkTrellis',\n\t'lightHorizontal',\n\t'lightVertical',\n\t'lightDown',\n\t'lightUp',\n\t'lightGrid',\n\t'lightTrellis',\n\t'gray125',\n\t'gray0625'\n];\n\nfunction rgbify(arr/*:Array<number>*/)/*:Array<[number, number, number]>*/ { return arr.map(function(x) { return [(x>>16)&255,(x>>8)&255,x&255]; }); }\n\n/* [MS-XLS] 2.5.161 */\n/* [MS-XLSB] 2.5.75 Icv */\nvar _XLSIcv = /*#__PURE__*/ rgbify([\n\t/* Color Constants */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t/* Overridable Defaults */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t0x800000,\n\t0x008000,\n\t0x000080,\n\t0x808000,\n\t0x800080,\n\t0x008080,\n\t0xC0C0C0,\n\t0x808080,\n\t0x9999FF,\n\t0x993366,\n\t0xFFFFCC,\n\t0xCCFFFF,\n\t0x660066,\n\t0xFF8080,\n\t0x0066CC,\n\t0xCCCCFF,\n\n\t0x000080,\n\t0xFF00FF,\n\t0xFFFF00,\n\t0x00FFFF,\n\t0x800080,\n\t0x800000,\n\t0x008080,\n\t0x0000FF,\n\t0x00CCFF,\n\t0xCCFFFF,\n\t0xCCFFCC,\n\t0xFFFF99,\n\t0x99CCFF,\n\t0xFF99CC,\n\t0xCC99FF,\n\t0xFFCC99,\n\n\t0x3366FF,\n\t0x33CCCC,\n\t0x99CC00,\n\t0xFFCC00,\n\t0xFF9900,\n\t0xFF6600,\n\t0x666699,\n\t0x969696,\n\t0x003366,\n\t0x339966,\n\t0x003300,\n\t0x333300,\n\t0x993300,\n\t0x993366,\n\t0x333399,\n\t0x333333,\n\n\t/* Other entries to appease BIFF8/12 */\n\t0xFFFFFF, /* 0x40 icvForeground ?? */\n\t0x000000, /* 0x41 icvBackground ?? */\n\t0x000000, /* 0x42 icvFrame ?? */\n\t0x000000, /* 0x43 icv3D ?? */\n\t0x000000, /* 0x44 icv3DText ?? */\n\t0x000000, /* 0x45 icv3DHilite ?? */\n\t0x000000, /* 0x46 icv3DShadow ?? */\n\t0x000000, /* 0x47 icvHilite ?? */\n\t0x000000, /* 0x48 icvCtlText ?? */\n\t0x000000, /* 0x49 icvCtlScrl ?? */\n\t0x000000, /* 0x4A icvCtlInv ?? */\n\t0x000000, /* 0x4B icvCtlBody ?? */\n\t0x000000, /* 0x4C icvCtlFrame ?? */\n\t0x000000, /* 0x4D icvCtlFore ?? */\n\t0x000000, /* 0x4E icvCtlBack ?? */\n\t0x000000, /* 0x4F icvCtlNeutral */\n\t0x000000, /* 0x50 icvInfoBk ?? */\n\t0x000000 /* 0x51 icvInfoText ?? */\n]);\nvar XLSIcv = /*#__PURE__*/dup(_XLSIcv);\n\n/* [MS-XLSB] 2.5.97.2 */\nvar BErr = {\n\t/*::[*/0x00/*::]*/: \"#NULL!\",\n\t/*::[*/0x07/*::]*/: \"#DIV/0!\",\n\t/*::[*/0x0F/*::]*/: \"#VALUE!\",\n\t/*::[*/0x17/*::]*/: \"#REF!\",\n\t/*::[*/0x1D/*::]*/: \"#NAME?\",\n\t/*::[*/0x24/*::]*/: \"#NUM!\",\n\t/*::[*/0x2A/*::]*/: \"#N/A\",\n\t/*::[*/0x2B/*::]*/: \"#GETTING_DATA\",\n\t/*::[*/0xFF/*::]*/: \"#WTF?\"\n};\n//var RBErr = evert_num(BErr);\nvar RBErr = {\n\t\"#NULL!\":        0x00,\n\t\"#DIV/0!\":       0x07,\n\t\"#VALUE!\":       0x0F,\n\t\"#REF!\":         0x17,\n\t\"#NAME?\":        0x1D,\n\t\"#NUM!\":         0x24,\n\t\"#N/A\":          0x2A,\n\t\"#GETTING_DATA\": 0x2B,\n\t\"#WTF?\":         0xFF\n};\n\n/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\n/* 12.3 Part Summary <SpreadsheetML> */\n/* 14.2 Part Summary <DrawingML> */\n/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\nvar ct2type/*{[string]:string}*/ = ({\n\t/* Workbook */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\n\t\"application/vnd.ms-excel.sheet.macroEnabled.main+xml\": \"workbooks\",\n\t\"application/vnd.ms-excel.sheet.binary.macroEnabled.main\": \"workbooks\",\n\t\"application/vnd.ms-excel.addin.macroEnabled.main+xml\": \"workbooks\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": \"workbooks\",\n\n\t/* Worksheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": \"sheets\",\n\t\"application/vnd.ms-excel.worksheet\": \"sheets\",\n\t\"application/vnd.ms-excel.binIndexWs\": \"TODO\", /* Binary Index */\n\n\t/* Chartsheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": \"charts\",\n\t\"application/vnd.ms-excel.chartsheet\": \"charts\",\n\n\t/* Macrosheet */\n\t\"application/vnd.ms-excel.macrosheet+xml\": \"macros\",\n\t\"application/vnd.ms-excel.macrosheet\": \"macros\",\n\t\"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\n\t\"application/vnd.ms-excel.binIndexMs\": \"TODO\", /* Binary Index */\n\n\t/* Dialogsheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": \"dialogs\",\n\t\"application/vnd.ms-excel.dialogsheet\": \"dialogs\",\n\n\t/* Shared Strings */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\": \"strs\",\n\t\"application/vnd.ms-excel.sharedStrings\": \"strs\",\n\n\t/* Styles */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": \"styles\",\n\t\"application/vnd.ms-excel.styles\": \"styles\",\n\n\t/* File Properties */\n\t\"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\n\t\"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\n\t\"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\n\n\t/* Custom Data Properties */\n\t\"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\n\n\t/* Comments */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": \"comments\",\n\t\"application/vnd.ms-excel.comments\": \"comments\",\n\t\"application/vnd.ms-excel.threadedcomments+xml\": \"threadedcomments\",\n\t\"application/vnd.ms-excel.person+xml\": \"people\",\n\n\t/* Metadata (Stock/Geography and Dynamic Array) */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"metadata\",\n\t\"application/vnd.ms-excel.sheetMetadata\": \"metadata\",\n\n\t/* PivotTable */\n\t\"application/vnd.ms-excel.pivotTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\n\n\t/* Chart Objects */\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\n\n\t/* Chart Colors */\n\t\"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\n\n\t/* Chart Style */\n\t\"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\n\n\t/* Chart Advanced */\n\t\"application/vnd.ms-office.chartex+xml\": \"TODO\",\n\n\t/* Calculation Chain */\n\t\"application/vnd.ms-excel.calcChain\": \"calcchains\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\n\n\t/* Printer Settings */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\n\n\t/* ActiveX */\n\t\"application/vnd.ms-office.activeX\": \"TODO\",\n\t\"application/vnd.ms-office.activeX+xml\": \"TODO\",\n\n\t/* Custom Toolbars */\n\t\"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\n\n\t/* External Data Connections */\n\t\"application/vnd.ms-excel.connections\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\n\n\t/* External Links */\n\t\"application/vnd.ms-excel.externalLink\": \"links\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\n\n\t/* PivotCache */\n\t\"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\n\t\"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\n\n\t/* Query Table */\n\t\"application/vnd.ms-excel.queryTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\n\n\t/* Shared Workbook */\n\t\"application/vnd.ms-excel.userNames\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionLog\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\n\n\t/* Single Cell Table */\n\t\"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\n\n\t/* Slicer */\n\t\"application/vnd.ms-excel.slicer\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache\": \"TODO\",\n\t\"application/vnd.ms-excel.slicer+xml\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\n\n\t/* Sort Map */\n\t\"application/vnd.ms-excel.wsSortMap\": \"TODO\",\n\n\t/* Table */\n\t\"application/vnd.ms-excel.table\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\n\n\t/* Themes */\n\t\"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\n\n\t/* Theme Override */\n\t\"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\n\n\t/* Timeline */\n\t\"application/vnd.ms-excel.Timeline+xml\": \"TODO\", /* verify */\n\t\"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\", /* verify */\n\n\t/* VBA */\n\t\"application/vnd.ms-office.vbaProject\": \"vba\",\n\t\"application/vnd.ms-office.vbaProjectSignature\": \"TODO\",\n\n\t/* Volatile Dependencies */\n\t\"application/vnd.ms-office.volatileDependencies\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\n\n\t/* Control Properties */\n\t\"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\n\n\t/* Data Model */\n\t\"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\n\n\t/* Survey */\n\t\"application/vnd.ms-excel.Survey+xml\": \"TODO\",\n\n\t/* Drawing */\n\t\"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\n\n\t/* VML */\n\t\"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\n\n\t\"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\n\t\"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\n\n\t/* Image */\n\t\"image/png\": \"TODO\",\n\n\t\"sheet\": \"js\"\n}/*:any*/);\n\nvar CT_LIST = {\n\t\tworkbooks: {\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\n\t\t\txlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\n\t\t\txlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\n\t\t\txltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\n\t\t},\n\t\tstrs: { /* Shared Strings */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sharedStrings\"\n\t\t},\n\t\tcomments: { /* Comments */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.comments\"\n\t\t},\n\t\tsheets: { /* Worksheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.worksheet\"\n\t\t},\n\t\tcharts: { /* Chartsheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.chartsheet\"\n\t\t},\n\t\tdialogs: { /* Dialogsheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.dialogsheet\"\n\t\t},\n\t\tmacros: { /* Macrosheet (Excel 4.0 Macros) */\n\t\t\txlsx: \"application/vnd.ms-excel.macrosheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.macrosheet\"\n\t\t},\n\t\tmetadata: { /* Metadata (Stock/Geography and Dynamic Array) */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sheetMetadata\"\n\t\t},\n\t\tstyles: { /* Styles */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.styles\"\n\t\t}\n};\n\nfunction new_ct()/*:any*/ {\n\treturn ({\n\t\tworkbooks:[], sheets:[], charts:[], dialogs:[], macros:[],\n\t\trels:[], strs:[], comments:[], threadedcomments:[], links:[],\n\t\tcoreprops:[], extprops:[], custprops:[], themes:[], styles:[],\n\t\tcalcchains:[], vba: [], drawings: [], metadata: [], people:[],\n\t\tTODO:[], xmlns: \"\" }/*:any*/);\n}\n\nfunction parse_ct(data/*:?string*/) {\n\tvar ct = new_ct();\n\tif(!data || !data.match) return ct;\n\tvar ctext = {};\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0].replace(nsregex,\"<\")) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Types': ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/)||[\"\",\"\"])[1] ]; break;\n\t\t\tcase '<Default': ctext[y.Extension] = y.ContentType; break;\n\t\t\tcase '<Override':\n\t\t\t\tif(ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\n\t\t\t\tbreak;\n\t\t}\n\t});\n\tif(ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\n\tct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\n\tct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\n\tct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\n\tct.defaults = ctext;\n\tdelete ct.calcchains;\n\treturn ct;\n}\n\nfunction write_ct(ct, opts)/*:string*/ {\n\tvar type2ct/*{[string]:Array<string>}*/ = evert_arr(ct2type);\n\n\tvar o/*:Array<string>*/ = [], v;\n\to[o.length] = (XML_HEADER);\n\to[o.length] = writextag('Types', null, {\n\t\t'xmlns': XMLNS.CT,\n\t\t'xmlns:xsd': XMLNS.xsd,\n\t\t'xmlns:xsi': XMLNS.xsi\n\t});\n\n\to = o.concat([\n\t\t['xml', 'application/xml'],\n\t\t['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'],\n\t\t['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'],\n\t\t['data', 'application/vnd.openxmlformats-officedocument.model+data'],\n\t\t/* from test files */\n\t\t['bmp', 'image/bmp'],\n\t\t['png', 'image/png'],\n\t\t['gif', 'image/gif'],\n\t\t['emf', 'image/x-emf'],\n\t\t['wmf', 'image/x-wmf'],\n\t\t['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'],\n\t\t['tif', 'image/tiff'], ['tiff', 'image/tiff'],\n\t\t['pdf', 'application/pdf'],\n\t\t['rels', 'application/vnd.openxmlformats-package.relationships+xml']\n\t].map(function(x) {\n\t\treturn writextag('Default', null, {'Extension':x[0], 'ContentType': x[1]});\n\t}));\n\n\t/* only write first instance */\n\tvar f1 = function(w) {\n\t\tif(ct[w] && ct[w].length > 0) {\n\t\t\tv = ct[w][0];\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n\t\t\t}));\n\t\t}\n\t};\n\n\t/* book type-specific */\n\tvar f2 = function(w) {\n\t\t(ct[w]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n\t\t\t}));\n\t\t});\n\t};\n\n\t/* standard type */\n\tvar f3 = function(t) {\n\t\t(ct[t]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': type2ct[t][0]\n\t\t\t}));\n\t\t});\n\t};\n\n\tf1('workbooks');\n\tf2('sheets');\n\tf2('charts');\n\tf3('themes');\n\t['strs', 'styles'].forEach(f1);\n\t['coreprops', 'extprops', 'custprops'].forEach(f3);\n\tf3('vba');\n\tf3('comments');\n\tf3('threadedcomments');\n\tf3('drawings');\n\tf2('metadata');\n\tf3('people');\n\tif(o.length>2){ o[o.length] = ('</Types>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 9.3 Relationships */\nvar RELS = ({\n\tWB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tSHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tHLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n\tVML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\n\tXPATH: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath\",\n\tXMISS: \"http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing\",\n\tXLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink\",\n\tCXML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml\",\n\tCXMLP: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps\",\n\tCMNT: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\",\n\tCORE_PROPS: \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\n\tEXT_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties',\n\tCUST_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties',\n\tSST: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\",\n\tSTY: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\n\tTHEME: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\n\tCHART: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart\",\n\tCHARTEX: \"http://schemas.microsoft.com/office/2014/relationships/chartEx\",\n\tCS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\",\n\tWS: [\n\t\t\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\",\n\t\t\"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"\n\t],\n\tDS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\",\n\tMS: \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\",\n\tIMG: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\n\tDRAW: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\",\n\tXLMETA: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata\",\n\tTCMNT: \"http://schemas.microsoft.com/office/2017/10/relationships/threadedComment\",\n\tPEOPLE: \"http://schemas.microsoft.com/office/2017/10/relationships/person\",\n\tVBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\n}/*:any*/);\n\n\n/* 9.3.3 Representing Relationships */\nfunction get_rels_path(file/*:string*/)/*:string*/ {\n\tvar n = file.lastIndexOf(\"/\");\n\treturn file.slice(0,n+1) + '_rels/' + file.slice(n+1) + \".rels\";\n}\n\nfunction parse_rels(data/*:?string*/, currentFilePath/*:string*/) {\n\tvar rels = {\"!id\":{}};\n\tif (!data) return rels;\n\tif (currentFilePath.charAt(0) !== '/') {\n\t\tcurrentFilePath = '/'+currentFilePath;\n\t}\n\tvar hash = {};\n\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\t/* 9.3.2.2 OPC_Relationships */\n\t\tif (y[0] === '<Relationship') {\n\t\t\tvar rel = {}; rel.Type = y.Type; rel.Target = y.Target; rel.Id = y.Id; if(y.TargetMode) rel.TargetMode = y.TargetMode;\n\t\t\tvar canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\n\t\t\trels[canonictarget] = rel;\n\t\t\thash[y.Id] = rel;\n\t\t}\n\t});\n\trels[\"!id\"] = hash;\n\treturn rels;\n}\n\n\n/* TODO */\nfunction write_rels(rels)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('Relationships', null, {\n\t\t//'xmlns:ns0': XMLNS.RELS,\n\t\t'xmlns': XMLNS.RELS\n\t})];\n\tkeys(rels['!id']).forEach(function(rid) {\n\t\to[o.length] = (writextag('Relationship', null, rels['!id'][rid]));\n\t});\n\tif(o.length>2){ o[o.length] = ('</Relationships>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\nfunction add_rels(rels, rId/*:number*/, f, type, relobj, targetmode/*:?string*/)/*:number*/ {\n\tif(!relobj) relobj = {};\n\tif(!rels['!id']) rels['!id'] = {};\n\tif(!rels['!idx']) rels['!idx'] = 1;\n\tif(rId < 0) for(rId = rels['!idx']; rels['!id']['rId' + rId]; ++rId){/* empty */}\n\trels['!idx'] = rId + 1;\n\trelobj.Id = 'rId' + rId;\n\trelobj.Type = type;\n\trelobj.Target = f;\n\tif(targetmode) relobj.TargetMode = targetmode;\n\telse if([RELS.HLINK, RELS.XPATH, RELS.XMISS].indexOf(relobj.Type) > -1) relobj.TargetMode = \"External\";\n\tif(rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\n\trels['!id'][relobj.Id] = relobj;\n\trels[('/' + relobj.Target).replace(\"//\",\"/\")] = relobj;\n\treturn rId;\n}\n/* Open Document Format for Office Applications (OpenDocument) Version 1.2 */\n/* Part 3 Section 4 Manifest File */\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\nfunction parse_manifest(d, opts) {\n\tvar str = xlml_normalize(d);\n\tvar Rn;\n\tvar FEtag;\n\twhile((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\n\t\tcase 'manifest': break; // 4.2 <manifest:manifest>\n\t\tcase 'file-entry': // 4.3 <manifest:file-entry>\n\t\t\tFEtag = parsexmltag(Rn[0], false);\n\t\t\tif(FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\n\t\t\tbreak;\n\t\tcase 'encryption-data': // 4.4 <manifest:encryption-data>\n\t\tcase 'algorithm': // 4.5 <manifest:algorithm>\n\t\tcase 'start-key-generation': // 4.6 <manifest:start-key-generation>\n\t\tcase 'key-derivation': // 4.7 <manifest:key-derivation>\n\t\t\tthrow new Error(\"Unsupported ODS Encryption\");\n\t\tdefault: if(opts && opts.WTF) throw Rn;\n\t}\n}\n\nfunction write_manifest(manifest/*:Array<Array<string> >*/)/*:string*/ {\n\tvar o = [XML_HEADER];\n\to.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\n\to.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\n\tfor(var i = 0; i < manifest.length; ++i) o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\n\to.push('</manifest:manifest>');\n\treturn o.join(\"\");\n}\n\n/* Part 3 Section 6 Metadata Manifest File */\nfunction write_rdf_type(file/*:string*/, res/*:string*/, tag/*:?string*/) {\n\treturn [\n\t\t'  <rdf:Description rdf:about=\"' + file + '\">\\n',\n\t\t'    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + '#' + res + '\"/>\\n',\n\t\t'  </rdf:Description>\\n'\n\t].join(\"\");\n}\nfunction write_rdf_has(base/*:string*/, file/*:string*/) {\n\treturn [\n\t\t'  <rdf:Description rdf:about=\"' + base + '\">\\n',\n\t\t'    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n',\n\t\t'  </rdf:Description>\\n'\n\t].join(\"\");\n}\nfunction write_rdf(rdf) {\n\tvar o = [XML_HEADER];\n\to.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\n\tfor(var i = 0; i != rdf.length; ++i) {\n\t\to.push(write_rdf_type(rdf[i][0], rdf[i][1]));\n\t\to.push(write_rdf_has(\"\",rdf[i][0]));\n\t}\n\to.push(write_rdf_type(\"\",\"Document\", \"pkg\"));\n\to.push('</rdf:RDF>');\n\treturn o.join(\"\");\n}\n/* TODO: pull properties */\nfunction write_meta_ods(/*:: wb: Workbook, opts: any*/)/*:string*/ {\n\treturn '<office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>Sheet' + 'JS ' + XLSX.version + '</meta:generator></office:meta></office:document-meta>';\n}\n\n/* ECMA-376 Part II 11.1 Core Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar CORE_PROPS/*:Array<Array<string> >*/ = [\n\t[\"cp:category\", \"Category\"],\n\t[\"cp:contentStatus\", \"ContentStatus\"],\n\t[\"cp:keywords\", \"Keywords\"],\n\t[\"cp:lastModifiedBy\", \"LastAuthor\"],\n\t[\"cp:lastPrinted\", \"LastPrinted\"],\n\t[\"cp:revision\", \"RevNumber\"],\n\t[\"cp:version\", \"Version\"],\n\t[\"dc:creator\", \"Author\"],\n\t[\"dc:description\", \"Comments\"],\n\t[\"dc:identifier\", \"Identifier\"],\n\t[\"dc:language\", \"Language\"],\n\t[\"dc:subject\", \"Subject\"],\n\t[\"dc:title\", \"Title\"],\n\t[\"dcterms:created\", \"CreatedDate\", 'date'],\n\t[\"dcterms:modified\", \"ModifiedDate\", 'date']\n];\n\nvar CORE_PROPS_REGEX/*:Array<RegExp>*/ = /*#__PURE__*/(function() {\n\tvar r = new Array(CORE_PROPS.length);\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar g = \"(?:\"+ f[0].slice(0,f[0].indexOf(\":\")) +\":)\"+ f[0].slice(f[0].indexOf(\":\")+1);\n\t\tr[i] = new RegExp(\"<\" + g + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + g + \">\");\n\t}\n\treturn r;\n})();\n\nfunction parse_core_props(data) {\n\tvar p = {};\n\tdata = utf8read(data);\n\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i], cur = data.match(CORE_PROPS_REGEX[i]);\n\t\tif(cur != null && cur.length > 0) p[f[1]] = unescapexml(cur[1]);\n\t\tif(f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);\n\t}\n\n\treturn p;\n}\n\nfunction cp_doit(f, g, h, o, p) {\n\tif(p[f] != null || g == null || g === \"\") return;\n\tp[f] = g;\n\tg = escapexml(g);\n\to[o.length] = (h ? writextag(f,g,h) : writetag(f,g));\n}\n\nfunction write_core_props(cp, _opts) {\n\tvar opts = _opts || {};\n\tvar o = [XML_HEADER, writextag('cp:coreProperties', null, {\n\t\t//'xmlns': XMLNS.CORE_PROPS,\n\t\t'xmlns:cp': XMLNS.CORE_PROPS,\n\t\t'xmlns:dc': XMLNS.dc,\n\t\t'xmlns:dcterms': XMLNS.dcterms,\n\t\t'xmlns:dcmitype': XMLNS.dcmitype,\n\t\t'xmlns:xsi': XMLNS.xsi\n\t})], p = {};\n\tif(!cp && !opts.Props) return o.join(\"\");\n\n\tif(cp) {\n\t\tif(cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t\tif(cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t}\n\n\tfor(var i = 0; i != CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\n\t\tif(v === true) v = \"1\";\n\t\telse if(v === false) v = \"0\";\n\t\telse if(typeof v == \"number\") v = String(v);\n\t\tif(v != null) cp_doit(f[0], v, null, o, p);\n\t}\n\tif(o.length>2){ o[o.length] = ('</cp:coreProperties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.3 Extended File Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar EXT_PROPS/*:Array<Array<string> >*/ = [\n\t[\"Application\", \"Application\", \"string\"],\n\t[\"AppVersion\", \"AppVersion\", \"string\"],\n\t[\"Company\", \"Company\", \"string\"],\n\t[\"DocSecurity\", \"DocSecurity\", \"string\"],\n\t[\"Manager\", \"Manager\", \"string\"],\n\t[\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"],\n\t[\"SharedDoc\", \"SharedDoc\", \"bool\"],\n\t[\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"],\n\t[\"ScaleCrop\", \"ScaleCrop\", \"bool\"],\n\t[\"HeadingPairs\", \"HeadingPairs\", \"raw\"],\n\t[\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]\n];\n\nvar PseudoPropsPairs = [\n\t\"Worksheets\",  \"SheetNames\",\n\t\"NamedRanges\", \"DefinedNames\",\n\t\"Chartsheets\", \"ChartNames\"\n];\nfunction load_props_pairs(HP/*:string|Array<Array<any>>*/, TOP, props, opts) {\n\tvar v = [];\n\tif(typeof HP == \"string\") v = parseVector(HP, opts);\n\telse for(var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function(hp) { return {v:hp}; }));\n\tvar parts = (typeof TOP == \"string\") ? parseVector(TOP, opts).map(function (x) { return x.v; }) : TOP;\n\tvar idx = 0, len = 0;\n\tif(parts.length > 0) for(var i = 0; i !== v.length; i += 2) {\n\t\tlen = +(v[i+1].v);\n\t\tswitch(v[i].v) {\n\t\t\tcase \"Worksheets\":\n\t\t\tcase \"工作表\":\n\t\t\tcase \"Листы\":\n\t\t\tcase \"أوراق العمل\":\n\t\t\tcase \"ワークシート\":\n\t\t\tcase \"גליונות עבודה\":\n\t\t\tcase \"Arbeitsblätter\":\n\t\t\tcase \"Çalışma Sayfaları\":\n\t\t\tcase \"Feuilles de calcul\":\n\t\t\tcase \"Fogli di lavoro\":\n\t\t\tcase \"Folhas de cálculo\":\n\t\t\tcase \"Planilhas\":\n\t\t\tcase \"Regneark\":\n\t\t\tcase \"Hojas de cálculo\":\n\t\t\tcase \"Werkbladen\":\n\t\t\t\tprops.Worksheets = len;\n\t\t\t\tprops.SheetNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Named Ranges\":\n\t\t\tcase \"Rangos con nombre\":\n\t\t\tcase \"名前付き一覧\":\n\t\t\tcase \"Benannte Bereiche\":\n\t\t\tcase \"Navngivne områder\":\n\t\t\t\tprops.NamedRanges = len;\n\t\t\t\tprops.DefinedNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Charts\":\n\t\t\tcase \"Diagramme\":\n\t\t\t\tprops.Chartsheets = len;\n\t\t\t\tprops.ChartNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\t\t}\n\t\tidx += len;\n\t}\n}\n\nfunction parse_ext_props(data, p, opts) {\n\tvar q = {}; if(!p) p = {};\n\tdata = utf8read(data);\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tvar xml = (data.match(matchtag(f[0]))||[])[1];\n\t\tswitch(f[2]) {\n\t\t\tcase \"string\": if(xml) p[f[1]] = unescapexml(xml); break;\n\t\t\tcase \"bool\": p[f[1]] = xml === \"true\"; break;\n\t\t\tcase \"raw\":\n\t\t\t\tvar cur = data.match(new RegExp(\"<\" + f[0] + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + f[0] + \">\"));\n\t\t\t\tif(cur && cur.length > 0) q[f[1]] = cur[1];\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tif(q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);\n\n\treturn p;\n}\n\nfunction write_ext_props(cp/*::, opts*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], W = writextag;\n\tif(!cp) cp = {};\n\tcp.Application = \"SheetJS\";\n\to[o.length] = (XML_HEADER);\n\to[o.length] = (writextag('Properties', null, {\n\t\t'xmlns': XMLNS.EXT_PROPS,\n\t\t'xmlns:vt': XMLNS.vt\n\t}));\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tif(cp[f[1]] === undefined) return;\n\t\tvar v;\n\t\tswitch(f[2]) {\n\t\t\tcase 'string': v = escapexml(String(cp[f[1]])); break;\n\t\t\tcase 'bool': v = cp[f[1]] ? 'true' : 'false'; break;\n\t\t}\n\t\tif(v !== undefined) o[o.length] = (W(f[0], v));\n\t});\n\n\t/* TODO: HeadingPairs, TitlesOfParts */\n\to[o.length] = (W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>')+W('vt:variant', W('vt:i4', String(cp.Worksheets))), {size:2, baseType:\"variant\"})));\n\to[o.length] = (W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function(s) { return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\"; }).join(\"\"), {size: cp.Worksheets, baseType:\"lpstr\"})));\n\tif(o.length>2){ o[o.length] = ('</Properties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.2 Custom File Properties Part */\nvar custregex = /<[^>]+>[^<]*/g;\nfunction parse_cust_props(data/*:string*/, opts) {\n\tvar p = {}, name = \"\";\n\tvar m = data.match(custregex);\n\tif(m) for(var i = 0; i != m.length; ++i) {\n\t\tvar x = m[i], y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Properties': break;\n\t\t\tcase '<property': name = unescapexml(y.name); break;\n\t\t\tcase '</property>': name = null; break;\n\t\t\tdefault: if (x.indexOf('<vt:') === 0) {\n\t\t\t\tvar toks = x.split('>');\n\t\t\t\tvar type = toks[0].slice(4), text = toks[1];\n\t\t\t\t/* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\n\t\t\t\tswitch(type) {\n\t\t\t\t\tcase 'lpstr': case 'bstr': case 'lpwstr':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bool':\n\t\t\t\t\t\tp[name] = parsexmlbool(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'i1': case 'i2': case 'i4': case 'i8': case 'int': case 'uint':\n\t\t\t\t\t\tp[name] = parseInt(text, 10);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r4': case 'r8': case 'decimal':\n\t\t\t\t\t\tp[name] = parseFloat(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'filetime': case 'date':\n\t\t\t\t\t\tp[name] = parseDate(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cy': case 'error':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(type.slice(-1) == '/') break;\n\t\t\t\t\t\tif(opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\n\t\t\t\t}\n\t\t\t} else if(x.slice(0,2) === \"</\") {/* empty */\n\t\t\t} else if(opts.WTF) throw new Error(x);\n\t\t}\n\t}\n\treturn p;\n}\n\nfunction write_cust_props(cp/*::, opts*/)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('Properties', null, {\n\t\t'xmlns': XMLNS.CUST_PROPS,\n\t\t'xmlns:vt': XMLNS.vt\n\t})];\n\tif(!cp) return o.join(\"\");\n\tvar pid = 1;\n\tkeys(cp).forEach(function custprop(k) { ++pid;\n\t\to[o.length] = (writextag('property', write_vt(cp[k], true), {\n\t\t\t'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\n\t\t\t'pid': pid,\n\t\t\t'name': escapexml(k)\n\t\t}));\n\t});\n\tif(o.length>2){ o[o.length] = '</Properties>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* Common Name -> XLML Name */\nvar XLMLDocPropsMap = {\n\tTitle: 'Title',\n\tSubject: 'Subject',\n\tAuthor: 'Author',\n\tKeywords: 'Keywords',\n\tComments: 'Description',\n\tLastAuthor: 'LastAuthor',\n\tRevNumber: 'Revision',\n\tApplication: 'AppName',\n\t/* TotalTime: 'TotalTime', */\n\tLastPrinted: 'LastPrinted',\n\tCreatedDate: 'Created',\n\tModifiedDate: 'LastSaved',\n\t/* Pages */\n\t/* Words */\n\t/* Characters */\n\tCategory: 'Category',\n\t/* PresentationFormat */\n\tManager: 'Manager',\n\tCompany: 'Company',\n\t/* Guid */\n\t/* HyperlinkBase */\n\t/* Bytes */\n\t/* Lines */\n\t/* Paragraphs */\n\t/* CharactersWithSpaces */\n\tAppVersion: 'Version',\n\n\tContentStatus: 'ContentStatus', /* NOTE: missing from schema */\n\tIdentifier: 'Identifier', /* NOTE: missing from schema */\n\tLanguage: 'Language' /* NOTE: missing from schema */\n};\nvar evert_XLMLDPM;\n\nfunction xlml_set_prop(Props, tag/*:string*/, val) {\n\tif(!evert_XLMLDPM) evert_XLMLDPM = evert(XLMLDocPropsMap);\n\ttag = evert_XLMLDPM[tag] || tag;\n\tProps[tag] = val;\n}\n\nfunction xlml_write_docprops(Props, opts) {\n\tvar o/*:Array<string>*/ = [];\n\tkeys(XLMLDocPropsMap).map(function(m) {\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(CORE_PROPS[i][1] == m) return CORE_PROPS[i];\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(EXT_PROPS[i][1] == m) return EXT_PROPS[i];\n\t\tthrow m;\n\t}).forEach(function(p) {\n\t\tif(Props[p[1]] == null) return;\n\t\tvar m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\n\t\tswitch(p[2]) {\n\t\t\tcase 'date': m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"Z\"); break;\n\t\t}\n\t\tif(typeof m == 'number') m = String(m);\n\t\telse if(m === true || m === false) { m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"\");\n\t\to.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\n\t});\n\treturn writextag('DocumentProperties', o.join(\"\"), {xmlns:XLMLNS.o });\n}\nfunction xlml_write_custprops(Props, Custprops/*::, opts*/) {\n\tvar BLACKLIST = [\"Worksheets\",\"SheetNames\"];\n\tvar T = 'CustomDocumentProperties';\n\tvar o/*:Array<string>*/ = [];\n\tif(Props) keys(Props).forEach(function(k) {\n\t\t/*:: if(!Props) return; */\n\t\tif(!Object.prototype.hasOwnProperty.call(Props, k)) return;\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(k == CORE_PROPS[i][1]) return;\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(k == EXT_PROPS[i][1]) return;\n\t\tfor(i = 0; i < BLACKLIST.length; ++i) if(k == BLACKLIST[i]) return;\n\n\t\tvar m = Props[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\tif(Custprops) keys(Custprops).forEach(function(k) {\n\t\t/*:: if(!Custprops) return; */\n\t\tif(!Object.prototype.hasOwnProperty.call(Custprops, k)) return;\n\t\tif(Props && Object.prototype.hasOwnProperty.call(Props, k)) return;\n\t\tvar m = Custprops[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) { t = \"dateTime.tz\"; m = m.toISOString(); }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\treturn '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\n}\n/* [MS-DTYP] 2.3.3 FILETIME */\n/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\n/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\nfunction parse_FILETIME(blob) {\n\tvar dwLowDateTime = blob.read_shift(4), dwHighDateTime = blob.read_shift(4);\n\treturn new Date(((dwHighDateTime/1e7*Math.pow(2,32) + dwLowDateTime/1e7) - 11644473600)*1000).toISOString().replace(/\\.000/,\"\");\n}\nfunction write_FILETIME(time/*:string|Date*/) {\n\tvar date = (typeof time == \"string\") ? new Date(Date.parse(time)) : time;\n\tvar t = date.getTime() / 1000 + 11644473600;\n\tvar l = t % Math.pow(2,32), h = (t - l) / Math.pow(2,32);\n\tl *= 1e7; h *= 1e7;\n\tvar w = (l / Math.pow(2,32)) | 0;\n\tif(w > 0) { l = l % Math.pow(2,32); h += w; }\n\tvar o = new_buf(8); o.write_shift(4, l); o.write_shift(4, h); return o;\n}\n\n/* [MS-OSHARED] 2.3.3.1.4 Lpstr */\nfunction parse_lpstr(blob, type, pad/*:?number*/) {\n\tvar start = blob.l;\n\tvar str = blob.read_shift(0, 'lpstr-cp');\n\tif(pad) while((blob.l - start) & 3) ++blob.l;\n\treturn str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\nfunction parse_lpwstr(blob, type, pad) {\n\tvar str = blob.read_shift(0, 'lpwstr');\n\tif(pad) blob.l += (4 - ((str.length+1) & 3)) & 3;\n\treturn str;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.11 VtString */\n/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\nfunction parse_VtStringBase(blob, stringType, pad) {\n\tif(stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\n\treturn parse_lpstr(blob, stringType, pad);\n}\n\nfunction parse_VtString(blob, t/*:number*/, pad/*:?boolean*/) { return parse_VtStringBase(blob, t, pad === false ? 0: 4); }\nfunction parse_VtUnalignedString(blob, t/*:number*/) { if(!t) throw new Error(\"VtUnalignedString must have positive length\"); return parse_VtStringBase(blob, t, 0); }\n\n/* [MS-OSHARED] 2.3.3.1.7 VtVecLpwstrValue */\nfunction parse_VtVecLpwstrValue(blob)/*:Array<string>*/ {\n\tvar length = blob.read_shift(4);\n\tvar ret/*:Array<string>*/ = [];\n\tfor(var i = 0; i != length; ++i) {\n\t\tvar start = blob.l;\n\t\tret[i] = blob.read_shift(0, 'lpwstr').replace(chr0,'');\n\t\tif((blob.l - start) & 0x02) blob.l += 2;\n\t}\n\treturn ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\nfunction parse_VtVecUnalignedLpstrValue(blob)/*:Array<string>*/ {\n\tvar length = blob.read_shift(4);\n\tvar ret/*:Array<string>*/ = [];\n\tfor(var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0,'');\n\treturn ret;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\nfunction parse_VtHeadingPair(blob) {\n\tvar start = blob.l;\n\tvar headingString = parse_TypedPropertyValue(blob, VT_USTR);\n\tif(blob[blob.l] == 0x00 && blob[blob.l+1] == 0x00 && ((blob.l - start) & 0x02)) blob.l += 2;\n\tvar headerParts = parse_TypedPropertyValue(blob, VT_I4);\n\treturn [headingString, headerParts];\n}\n\n/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\nfunction parse_VtVecHeadingPairValue(blob) {\n\tvar cElements = blob.read_shift(4);\n\tvar out = [];\n\tfor(var i = 0; i < cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\n\treturn out;\n}\n\n/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\nfunction parse_dictionary(blob,CodePage) {\n\tvar cnt = blob.read_shift(4);\n\tvar dict/*:{[number]:string}*/ = ({}/*:any*/);\n\tfor(var j = 0; j != cnt; ++j) {\n\t\tvar pid = blob.read_shift(4);\n\t\tvar len = blob.read_shift(4);\n\t\tdict[pid] = blob.read_shift(len, (CodePage === 0x4B0 ?'utf16le':'utf8')).replace(chr0,'').replace(chr1,'!');\n\t\tif(CodePage === 0x4B0 && (len % 2)) blob.l += 2;\n\t}\n\tif(blob.l & 3) blob.l = (blob.l>>2+1)<<2;\n\treturn dict;\n}\n\n/* [MS-OLEPS] 2.9 BLOB */\nfunction parse_BLOB(blob) {\n\tvar size = blob.read_shift(4);\n\tvar bytes = blob.slice(blob.l,blob.l+size);\n\tblob.l += size;\n\tif((size & 3) > 0) blob.l += (4 - (size & 3)) & 3;\n\treturn bytes;\n}\n\n/* [MS-OLEPS] 2.11 ClipboardData */\nfunction parse_ClipboardData(blob) {\n\t// TODO\n\tvar o = {};\n\to.Size = blob.read_shift(4);\n\t//o.Format = blob.read_shift(4);\n\tblob.l += o.Size + 3 - (o.Size - 1) % 4;\n\treturn o;\n}\n\n/* [MS-OLEPS] 2.15 TypedPropertyValue */\nfunction parse_TypedPropertyValue(blob, type/*:number*/, _opts)/*:any*/ {\n\tvar t = blob.read_shift(2), ret, opts = _opts||{};\n\tblob.l += 2;\n\tif(type !== VT_VARIANT)\n\tif(t !== type && VT_CUSTOM.indexOf(type)===-1 && !((type & 0xFFFE) == 0x101E && (t & 0xFFFE) == 0x101E)) throw new Error('Expected type ' + type + ' saw ' + t);\n\tswitch(type === VT_VARIANT ? t : type) {\n\t\tcase 0x02 /*VT_I2*/: ret = blob.read_shift(2, 'i'); if(!opts.raw) blob.l += 2; return ret;\n\t\tcase 0x03 /*VT_I4*/: ret = blob.read_shift(4, 'i'); return ret;\n\t\tcase 0x0B /*VT_BOOL*/: return blob.read_shift(4) !== 0x0;\n\t\tcase 0x13 /*VT_UI4*/: ret = blob.read_shift(4); return ret;\n\t\tcase 0x1E /*VT_LPSTR*/: return parse_lpstr(blob, t, 4).replace(chr0,'');\n\t\tcase 0x1F /*VT_LPWSTR*/: return parse_lpwstr(blob);\n\t\tcase 0x40 /*VT_FILETIME*/: return parse_FILETIME(blob);\n\t\tcase 0x41 /*VT_BLOB*/: return parse_BLOB(blob);\n\t\tcase 0x47 /*VT_CF*/: return parse_ClipboardData(blob);\n\t\tcase 0x50 /*VT_STRING*/: return parse_VtString(blob, t, !opts.raw).replace(chr0,'');\n\t\tcase 0x51 /*VT_USTR*/: return parse_VtUnalignedString(blob, t/*, 4*/).replace(chr0,'');\n\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: return parse_VtVecHeadingPairValue(blob);\n\t\tcase 0x101E /*VT_VECTOR|VT_LPSTR*/:\n\t\tcase 0x101F /*VT_VECTOR|VT_LPWSTR*/:\n\t\t\treturn t == 0x101F ? parse_VtVecLpwstrValue(blob) : parse_VtVecUnalignedLpstrValue(blob);\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\n\t}\n}\nfunction write_TypedPropertyValue(type/*:number*/, value) {\n\tvar o = new_buf(4), p = new_buf(4);\n\to.write_shift(4, type == 0x50 ? 0x1F : type);\n\tswitch(type) {\n\t\tcase 0x03 /*VT_I4*/: p.write_shift(-4, value); break;\n\t\tcase 0x05 /*VT_I4*/: p = new_buf(8); p.write_shift(8, value, 'f'); break;\n\t\tcase 0x0B /*VT_BOOL*/: p.write_shift(4, value ? 0x01 : 0x00); break;\n\t\tcase 0x40 /*VT_FILETIME*/: /*:: if(typeof value !== \"string\" && !(value instanceof Date)) throw \"unreachable\"; */ p = write_FILETIME(value); break;\n\t\tcase 0x1F /*VT_LPWSTR*/:\n\t\tcase 0x50 /*VT_STRING*/:\n\t\t\t/*:: if(typeof value !== \"string\") throw \"unreachable\"; */\n\t\t\tp = new_buf(4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tp.write_shift(4, value.length + 1);\n\t\t\tp.write_shift(0, value, \"dbcs\");\n\t\t\twhile(p.l != p.length) p.write_shift(1, 0);\n\t\t\tbreak;\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + value);\n\t}\n\treturn bconcat([o, p]);\n}\n\n/* [MS-OLEPS] 2.20 PropertySet */\nfunction parse_PropertySet(blob, PIDSI) {\n\tvar start_addr = blob.l;\n\tvar size = blob.read_shift(4);\n\tvar NumProps = blob.read_shift(4);\n\tvar Props = [], i = 0;\n\tvar CodePage = 0;\n\tvar Dictionary = -1, DictObj/*:{[number]:string}*/ = ({}/*:any*/);\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tvar PropID = blob.read_shift(4);\n\t\tvar Offset = blob.read_shift(4);\n\t\tProps[i] = [PropID, Offset + start_addr];\n\t}\n\tProps.sort(function(x,y) { return x[1] - y[1]; });\n\tvar PropH = {};\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tif(blob.l !== Props[i][1]) {\n\t\t\tvar fail = true;\n\t\t\tif(i>0 && PIDSI) switch(PIDSI[Props[i-1][0]].t) {\n\t\t\t\tcase 0x02 /*VT_I2*/: if(blob.l+2 === Props[i][1]) { blob.l+=2; fail = false; } break;\n\t\t\t\tcase 0x50 /*VT_STRING*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t}\n\t\t\tif((!PIDSI||i==0) && blob.l <= Props[i][1]) { fail=false; blob.l = Props[i][1]; }\n\t\t\tif(fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\n\t\t}\n\t\tif(PIDSI) {\n\t\t\tvar piddsi = PIDSI[Props[i][0]];\n\t\t\tPropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {raw:true});\n\t\t\tif(piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + (\"0000\" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);\n\t\t\tif(piddsi.n == \"CodePage\") switch(PropH[piddsi.n]) {\n\t\t\t\tcase 0: PropH[piddsi.n] = 1252;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 874:\n\t\t\t\tcase 932:\n\t\t\t\tcase 936:\n\t\t\t\tcase 949:\n\t\t\t\tcase 950:\n\t\t\t\tcase 1250:\n\t\t\t\tcase 1251:\n\t\t\t\tcase 1253:\n\t\t\t\tcase 1254:\n\t\t\t\tcase 1255:\n\t\t\t\tcase 1256:\n\t\t\t\tcase 1257:\n\t\t\t\tcase 1258:\n\t\t\t\tcase 10000:\n\t\t\t\tcase 1200:\n\t\t\t\tcase 1201:\n\t\t\t\tcase 1252:\n\t\t\t\tcase 65000: case -536:\n\t\t\t\tcase 65001: case -535:\n\t\t\t\t\tset_cp(CodePage = (PropH[piddsi.n]>>>0) & 0xFFFF); break;\n\t\t\t\tdefault: throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\n\t\t\t}\n\t\t} else {\n\t\t\tif(Props[i][0] === 0x1) {\n\t\t\t\tCodePage = PropH.CodePage = (parse_TypedPropertyValue(blob, VT_I2)/*:number*/);\n\t\t\t\tset_cp(CodePage);\n\t\t\t\tif(Dictionary !== -1) {\n\t\t\t\t\tvar oldpos = blob.l;\n\t\t\t\t\tblob.l = Props[Dictionary][1];\n\t\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t\t\tblob.l = oldpos;\n\t\t\t\t}\n\t\t\t} else if(Props[i][0] === 0) {\n\t\t\t\tif(CodePage === 0) { Dictionary = i; blob.l = Props[i+1][1]; continue; }\n\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t} else {\n\t\t\t\tvar name = DictObj[Props[i][0]];\n\t\t\t\tvar val;\n\t\t\t\t/* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\n\t\t\t\tswitch(blob[blob.l]) {\n\t\t\t\t\tcase 0x41 /*VT_BLOB*/: blob.l += 4; val = parse_BLOB(blob); break;\n\t\t\t\t\tcase 0x1E /*VT_LPSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n\t\t\t\t\tcase 0x1F /*VT_LPWSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n\t\t\t\t\tcase 0x03 /*VT_I4*/: blob.l += 4; val = blob.read_shift(4, 'i'); break;\n\t\t\t\t\tcase 0x13 /*VT_UI4*/: blob.l += 4; val = blob.read_shift(4); break;\n\t\t\t\t\tcase 0x05 /*VT_R8*/: blob.l += 4; val = blob.read_shift(8, 'f'); break;\n\t\t\t\t\tcase 0x0B /*VT_BOOL*/: blob.l += 4; val = parsebool(blob, 4); break;\n\t\t\t\t\tcase 0x40 /*VT_FILETIME*/: blob.l += 4; val = parseDate(parse_FILETIME(blob)); break;\n\t\t\t\t\tdefault: throw new Error(\"unparsed value: \" + blob[blob.l]);\n\t\t\t\t}\n\t\t\t\tPropH[name] = val;\n\t\t\t}\n\t\t}\n\t}\n\tblob.l = start_addr + size; /* step ahead to skip padding */\n\treturn PropH;\n}\nvar XLSPSSkip = [ \"CodePage\", \"Thumbnail\", \"_PID_LINKBASE\", \"_PID_HLINKS\", \"SystemIdentifier\", \"FMTID\" ]; //.concat(PseudoPropsPairs);\nfunction guess_property_type(val/*:any*/)/*:number*/ {\n\tswitch(typeof val) {\n\t\tcase \"boolean\": return 0x0B;\n\t\tcase \"number\": return ((val|0)==val) ? 0x03 : 0x05;\n\t\tcase \"string\": return 0x1F;\n\t\tcase \"object\": if(val instanceof Date) return 0x40; break;\n\t}\n\treturn -1;\n}\nfunction write_PropertySet(entries, RE, PIDSI) {\n\tvar hdr = new_buf(8), piao = [], prop = [];\n\tvar sz = 8, i = 0;\n\n\tvar pr = new_buf(8), pio = new_buf(8);\n\tpr.write_shift(4, 0x0002);\n\tpr.write_shift(4, 0x04B0);\n\tpio.write_shift(4, 0x0001);\n\tprop.push(pr); piao.push(pio);\n\tsz += 8 + pr.length;\n\n\tif(!RE) {\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, 0);\n\t\tpiao.unshift(pio);\n\n\t\tvar bufs = [new_buf(4)];\n\t\tbufs[0].write_shift(4, entries.length);\n\t\tfor(i = 0; i < entries.length; ++i) {\n\t\t\tvar value = entries[i][0];\n\t\t\tpr = new_buf(4 + 4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tpr.write_shift(4, i+2);\n\t\t\tpr.write_shift(4, value.length + 1);\n\t\t\tpr.write_shift(0, value, \"dbcs\");\n\t\t\twhile(pr.l != pr.length) pr.write_shift(1, 0);\n\t\t\tbufs.push(pr);\n\t\t}\n\t\tpr = bconcat(bufs);\n\t\tprop.unshift(pr);\n\t\tsz += 8 + pr.length;\n\t}\n\n\tfor(i = 0; i < entries.length; ++i) {\n\t\tif(RE && !RE[entries[i][0]]) continue;\n\t\tif(XLSPSSkip.indexOf(entries[i][0]) > -1 || PseudoPropsPairs.indexOf(entries[i][0]) > -1) continue;\n\t\tif(entries[i][1] == null) continue;\n\n\t\tvar val = entries[i][1], idx = 0;\n\t\tif(RE) {\n\t\t\tidx = +RE[entries[i][0]];\n\t\t\tvar pinfo = (PIDSI/*:: || {}*/)[idx]/*:: || {} */;\n\t\t\tif(pinfo.p == \"version\" && typeof val == \"string\") {\n\t\t\t\t/*:: if(typeof val !== \"string\") throw \"unreachable\"; */\n\t\t\t\tvar arr = val.split(\".\");\n\t\t\t\tval = ((+arr[0])<<16) + ((+arr[1])||0);\n\t\t\t}\n\t\t\tpr = write_TypedPropertyValue(pinfo.t, val);\n\t\t} else {\n\t\t\tvar T = guess_property_type(val);\n\t\t\tif(T == -1) { T = 0x1F; val = String(val); }\n\t\t\tpr = write_TypedPropertyValue(T, val);\n\t\t}\n\t\tprop.push(pr);\n\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, !RE ? 2+i : idx);\n\t\tpiao.push(pio);\n\n\t\tsz += 8 + pr.length;\n\t}\n\n\tvar w = 8 * (prop.length + 1);\n\tfor(i = 0; i < prop.length; ++i) { piao[i].write_shift(4, w); w += prop[i].length; }\n\thdr.write_shift(4, sz);\n\thdr.write_shift(4, prop.length);\n\treturn bconcat([hdr].concat(piao).concat(prop));\n}\n\n/* [MS-OLEPS] 2.21 PropertySetStream */\nfunction parse_PropertySetStream(file, PIDSI, clsid) {\n\tvar blob = file.content;\n\tif(!blob) return ({}/*:any*/);\n\tprep_blob(blob, 0);\n\n\tvar NumSets, FMTID0, FMTID1, Offset0, Offset1 = 0;\n\tblob.chk('feff', 'Byte Order: ');\n\n\t/*var vers = */blob.read_shift(2); // TODO: check version\n\tvar SystemIdentifier = blob.read_shift(4);\n\tvar CLSID = blob.read_shift(16);\n\tif(CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\n\tNumSets = blob.read_shift(4);\n\tif(NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\n\tFMTID0 = blob.read_shift(16); Offset0 = blob.read_shift(4);\n\n\tif(NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);\n\telse if(NumSets === 2) { FMTID1 = blob.read_shift(16); Offset1 = blob.read_shift(4); }\n\tvar PSet0 = parse_PropertySet(blob, PIDSI);\n\n\tvar rval = ({ SystemIdentifier: SystemIdentifier }/*:any*/);\n\tfor(var y in PSet0) rval[y] = PSet0[y];\n\t//rval.blob = blob;\n\trval.FMTID = FMTID0;\n\t//rval.PSet0 = PSet0;\n\tif(NumSets === 1) return rval;\n\tif(Offset1 - blob.l == 2) blob.l += 2;\n\tif(blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\n\tvar PSet1;\n\ttry { PSet1 = parse_PropertySet(blob, null); } catch(e) {/* empty */}\n\tfor(y in PSet1) rval[y] = PSet1[y];\n\trval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\n\treturn rval;\n}\nfunction write_PropertySetStream(entries, clsid, RE, PIDSI/*:{[key:string|number]:any}*/, entries2/*:?any*/, clsid2/*:?any*/) {\n\tvar hdr = new_buf(entries2 ? 68 : 48);\n\tvar bufs = [hdr];\n\thdr.write_shift(2, 0xFFFE);\n\thdr.write_shift(2, 0x0000); /* TODO: type 1 props */\n\thdr.write_shift(4, 0x32363237);\n\thdr.write_shift(16, CFB.utils.consts.HEADER_CLSID, \"hex\");\n\thdr.write_shift(4, (entries2 ? 2 : 1));\n\thdr.write_shift(16, clsid, \"hex\");\n\thdr.write_shift(4, (entries2 ? 68 : 48));\n\tvar ps0 = write_PropertySet(entries, RE, PIDSI);\n\tbufs.push(ps0);\n\n\tif(entries2) {\n\t\tvar ps1 = write_PropertySet(entries2, null, null);\n\t\thdr.write_shift(16, clsid2, \"hex\");\n\t\thdr.write_shift(4, 68 + ps0.length);\n\t\tbufs.push(ps1);\n\t}\n\treturn bconcat(bufs);\n}\n\nfunction parsenoop2(blob, length) { blob.read_shift(length); return null; }\nfunction writezeroes(n, o) { if(!o) o=new_buf(n); for(var j=0; j<n; ++j) o.write_shift(1, 0); return o; }\n\nfunction parslurp(blob, length, cb) {\n\tvar arr = [], target = blob.l + length;\n\twhile(blob.l < target) arr.push(cb(blob, target - blob.l));\n\tif(target !== blob.l) throw new Error(\"Slurp error\");\n\treturn arr;\n}\n\nfunction parsebool(blob, length/*:number*/) { return blob.read_shift(length) === 0x1; }\nfunction writebool(v/*:any*/, o) { if(!o) o=new_buf(2); o.write_shift(2, +!!v); return o; }\n\nfunction parseuint16(blob/*::, length:?number, opts:?any*/) { return blob.read_shift(2, 'u'); }\nfunction writeuint16(v/*:number*/, o) { if(!o) o=new_buf(2); o.write_shift(2, v); return o; }\nfunction parseuint16a(blob, length/*:: :?number, opts:?any*/) { return parslurp(blob,length,parseuint16);}\n\n/* --- 2.5 Structures --- */\n\n/* [MS-XLS] 2.5.10 Bes (boolean or error) */\nfunction parse_Bes(blob/*::, length*/) {\n\tvar v = blob.read_shift(1), t = blob.read_shift(1);\n\treturn t === 0x01 ? v : v === 0x01;\n}\nfunction write_Bes(v, t/*:string*/, o) {\n\tif(!o) o = new_buf(2);\n\to.write_shift(1, ((t == 'e') ? +v : +!!v));\n\to.write_shift(1, ((t == 'e') ? 1 : 0));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.240 ShortXLUnicodeString */\nfunction parse_ShortXLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\n\tvar encoding = 'sbcs-cont';\n\tvar cp = current_codepage;\n\tif(opts && opts.biff >= 8) current_codepage = 1200;\n\tif(!opts || opts.biff == 8 ) {\n\t\tvar fHighByte = blob.read_shift(1);\n\t\tif(fHighByte) { encoding = 'dbcs-cont'; }\n\t} else if(opts.biff == 12) {\n\t\tencoding = 'wstr';\n\t}\n\tif(opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\n\tvar o = cch ? blob.read_shift(cch, encoding) : \"\";\n\tcurrent_codepage = cp;\n\treturn o;\n}\n\n/* 2.5.293 XLUnicodeRichExtendedString */\nfunction parse_XLUnicodeRichExtendedString(blob) {\n\tvar cp = current_codepage;\n\tcurrent_codepage = 1200;\n\tvar cch = blob.read_shift(2), flags = blob.read_shift(1);\n\tvar /*fHighByte = flags & 0x1,*/ fExtSt = flags & 0x4, fRichSt = flags & 0x8;\n\tvar width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\n\tvar cRun = 0, cbExtRst;\n\tvar z = {};\n\tif(fRichSt) cRun = blob.read_shift(2);\n\tif(fExtSt) cbExtRst = blob.read_shift(4);\n\tvar encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\n\tvar msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\n\tif(fRichSt) blob.l += 4 * cRun; //TODO: parse this\n\tif(fExtSt) blob.l += cbExtRst; //TODO: parse this\n\tz.t = msg;\n\tif(!fRichSt) { z.raw = \"<t>\" + z.t + \"</t>\"; z.r = z.t; }\n\tcurrent_codepage = cp;\n\treturn z;\n}\nfunction write_XLUnicodeRichExtendedString(xlstr/*:: :XLString, opts*/) {\n\tvar str = (xlstr.t||\"\"), nfmts = 1;\n\n\tvar hdr = new_buf(3 + (nfmts > 1 ? 2 : 0));\n\thdr.write_shift(2, str.length);\n\thdr.write_shift(1, (nfmts > 1 ? 0x08 : 0x00) | 0x01);\n\tif(nfmts > 1) hdr.write_shift(2, nfmts);\n\n\tvar otext = new_buf(2 * str.length);\n\totext.write_shift(2 * str.length, str, 'utf16le');\n\n\tvar out = [hdr, otext];\n\n\treturn bconcat(out);\n}\n\n/* 2.5.296 XLUnicodeStringNoCch */\nfunction parse_XLUnicodeStringNoCch(blob, cch, opts) {\n\tvar retval;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\n\t\tif(opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\n\t}\n\tvar fHighByte = blob.read_shift(1);\n\tif(fHighByte===0) { retval = blob.read_shift(cch, 'sbcs-cont'); }\n\telse { retval = blob.read_shift(cch, 'dbcs-cont'); }\n\treturn retval;\n}\n\n/* 2.5.294 XLUnicodeString */\nfunction parse_XLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn parse_XLUnicodeStringNoCch(blob, cch, opts);\n}\n/* BIFF5 override */\nfunction parse_XLUnicodeString2(blob, length, opts) {\n\tif(opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, (opts.biff <= 4 || !blob.lens ) ? 'cpstr' : 'sbcs-cont');\n}\n/* TODO: BIFF5 and lower, codepage awareness */\nfunction write_XLUnicodeString(str, opts, o) {\n\tif(!o) o = new_buf(3 + 2 * str.length);\n\to.write_shift(2, str.length);\n\to.write_shift(1, 1);\n\to.write_shift(31, str, 'utf16le');\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.61 ControlInfo */\nfunction parse_ControlInfo(blob/*::, length, opts*/) {\n\tvar flags = blob.read_shift(1);\n\tblob.l++;\n\tvar accel = blob.read_shift(2);\n\tblob.l += 2;\n\treturn [flags, accel];\n}\n\n/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\nfunction parse_URLMoniker(blob/*::, length, opts*/) {\n\tvar len = blob.read_shift(4), start = blob.l;\n\tvar extra = false;\n\tif(len > 24) {\n\t\t/* look ahead */\n\t\tblob.l += len - 24;\n\t\tif(blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\n\t\tblob.l = start;\n\t}\n\tvar url = blob.read_shift((extra?len-24:len)>>1, 'utf16le').replace(chr0,\"\");\n\tif(extra) blob.l += 24;\n\treturn url;\n}\n\n/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\nfunction parse_FileMoniker(blob/*::, length*/) {\n\tvar cAnti = blob.read_shift(2);\n\tvar preamble = \"\"; while(cAnti-- > 0) preamble += \"../\";\n\tvar ansiPath = blob.read_shift(0, 'lpstr-ansi');\n\tblob.l += 2; //var endServer = blob.read_shift(2);\n\tif(blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\n\tvar sz = blob.read_shift(4);\n\tif(sz === 0) return preamble + ansiPath.replace(/\\\\/g,\"/\");\n\tvar bytes = blob.read_shift(4);\n\tif(blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\n\tvar unicodePath = blob.read_shift(bytes>>1, 'utf16le').replace(chr0,\"\");\n\treturn preamble + unicodePath;\n}\n\n/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\nfunction parse_HyperlinkMoniker(blob, length) {\n\tvar clsid = blob.read_shift(16); length -= 16;\n\tswitch(clsid) {\n\t\tcase \"e0c9ea79f9bace118c8200aa004ba90b\": return parse_URLMoniker(blob, length);\n\t\tcase \"0303000000000000c000000000000046\": return parse_FileMoniker(blob, length);\n\t\tdefault: throw new Error(\"Unsupported Moniker \" + clsid);\n\t}\n}\n\n/* [MS-OSHARED] 2.3.7.9 HyperlinkString */\nfunction parse_HyperlinkString(blob/*::, length*/) {\n\tvar len = blob.read_shift(4);\n\tvar o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\n\treturn o;\n}\nfunction write_HyperlinkString(str/*:string*/, o) {\n\tif(!o) o = new_buf(6 + str.length * 2);\n\to.write_shift(4, 1 + str.length);\n\tfor(var i = 0; i < str.length; ++i) o.write_shift(2, str.charCodeAt(i));\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\nfunction parse_Hyperlink(blob, length)/*:Hyperlink*/ {\n\tvar end = blob.l + length;\n\tvar sVer = blob.read_shift(4);\n\tif(sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\n\tvar flags = blob.read_shift(2);\n\tblob.l += 2;\n\tvar displayName, targetFrameName, moniker, oleMoniker, Loc=\"\", guid, fileTime;\n\tif(flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\n\tif(flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0020) guid = blob.read_shift(16);\n\tif(flags & 0x0040) fileTime = parse_FILETIME(blob/*, 8*/);\n\tblob.l = end;\n\tvar target = targetFrameName||moniker||oleMoniker||\"\";\n\tif(target && Loc) target+=\"#\"+Loc;\n\tif(!target) target = \"#\" + Loc;\n\tif((flags & 0x0002) && target.charAt(0) == \"/\" && target.charAt(1) != \"/\") target = \"file://\" + target;\n\tvar out = ({Target:target}/*:any*/);\n\tif(guid) out.guid = guid;\n\tif(fileTime) out.time = fileTime;\n\tif(displayName) out.Tooltip = displayName;\n\treturn out;\n}\nfunction write_Hyperlink(hl) {\n\tvar out = new_buf(512), i = 0;\n\tvar Target = hl.Target;\n\tif(Target.slice(0,7) == \"file://\") Target = Target.slice(7);\n\tvar hashidx = Target.indexOf(\"#\");\n\tvar F = hashidx > -1 ? 0x1f : 0x17;\n\tswitch(Target.charAt(0)) { case \"#\": F=0x1c; break; case \".\": F&=~2; break; }\n\tout.write_shift(4,2); out.write_shift(4, F);\n\tvar data = [8,6815827,6619237,4849780,83]; for(i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\n\tif(F == 0x1C) {\n\t\tTarget = Target.slice(1);\n\t\twrite_HyperlinkString(Target, out);\n\t} else if(F & 0x02) {\n\t\tdata = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar Pretarget = hashidx > -1 ? Target.slice(0, hashidx) : Target;\n\t\tout.write_shift(4, 2*(Pretarget.length + 1));\n\t\tfor(i = 0; i < Pretarget.length; ++i) out.write_shift(2, Pretarget.charCodeAt(i));\n\t\tout.write_shift(2, 0);\n\t\tif(F & 0x08) write_HyperlinkString(hashidx > -1 ? Target.slice(hashidx+1): \"\", out);\n\t} else {\n\t\tdata = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar P = 0;\n\t\twhile(Target.slice(P*3,P*3+3)==\"../\"||Target.slice(P*3,P*3+3)==\"..\\\\\") ++P;\n\t\tout.write_shift(2, P);\n\t\tout.write_shift(4, Target.length - 3 * P + 1);\n\t\tfor(i = 0; i < Target.length - 3 * P; ++i) out.write_shift(1, Target.charCodeAt(i + 3 * P) & 0xFF);\n\t\tout.write_shift(1, 0);\n\t\tout.write_shift(2, 0xFFFF);\n\t\tout.write_shift(2, 0xDEAD);\n\t\tfor(i = 0; i < 6; ++i) out.write_shift(4, 0);\n\t}\n\treturn out.slice(0, out.l);\n}\n\n/* 2.5.178 LongRGBA */\nfunction parse_LongRGBA(blob/*::, length*/) { var r = blob.read_shift(1), g = blob.read_shift(1), b = blob.read_shift(1), a = blob.read_shift(1); return [r,g,b,a]; }\n\n/* 2.5.177 LongRGB */\nfunction parse_LongRGB(blob, length) { var x = parse_LongRGBA(blob, length); x[3] = 0; return x; }\n\n\n/* [MS-XLS] 2.5.19 */\nfunction parse_XLSCell(blob/*::, length*/)/*:Cell*/ {\n\tvar rw = blob.read_shift(2); // 0-indexed\n\tvar col = blob.read_shift(2);\n\tvar ixfe = blob.read_shift(2);\n\treturn ({r:rw, c:col, ixfe:ixfe}/*:any*/);\n}\nfunction write_XLSCell(R/*:number*/, C/*:number*/, ixfe/*:?number*/, o) {\n\tif(!o) o = new_buf(6);\n\to.write_shift(2, R);\n\to.write_shift(2, C);\n\to.write_shift(2, ixfe||0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.134 */\nfunction parse_frtHeader(blob) {\n\tvar rt = blob.read_shift(2);\n\tvar flags = blob.read_shift(2); // TODO: parse these flags\n\tblob.l += 8;\n\treturn {type: rt, flags: flags};\n}\n\n\n\nfunction parse_OptXLUnicodeString(blob, length, opts) { return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts); }\n\n/* [MS-XLS] 2.5.344 */\nfunction parse_XTI(blob, length, opts) {\n\tvar w = opts.biff > 8 ? 4 : 2;\n\tvar iSupBook = blob.read_shift(w), itabFirst = blob.read_shift(w,'i'), itabLast = blob.read_shift(w,'i');\n\treturn [iSupBook, itabFirst, itabLast];\n}\n\n/* [MS-XLS] 2.5.218 */\nfunction parse_RkRec(blob) {\n\tvar ixfe = blob.read_shift(2);\n\tvar RK = parse_RkNumber(blob);\n\treturn [ixfe, RK];\n}\n\n/* [MS-XLS] 2.5.1 */\nfunction parse_AddinUdf(blob, length, opts) {\n\tblob.l += 4; length -= 4;\n\tvar l = blob.l + length;\n\tvar udfName = parse_ShortXLUnicodeString(blob, length, opts);\n\tvar cb = blob.read_shift(2);\n\tl -= blob.l;\n\tif(cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n\tblob.l += cb;\n\treturn udfName;\n}\n\n/* [MS-XLS] 2.5.209 TODO: Check sizes */\nfunction parse_Ref8U(blob/*::, length*/) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(2);\n\tvar colLast = blob.read_shift(2);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\nfunction write_Ref8U(r/*:Range*/, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(2, r.s.r);\n\to.write_shift(2, r.e.r);\n\to.write_shift(2, r.s.c);\n\to.write_shift(2, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.211 */\nfunction parse_RefU(blob/*::, length*/) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(1);\n\tvar colLast = blob.read_shift(1);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\n\n/* [MS-XLS] 2.5.207 */\nvar parse_Ref = parse_RefU;\n\n/* [MS-XLS] 2.5.143 */\nfunction parse_FtCmo(blob/*::, length*/) {\n\tblob.l += 4;\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tblob.l+=12;\n\treturn [id, ot, flags];\n}\n\n/* [MS-XLS] 2.5.149 */\nfunction parse_FtNts(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.l += 16; // GUID TODO\n\tout.fSharedNote = blob.read_shift(2);\n\tblob.l += 4;\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.142 */\nfunction parse_FtCf(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.cf = blob.read_shift(2);\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.140 - 2.5.154 and friends */\nfunction parse_FtSkip(blob) { blob.l += 2; blob.l += blob.read_shift(2); }\nvar FtTab = {\n\t/*::[*/0x00/*::]*/: parse_FtSkip,      /* FtEnd */\n\t/*::[*/0x04/*::]*/: parse_FtSkip,      /* FtMacro */\n\t/*::[*/0x05/*::]*/: parse_FtSkip,      /* FtButton */\n\t/*::[*/0x06/*::]*/: parse_FtSkip,      /* FtGmo */\n\t/*::[*/0x07/*::]*/: parse_FtCf,        /* FtCf */\n\t/*::[*/0x08/*::]*/: parse_FtSkip,      /* FtPioGrbit */\n\t/*::[*/0x09/*::]*/: parse_FtSkip,      /* FtPictFmla */\n\t/*::[*/0x0A/*::]*/: parse_FtSkip,      /* FtCbls */\n\t/*::[*/0x0B/*::]*/: parse_FtSkip,      /* FtRbo */\n\t/*::[*/0x0C/*::]*/: parse_FtSkip,      /* FtSbs */\n\t/*::[*/0x0D/*::]*/: parse_FtNts,       /* FtNts */\n\t/*::[*/0x0E/*::]*/: parse_FtSkip,      /* FtSbsFmla */\n\t/*::[*/0x0F/*::]*/: parse_FtSkip,      /* FtGboData */\n\t/*::[*/0x10/*::]*/: parse_FtSkip,      /* FtEdoData */\n\t/*::[*/0x11/*::]*/: parse_FtSkip,      /* FtRboData */\n\t/*::[*/0x12/*::]*/: parse_FtSkip,      /* FtCblsData */\n\t/*::[*/0x13/*::]*/: parse_FtSkip,      /* FtLbsData */\n\t/*::[*/0x14/*::]*/: parse_FtSkip,      /* FtCblsFmla */\n\t/*::[*/0x15/*::]*/: parse_FtCmo\n};\nfunction parse_FtArray(blob, length/*::, ot*/) {\n\tvar tgt = blob.l + length;\n\tvar fts = [];\n\twhile(blob.l < tgt) {\n\t\tvar ft = blob.read_shift(2);\n\t\tblob.l-=2;\n\t\ttry {\n\t\t\tfts.push(FtTab[ft](blob, tgt - blob.l));\n\t\t} catch(e) { blob.l = tgt; return fts; }\n\t}\n\tif(blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\n\treturn fts;\n}\n\n/* --- 2.4 Records --- */\n\n/* [MS-XLS] 2.4.21 */\nfunction parse_BOF(blob, length) {\n\tvar o = {BIFFVer:0, dt:0};\n\to.BIFFVer = blob.read_shift(2); length -= 2;\n\tif(length >= 2) { o.dt = blob.read_shift(2); blob.l -= 2; }\n\tswitch(o.BIFFVer) {\n\t\tcase 0x0600: /* BIFF8 */\n\t\tcase 0x0500: /* BIFF5 */\n\t\tcase 0x0400: /* BIFF4 */\n\t\tcase 0x0300: /* BIFF3 */\n\t\tcase 0x0200: /* BIFF2 */\n\t\tcase 0x0002: case 0x0007: /* BIFF2 */\n\t\t\tbreak;\n\t\tdefault: if(length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\n\t}\n\n\tblob.read_shift(length);\n\treturn o;\n}\nfunction write_BOF(wb/*:Workbook*/, t/*:number*/, o) {\n\tvar h = 0x0600, w = 16;\n\tswitch(o.bookType) {\n\t\tcase 'biff8': break;\n\t\tcase 'biff5': h = 0x0500; w = 8; break;\n\t\tcase 'biff4': h = 0x0004; w = 6; break;\n\t\tcase 'biff3': h = 0x0003; w = 6; break;\n\t\tcase 'biff2': h = 0x0002; w = 4; break;\n\t\tcase 'xla': break;\n\t\tdefault: throw new Error(\"unsupported BIFF version\");\n\t}\n\tvar out = new_buf(w);\n\tout.write_shift(2, h);\n\tout.write_shift(2, t);\n\tif(w > 4) out.write_shift(2, 0x7262);\n\tif(w > 6) out.write_shift(2, 0x07CD);\n\tif(w > 8) {\n\t\tout.write_shift(2, 0xC009);\n\t\tout.write_shift(2, 0x0001);\n\t\tout.write_shift(2, 0x0706);\n\t\tout.write_shift(2, 0x0000);\n\t}\n\treturn out;\n}\n\n\n/* [MS-XLS] 2.4.146 */\nfunction parse_InterfaceHdr(blob, length) {\n\tif(length === 0) return 0x04b0;\n\tif((blob.read_shift(2))!==0x04b0){/* empty */}\n\treturn 0x04b0;\n}\n\n\n/* [MS-XLS] 2.4.349 */\nfunction parse_WriteAccess(blob, length, opts) {\n\tif(opts.enc) { blob.l += length; return \"\"; }\n\tvar l = blob.l;\n\t// TODO: make sure XLUnicodeString doesnt overrun\n\tvar UserName = parse_XLUnicodeString2(blob, 0, opts);\n\tblob.read_shift(length + l - blob.l);\n\treturn UserName;\n}\nfunction write_WriteAccess(s/*:string*/, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(b8 ? 112 : 54);\n\to.write_shift(opts.biff == 8 ? 2 : 1, 7);\n\tif(b8) o.write_shift(1, 0);\n\to.write_shift(4, 0x33336853);\n\to.write_shift(4, (0x00534A74 | (b8 ? 0 : 0x20000000)));\n\twhile(o.l < o.length) o.write_shift(1, (b8 ? 0 : 32));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.351 */\nfunction parse_WsBool(blob, length, opts) {\n\tvar flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\n\treturn { fDialog: flags & 0x10, fBelow: flags & 0x40, fRight: flags & 0x80 };\n}\n\n/* [MS-XLS] 2.4.28 */\nfunction parse_BoundSheet8(blob, length, opts) {\n\tvar pos = blob.read_shift(4);\n\tvar hidden = blob.read_shift(1) & 0x03;\n\tvar dt = blob.read_shift(1);\n\tswitch(dt) {\n\t\tcase 0: dt = 'Worksheet'; break;\n\t\tcase 1: dt = 'Macrosheet'; break;\n\t\tcase 2: dt = 'Chartsheet'; break;\n\t\tcase 6: dt = 'VBAModule'; break;\n\t}\n\tvar name = parse_ShortXLUnicodeString(blob, 0, opts);\n\tif(name.length === 0) name = \"Sheet1\";\n\treturn { pos:pos, hs:hidden, dt:dt, name:name };\n}\nfunction write_BoundSheet8(data, opts) {\n\tvar w = (!opts || opts.biff >= 8 ? 2 : 1);\n\tvar o = new_buf(8 + w * data.name.length);\n\to.write_shift(4, data.pos);\n\to.write_shift(1, data.hs || 0);\n\to.write_shift(1, data.dt);\n\to.write_shift(1, data.name.length);\n\tif(opts.biff >= 8) o.write_shift(1, 1);\n\to.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\n\tvar out = o.slice(0, o.l);\n\tout.l = o.l; return out;\n}\n\n/* [MS-XLS] 2.4.265 TODO */\nfunction parse_SST(blob, length)/*:SST*/ {\n\tvar end = blob.l + length;\n\tvar cnt = blob.read_shift(4);\n\tvar ucnt = blob.read_shift(4);\n\tvar strs/*:SST*/ = ([]/*:any*/);\n\tfor(var i = 0; i != ucnt && blob.l < end; ++i) {\n\t\tstrs.push(parse_XLUnicodeRichExtendedString(blob));\n\t}\n\tstrs.Count = cnt; strs.Unique = ucnt;\n\treturn strs;\n}\nfunction write_SST(sst, opts) {\n\tvar header = new_buf(8);\n\theader.write_shift(4, sst.Count);\n\theader.write_shift(4, sst.Unique);\n\tvar strs = [];\n\tfor(var j = 0; j < sst.length; ++j) strs[j] = write_XLUnicodeRichExtendedString(sst[j], opts);\n\tvar o = bconcat([header].concat(strs));\n\t/*::(*/o/*:: :any)*/.parts = [header.length].concat(strs.map(function(str) { return str.length; }));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.107 */\nfunction parse_ExtSST(blob, length) {\n\tvar extsst = {};\n\textsst.dsst = blob.read_shift(2);\n\tblob.l += length-2;\n\treturn extsst;\n}\n\n\n/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\nfunction parse_Row(blob) {\n\tvar z = ({}/*:any*/);\n\tz.r = blob.read_shift(2);\n\tz.c = blob.read_shift(2);\n\tz.cnt = blob.read_shift(2) - z.c;\n\tvar miyRw = blob.read_shift(2);\n\tblob.l += 4; // reserved(2), unused(2)\n\tvar flags = blob.read_shift(1); // various flags\n\tblob.l += 3; // reserved(8), ixfe(12), flags(4)\n\tif(flags & 0x07) z.level = flags & 0x07;\n\t// collapsed: flags & 0x10\n\tif(flags & 0x20) z.hidden = true;\n\tif(flags & 0x40) z.hpt = miyRw / 20;\n\treturn z;\n}\n\n\n/* [MS-XLS] 2.4.125 */\nfunction parse_ForceFullCalculation(blob) {\n\tvar header = parse_frtHeader(blob);\n\tif(header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\n\tvar fullcalc = blob.read_shift(4);\n\treturn fullcalc !== 0x0;\n}\n\n\n\n\n\n/* [MS-XLS] 2.4.215 rt */\nfunction parse_RecalcId(blob) {\n\tblob.read_shift(2);\n\treturn blob.read_shift(4);\n}\n\n/* [MS-XLS] 2.4.87 */\nfunction parse_DefaultRowHeight(blob, length, opts) {\n\tvar f = 0;\n\tif(!(opts && opts.biff == 2)) {\n\t\tf = blob.read_shift(2);\n\t}\n\tvar miyRw = blob.read_shift(2);\n\tif((opts && opts.biff == 2)) {\n\t\tf = 1 - (miyRw >> 15); miyRw &= 0x7fff;\n\t}\n\tvar fl = {Unsynced:f&1,DyZero:(f&2)>>1,ExAsc:(f&4)>>2,ExDsc:(f&8)>>3};\n\treturn [fl, miyRw];\n}\n\n/* [MS-XLS] 2.4.345 TODO */\nfunction parse_Window1(blob) {\n\tvar xWn = blob.read_shift(2), yWn = blob.read_shift(2), dxWn = blob.read_shift(2), dyWn = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), iTabCur = blob.read_shift(2), iTabFirst = blob.read_shift(2);\n\tvar ctabSel = blob.read_shift(2), wTabRatio = blob.read_shift(2);\n\treturn { Pos: [xWn, yWn], Dim: [dxWn, dyWn], Flags: flags, CurTab: iTabCur,\n\t\tFirstTab: iTabFirst, Selected: ctabSel, TabRatio: wTabRatio };\n}\nfunction write_Window1(/*::opts*/) {\n\tvar o = new_buf(18);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0x7260);\n\to.write_shift(2, 0x44c0);\n\to.write_shift(2, 0x38);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 1);\n\to.write_shift(2, 0x01f4);\n\treturn o;\n}\n/* [MS-XLS] 2.4.346 TODO */\nfunction parse_Window2(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff < 5) return {};\n\tvar f = blob.read_shift(2);\n\treturn { RTL: f & 0x40 };\n}\nfunction write_Window2(view) {\n\tvar o = new_buf(18), f = 0x6b6;\n\tif(view && view.RTL) f |= 0x40;\n\to.write_shift(2, f);\n\to.write_shift(4, 0);\n\to.write_shift(4, 64);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.189 TODO */\nfunction parse_Pane(/*blob, length, opts*/) {\n}\n\n/* [MS-XLS] 2.4.122 TODO */\nfunction parse_Font(blob, length, opts) {\n\tvar o/*:any*/ = {\n\t\tdyHeight: blob.read_shift(2),\n\t\tfl: blob.read_shift(2)\n\t};\n\tswitch((opts && opts.biff) || 8) {\n\t\tcase 2: break;\n\t\tcase 3: case 4: blob.l += 2; break;\n\t\tdefault: blob.l += 10; break;\n\t}\n\to.name = parse_ShortXLUnicodeString(blob, 0, opts);\n\treturn o;\n}\nfunction write_Font(data, opts) {\n\tvar name = data.name || \"Arial\";\n\tvar b5 = (opts && (opts.biff == 5)), w = (b5 ? (15 + name.length) : (16 + 2 * name.length));\n\tvar o = new_buf(w);\n\to.write_shift(2, (data.sz || 12) * 20);\n\to.write_shift(4, 0);\n\to.write_shift(2, 400);\n\to.write_shift(4, 0);\n\to.write_shift(2, 0);\n\to.write_shift(1, name.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * name.length, name, (b5 ? \"sbcs\" : \"utf16le\"));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.149 */\nfunction parse_LabelSst(blob) {\n\tvar cell = parse_XLSCell(blob);\n\tcell.isst = blob.read_shift(4);\n\treturn cell;\n}\nfunction write_LabelSst(R/*:number*/, C/*:number*/, v/*:number*/, os/*:number*/ /*::, opts*/) {\n\tvar o = new_buf(10);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(4, v);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.148 */\nfunction parse_Label(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 2) opts.biff = 5;\n\tvar target = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) blob.l++;\n\tvar str = parse_XLUnicodeString(blob, target - blob.l, opts);\n\tcell.val = str;\n\treturn cell;\n}\nfunction write_Label(R/*:number*/, C/*:number*/, v/*:string*/, os/*:number*/, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(6 + 2 + (+b8) + (1 + b8) * v.length);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(2, v.length);\n\tif(b8) o.write_shift(1, 1);\n\to.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\n\treturn o;\n}\n\n\n/* [MS-XLS] 2.4.126 Number Formats */\nfunction parse_Format(blob, length, opts) {\n\tvar numFmtId = blob.read_shift(2);\n\tvar fmtstr = parse_XLUnicodeString2(blob, 0, opts);\n\treturn [numFmtId, fmtstr];\n}\nfunction write_Format(i/*:number*/, f/*:string*/, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? (3 + f.length) : (5 + 2 * f.length));\n\to.write_shift(2, i);\n\to.write_shift((b5 ? 1 : 2), f.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * f.length, f, (b5 ? 'sbcs' : 'utf16le'));\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(out.l == null) out.l = out.length;\n\treturn out;\n}\nvar parse_BIFF2Format = parse_XLUnicodeString2;\n\n/* [MS-XLS] 2.4.90 */\nfunction parse_Dimensions(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar r = blob.read_shift(w), R = blob.read_shift(w);\n\tvar c = blob.read_shift(2), C = blob.read_shift(2);\n\tblob.l = end;\n\treturn {s: {r:r, c:c}, e: {r:R, c:C}};\n}\nfunction write_Dimensions(range, opts) {\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar o = new_buf(2*w + 6);\n\to.write_shift(w, range.s.r);\n\to.write_shift(w, range.e.r + 1);\n\to.write_shift(2, range.s.c);\n\to.write_shift(2, range.e.c + 1);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.220 */\nfunction parse_RK(blob) {\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrec = parse_RkRec(blob);\n\treturn {r:rw, c:col, ixfe:rkrec[0], rknum:rkrec[1]};\n}\n\n/* [MS-XLS] 2.4.175 */\nfunction parse_MulRk(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrecs = [];\n\twhile(blob.l < target) rkrecs.push(parse_RkRec(blob));\n\tif(blob.l !== target) throw new Error(\"MulRK read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, rkrec:rkrecs};\n}\n/* [MS-XLS] 2.4.174 */\nfunction parse_MulBlank(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar ixfes = [];\n\twhile(blob.l < target) ixfes.push(blob.read_shift(2));\n\tif(blob.l !== target) throw new Error(\"MulBlank read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, ixfe:ixfes};\n}\n\n/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\nfunction parse_CellStyleXF(blob, length, style, opts) {\n\tvar o = {};\n\tvar a = blob.read_shift(4), b = blob.read_shift(4);\n\tvar c = blob.read_shift(4), d = blob.read_shift(2);\n\to.patternType = XLSFillPattern[c >> 26];\n\n\tif(!opts.cellStyles) return o;\n\to.alc = a & 0x07;\n\to.fWrap = (a >> 3) & 0x01;\n\to.alcV = (a >> 4) & 0x07;\n\to.fJustLast = (a >> 7) & 0x01;\n\to.trot = (a >> 8) & 0xFF;\n\to.cIndent = (a >> 16) & 0x0F;\n\to.fShrinkToFit = (a >> 20) & 0x01;\n\to.iReadOrder = (a >> 22) & 0x02;\n\to.fAtrNum = (a >> 26) & 0x01;\n\to.fAtrFnt = (a >> 27) & 0x01;\n\to.fAtrAlc = (a >> 28) & 0x01;\n\to.fAtrBdr = (a >> 29) & 0x01;\n\to.fAtrPat = (a >> 30) & 0x01;\n\to.fAtrProt = (a >> 31) & 0x01;\n\n\to.dgLeft = b & 0x0F;\n\to.dgRight = (b >> 4) & 0x0F;\n\to.dgTop = (b >> 8) & 0x0F;\n\to.dgBottom = (b >> 12) & 0x0F;\n\to.icvLeft = (b >> 16) & 0x7F;\n\to.icvRight = (b >> 23) & 0x7F;\n\to.grbitDiag = (b >> 30) & 0x03;\n\n\to.icvTop = c & 0x7F;\n\to.icvBottom = (c >> 7) & 0x7F;\n\to.icvDiag = (c >> 14) & 0x7F;\n\to.dgDiag = (c >> 21) & 0x0F;\n\n\to.icvFore = d & 0x7F;\n\to.icvBack = (d >> 7) & 0x7F;\n\to.fsxButton = (d >> 14) & 0x01;\n\treturn o;\n}\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\n\n/* [MS-XLS] 2.4.353 TODO: actually do this right */\nfunction parse_XF(blob, length, opts) {\n\tvar o = {};\n\to.ifnt = blob.read_shift(2); o.numFmtId = blob.read_shift(2); o.flags = blob.read_shift(2);\n\to.fStyle = (o.flags >> 2) & 0x01;\n\tlength -= 6;\n\to.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\n\treturn o;\n}\nfunction write_XF(data, ixfeP, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? 16 : 20);\n\to.write_shift(2, 0);\n\tif(data.style) {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, 0xFFF4);\n\t} else {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, (ixfeP<<4));\n\t}\n\tvar f = 0;\n\tif(data.numFmtId > 0 && b5) f |= 0x0400;\n\to.write_shift(4, f);\n\to.write_shift(4, 0);\n\tif(!b5) o.write_shift(4, 0);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.134 */\nfunction parse_Guts(blob) {\n\tblob.l += 4;\n\tvar out = [blob.read_shift(2), blob.read_shift(2)];\n\tif(out[0] !== 0) out[0]--;\n\tif(out[1] !== 0) out[1]--;\n\tif(out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\n\treturn out;\n}\nfunction write_Guts(guts/*:Array<number>*/) {\n\tvar o = new_buf(8);\n\to.write_shift(4, 0);\n\to.write_shift(2, guts[0] ? guts[0] + 1 : 0);\n\to.write_shift(2, guts[1] ? guts[1] + 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.24 */\nfunction parse_BoolErr(blob, length, opts) {\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2 || length == 9) ++blob.l;\n\tvar val = parse_Bes(blob, 2);\n\tcell.val = val;\n\tcell.t = (val === true || val === false) ? 'b' : 'e';\n\treturn cell;\n}\nfunction write_BoolErr(R/*:number*/, C/*:number*/, v, os/*:number*/, opts, t/*:string*/) {\n\tvar o = new_buf(8);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Bes(v, t, o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.180 Number */\nfunction parse_Number(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 2) opts.biff = 5;\n\tvar cell = parse_XLSCell(blob, 6);\n\tvar xnum = parse_Xnum(blob, 8);\n\tcell.val = xnum;\n\treturn cell;\n}\nfunction write_Number(R/*:number*/, C/*:number*/, v, os/*:: :number, opts*/) {\n\tvar o = new_buf(14);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Xnum(v, o);\n\treturn o;\n}\n\nvar parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\n\n/* [MS-XLS] 2.4.271 */\nfunction parse_SupBook(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar ctab = blob.read_shift(2);\n\tvar cch = blob.read_shift(2);\n\topts.sbcch = cch;\n\tif(cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\n\tif(cch < 0x01 || cch >0xff) throw new Error(\"Unexpected SupBook type: \"+cch);\n\tvar virtPath = parse_XLUnicodeStringNoCch(blob, cch);\n\t/* TODO: 2.5.277 Virtual Path */\n\tvar rgst = [];\n\twhile(end > blob.l) rgst.push(parse_XLUnicodeString(blob));\n\treturn [cch, ctab, virtPath, rgst];\n}\n\n/* [MS-XLS] 2.4.105 TODO */\nfunction parse_ExternName(blob, length, opts) {\n\tvar flags = blob.read_shift(2);\n\tvar body;\n\tvar o = ({\n\t\tfBuiltIn: flags & 0x01,\n\t\tfWantAdvise: (flags >>> 1) & 0x01,\n\t\tfWantPict: (flags >>> 2) & 0x01,\n\t\tfOle: (flags >>> 3) & 0x01,\n\t\tfOleLink: (flags >>> 4) & 0x01,\n\t\tcf: (flags >>> 5) & 0x3FF,\n\t\tfIcon: flags >>> 15 & 0x01\n\t}/*:any*/);\n\tif(opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length-2, opts);\n\t//else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\n\to.body = body || blob.read_shift(length-2);\n\tif(typeof body === \"string\") o.Name = body;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.150 TODO */\nvar XLSLblBuiltIn = [\n\t\"_xlnm.Consolidate_Area\",\n\t\"_xlnm.Auto_Open\",\n\t\"_xlnm.Auto_Close\",\n\t\"_xlnm.Extract\",\n\t\"_xlnm.Database\",\n\t\"_xlnm.Criteria\",\n\t\"_xlnm.Print_Area\",\n\t\"_xlnm.Print_Titles\",\n\t\"_xlnm.Recorder\",\n\t\"_xlnm.Data_Form\",\n\t\"_xlnm.Auto_Activate\",\n\t\"_xlnm.Auto_Deactivate\",\n\t\"_xlnm.Sheet_Title\",\n\t\"_xlnm._FilterDatabase\"\n];\nfunction parse_Lbl(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar flags = blob.read_shift(2);\n\tvar chKey = blob.read_shift(1);\n\tvar cch = blob.read_shift(1);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar itab = 0;\n\tif(!opts || opts.biff >= 5) {\n\t\tif(opts.biff != 5) blob.l += 2;\n\t\titab = blob.read_shift(2);\n\t\tif(opts.biff == 5) blob.l += 2;\n\t\tblob.l += 4;\n\t}\n\tvar name = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tif(flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\n\tvar npflen = target - blob.l; if(opts && opts.biff == 2) --npflen;\n\t/*jshint -W018 */\n\tvar rgce = (target == blob.l || cce === 0 || !(npflen > 0)) ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\n\t/*jshint +W018 */\n\treturn {\n\t\tchKey: chKey,\n\t\tName: name,\n\t\titab: itab,\n\t\trgce: rgce\n\t};\n}\n\n/* [MS-XLS] 2.4.106 TODO: verify filename encoding */\nfunction parse_ExternSheet(blob, length, opts) {\n\tif(opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\n\tvar o = [], target = blob.l + length, len = blob.read_shift(opts.biff > 8 ? 4 : 2);\n\twhile(len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\n\t\t// [iSupBook, itabFirst, itabLast];\n\tif(blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\n\treturn o;\n}\nfunction parse_BIFF5ExternSheet(blob, length, opts) {\n\tif(blob[blob.l + 1] == 0x03) blob[blob.l]++;\n\tvar o = parse_ShortXLUnicodeString(blob, length, opts);\n\treturn o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\n}\n\n/* [MS-XLS] 2.4.176 TODO: check older biff */\nfunction parse_NameCmt(blob, length, opts) {\n\tif(opts.biff < 8) { blob.l += length; return; }\n\tvar cchName = blob.read_shift(2);\n\tvar cchComment = blob.read_shift(2);\n\tvar name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\n\tvar comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\n\treturn [name, comment];\n}\n\n/* [MS-XLS] 2.4.260 */\nfunction parse_ShrFmla(blob, length, opts) {\n\tvar ref = parse_RefU(blob, 6);\n\tblob.l++;\n\tvar cUse = blob.read_shift(1);\n\tlength -= 8;\n\treturn [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\n}\n\n/* [MS-XLS] 2.4.4 TODO */\nfunction parse_Array(blob, length, opts) {\n\tvar ref = parse_Ref(blob, 6);\n\t/* TODO: fAlwaysCalc */\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l ++; length -= 7; break;\n\t\tcase 3: case 4: blob.l += 2; length -= 8; break;\n\t\tdefault: blob.l += 6; length -= 12;\n\t}\n\treturn [ref, parse_ArrayParsedFormula(blob, length, opts, ref)];\n}\n\n/* [MS-XLS] 2.4.173 */\nfunction parse_MTRSettings(blob) {\n\tvar fMTREnabled = blob.read_shift(4) !== 0x00;\n\tvar fUserSetThreadCount = blob.read_shift(4) !== 0x00;\n\tvar cUserThreadCount = blob.read_shift(4);\n\treturn [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\n}\n\n/* [MS-XLS] 2.5.186 TODO: BIFF5 */\nfunction parse_NoteSh(blob, length, opts) {\n\tif(opts.biff < 8) return;\n\tvar row = blob.read_shift(2), col = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), idObj = blob.read_shift(2);\n\tvar stAuthor = parse_XLUnicodeString2(blob, 0, opts);\n\tif(opts.biff < 8) blob.read_shift(1);\n\treturn [{r:row,c:col}, stAuthor, idObj, flags];\n}\n\n/* [MS-XLS] 2.4.179 */\nfunction parse_Note(blob, length, opts) {\n\t/* TODO: Support revisions */\n\treturn parse_NoteSh(blob, length, opts);\n}\n\n/* [MS-XLS] 2.4.168 */\nfunction parse_MergeCells(blob, length)/*:Array<Range>*/ {\n\tvar merges/*:Array<Range>*/ = [];\n\tvar cmcs = blob.read_shift(2);\n\twhile (cmcs--) merges.push(parse_Ref8U(blob,length));\n\treturn merges;\n}\nfunction write_MergeCells(merges/*:Array<Range>*/) {\n\tvar o = new_buf(2 + merges.length * 8);\n\to.write_shift(2, merges.length);\n\tfor(var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.181 TODO: parse all the things! */\nfunction parse_Obj(blob, length, opts) {\n\tif(opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\n\tvar cmo = parse_FtCmo(blob, 22); // id, ot, flags\n\tvar fts = parse_FtArray(blob, length-22, cmo[1]);\n\treturn { cmo: cmo, ft:fts };\n}\n/* from older spec */\nvar parse_BIFF5OT = {\n0x08: function(blob, length) {\n\tvar tgt = blob.l + length;\n\tblob.l += 10; // todo\n\tvar cf = blob.read_shift(2);\n\tblob.l += 4;\n\tblob.l += 2; //var cbPictFmla = blob.read_shift(2);\n\tblob.l += 2;\n\tblob.l += 2; //var grbit = blob.read_shift(2);\n\tblob.l += 4;\n\tvar cchName = blob.read_shift(1);\n\tblob.l += cchName; // TODO: stName\n\tblob.l = tgt; // TODO: fmla\n\treturn { fmt:cf };\n}\n};\n\nfunction parse_BIFF5Obj(blob, length, opts) {\n\tblob.l += 4; //var cnt = blob.read_shift(4);\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar grbit = blob.read_shift(2);\n\tblob.l += 2; //var colL = blob.read_shift(2);\n\tblob.l += 2; //var dxL = blob.read_shift(2);\n\tblob.l += 2; //var rwT = blob.read_shift(2);\n\tblob.l += 2; //var dyT = blob.read_shift(2);\n\tblob.l += 2; //var colR = blob.read_shift(2);\n\tblob.l += 2; //var dxR = blob.read_shift(2);\n\tblob.l += 2; //var rwB = blob.read_shift(2);\n\tblob.l += 2; //var dyB = blob.read_shift(2);\n\tblob.l += 2; //var cbMacro = blob.read_shift(2);\n\tblob.l += 6;\n\tlength -= 36;\n\tvar fts = [];\n\tfts.push((parse_BIFF5OT[ot]||parsenoop)(blob, length, opts));\n\treturn { cmo: [id, ot, grbit], ft:fts };\n}\n\n/* [MS-XLS] 2.4.329 TODO: parse properly */\nfunction parse_TxO(blob, length, opts) {\n\tvar s = blob.l;\n\tvar texts = \"\";\ntry {\n\tblob.l += 4;\n\tvar ot = (opts.lastobj||{cmo:[0,0]}).cmo[1];\n\tvar controlInfo; // eslint-disable-line no-unused-vars\n\tif([0,5,7,11,12,14].indexOf(ot) == -1) blob.l += 6;\n\telse controlInfo = parse_ControlInfo(blob, 6, opts); // eslint-disable-line no-unused-vars\n\tvar cchText = blob.read_shift(2);\n\t/*var cbRuns = */blob.read_shift(2);\n\t/*var ifntEmpty = */parseuint16(blob, 2);\n\tvar len = blob.read_shift(2);\n\tblob.l += len;\n\t//var fmla = parse_ObjFmla(blob, s + length - blob.l);\n\n\tfor(var i = 1; i < blob.lens.length-1; ++i) {\n\t\tif(blob.l-s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\n\t\tvar hdr = blob[blob.l];\n\t\tvar t = parse_XLUnicodeStringNoCch(blob, blob.lens[i+1]-blob.lens[i]-1);\n\t\ttexts += t;\n\t\tif(texts.length >= (hdr ? cchText : 2*cchText)) break;\n\t}\n\tif(texts.length !== cchText && texts.length !== cchText*2) {\n\t\tthrow new Error(\"cchText: \" + cchText + \" != \" + texts.length);\n\t}\n\n\tblob.l = s + length;\n\t/* [MS-XLS] 2.5.272 TxORuns */\n//\tvar rgTxoRuns = [];\n//\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\n//\tvar cchText2 = blob.read_shift(2);\n//\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\n//\tblob.l += 6;\n//\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\n\treturn { t: texts };\n} catch(e) { blob.l = s + length; return { t: texts }; }\n}\n\n/* [MS-XLS] 2.4.140 */\nfunction parse_HLink(blob, length) {\n\tvar ref = parse_Ref8U(blob, 8);\n\tblob.l += 16; /* CLSID */\n\tvar hlink = parse_Hyperlink(blob, length-24);\n\treturn [ref, hlink];\n}\nfunction write_HLink(hl) {\n\tvar O = new_buf(24);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tvar clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\tfor(var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\n\treturn bconcat([O, write_Hyperlink(hl[1])]);\n}\n\n\n/* [MS-XLS] 2.4.141 */\nfunction parse_HLinkTooltip(blob, length) {\n\tblob.read_shift(2);\n\tvar ref = parse_Ref8U(blob, 8);\n\tvar wzTooltip = blob.read_shift((length-10)/2, 'dbcs-cont');\n\twzTooltip = wzTooltip.replace(chr0,\"\");\n\treturn [ref, wzTooltip];\n}\nfunction write_HLinkTooltip(hl) {\n\tvar TT = hl[1].Tooltip;\n\tvar O = new_buf(10 + 2 * (TT.length + 1));\n\tO.write_shift(2, 0x0800);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tfor(var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\n\tO.write_shift(2, 0);\n\treturn O;\n}\n\n/* [MS-XLS] 2.4.63 */\nfunction parse_Country(blob)/*:[string|number, string|number]*/ {\n\tvar o = [0,0], d;\n\td = blob.read_shift(2); o[0] = CountryEnum[d] || d;\n\td = blob.read_shift(2); o[1] = CountryEnum[d] || d;\n\treturn o;\n}\nfunction write_Country(o) {\n\tif(!o) o = new_buf(4);\n\to.write_shift(2, 0x01);\n\to.write_shift(2, 0x01);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.50 ClrtClient */\nfunction parse_ClrtClient(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.188 */\nfunction parse_Palette(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.354 */\nfunction parse_XFCRC(blob) {\n\tblob.l += 2;\n\tvar o = {cxfs:0, crc:0};\n\to.cxfs = blob.read_shift(2);\n\to.crc = blob.read_shift(4);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.53 TODO: parse flags */\n/* [MS-XLSB] 2.4.323 TODO: parse flags */\nfunction parse_ColInfo(blob, length, opts) {\n\tif(!opts.cellStyles) return parsenoop(blob, length);\n\tvar w = opts && opts.biff >= 12 ? 4 : 2;\n\tvar colFirst = blob.read_shift(w);\n\tvar colLast = blob.read_shift(w);\n\tvar coldx = blob.read_shift(w);\n\tvar ixfe = blob.read_shift(w);\n\tvar flags = blob.read_shift(2);\n\tif(w == 2) blob.l += 2;\n\tvar o = ({s:colFirst, e:colLast, w:coldx, ixfe:ixfe, flags:flags}/*:any*/);\n\tif(opts.biff >= 5 || !opts.biff) o.level = (flags >> 8) & 0x7;\n\treturn o;\n}\nfunction write_ColInfo(col, idx) {\n\tvar o = new_buf(12);\n\to.write_shift(2, idx);\n\to.write_shift(2, idx);\n\to.write_shift(2, col.width * 256);\n\to.write_shift(2, 0);\n\tvar f = 0;\n\tif(col.hidden) f |= 1;\n\to.write_shift(1, f);\n\tf = col.level || 0;\n\to.write_shift(1, f);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.257 */\nfunction parse_Setup(blob, length) {\n\tvar o = {};\n\tif(length < 32) return o;\n\tblob.l += 16;\n\to.header = parse_Xnum(blob, 8);\n\to.footer = parse_Xnum(blob, 8);\n\tblob.l += 2;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.261 */\nfunction parse_ShtProps(blob, length, opts) {\n\tvar def = {area:false};\n\tif(opts.biff != 5) { blob.l += length; return def; }\n\tvar d = blob.read_shift(1); blob.l += 3;\n\tif((d & 0x10)) def.area = true;\n\treturn def;\n}\n\n/* [MS-XLS] 2.4.241 */\nfunction write_RRTabId(n/*:number*/) {\n\tvar out = new_buf(2 * n);\n\tfor(var i = 0; i < n; ++i) out.write_shift(2, i+1);\n\treturn out;\n}\n\nvar parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\nvar parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\nvar parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\n\n/* --- Specific to versions before BIFF8 --- */\nfunction parse_ImData(blob) {\n\tvar cf = blob.read_shift(2);\n\tvar env = blob.read_shift(2);\n\tvar lcb = blob.read_shift(4);\n\tvar o = {fmt:cf, env:env, len:lcb, data:blob.slice(blob.l,blob.l+lcb)};\n\tblob.l += lcb;\n\treturn o;\n}\n\n/* BIFF2_??? where ??? is the name from [XLS] */\nfunction parse_BIFF2STR(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 5) opts.biff = 2;\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar str = parse_XLUnicodeString2(blob, length-7, opts);\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n\nfunction parse_BIFF2NUM(blob/*::, length*/) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar num = parse_Xnum(blob, 8);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2NUM(r/*:number*/, c/*:number*/, val/*:number*/) {\n\tvar out = new_buf(15);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(8, val, 'f');\n\treturn out;\n}\n\nfunction parse_BIFF2INT(blob) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar num = blob.read_shift(2);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2INT(r/*:number*/, c/*:number*/, val/*:number*/) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(2, val);\n\treturn out;\n}\n\nfunction parse_BIFF2STRING(blob) {\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, 'sbcs-cont');\n}\n\n/* TODO: convert to BIFF8 font struct */\nfunction parse_BIFF2FONTXTRA(blob, length) {\n\tblob.l += 6; // unknown\n\tblob.l += 2; // font weight \"bls\"\n\tblob.l += 1; // charset\n\tblob.l += 3; // unknown\n\tblob.l += 1; // font family\n\tblob.l += length - 13;\n}\n\n/* TODO: parse rich text runs */\nfunction parse_RString(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tvar cch = blob.read_shift(2);\n\tvar str = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tblob.l = end;\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n/* from js-harb (C) 2014-present  SheetJS */\nvar DBF_SUPPORTED_VERSIONS = [0x02, 0x03, 0x30, 0x31, 0x83, 0x8B, 0x8C, 0xF5];\nvar DBF = /*#__PURE__*/(function() {\nvar dbf_codepage_map = {\n\t/* Code Pages Supported by Visual FoxPro */\n\t/*::[*/0x01/*::]*/:   437,           /*::[*/0x02/*::]*/:   850,\n\t/*::[*/0x03/*::]*/:  1252,           /*::[*/0x04/*::]*/: 10000,\n\t/*::[*/0x64/*::]*/:   852,           /*::[*/0x65/*::]*/:   866,\n\t/*::[*/0x66/*::]*/:   865,           /*::[*/0x67/*::]*/:   861,\n\t/*::[*/0x68/*::]*/:   895,           /*::[*/0x69/*::]*/:   620,\n\t/*::[*/0x6A/*::]*/:   737,           /*::[*/0x6B/*::]*/:   857,\n\t/*::[*/0x78/*::]*/:   950,           /*::[*/0x79/*::]*/:   949,\n\t/*::[*/0x7A/*::]*/:   936,           /*::[*/0x7B/*::]*/:   932,\n\t/*::[*/0x7C/*::]*/:   874,           /*::[*/0x7D/*::]*/:  1255,\n\t/*::[*/0x7E/*::]*/:  1256,           /*::[*/0x96/*::]*/: 10007,\n\t/*::[*/0x97/*::]*/: 10029,           /*::[*/0x98/*::]*/: 10006,\n\t/*::[*/0xC8/*::]*/:  1250,           /*::[*/0xC9/*::]*/:  1251,\n\t/*::[*/0xCA/*::]*/:  1254,           /*::[*/0xCB/*::]*/:  1253,\n\n\t/* shapefile DBF extension */\n\t/*::[*/0x00/*::]*/: 20127,           /*::[*/0x08/*::]*/:   865,\n\t/*::[*/0x09/*::]*/:   437,           /*::[*/0x0A/*::]*/:   850,\n\t/*::[*/0x0B/*::]*/:   437,           /*::[*/0x0D/*::]*/:   437,\n\t/*::[*/0x0E/*::]*/:   850,           /*::[*/0x0F/*::]*/:   437,\n\t/*::[*/0x10/*::]*/:   850,           /*::[*/0x11/*::]*/:   437,\n\t/*::[*/0x12/*::]*/:   850,           /*::[*/0x13/*::]*/:   932,\n\t/*::[*/0x14/*::]*/:   850,           /*::[*/0x15/*::]*/:   437,\n\t/*::[*/0x16/*::]*/:   850,           /*::[*/0x17/*::]*/:   865,\n\t/*::[*/0x18/*::]*/:   437,           /*::[*/0x19/*::]*/:   437,\n\t/*::[*/0x1A/*::]*/:   850,           /*::[*/0x1B/*::]*/:   437,\n\t/*::[*/0x1C/*::]*/:   863,           /*::[*/0x1D/*::]*/:   850,\n\t/*::[*/0x1F/*::]*/:   852,           /*::[*/0x22/*::]*/:   852,\n\t/*::[*/0x23/*::]*/:   852,           /*::[*/0x24/*::]*/:   860,\n\t/*::[*/0x25/*::]*/:   850,           /*::[*/0x26/*::]*/:   866,\n\t/*::[*/0x37/*::]*/:   850,           /*::[*/0x40/*::]*/:   852,\n\t/*::[*/0x4D/*::]*/:   936,           /*::[*/0x4E/*::]*/:   949,\n\t/*::[*/0x4F/*::]*/:   950,           /*::[*/0x50/*::]*/:   874,\n\t/*::[*/0x57/*::]*/:  1252,           /*::[*/0x58/*::]*/:  1252,\n\t/*::[*/0x59/*::]*/:  1252,           /*::[*/0x6C/*::]*/:   863,\n\t/*::[*/0x86/*::]*/:   737,           /*::[*/0x87/*::]*/:   852,\n\t/*::[*/0x88/*::]*/:   857,           /*::[*/0xCC/*::]*/:  1257,\n\n\t/*::[*/0xFF/*::]*/: 16969\n};\nvar dbf_reverse_map = evert({\n\t/*::[*/0x01/*::]*/:   437,           /*::[*/0x02/*::]*/:   850,\n\t/*::[*/0x03/*::]*/:  1252,           /*::[*/0x04/*::]*/: 10000,\n\t/*::[*/0x64/*::]*/:   852,           /*::[*/0x65/*::]*/:   866,\n\t/*::[*/0x66/*::]*/:   865,           /*::[*/0x67/*::]*/:   861,\n\t/*::[*/0x68/*::]*/:   895,           /*::[*/0x69/*::]*/:   620,\n\t/*::[*/0x6A/*::]*/:   737,           /*::[*/0x6B/*::]*/:   857,\n\t/*::[*/0x78/*::]*/:   950,           /*::[*/0x79/*::]*/:   949,\n\t/*::[*/0x7A/*::]*/:   936,           /*::[*/0x7B/*::]*/:   932,\n\t/*::[*/0x7C/*::]*/:   874,           /*::[*/0x7D/*::]*/:  1255,\n\t/*::[*/0x7E/*::]*/:  1256,           /*::[*/0x96/*::]*/: 10007,\n\t/*::[*/0x97/*::]*/: 10029,           /*::[*/0x98/*::]*/: 10006,\n\t/*::[*/0xC8/*::]*/:  1250,           /*::[*/0xC9/*::]*/:  1251,\n\t/*::[*/0xCA/*::]*/:  1254,           /*::[*/0xCB/*::]*/:  1253,\n\t/*::[*/0x00/*::]*/: 20127\n});\n/* TODO: find an actual specification */\nfunction dbf_to_aoa(buf, opts)/*:AOA*/ {\n\tvar out/*:AOA*/ = [];\n\tvar d/*:Block*/ = (new_raw_buf(1)/*:any*/);\n\tswitch(opts.type) {\n\t\tcase 'base64': d = s2a(Base64_decode(buf)); break;\n\t\tcase 'binary': d = s2a(buf); break;\n\t\tcase 'buffer':\n\t\tcase 'array': d = buf; break;\n\t}\n\tprep_blob(d, 0);\n\n\t/* header */\n\tvar ft = d.read_shift(1);\n\tvar memo = !!(ft & 0x88);\n\tvar vfp = false, l7 = false;\n\tswitch(ft) {\n\t\tcase 0x02: break; // dBASE II\n\t\tcase 0x03: break; // dBASE III\n\t\tcase 0x30: vfp = true; memo = true; break; // VFP\n\t\tcase 0x31: vfp = true; memo = true; break; // VFP with autoincrement\n\t\t// 0x43 dBASE IV SQL table files\n\t\t// 0x63 dBASE IV SQL system files\n\t\tcase 0x83: break; // dBASE III with memo\n\t\tcase 0x8B: break; // dBASE IV with memo\n\t\tcase 0x8C: l7 = true; break; // dBASE Level 7 with memo\n\t\t// case 0xCB dBASE IV SQL table files with memo\n\t\tcase 0xF5: break; // FoxPro 2.x with memo\n\t\t// case 0xFB FoxBASE\n\t\tdefault: throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\n\t}\n\n\tvar nrow = 0, fpos = 0x0209;\n\tif(ft == 0x02) nrow = d.read_shift(2);\n\td.l += 3; // dBASE II stores DDMMYY date, others use YYMMDD\n\tif(ft != 0x02) nrow = d.read_shift(4);\n\tif(nrow > 1048576) nrow = 1e6;\n\n\tif(ft != 0x02) fpos = d.read_shift(2); // header length\n\tvar rlen = d.read_shift(2); // record length\n\n\tvar /*flags = 0,*/ current_cp = opts.codepage || 1252;\n\tif(ft != 0x02) { // 20 reserved bytes\n\t\td.l+=16;\n\t\t/*flags = */d.read_shift(1);\n\t\t//if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\n\n\t\t/* codepage present in FoxPro and dBASE Level 7 */\n\t\tif(d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];\n\t\td.l+=1;\n\n\t\td.l+=2;\n\t}\n\tif(l7) d.l += 36; // Level 7: 32 byte \"Language driver name\", 4 byte reserved\n\n/*:: type DBFField = { name:string; len:number; type:string; } */\n\tvar fields/*:Array<DBFField>*/ = [], field/*:DBFField*/ = ({}/*:any*/);\n\tvar hend = Math.min(d.length, (ft == 0x02 ? 0x209 : (fpos - 10 - (vfp ? 264 : 0))));\n\tvar ww = l7 ? 32 : 11;\n\twhile(d.l < hend && d[d.l] != 0x0d) {\n\t\tfield = ({}/*:any*/);\n\t\tfield.name = $cptable.utils.decode(current_cp, d.slice(d.l, d.l+ww)).replace(/[\\u0000\\r\\n].*$/g,\"\");\n\t\td.l += ww;\n\t\tfield.type = String.fromCharCode(d.read_shift(1));\n\t\tif(ft != 0x02 && !l7) field.offset = d.read_shift(4);\n\t\tfield.len = d.read_shift(1);\n\t\tif(ft == 0x02) field.offset = d.read_shift(2);\n\t\tfield.dec = d.read_shift(1);\n\t\tif(field.name.length) fields.push(field);\n\t\tif(ft != 0x02) d.l += l7 ? 13 : 14;\n\t\tswitch(field.type) {\n\t\t\tcase 'B': // Double (VFP) / Binary (dBASE L7)\n\t\t\t\tif((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase 'G': // General (FoxPro and dBASE L7)\n\t\t\tcase 'P': // Picture (FoxPro and dBASE L7)\n\t\t\t\tif(opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase '+': // Autoincrement (dBASE L7 only)\n\t\t\tcase '0': // _NullFlags (VFP only)\n\t\t\tcase '@': // Timestamp (dBASE L7 only)\n\t\t\tcase 'C': // Character (dBASE II)\n\t\t\tcase 'D': // Date (dBASE III)\n\t\t\tcase 'F': // Float (dBASE IV)\n\t\t\tcase 'I': // Long (VFP and dBASE L7)\n\t\t\tcase 'L': // Logical (dBASE II)\n\t\t\tcase 'M': // Memo (dBASE III)\n\t\t\tcase 'N': // Number (dBASE II)\n\t\t\tcase 'O': // Double (dBASE L7 only)\n\t\t\tcase 'T': // Datetime (VFP only)\n\t\t\tcase 'Y': // Currency (VFP only)\n\t\t\t\tbreak;\n\t\t\tdefault: throw new Error('Unknown Field Type: ' + field.type);\n\t\t}\n\t}\n\n\tif(d[d.l] !== 0x0D) d.l = fpos-1;\n\tif(d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\n\td.l = fpos;\n\n\t/* data */\n\tvar R = 0, C = 0;\n\tout[0] = [];\n\tfor(C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\n\twhile(nrow-- > 0) {\n\t\tif(d[d.l] === 0x2A) {\n\t\t\t// TODO: record marked as deleted -- create a hidden row?\n\t\t\td.l+=rlen;\n\t\t\tcontinue;\n\t\t}\n\t\t++d.l;\n\t\tout[++R] = []; C = 0;\n\t\tfor(C = 0; C != fields.length; ++C) {\n\t\t\tvar dd = d.slice(d.l, d.l+fields[C].len); d.l+=fields[C].len;\n\t\t\tprep_blob(dd, 0);\n\t\t\tvar s = $cptable.utils.decode(current_cp, dd);\n\t\t\tswitch(fields[C].type) {\n\t\t\t\tcase 'C':\n\t\t\t\t\t// NOTE: it is conventional to write '  /  /  ' for empty dates\n\t\t\t\t\tif(s.trim().length) out[R][C] = s.replace(/\\s+$/,\"\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(s.length === 8) out[R][C] = new Date(+s.slice(0,4), +s.slice(4,6)-1, +s.slice(6,8));\n\t\t\t\t\telse out[R][C] = s;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'F': out[R][C] = parseFloat(s.trim()); break;\n\t\t\t\tcase '+': case 'I': out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i'); break;\n\t\t\t\tcase 'L': switch(s.trim().toUpperCase()) {\n\t\t\t\t\tcase 'Y': case 'T': out[R][C] = true; break;\n\t\t\t\t\tcase 'N': case 'F': out[R][C] = false; break;\n\t\t\t\t\tcase '': case '?': break;\n\t\t\t\t\tdefault: throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'M': /* TODO: handle memo files */\n\t\t\t\t\tif(!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\n\t\t\t\t\tout[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10): dd.read_shift(4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'N':\n\t\t\t\t\ts = s.replace(/\\u0000/g,\"\").trim();\n\t\t\t\t\t// NOTE: dBASE II interprets \"  .  \" as 0\n\t\t\t\t\tif(s && s != \".\") out[R][C] = +s || 0; break;\n\t\t\t\tcase '@':\n\t\t\t\t\t// NOTE: dBASE specs appear to be incorrect\n\t\t\t\t\tout[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'T': out[R][C] = new Date((dd.read_shift(4) - 0x253D8C) * 0x5265C00 + dd.read_shift(4)); break;\n\t\t\t\tcase 'Y': out[R][C] = dd.read_shift(4,'i')/1e4 + (dd.read_shift(4, 'i')/1e4)*Math.pow(2,32); break;\n\t\t\t\tcase 'O': out[R][C] = -dd.read_shift(-8, 'f'); break;\n\t\t\t\tcase 'B': if(vfp && fields[C].len == 8) { out[R][C] = dd.read_shift(8,'f'); break; }\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'G': case 'P': dd.l += fields[C].len; break;\n\t\t\t\tcase '0':\n\t\t\t\t\tif(fields[C].name === '_NullFlags') break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault: throw new Error(\"DBF Unsupported data type \" + fields[C].type);\n\t\t\t}\n\t\t}\n\t}\n\tif(ft != 0x02) if(d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l-1) + \" of \" + d.length + \" \" + d[d.l-1].toString(16));\n\tif(opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\n\topts.DBF = fields;\n\treturn out;\n}\n\nfunction dbf_to_sheet(buf, opts)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tif(!o.dateNF) o.dateNF = \"yyyymmdd\";\n\tvar ws = aoa_to_sheet(dbf_to_aoa(buf, o), o);\n\tws[\"!cols\"] = o.DBF.map(function(field) { return {\n\t\twch: field.len,\n\t\tDBF: field\n\t};});\n\tdelete o.DBF;\n\treturn ws;\n}\n\nfunction dbf_to_workbook(buf, opts)/*:Workbook*/ {\n\ttry { return sheet_to_workbook(dbf_to_sheet(buf, opts), opts); }\n\tcatch(e) { if(opts && opts.WTF) throw e; }\n\treturn ({SheetNames:[],Sheets:{}});\n}\n\nvar _RLEN = { 'B': 8, 'C': 250, 'L': 1, 'D': 8, '?': 0, '': 0 };\nfunction sheet_to_dbf(ws/*:Worksheet*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\tif(o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\n\tvar ba = buf_array();\n\tvar aoa/*:AOA*/ = sheet_to_json(ws, {header:1, raw:true, cellDates:true});\n\tvar headers = aoa[0], data = aoa.slice(1), cols = ws[\"!cols\"] || [];\n\tvar i = 0, j = 0, hcnt = 0, rlen = 1;\n\tfor(i = 0; i < headers.length; ++i) {\n\t\tif(((cols[i]||{}).DBF||{}).name) { headers[i] = cols[i].DBF.name; ++hcnt; continue; }\n\t\tif(headers[i] == null) continue;\n\t\t++hcnt;\n\t\tif(typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\n\t\tif(typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + (typeof headers[i]) + \"|\");\n\t\tif(headers.indexOf(headers[i]) !== i) for(j=0; j<1024;++j)\n\t\t\tif(headers.indexOf(headers[i] + \"_\" + j) == -1) { headers[i] += \"_\" + j; break; }\n\t}\n\tvar range = safe_decode_range(ws['!ref']);\n\tvar coltypes/*:Array<string>*/ = [];\n\tvar colwidths/*:Array<number>*/ = [];\n\tvar coldecimals/*:Array<number>*/ = [];\n\tfor(i = 0; i <= range.e.c - range.s.c; ++i) {\n\t\tvar guess = '', _guess = '', maxlen = 0;\n\t\tvar col/*:Array<any>*/ = [];\n\t\tfor(j=0; j < data.length; ++j) {\n\t\t\tif(data[j][i] != null) col.push(data[j][i]);\n\t\t}\n\t\tif(col.length == 0 || headers[i] == null) { coltypes[i] = '?'; continue; }\n\t\tfor(j = 0; j < col.length; ++j) {\n\t\t\tswitch(typeof col[j]) {\n\t\t\t\t/* TODO: check if L2 compat is desired */\n\t\t\t\tcase 'number': _guess = 'B'; break;\n\t\t\t\tcase 'string': _guess = 'C'; break;\n\t\t\t\tcase 'boolean': _guess = 'L'; break;\n\t\t\t\tcase 'object': _guess = col[j] instanceof Date ? 'D' : 'C'; break;\n\t\t\t\tdefault: _guess = 'C';\n\t\t\t}\n\t\t\tmaxlen = Math.max(maxlen, String(col[j]).length);\n\t\t\tguess = guess && guess != _guess ? 'C' : _guess;\n\t\t\t//if(guess == 'C') break;\n\t\t}\n\t\tif(maxlen > 250) maxlen = 250;\n\t\t_guess = ((cols[i]||{}).DBF||{}).type;\n\t\t/* TODO: more fine grained control over DBF type resolution */\n\t\tif(_guess == 'C') {\n\t\t\tif(cols[i].DBF.len > maxlen) maxlen = cols[i].DBF.len;\n\t\t}\n\t\tif(guess == 'B' && _guess == 'N') {\n\t\t\tguess = 'N';\n\t\t\tcoldecimals[i] = cols[i].DBF.dec;\n\t\t\tmaxlen = cols[i].DBF.len;\n\t\t}\n\t\tcolwidths[i] = guess == 'C' || _guess == 'N' ? maxlen : (_RLEN[guess] || 0);\n\t\trlen += colwidths[i];\n\t\tcoltypes[i] = guess;\n\t}\n\n\tvar h = ba.next(32);\n\th.write_shift(4, 0x13021130);\n\th.write_shift(4, data.length);\n\th.write_shift(2, 296 + 32 * hcnt);\n\th.write_shift(2, rlen);\n\tfor(i=0; i < 4; ++i) h.write_shift(4, 0);\n\th.write_shift(4, 0x00000000 | ((+dbf_reverse_map[/*::String(*/current_ansi/*::)*/] || 0x03)<<8));\n\n\tfor(i = 0, j = 0; i < headers.length; ++i) {\n\t\tif(headers[i] == null) continue;\n\t\tvar hf = ba.next(32);\n\t\tvar _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\n\t\thf.write_shift(1, _f, \"sbcs\");\n\t\thf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\n\t\thf.write_shift(4, j);\n\t\thf.write_shift(1, colwidths[i] || _RLEN[coltypes[i]] || 0);\n\t\thf.write_shift(1, coldecimals[i] || 0);\n\t\thf.write_shift(1, 0x02);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(1, 0);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(4, 0);\n\t\tj += (colwidths[i] || _RLEN[coltypes[i]] || 0);\n\t}\n\n\tvar hb = ba.next(264);\n\thb.write_shift(4, 0x0000000D);\n\tfor(i=0; i < 65;++i) hb.write_shift(4, 0x00000000);\n\tfor(i=0; i < data.length; ++i) {\n\t\tvar rout = ba.next(rlen);\n\t\trout.write_shift(1, 0);\n\t\tfor(j=0; j<headers.length; ++j) {\n\t\t\tif(headers[j] == null) continue;\n\t\t\tswitch(coltypes[j]) {\n\t\t\t\tcase 'L': rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46); break;\n\t\t\t\tcase 'B': rout.write_shift(8, data[i][j]||0, 'f'); break;\n\t\t\t\tcase 'N':\n\t\t\t\t\tvar _n = \"0\";\n\t\t\t\t\tif(typeof data[i][j] == \"number\") _n = data[i][j].toFixed(coldecimals[j]||0);\n\t\t\t\t\tfor(hcnt=0; hcnt < colwidths[j]-_n.length; ++hcnt) rout.write_shift(1, 0x20);\n\t\t\t\t\trout.write_shift(1, _n, \"sbcs\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");\n\t\t\t\t\telse {\n\t\t\t\t\t\trout.write_shift(4, (\"0000\"+data[i][j].getFullYear()).slice(-4), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+(data[i][j].getMonth()+1)).slice(-2), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+data[i][j].getDate()).slice(-2), \"sbcs\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C':\n\t\t\t\t\tvar _s = String(data[i][j] != null ? data[i][j] : \"\").slice(0, colwidths[j]);\n\t\t\t\t\trout.write_shift(1, _s, \"sbcs\");\n\t\t\t\t\tfor(hcnt=0; hcnt < colwidths[j]-_s.length; ++hcnt) rout.write_shift(1, 0x20); break;\n\t\t\t}\n\t\t}\n\t\t// data\n\t}\n\tba.next(1).write_shift(1, 0x1A);\n\treturn ba.end();\n}\n\treturn {\n\t\tto_workbook: dbf_to_workbook,\n\t\tto_sheet: dbf_to_sheet,\n\t\tfrom_sheet: sheet_to_dbf\n\t};\n})();\n\nvar SYLK = /*#__PURE__*/(function() {\n\t/* TODO: stress test sequences */\n\tvar sylk_escapes = ({\n\t\tAA:'À', BA:'Á', CA:'Â', DA:195, HA:'Ä', JA:197,\n\t\tAE:'È', BE:'É', CE:'Ê',         HE:'Ë',\n\t\tAI:'Ì', BI:'Í', CI:'Î',         HI:'Ï',\n\t\tAO:'Ò', BO:'Ó', CO:'Ô', DO:213, HO:'Ö',\n\t\tAU:'Ù', BU:'Ú', CU:'Û',         HU:'Ü',\n\t\tAa:'à', Ba:'á', Ca:'â', Da:227, Ha:'ä', Ja:229,\n\t\tAe:'è', Be:'é', Ce:'ê',         He:'ë',\n\t\tAi:'ì', Bi:'í', Ci:'î',         Hi:'ï',\n\t\tAo:'ò', Bo:'ó', Co:'ô', Do:245, Ho:'ö',\n\t\tAu:'ù', Bu:'ú', Cu:'û',         Hu:'ü',\n\t\tKC:'Ç', Kc:'ç', q:'æ',  z:'œ',  a:'Æ',  j:'Œ',\n\t\tDN:209, Dn:241, Hy:255,\n\t\tS:169,  c:170,  R:174,  \"B \":180,\n\t\t/*::[*/0/*::]*/:176,    /*::[*/1/*::]*/:177,  /*::[*/2/*::]*/:178,\n\t\t/*::[*/3/*::]*/:179,    /*::[*/5/*::]*/:181,  /*::[*/6/*::]*/:182,\n\t\t/*::[*/7/*::]*/:183,    Q:185,  k:186,  b:208,  i:216,  l:222,  s:240,  y:248,\n\t\t\"!\":161, '\"':162, \"#\":163, \"(\":164, \"%\":165, \"'\":167, \"H \":168,\n\t\t\"+\":171, \";\":187, \"<\":188, \"=\":189, \">\":190, \"?\":191, \"{\":223\n\t}/*:any*/);\n\tvar sylk_char_regex = new RegExp(\"\\u001BN(\" + keys(sylk_escapes).join(\"|\").replace(/\\|\\|\\|/, \"|\\\\||\").replace(/([?()+])/g,\"\\\\$1\") + \"|\\\\|)\", \"gm\");\n\tvar sylk_char_fn = function(_, $1){ var o = sylk_escapes[$1]; return typeof o == \"number\" ? _getansi(o) : o; };\n\tvar decode_sylk_char = function($$, $1, $2) { var newcc = (($1.charCodeAt(0) - 0x20)<<4) | ($2.charCodeAt(0) - 0x30); return newcc == 59 ? $$ : _getansi(newcc); };\n\tsylk_escapes[\"|\"] = 254;\n\t/* TODO: find an actual specification */\n\tfunction sylk_to_aoa(d/*:RawData*/, opts)/*:[AOA, Worksheet]*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return sylk_to_aoa_str(Base64_decode(d), opts);\n\t\t\tcase 'binary': return sylk_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return sylk_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array': return sylk_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction sylk_to_aoa_str(str/*:string*/, opts)/*:[AOA, Worksheet]*/ {\n\t\tvar records = str.split(/[\\n\\r]+/), R = -1, C = -1, ri = 0, rj = 0, arr/*:AOA*/ = [];\n\t\tvar formats/*:Array<string>*/ = [];\n\t\tvar next_cell_format/*:string|null*/ = null;\n\t\tvar sht = {}, rowinfo/*:Array<RowInfo>*/ = [], colinfo/*:Array<ColInfo>*/ = [], cw/*:Array<string>*/ = [];\n\t\tvar Mval = 0, j;\n\t\tif(+opts.codepage >= 0) set_cp(+opts.codepage);\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tMval = 0;\n\t\t\tvar rstr=records[ri].trim().replace(/\\x1B([\\x20-\\x2F])([\\x30-\\x3F])/g, decode_sylk_char).replace(sylk_char_regex, sylk_char_fn);\n\t\t\tvar record=rstr.replace(/;;/g, \"\\u0000\").split(\";\").map(function(x) { return x.replace(/\\u0000/g, \";\"); });\n\t\t\tvar RT=record[0], val;\n\t\t\tif(rstr.length > 0) switch(RT) {\n\t\t\tcase 'ID': break; /* header */\n\t\t\tcase 'E': break; /* EOF */\n\t\t\tcase 'B': break; /* dimensions */\n\t\t\tcase 'O': break; /* options? */\n\t\t\tcase 'W': break; /* window? */\n\t\t\tcase 'P':\n\t\t\t\tif(record[1].charAt(0) == 'P')\n\t\t\t\t\tformats.push(rstr.slice(3).replace(/;;/g, \";\"));\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\tvar C_seen_K = false, C_seen_X = false, C_seen_S = false, C_seen_E = false, _R = -1, _C = -1;\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'A': break; // TODO: comment\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1))-1; C_seen_X = true; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1; if(!C_seen_X) C = 0;\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'K':\n\t\t\t\t\tval = record[rj].slice(1);\n\t\t\t\t\tif(val.charAt(0) === '\"') val = val.slice(1,val.length - 1);\n\t\t\t\t\telse if(val === 'TRUE') val = true;\n\t\t\t\t\telse if(val === 'FALSE') val = false;\n\t\t\t\t\telse if(!isNaN(fuzzynum(val))) {\n\t\t\t\t\t\tval = fuzzynum(val);\n\t\t\t\t\t\tif(next_cell_format !== null && fmt_is_date(next_cell_format)) val = numdate(val);\n\t\t\t\t\t} else if(!isNaN(fuzzydate(val).getDate())) {\n\t\t\t\t\t\tval = parseDate(val);\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof $cptable !== 'undefined' && typeof val == \"string\" && ((opts||{}).type != \"string\") && (opts||{}).codepage) val = $cptable.utils.decode(opts.codepage, val);\n\t\t\t\t\tC_seen_K = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\t\tC_seen_E = true;\n\t\t\t\t\tvar formula = rc_to_a1(record[rj].slice(1), {r:R,c:C});\n\t\t\t\t\tarr[R][C] = [arr[R][C], formula];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tC_seen_S = true;\n\t\t\t\t\tarr[R][C] = [arr[R][C], \"S5S\"];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G': break; // unknown\n\t\t\t\tcase 'R': _R = parseInt(record[rj].slice(1))-1; break;\n\t\t\t\tcase 'C': _C = parseInt(record[rj].slice(1))-1; break;\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(C_seen_K) {\n\t\t\t\tif(arr[R][C] && arr[R][C].length == 2) arr[R][C][0] = val;\n\t\t\t\telse arr[R][C] = val;\n\t\t\t\tnext_cell_format = null;\n\t\t\t}\n\t\t\tif(C_seen_S) {\n\t\t\t\tif(C_seen_E) throw new Error(\"SYLK shared formula cannot have own formula\");\n\t\t\t\tvar shrbase = _R > -1 && arr[_R][_C];\n\t\t\t\tif(!shrbase || !shrbase[1]) throw new Error(\"SYLK shared formula cannot find base\");\n\t\t\t\tarr[R][C][1] = shift_formula_str(shrbase[1], {r: R - _R, c: C - _C});\n\t\t\t}\n\t\t\tbreak;\n\t\t\tcase 'F':\n\t\t\tvar F_seen = 0;\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1))-1; ++F_seen; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1; /*C = 0;*/\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'M': Mval = parseInt(record[rj].slice(1)) / 20; break;\n\t\t\t\tcase 'F': break; /* ??? */\n\t\t\t\tcase 'G': break; /* hide grid */\n\t\t\t\tcase 'P':\n\t\t\t\t\tnext_cell_format = formats[parseInt(record[rj].slice(1))];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S': break; /* cell style */\n\t\t\t\tcase 'D': break; /* column */\n\t\t\t\tcase 'N': break; /* font */\n\t\t\t\tcase 'W':\n\t\t\t\t\tcw = record[rj].slice(1).split(\" \");\n\t\t\t\t\tfor(j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\n\t\t\t\t\t\tMval = parseInt(cw[2], 10);\n\t\t\t\t\t\tcolinfo[j-1] = Mval === 0 ? {hidden:true}: {wch:Mval}; process_col(colinfo[j-1]);\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C': /* default column format */\n\t\t\t\t\tC = parseInt(record[rj].slice(1))-1;\n\t\t\t\t\tif(!colinfo[C]) colinfo[C] = {};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R': /* row properties */\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1;\n\t\t\t\t\tif(!rowinfo[R]) rowinfo[R] = {};\n\t\t\t\t\tif(Mval > 0) { rowinfo[R].hpt = Mval; rowinfo[R].hpx = pt2px(Mval); }\n\t\t\t\t\telse if(Mval === 0) rowinfo[R].hidden = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(F_seen < 1) next_cell_format = null; break;\n\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t}\n\t\tif(rowinfo.length > 0) sht['!rows'] = rowinfo;\n\t\tif(colinfo.length > 0) sht['!cols'] = colinfo;\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn [arr, sht];\n\t}\n\n\tfunction sylk_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tvar aoasht = sylk_to_aoa(d, opts);\n\t\tvar aoa = aoasht[0], ws = aoasht[1];\n\t\tvar o = aoa_to_sheet(aoa, opts);\n\t\tkeys(ws).forEach(function(k) { o[k] = ws[k]; });\n\t\treturn o;\n\t}\n\n\tfunction sylk_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(sylk_to_sheet(d, opts), opts); }\n\n\tfunction write_ws_cell_sylk(cell/*:Cell*/, ws/*:Worksheet*/, R/*:number*/, C/*:number*//*::, opts*/)/*:string*/ {\n\t\tvar o = \"C;Y\" + (R+1) + \";X\" + (C+1) + \";K\";\n\t\tswitch(cell.t) {\n\t\t\tcase 'n':\n\t\t\t\to += (cell.v||0);\n\t\t\t\tif(cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {r:R, c:C}); break;\n\t\t\tcase 'b': o += cell.v ? \"TRUE\" : \"FALSE\"; break;\n\t\t\tcase 'e': o += cell.w || cell.v; break;\n\t\t\tcase 'd': o += '\"' + (cell.w || cell.v) + '\"'; break;\n\t\t\tcase 's': o += '\"' + cell.v.replace(/\"/g,\"\").replace(/;/g, \";;\") + '\"'; break;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction write_ws_cols_sylk(out, cols) {\n\t\tcols.forEach(function(col, i) {\n\t\t\tvar rec = \"F;W\" + (i+1) + \" \" + (i+1) + \" \";\n\t\t\tif(col.hidden) rec += \"0\";\n\t\t\telse {\n\t\t\t\tif(typeof col.width == 'number' && !col.wpx) col.wpx = width2px(col.width);\n\t\t\t\tif(typeof col.wpx == 'number' && !col.wch) col.wch = px2char(col.wpx);\n\t\t\t\tif(typeof col.wch == 'number') rec += Math.round(col.wch);\n\t\t\t}\n\t\t\tif(rec.charAt(rec.length - 1) != \" \") out.push(rec);\n\t\t});\n\t}\n\n\tfunction write_ws_rows_sylk(out/*:Array<string>*/, rows/*:Array<RowInfo>*/) {\n\t\trows.forEach(function(row, i) {\n\t\t\tvar rec = \"F;\";\n\t\t\tif(row.hidden) rec += \"M0;\";\n\t\t\telse if(row.hpt) rec += \"M\" + 20 * row.hpt + \";\";\n\t\t\telse if(row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\n\t\t\tif(rec.length > 2) out.push(rec + \"R\" + (i+1));\n\t\t});\n\t}\n\n\tfunction sheet_to_sylk(ws/*:Worksheet*/, opts/*:?any*/)/*:string*/ {\n\t\tvar preamble/*:Array<string>*/ = [\"ID;PWXL;N;E\"], o/*:Array<string>*/ = [];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = Array.isArray(ws);\n\t\tvar RS = \"\\r\\n\";\n\n\t\tpreamble.push(\"P;PGeneral\");\n\t\tpreamble.push(\"F;P0;DG0G8;M255\");\n\t\tif(ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\n\t\tif(ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\n\n\t\tpreamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c,r.s.r,r.e.c,r.e.r].join(\" \"));\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C]: ws[coord];\n\t\t\t\tif(!cell || (cell.v == null && (!cell.f || cell.F))) continue;\n\t\t\t\to.push(write_ws_cell_sylk(cell, ws, R, C, opts));\n\t\t\t}\n\t\t}\n\t\treturn preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\n\t}\n\n\treturn {\n\t\tto_workbook: sylk_to_workbook,\n\t\tto_sheet: sylk_to_sheet,\n\t\tfrom_sheet: sheet_to_sylk\n\t};\n})();\n\nvar DIF = /*#__PURE__*/(function() {\n\tfunction dif_to_aoa(d/*:RawData*/, opts)/*:AOA*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return dif_to_aoa_str(Base64_decode(d), opts);\n\t\t\tcase 'binary': return dif_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return dif_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array': return dif_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction dif_to_aoa_str(str/*:string*/, opts)/*:AOA*/ {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tif (records[ri].trim() === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\tif (R < 0) continue;\n\t\t\tvar metadata = records[ri].trim().split(\",\");\n\t\t\tvar type = metadata[0], value = metadata[1];\n\t\t\t++ri;\n\t\t\tvar data = records[ri] || \"\";\n\t\t\twhile(((data.match(/[\"]/g)||[]).length & 1) && ri < records.length - 1) data += \"\\n\" + records[++ri];\n\t\t\tdata = data.trim();\n\t\t\tswitch (+type) {\n\t\t\t\tcase -1:\n\t\t\t\t\tif (data === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\t\t\telse if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\tif(data === 'TRUE') arr[R][C] = true;\n\t\t\t\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\t\t\t\telse if(!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);\n\t\t\t\t\telse if(!isNaN(fuzzydate(value).getDate())) arr[R][C] = parseDate(value);\n\t\t\t\t\telse arr[R][C] = value;\n\t\t\t\t\t++C; break;\n\t\t\t\tcase 1:\n\t\t\t\t\tdata = data.slice(1,data.length-1);\n\t\t\t\t\tdata = data.replace(/\"\"/g, '\"');\n\t\t\t\t\tif(DIF_XL && data && data.match(/^=\".*\"$/)) data = data.slice(2, -1);\n\t\t\t\t\tarr[R][C++] = data !== '' ? data : null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (data === 'EOD') break;\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction dif_to_sheet(str/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(dif_to_aoa(str, opts), opts); }\n\tfunction dif_to_workbook(str/*:string*/, opts)/*:Workbook*/ { return sheet_to_workbook(dif_to_sheet(str, opts), opts); }\n\n\tvar sheet_to_dif = /*#__PURE__*/(function() {\n\t\tvar push_field = function pf(o/*:Array<string>*/, topic/*:string*/, v/*:number*/, n/*:number*/, s/*:string*/) {\n\t\t\to.push(topic);\n\t\t\to.push(v + \",\" + n);\n\t\t\to.push('\"' + s.replace(/\"/g,'\"\"') + '\"');\n\t\t};\n\t\tvar push_value = function po(o/*:Array<string>*/, type/*:number*/, v/*:any*/, s/*:string*/) {\n\t\t\to.push(type + \",\" + v);\n\t\t\to.push(type == 1 ? '\"' + s.replace(/\"/g,'\"\"') + '\"' : s);\n\t\t};\n\t\treturn function sheet_to_dif(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\t\tvar o/*:Array<string>*/ = [];\n\t\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\t\tvar dense = Array.isArray(ws);\n\t\t\tpush_field(o, \"TABLE\", 0, 1, \"sheetjs\");\n\t\t\tpush_field(o, \"VECTORS\", 0, r.e.r - r.s.r + 1,\"\");\n\t\t\tpush_field(o, \"TUPLES\", 0, r.e.c - r.s.c + 1,\"\");\n\t\t\tpush_field(o, \"DATA\", 0, 0,\"\");\n\t\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\t\tpush_value(o, -1, 0, \"BOT\");\n\t\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\t\tif(!cell) { push_value(o, 1, 0, \"\"); continue;}\n\t\t\t\t\tswitch(cell.t) {\n\t\t\t\t\t\tcase 'n':\n\t\t\t\t\t\t\tvar val = DIF_XL ? cell.w : cell.v;\n\t\t\t\t\t\t\tif(!val && cell.v != null) val = cell.v;\n\t\t\t\t\t\t\tif(val == null) {\n\t\t\t\t\t\t\t\tif(DIF_XL && cell.f && !cell.F) push_value(o, 1, 0, \"=\" + cell.f);\n\t\t\t\t\t\t\t\telse push_value(o, 1, 0, \"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse push_value(o, 0, val, \"V\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tpush_value(o, 0, cell.v ? 1 : 0, cell.v ? \"TRUE\" : \"FALSE\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 's':\n\t\t\t\t\t\t\tpush_value(o, 1, 0, (!DIF_XL || isNaN(cell.v)) ? cell.v : '=\"' + cell.v + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\tif(!cell.w) cell.w = SSF_format(cell.z || table_fmt[14], datenum(parseDate(cell.v)));\n\t\t\t\t\t\t\tif(DIF_XL) push_value(o, 0, cell.w, \"V\");\n\t\t\t\t\t\t\telse push_value(o, 1, 0, cell.w);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault: push_value(o, 1, 0, \"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpush_value(o, -1, 0, \"EOD\");\n\t\t\tvar RS = \"\\r\\n\";\n\t\t\tvar oo = o.join(RS);\n\t\t\t//while((oo.length & 0x7F) != 0) oo += \"\\0\";\n\t\t\treturn oo;\n\t\t};\n\t})();\n\treturn {\n\t\tto_workbook: dif_to_workbook,\n\t\tto_sheet: dif_to_sheet,\n\t\tfrom_sheet: sheet_to_dif\n\t};\n})();\n\nvar ETH = /*#__PURE__*/(function() {\n\tfunction decode(s/*:string*/)/*:string*/ { return s.replace(/\\\\b/g,\"\\\\\").replace(/\\\\c/g,\":\").replace(/\\\\n/g,\"\\n\"); }\n\tfunction encode(s/*:string*/)/*:string*/ { return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g,\"\\\\n\"); }\n\n\tfunction eth_to_aoa(str/*:string*/, opts)/*:AOA*/ {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tvar record = records[ri].trim().split(\":\");\n\t\t\tif(record[0] !== 'cell') continue;\n\t\t\tvar addr = decode_cell(record[1]);\n\t\t\tif(arr.length <= addr.r) for(R = arr.length; R <= addr.r; ++R) if(!arr[R]) arr[R] = [];\n\t\t\tR = addr.r; C = addr.c;\n\t\t\tswitch(record[2]) {\n\t\t\t\tcase 't': arr[R][C] = decode(record[3]); break;\n\t\t\t\tcase 'v': arr[R][C] = +record[3]; break;\n\t\t\t\tcase 'vtf': var _f = record[record.length - 1];\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'vtc':\n\t\t\t\t\tswitch(record[3]) {\n\t\t\t\t\t\tcase 'nl': arr[R][C] = +record[4] ? true : false; break;\n\t\t\t\t\t\tdefault: arr[R][C] = +record[4]; break;\n\t\t\t\t\t}\n\t\t\t\t\tif(record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\n\t\t\t}\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction eth_to_sheet(d/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(eth_to_aoa(d, opts), opts); }\n\tfunction eth_to_workbook(d/*:string*/, opts)/*:Workbook*/ { return sheet_to_workbook(eth_to_sheet(d, opts), opts); }\n\n\tvar header = [\n\t\t\"socialcalc:version:1.5\",\n\t\t\"MIME-Version: 1.0\",\n\t\t\"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"\n\t].join(\"\\n\");\n\n\tvar sep = [\n\t\t\"--SocialCalcSpreadsheetControlSave\",\n\t\t\"Content-type: text/plain; charset=UTF-8\"\n\t].join(\"\\n\") + \"\\n\";\n\n\t/* TODO: the other parts */\n\tvar meta = [\n\t\t\"# SocialCalc Spreadsheet Control Save\",\n\t\t\"part:sheet\"\n\t].join(\"\\n\");\n\n\tvar end = \"--SocialCalcSpreadsheetControlSave--\";\n\n\tfunction sheet_to_eth_data(ws/*:Worksheet*/)/*:string*/ {\n\t\tif(!ws || !ws['!ref']) return \"\";\n\t\tvar o/*:Array<string>*/ = [], oo/*:Array<string>*/ = [], cell, coord = \"\";\n\t\tvar r = decode_range(ws['!ref']);\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tcoord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null || cell.t === 'z') continue;\n\t\t\t\too = [\"cell\", coord, 't'];\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 's': case 'str': oo.push(encode(cell.v)); break;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tif(!cell.f) { oo[2]='v'; oo[3]=cell.v; }\n\t\t\t\t\t\telse { oo[2]='vtf'; oo[3]='n'; oo[4]=cell.v; oo[5]=encode(cell.f); }\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\too[2] = 'vt'+(cell.f?'f':'c'); oo[3]='nl'; oo[4]=cell.v?\"1\":\"0\";\n\t\t\t\t\t\too[5] = encode(cell.f||(cell.v?'TRUE':'FALSE'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\tvar t = datenum(parseDate(cell.v));\n\t\t\t\t\t\too[2] = 'vtc'; oo[3] = 'nd'; oo[4] = \"\"+t;\n\t\t\t\t\t\too[5] = cell.w || SSF_format(cell.z || table_fmt[14], t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'e': continue;\n\t\t\t\t}\n\t\t\t\to.push(oo.join(\":\"));\n\t\t\t}\n\t\t}\n\t\to.push(\"sheet:c:\" + (r.e.c-r.s.c+1) + \":r:\" + (r.e.r-r.s.r+1) + \":tvf:1\");\n\t\to.push(\"valueformat:1:text-wiki\");\n\t\t//o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\n\t\treturn o.join(\"\\n\");\n\t}\n\n\tfunction sheet_to_eth(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\treturn [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\n\t\t// return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\n\t}\n\n\treturn {\n\t\tto_workbook: eth_to_workbook,\n\t\tto_sheet: eth_to_sheet,\n\t\tfrom_sheet: sheet_to_eth\n\t};\n})();\n\nvar PRN = /*#__PURE__*/(function() {\n\tfunction set_text_arr(data/*:string*/, arr/*:AOA*/, R/*:number*/, C/*:number*/, o/*:any*/) {\n\t\tif(o.raw) arr[R][C] = data;\n\t\telse if(data === \"\"){/* empty */}\n\t\telse if(data === 'TRUE') arr[R][C] = true;\n\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\telse if(!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);\n\t\telse if(!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);\n\t\telse arr[R][C] = data;\n\t}\n\n\tfunction prn_to_aoa_str(f/*:string*/, opts)/*:AOA*/ {\n\t\tvar o = opts || {};\n\t\tvar arr/*:AOA*/ = ([]/*:any*/);\n\t\tif(!f || f.length === 0) return arr;\n\t\tvar lines = f.split(/[\\r\\n]/);\n\t\tvar L = lines.length - 1;\n\t\twhile(L >= 0 && lines[L].length === 0) --L;\n\t\tvar start = 10, idx = 0;\n\t\tvar R = 0;\n\t\tfor(; R <= L; ++R) {\n\t\t\tidx = lines[R].indexOf(\" \");\n\t\t\tif(idx == -1) idx = lines[R].length; else idx++;\n\t\t\tstart = Math.max(start, idx);\n\t\t}\n\t\tfor(R = 0; R <= L; ++R) {\n\t\t\tarr[R] = [];\n\t\t\t/* TODO: confirm that widths are always 10 */\n\t\t\tvar C = 0;\n\t\t\tset_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\n\t\t\tfor(C = 1; C <= (lines[R].length - start)/10 + 1; ++C)\n\t\t\t\tset_text_arr(lines[R].slice(start+(C-1)*10,start+C*10).trim(),arr,R,C,o);\n\t\t}\n\t\tif(o.sheetRows) arr = arr.slice(0, o.sheetRows);\n\t\treturn arr;\n\t}\n\n\t// List of accepted CSV separators\n\tvar guess_seps = {\n\t\t/*::[*/0x2C/*::]*/: ',',\n\t\t/*::[*/0x09/*::]*/: \"\\t\",\n\t\t/*::[*/0x3B/*::]*/: ';',\n\t\t/*::[*/0x7C/*::]*/: '|'\n\t};\n\n\t// CSV separator weights to be used in case of equal numbers\n\tvar guess_sep_weights = {\n\t\t/*::[*/0x2C/*::]*/: 3,\n\t\t/*::[*/0x09/*::]*/: 2,\n\t\t/*::[*/0x3B/*::]*/: 1,\n\t\t/*::[*/0x7C/*::]*/: 0\n\t};\n\n\tfunction guess_sep(str) {\n\t\tvar cnt = {}, instr = false, end = 0, cc = 0;\n\t\tfor(;end < str.length;++end) {\n\t\t\tif((cc=str.charCodeAt(end)) == 0x22) instr = !instr;\n\t\t\telse if(!instr && cc in guess_seps) cnt[cc] = (cnt[cc]||0)+1;\n\t\t}\n\n\t\tcc = [];\n\t\tfor(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {\n\t\t\tcc.push([ cnt[end], end ]);\n\t\t}\n\n\t\tif ( !cc.length ) {\n\t\t\tcnt = guess_sep_weights;\n\t\t\tfor(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {\n\t\t\t\tcc.push([ cnt[end], end ]);\n\t\t\t}\n\t\t}\n\n\t\tcc.sort(function(a, b) { return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]]; });\n\n\t\treturn guess_seps[cc.pop()[1]] || 0x2C;\n\t}\n\n\tfunction dsv_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tvar o = opts || {};\n\t\tvar sep = \"\";\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar ws/*:Worksheet*/ = o.dense ? ([]/*:any*/) : ({}/*:any*/);\n\t\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:0, r:0}}/*:any*/);\n\n\t\tif(str.slice(0,4) == \"sep=\") {\n\t\t\t// If the line ends in \\r\\n\n\t\t\tif(str.charCodeAt(5) == 13 && str.charCodeAt(6) == 10 ) {\n\t\t\t\tsep = str.charAt(4); str = str.slice(7);\n\t\t\t}\n\t\t\t// If line ends in \\r OR \\n\n\t\t\telse if(str.charCodeAt(5) == 13 || str.charCodeAt(5) == 10 ) {\n\t\t\t\tsep = str.charAt(4); str = str.slice(6);\n\t\t\t}\n\t\t\telse sep = guess_sep(str.slice(0,1024));\n\t\t}\n\t\telse if(o && o.FS) sep = o.FS;\n\t\telse sep = guess_sep(str.slice(0,1024));\n\t\tvar R = 0, C = 0, v = 0;\n\t\tvar start = 0, end = 0, sepcc = sep.charCodeAt(0), instr = false, cc=0, startcc=str.charCodeAt(0);\n\t\tstr = str.replace(/\\r\\n/mg, \"\\n\");\n\t\tvar _re/*:?RegExp*/ = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\n\t\tfunction finish_cell() {\n\t\t\tvar s = str.slice(start, end);\n\t\t\tvar cell = ({}/*:any*/);\n\t\t\tif(s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1,-1).replace(/\"\"/g,'\"');\n\t\t\tif(s.length === 0) cell.t = 'z';\n\t\t\telse if(o.raw) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.trim().length === 0) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.charCodeAt(0) == 0x3D) {\n\t\t\t\tif(s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) { cell.t = 's'; cell.v = s.slice(2,-1).replace(/\"\"/g,'\"'); }\n\t\t\t\telse if(fuzzyfmla(s)) { cell.t = 'n'; cell.f = s.slice(1); }\n\t\t\t\telse { cell.t = 's'; cell.v = s; } }\n\t\t\telse if(s == \"TRUE\") { cell.t = 'b'; cell.v = true; }\n\t\t\telse if(s == \"FALSE\") { cell.t = 'b'; cell.v = false; }\n\t\t\telse if(!isNaN(v = fuzzynum(s))) { cell.t = 'n'; if(o.cellText !== false) cell.w = s; cell.v = v; }\n\t\t\telse if(!isNaN(fuzzydate(s).getDate()) || _re && s.match(_re)) {\n\t\t\t\tcell.z = o.dateNF || table_fmt[14];\n\t\t\t\tvar k = 0;\n\t\t\t\tif(_re && s.match(_re)){ s=dateNF_fix(s, o.dateNF, (s.match(_re)||[])); k=1; }\n\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.v = parseDate(s, k); }\n\t\t\t\telse { cell.t = 'n'; cell.v = datenum(parseDate(s, k)); }\n\t\t\t\tif(o.cellText !== false) cell.w = SSF_format(cell.z, cell.v instanceof Date ? datenum(cell.v):cell.v);\n\t\t\t\tif(!o.cellNF) delete cell.z;\n\t\t\t} else {\n\t\t\t\tcell.t = 's';\n\t\t\t\tcell.v = s;\n\t\t\t}\n\t\t\tif(cell.t == 'z'){}\n\t\t\telse if(o.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = cell; }\n\t\t\telse ws[encode_cell({c:C,r:R})] = cell;\n\t\t\tstart = end+1; startcc = str.charCodeAt(start);\n\t\t\tif(range.e.c < C) range.e.c = C;\n\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\tif(cc == sepcc) ++C; else { C = 0; ++R; if(o.sheetRows && o.sheetRows <= R) return true; }\n\t\t}\n\t\touter: for(;end < str.length;++end) switch((cc=str.charCodeAt(end))) {\n\t\t\tcase 0x22: if(startcc === 0x22) instr = !instr; break;\n\t\t\tcase sepcc: case 0x0a: case 0x0d: if(!instr && finish_cell()) break outer; break;\n\t\t\tdefault: break;\n\t\t}\n\t\tif(end - start > 0) finish_cell();\n\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\n\tfunction prn_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tif(!(opts && opts.PRN)) return dsv_to_sheet_str(str, opts);\n\t\tif(opts.FS) return dsv_to_sheet_str(str, opts);\n\t\tif(str.slice(0,4) == \"sep=\") return dsv_to_sheet_str(str, opts);\n\t\tif(str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\n\t\treturn aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\n\t}\n\n\tfunction prn_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tvar str = \"\", bytes = opts.type == 'string' ? [0,0,0,0] : firstbyte(d, opts);\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': str = Base64_decode(d); break;\n\t\t\tcase 'binary': str = d; break;\n\t\t\tcase 'buffer':\n\t\t\t\tif(opts.codepage == 65001) str = d.toString('utf8'); // TODO: test if buf\n\t\t\t\telse if(opts.codepage && typeof $cptable !== 'undefined') str = $cptable.utils.decode(opts.codepage, d);\n\t\t\t\telse str = has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d);\n\t\t\t\tbreak;\n\t\t\tcase 'array': str = cc2str(d); break;\n\t\t\tcase 'string': str = d; break;\n\t\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t\t}\n\t\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));\n\t\telse if(opts.type != 'string' && opts.type != 'buffer' && opts.codepage == 65001) str = utf8read(str);\n\t\telse if((opts.type == 'binary') && typeof $cptable !== 'undefined' && opts.codepage)  str = $cptable.utils.decode(opts.codepage, $cptable.utils.encode(28591,str));\n\t\tif(str.slice(0,19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\n\t\treturn prn_to_sheet_str(str, opts);\n\t}\n\n\tfunction prn_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(prn_to_sheet(d, opts), opts); }\n\n\tfunction sheet_to_prn(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\tvar o/*:Array<string>*/ = [];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tvar oo/*:Array<string>*/ = [];\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null) { oo.push(\"          \"); continue; }\n\t\t\t\tvar w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0,10);\n\t\t\t\twhile(w.length < 10) w += \" \";\n\t\t\t\too.push(w + (C === 0 ? \" \" : \"\"));\n\t\t\t}\n\t\t\to.push(oo.join(\"\"));\n\t\t}\n\t\treturn o.join(\"\\n\");\n\t}\n\n\treturn {\n\t\tto_workbook: prn_to_workbook,\n\t\tto_sheet: prn_to_sheet,\n\t\tfrom_sheet: sheet_to_prn\n\t};\n})();\n\n/* Excel defaults to SYLK but warns if data is not valid */\nfunction read_wb_ID(d, opts) {\n\tvar o = opts || {}, OLD_WTF = !!o.WTF; o.WTF = true;\n\ttry {\n\t\tvar out = SYLK.to_workbook(d, o);\n\t\to.WTF = OLD_WTF;\n\t\treturn out;\n\t} catch(e) {\n\t\to.WTF = OLD_WTF;\n\t\tif(!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;\n\t\treturn PRN.to_workbook(d, opts);\n\t}\n}\n\nvar WK_ = /*#__PURE__*/(function() {\n\tfunction lotushopper(data, cb/*:RecordHopperCB*/, opts/*:any*/) {\n\t\tif(!data) return;\n\t\tprep_blob(data, data.l || 0);\n\t\tvar Enum = opts.Enum || WK1Enum;\n\t\twhile(data.l < data.length) {\n\t\t\tvar RT = data.read_shift(2);\n\t\t\tvar R = Enum[RT] || Enum[0xFFFF];\n\t\t\tvar length = data.read_shift(2);\n\t\t\tvar tgt = data.l + length;\n\t\t\tvar d = R.f && R.f(data, length, opts);\n\t\t\tdata.l = tgt;\n\t\t\tif(cb(d, R, RT)) return;\n\t\t}\n\t}\n\n\tfunction lotus_to_workbook(d/*:RawData*/, opts) {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return lotus_to_workbook_buf(s2a(Base64_decode(d)), opts);\n\t\t\tcase 'binary': return lotus_to_workbook_buf(s2a(d), opts);\n\t\t\tcase 'buffer':\n\t\t\tcase 'array': return lotus_to_workbook_buf(d, opts);\n\t\t}\n\t\tthrow \"Unsupported type \" + opts.type;\n\t}\n\n\tfunction lotus_to_workbook_buf(d, opts)/*:Workbook*/ {\n\t\tif(!d) return d;\n\t\tvar o = opts || {};\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar s/*:Worksheet*/ = ((o.dense ? [] : {})/*:any*/), n = \"Sheet1\", next_n = \"\", sidx = 0;\n\t\tvar sheets = {}, snames = [], realnames = [];\n\n\t\tvar refguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\tvar sheetRows = o.sheetRows || 0;\n\n\t\tif(d[2] == 0x00) {\n\t\t\tif(d[3] == 0x08 || d[3] == 0x09) {\n\t\t\t\tif(d.length >= 16 && d[14] == 0x05 && d[15] === 0x6c) throw new Error(\"Unsupported Works 3 for Mac file\");\n\t\t\t}\n\t\t}\n\n\t\tif(d[2] == 0x02) {\n\t\t\to.Enum = WK1Enum;\n\t\t\tlotushopper(d, function(val, R, RT) { switch(RT) {\n\t\t\t\tcase 0x00: /* BOF */\n\t\t\t\t\to.vers = val;\n\t\t\t\t\tif(val >= 0x1000) o.qpro = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x06: refguess = val; break; /* RANGE */\n\t\t\t\tcase 0xCC: if(val) next_n = val; break; /* SHEETNAMECS */\n\t\t\t\tcase 0xDE: next_n = val; break; /* SHEETNAMELP */\n\t\t\t\tcase 0x0F: /* LABEL */\n\t\t\t\tcase 0x33: /* STRING */\n\t\t\t\t\tif(!o.qpro) val[1].v = val[1].v.slice(1);\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x0D: /* INTEGER */\n\t\t\t\tcase 0x0E: /* NUMBER */\n\t\t\t\tcase 0x10: /* FORMULA */\n\t\t\t\t\t/* TODO: actual translation of the format code */\n\t\t\t\t\tif(RT == 0x0E && (val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\n\t\t\t\t\t\tval[1].z = o.dateNF || table_fmt[14];\n\t\t\t\t\t\tif(o.cellDates) { val[1].t = 'd'; val[1].v = numdate(val[1].v); }\n\t\t\t\t\t}\n\n\t\t\t\t\tif(o.qpro) {\n\t\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t\t\ts = (o.dense ? [] : {});\n\t\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\t\tsidx = val[3]; n = next_n || \"Sheet\" + (sidx + 1); next_n = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar tmpcell = o.dense ? (s[val[0].r]||[])[val[0].c] : s[encode_cell(val[0])];\n\t\t\t\t\tif(tmpcell) {\n\t\t\t\t\t\ttmpcell.t = val[1].t; tmpcell.v = val[1].v;\n\t\t\t\t\t\tif(val[1].z != null) tmpcell.z = val[1].z;\n\t\t\t\t\t\tif(val[1].f != null) tmpcell.f = val[1].f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!s[val[0].r]) s[val[0].r] = [];\n\t\t\t\t\t\ts[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t}}, o);\n\t\t} else if(d[2] == 0x1A || d[2] == 0x0E) {\n\t\t\to.Enum = WK3Enum;\n\t\t\tif(d[2] == 0x0E) { o.qpro = true; d.l = 0; }\n\t\t\tlotushopper(d, function(val, R, RT) { switch(RT) {\n\t\t\t\tcase 0xCC: n = val; break; /* SHEETNAMECS */\n\t\t\t\tcase 0x16: /* LABEL16 */\n\t\t\t\t\tval[1].v = val[1].v.slice(1);\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x17: /* NUMBER17 */\n\t\t\t\tcase 0x18: /* NUMBER18 */\n\t\t\t\tcase 0x19: /* FORMULA19 */\n\t\t\t\tcase 0x25: /* NUMBER25 */\n\t\t\t\tcase 0x27: /* NUMBER27 */\n\t\t\t\tcase 0x28: /* FORMULA28 */\n\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t\ts = (o.dense ? [] : {});\n\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\tsidx = val[3]; n = \"Sheet\" + (sidx + 1);\n\t\t\t\t\t}\n\t\t\t\t\tif(sheetRows > 0 && val[0].r >= sheetRows) break;\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!s[val[0].r]) s[val[0].r] = [];\n\t\t\t\t\t\ts[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tif(refguess.e.c < val[0].c) refguess.e.c = val[0].c;\n\t\t\t\t\tif(refguess.e.r < val[0].r) refguess.e.r = val[0].r;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x1B: /* XFORMAT */\n\t\t\t\t\tif(val[0x36b0]) realnames[val[0x36b0][0]] = val[0x36b0][1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0601: /* SHEETINFOQP */\n\t\t\t\t\trealnames[val[0]] = val[1]; if(val[0] == sidx) n = val[1]; break;\n\t\t\t\tdefault: break;\n\t\t\t}}, o);\n\t\t} else throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\n\t\ts[\"!ref\"] = encode_range(refguess);\n\t\tsheets[next_n || n] = s;\n\t\tsnames.push(next_n || n);\n\t\tif(!realnames.length) return { SheetNames: snames, Sheets: sheets };\n\t\tvar osheets = {}, rnames = [];\n\t\t/* TODO: verify no collisions */\n\t\tfor(var i = 0; i < realnames.length; ++i) if(sheets[snames[i]]) {\n\t\t\trnames.push(realnames[i] || snames[i]);\n\t\t\tosheets[realnames[i]] = sheets[realnames[i]] || sheets[snames[i]];\n\t\t} else {\n\t\t\trnames.push(realnames[i]);\n\t\t\tosheets[realnames[i]] = ({ \"!ref\": \"A1\" });\n\t\t}\n\t\treturn { SheetNames: rnames, Sheets: osheets };\n\t}\n\n\tfunction sheet_to_wk1(ws/*:Worksheet*/, opts/*:WriteOpts*/) {\n\t\tvar o = opts || {};\n\t\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\t\tif(o.type == \"string\") throw new Error(\"Cannot write WK1 to JS string\");\n\t\tvar ba = buf_array();\n\t\tvar range = safe_decode_range(ws[\"!ref\"]);\n\t\tvar dense = Array.isArray(ws);\n\t\tvar cols = [];\n\n\t\twrite_biff_rec(ba, 0x00, write_BOF_WK1(0x0406));\n\t\twrite_biff_rec(ba, 0x06, write_RANGE(range));\n\t\tvar max_R = Math.min(range.e.r, 8191);\n\t\tfor(var R = range.s.r; R <= max_R; ++R) {\n\t\t\tvar rr = encode_row(R);\n\t\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\t\tvar ref = cols[C] + rr;\n\t\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\t\tif(!cell || cell.t == \"z\") continue;\n\t\t\t\t/* TODO: formula records */\n\t\t\t\tif(cell.t == \"n\") {\n\t\t\t\t\tif((cell.v|0)==cell.v && cell.v >= -32768 && cell.v <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, cell.v));\n\t\t\t\t\telse write_biff_rec(ba, 0x0e, write_NUMBER(R, C, cell.v));\n\t\t\t\t} else {\n\t\t\t\t\tvar str = format_cell(cell);\n\t\t\t\t\twrite_biff_rec(ba, 0x0F, write_LABEL(R, C, str.slice(0, 239)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twrite_biff_rec(ba, 0x01);\n\t\treturn ba.end();\n\t}\n\n\tfunction book_to_wk3(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\t\tvar o = opts || {};\n\t\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\t\tif(o.type == \"string\") throw new Error(\"Cannot write WK3 to JS string\");\n\t\tvar ba = buf_array();\n\n\t\twrite_biff_rec(ba, 0x00, write_BOF_WK3(wb));\n\n\t\tfor(var i = 0, cnt = 0; i < wb.SheetNames.length; ++i) if((wb.Sheets[wb.SheetNames[i]] || {})[\"!ref\"]) write_biff_rec(ba, 0x1b, write_XFORMAT_SHEETNAME(wb.SheetNames[i], cnt++));\n\n\t\tvar wsidx = 0;\n\t\tfor(i = 0; i < wb.SheetNames.length; ++i) {\n\t\t\tvar ws = wb.Sheets[wb.SheetNames[i]];\n\t\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\t\tvar range = safe_decode_range(ws[\"!ref\"]);\n\t\t\tvar dense = Array.isArray(ws);\n\t\t\tvar cols = [];\n\t\t\tvar max_R = Math.min(range.e.r, 8191);\n\t\t\tfor(var R = range.s.r; R <= max_R; ++R) {\n\t\t\t\tvar rr = encode_row(R);\n\t\t\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\t\t\tvar ref = cols[C] + rr;\n\t\t\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\t\t\tif(!cell || cell.t == \"z\") continue;\n\t\t\t\t\t/* TODO: FORMULA19 NUMBER18 records */\n\t\t\t\t\tif(cell.t == \"n\") {\n\t\t\t\t\t\twrite_biff_rec(ba, 0x17, write_NUMBER_17(R, C, wsidx, cell.v));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar str = format_cell(cell);\n\t\t\t\t\t\t/* TODO: max len? */\n\t\t\t\t\t\twrite_biff_rec(ba, 0x16, write_LABEL_16(R, C, wsidx, str.slice(0, 239)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t++wsidx;\n\t\t}\n\n\t\twrite_biff_rec(ba, 0x01);\n\t\treturn ba.end();\n\t}\n\n\n\tfunction write_BOF_WK1(v/*:number*/) {\n\t\tvar out = new_buf(2);\n\t\tout.write_shift(2, v);\n\t\treturn out;\n\t}\n\n\tfunction write_BOF_WK3(wb/*:Workbook*/) {\n\t\tvar out = new_buf(26);\n\t\tout.write_shift(2, 0x1000);\n\t\tout.write_shift(2, 0x0004);\n\t\tout.write_shift(4, 0x0000);\n\t\tvar rows = 0, cols = 0, wscnt = 0;\n\t\tfor(var i = 0; i < wb.SheetNames.length; ++i) {\n\t\t\tvar name = wb.SheetNames[i];\n\t\t\tvar ws = wb.Sheets[name];\n\t\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\t\t++wscnt;\n\t\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\t\tif(rows < range.e.r) rows = range.e.r;\n\t\t\tif(cols < range.e.c) cols = range.e.c;\n\t\t}\n\t\tif(rows > 8191) rows = 8191;\n\t\tout.write_shift(2, rows);\n\t\tout.write_shift(1, wscnt);\n\t\tout.write_shift(1, cols);\n\t\tout.write_shift(2, 0x00);\n\t\tout.write_shift(2, 0x00);\n\t\tout.write_shift(1, 0x01);\n\t\tout.write_shift(1, 0x02);\n\t\tout.write_shift(4, 0);\n\t\tout.write_shift(4, 0);\n\t\treturn out;\n\t}\n\n\tfunction parse_RANGE(blob, length, opts) {\n\t\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\t\tif(length == 8 && opts.qpro) {\n\t\t\to.s.c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to.s.r = blob.read_shift(2);\n\t\t\to.e.c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to.e.r = blob.read_shift(2);\n\t\t\treturn o;\n\t\t}\n\t\to.s.c = blob.read_shift(2);\n\t\to.s.r = blob.read_shift(2);\n\t\tif(length == 12 && opts.qpro) blob.l += 2;\n\t\to.e.c = blob.read_shift(2);\n\t\to.e.r = blob.read_shift(2);\n\t\tif(length == 12 && opts.qpro) blob.l += 2;\n\t\tif(o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\n\t\treturn o;\n\t}\n\tfunction write_RANGE(range) {\n\t\tvar out = new_buf(8);\n\t\tout.write_shift(2, range.s.c);\n\t\tout.write_shift(2, range.s.r);\n\t\tout.write_shift(2, range.e.c);\n\t\tout.write_shift(2, range.e.r);\n\t\treturn out;\n\t}\n\n\tfunction parse_cell(blob, length, opts) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0, 0];\n\t\tif(opts.qpro && opts.vers != 0x5120) {\n\t\t\to[0].c = blob.read_shift(1);\n\t\t\to[3] = blob.read_shift(1);\n\t\t\to[0].r = blob.read_shift(2);\n\t\t\tblob.l+=2;\n\t\t} else {\n\t\t\to[2] = blob.read_shift(1);\n\t\t\to[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].t = 's';\n\t\tif(opts.vers == 0x5120) {\n\t\t\tblob.l++;\n\t\t\tvar len = blob.read_shift(1);\n\t\t\to[1].v = blob.read_shift(len, 'utf8');\n\t\t\treturn o;\n\t\t}\n\t\tif(opts.qpro) blob.l++;\n\t\to[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n\t\treturn o;\n\t}\n\tfunction write_LABEL(R, C, s) {\n\t\t/* TODO: encoding */\n\t\tvar o = new_buf(7 + s.length);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, 0x27); // ??\n\t\tfor(var i = 0; i < o.length; ++i) {\n\t\t\tvar cc = s.charCodeAt(i);\n\t\t\to.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n\t\t}\n\t\to.write_shift(1, 0);\n\t\treturn o;\n\t}\n\n\tfunction parse_INTEGER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(2, 'i');\n\t\treturn o;\n\t}\n\tfunction write_INTEGER(R, C, v) {\n\t\tvar o = new_buf(7);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(2, v, 'i');\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\treturn o;\n\t}\n\tfunction write_NUMBER(R, C, v) {\n\t\tvar o = new_buf(13);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(8, v, 'f');\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\t/* TODO: formula */\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\tif(opts.qpro) blob.l = tgt;\n\t\telse {\n\t\t\tvar flen = blob.read_shift(2);\n\t\t\twk1_fmla_to_csf(blob.slice(blob.l, blob.l + flen), o);\n\t\t\tblob.l += flen;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction wk1_parse_rc(B, V, col) {\n\t\tvar rel = V & 0x8000;\n\t\tV &= ~0x8000;\n\t\tV = (rel ? B : 0) + ((V >= 0x2000) ? V - 0x4000 : V);\n\t\treturn (rel ? \"\" : \"$\") + (col ? encode_col(V) : encode_row(V));\n\t}\n\t/* var oprec = [\n\t\t8, 8, 8, 8, 8, 8, 8, 8, 6, 4, 4, 5, 5, 7, 3, 3,\n\t\t3, 3, 3, 3, 1, 1, 2, 6, 8, 8, 8, 8, 8, 8, 8, 8\n\t]; */\n\t/* TODO: flesh out */\n\tvar FuncTab = {\n\t\t0x33: [\"FALSE\", 0],\n\t\t0x34: [\"TRUE\", 0],\n\t\t0x46: [\"LEN\", 1],\n\t\t0x50: [\"SUM\", 69],\n\t\t0x51: [\"AVERAGEA\", 69],\n\t\t0x52: [\"COUNTA\", 69],\n\t\t0x53: [\"MINA\", 69],\n\t\t0x54: [\"MAXA\", 69],\n\t\t0x6F: [\"T\", 1]\n\t};\n\tvar BinOpTab = [\n\t\t  \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t  \"\",  \"+\",  \"-\",  \"*\",  \"/\",  \"^\",  \"=\", \"<>\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t\"<=\", \">=\",  \"<\",  \">\",   \"\",   \"\",   \"\",   \"\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t \"&\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\"  // eslint-disable-line no-mixed-spaces-and-tabs\n\t];\n\n\tfunction wk1_fmla_to_csf(blob, o) {\n\t\tprep_blob(blob, 0);\n\t\tvar out = [], argc = 0, R = \"\", C = \"\", argL = \"\", argR = \"\";\n\t\twhile(blob.l < blob.length) {\n\t\t\tvar cc = blob[blob.l++];\n\t\t\tswitch(cc) {\n\t\t\t\tcase 0x00: out.push(blob.read_shift(8, 'f')); break;\n\t\t\t\tcase 0x01: {\n\t\t\t\t\tC = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tR = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tout.push(C + R);\n\t\t\t\t} break;\n\t\t\t\tcase 0x02: {\n\t\t\t\t\tvar c = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tvar r = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tC = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tR = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tout.push(c + r + \":\" + C + R);\n\t\t\t\t} break;\n\t\t\t\tcase 0x03:\n\t\t\t\t\tif(blob.l < blob.length) { console.error(\"WK1 premature formula end\"); return; }\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x04: out.push(\"(\" + out.pop() + \")\"); break;\n\t\t\t\tcase 0x05: out.push(blob.read_shift(2)); break;\n\t\t\t\tcase 0x06: {\n\t\t\t\t\t/* TODO: text encoding */\n\t\t\t\t\tvar Z = \"\"; while((cc = blob[blob.l++])) Z += String.fromCharCode(cc);\n\t\t\t\t\tout.push('\"' + Z.replace(/\"/g, '\"\"') + '\"');\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x08: out.push(\"-\" + out.pop()); break;\n\t\t\t\tcase 0x17: out.push(\"+\" + out.pop()); break;\n\t\t\t\tcase 0x16: out.push(\"NOT(\" + out.pop() + \")\"); break;\n\n\t\t\t\tcase 0x14: case 0x15: {\n\t\t\t\t\targR = out.pop(); argL = out.pop();\n\t\t\t\t\tout.push([\"AND\", \"OR\"][cc - 0x14] + \"(\" + argL + \",\" + argR + \")\");\n\t\t\t\t} break;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif(cc < 0x20 && BinOpTab[cc]) {\n\t\t\t\t\t\targR = out.pop(); argL = out.pop();\n\t\t\t\t\t\tout.push(argL + BinOpTab[cc] + argR);\n\t\t\t\t\t} else if(FuncTab[cc]) {\n\t\t\t\t\t\targc = FuncTab[cc][1];\n\t\t\t\t\t\tif(argc == 69) argc = blob[blob.l++];\n\t\t\t\t\t\tif(argc > out.length) { console.error(\"WK1 bad formula parse 0x\" + cc.toString(16) + \":|\" + out.join(\"|\") + \"|\"); return; }\n\t\t\t\t\t\tvar args = out.slice(-argc);\n\t\t\t\t\t\tout.length -= argc;\n\t\t\t\t\t\tout.push(FuncTab[cc][0] + \"(\" + args.join(\",\") + \")\");\n\t\t\t\t\t}\n\t\t\t\t\telse if(cc <= 0x07) return console.error(\"WK1 invalid opcode \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x18) return console.error(\"WK1 unsupported op \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x1E) return console.error(\"WK1 invalid opcode \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x73) return console.error(\"WK1 unsupported function opcode \" + cc.toString(16));\n\t\t\t\t\t// possible future functions ??\n\t\t\t\t\telse return console.error(\"WK1 unrecognized opcode \" + cc.toString(16));\n\t\t\t}\n\t\t}\n\t\tif(out.length == 1) o[1].f = \"\" + out[0];\n\t\telse console.error(\"WK1 bad formula parse |\" + out.join(\"|\") + \"|\");\n\t}\n\n\n\tfunction parse_cell_3(blob/*::, length*/) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0];\n\t\to[0].r = blob.read_shift(2); o[3] = blob[blob.l++]; o[0].c = blob[blob.l++];\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL_16(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].t = 's';\n\t\to[1].v = blob.read_shift(length - 4, 'cstr');\n\t\treturn o;\n\t}\n\tfunction write_LABEL_16(R, C, wsidx, s) {\n\t\t/* TODO: encoding */\n\t\tvar o = new_buf(6 + s.length);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, wsidx);\n\t\to.write_shift(1, C);\n\t\to.write_shift(1, 0x27);\n\t\tfor(var i = 0; i < s.length; ++i) {\n\t\t\tvar cc = s.charCodeAt(i);\n\t\t\to.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n\t\t}\n\t\to.write_shift(1, 0);\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_18(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].v = blob.read_shift(2);\n\t\tvar v = o[1].v >> 1;\n\t\tif(o[1].v & 0x1) {\n\t\t\tswitch(v & 0x07) {\n\t\t\t\tcase 0: v = (v >> 3) * 5000; break;\n\t\t\t\tcase 1: v = (v >> 3) * 500; break;\n\t\t\t\tcase 2: v = (v >> 3) / 20; break;\n\t\t\t\tcase 3: v = (v >> 3) / 200; break;\n\t\t\t\tcase 4: v = (v >> 3) / 2000; break;\n\t\t\t\tcase 5: v = (v >> 3) / 20000; break;\n\t\t\t\tcase 6: v = (v >> 3) / 16; break;\n\t\t\t\tcase 7: v = (v >> 3) / 64; break;\n\t\t\t}\n\t\t}\n\t\to[1].v = v;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_17(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\tvar v2 = blob.read_shift(4);\n\t\tvar e = blob.read_shift(2);\n\t\tif(e == 0xFFFF) {\n\t\t\tif(v1 === 0 && v2 === 0xC0000000) { o[1].t = \"e\"; o[1].v = 0x0F; } // ERR -> #VALUE!\n\t\t\telse if(v1 === 0 && v2 === 0xD0000000) { o[1].t = \"e\"; o[1].v = 0x2A; } // NA -> #N/A\n\t\t\telse o[1].v = 0;\n\t\t\treturn o;\n\t\t}\n\t\tvar s = e & 0x8000; e = (e&0x7FFF) - 16446;\n\t\to[1].v = (1 - s*2) * (v2 * Math.pow(2, e+32) + v1 * Math.pow(2, e));\n\t\treturn o;\n\t}\n\tfunction write_NUMBER_17(R, C, wsidx, v) {\n\t\tvar o = new_buf(14);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, wsidx);\n\t\to.write_shift(1, C);\n\t\tif(v == 0) {\n\t\t\to.write_shift(4, 0);\n\t\t\to.write_shift(4, 0);\n\t\t\to.write_shift(2, 0xFFFF);\n\t\t\treturn o;\n\t\t}\n\t\tvar s = 0, e = 0, v1 = 0, v2 = 0;\n\t\tif(v < 0) { s = 1; v = -v; }\n\t\te = Math.log2(v) | 0;\n\t\tv /= Math.pow(2, e-31);\n\t\tv2 = (v)>>>0;\n\t\tif((v2&0x80000000) == 0) { v/=2; ++e; v2 = v >>> 0; }\n\t\tv -= v2;\n\t\tv2 |= 0x80000000;\n\t\tv2 >>>= 0;\n\t\tv *= Math.pow(2, 32);\n\t\tv1 = v>>>0;\n\t\to.write_shift(4, v1);\n\t\to.write_shift(4, v2);\n\t\te += 0x3FFF + (s ? 0x8000 : 0);\n\t\to.write_shift(2, e);\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_19(blob, length) {\n\t\tvar o = parse_NUMBER_17(blob, 14);\n\t\tblob.l += length - 14; /* TODO: WK3 formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_25(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\to[1].v = v1 >> 6;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_27(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(8,'f');\n\t\to[1].v = v1;\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_28(blob, length) {\n\t\tvar o = parse_NUMBER_27(blob, 14);\n\t\tblob.l += length - 10; /* TODO: formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_SHEETNAMECS(blob, length) {\n\t\treturn blob[blob.l + length - 1] == 0 ? blob.read_shift(length, 'cstr') : \"\";\n\t}\n\n\tfunction parse_SHEETNAMELP(blob, length) {\n\t\tvar len = blob[blob.l++];\n\t\tif(len > length - 1) len = length - 1;\n\t\tvar o = \"\"; while(o.length < len) o += String.fromCharCode(blob[blob.l++]);\n\t\treturn o;\n\t}\n\n\tfunction parse_SHEETINFOQP(blob, length, opts) {\n\t\tif(!opts.qpro || length < 21) return;\n\t\tvar id = blob.read_shift(1);\n\t\tblob.l += 17;\n\t\tblob.l += 1; //var len = blob.read_shift(1);\n\t\tblob.l += 2;\n\t\tvar nm = blob.read_shift(length - 21, 'cstr');\n\t\treturn [id, nm];\n\t}\n\n\tfunction parse_XFORMAT(blob, length) {\n\t\tvar o = {}, tgt = blob.l + length;\n\t\twhile(blob.l < tgt) {\n\t\t\tvar dt = blob.read_shift(2);\n\t\t\tif(dt == 0x36b0) {\n\t\t\t\to[dt] = [0, \"\"];\n\t\t\t\to[dt][0] = blob.read_shift(2);\n\t\t\t\twhile(blob[blob.l]) { o[dt][1] += String.fromCharCode(blob[blob.l]); blob.l++; } blob.l++;\n\t\t\t}\n\t\t\t// TODO: 0x3a99 ??\n\t\t}\n\t\treturn o;\n\t}\n\tfunction write_XFORMAT_SHEETNAME(name, wsidx) {\n\t\tvar out = new_buf(5 + name.length);\n\t\tout.write_shift(2, 0x36b0);\n\t\tout.write_shift(2, wsidx);\n\t\tfor(var i = 0; i < name.length; ++i) {\n\t\t\tvar cc = name.charCodeAt(i);\n\t\t\tout[out.l++] = cc > 0x7F ? 0x5F : cc;\n\t\t}\n\t\tout[out.l++] = 0;\n\t\treturn out;\n\t}\n\n\tvar WK1Enum = {\n\t\t/*::[*/0x0000/*::]*/: { n:\"BOF\", f:parseuint16 },\n\t\t/*::[*/0x0001/*::]*/: { n:\"EOF\" },\n\t\t/*::[*/0x0002/*::]*/: { n:\"CALCMODE\" },\n\t\t/*::[*/0x0003/*::]*/: { n:\"CALCORDER\" },\n\t\t/*::[*/0x0004/*::]*/: { n:\"SPLIT\" },\n\t\t/*::[*/0x0005/*::]*/: { n:\"SYNC\" },\n\t\t/*::[*/0x0006/*::]*/: { n:\"RANGE\", f:parse_RANGE },\n\t\t/*::[*/0x0007/*::]*/: { n:\"WINDOW1\" },\n\t\t/*::[*/0x0008/*::]*/: { n:\"COLW1\" },\n\t\t/*::[*/0x0009/*::]*/: { n:\"WINTWO\" },\n\t\t/*::[*/0x000A/*::]*/: { n:\"COLW2\" },\n\t\t/*::[*/0x000B/*::]*/: { n:\"NAME\" },\n\t\t/*::[*/0x000C/*::]*/: { n:\"BLANK\" },\n\t\t/*::[*/0x000D/*::]*/: { n:\"INTEGER\", f:parse_INTEGER },\n\t\t/*::[*/0x000E/*::]*/: { n:\"NUMBER\", f:parse_NUMBER },\n\t\t/*::[*/0x000F/*::]*/: { n:\"LABEL\", f:parse_LABEL },\n\t\t/*::[*/0x0010/*::]*/: { n:\"FORMULA\", f:parse_FORMULA },\n\t\t/*::[*/0x0018/*::]*/: { n:\"TABLE\" },\n\t\t/*::[*/0x0019/*::]*/: { n:\"ORANGE\" },\n\t\t/*::[*/0x001A/*::]*/: { n:\"PRANGE\" },\n\t\t/*::[*/0x001B/*::]*/: { n:\"SRANGE\" },\n\t\t/*::[*/0x001C/*::]*/: { n:\"FRANGE\" },\n\t\t/*::[*/0x001D/*::]*/: { n:\"KRANGE1\" },\n\t\t/*::[*/0x0020/*::]*/: { n:\"HRANGE\" },\n\t\t/*::[*/0x0023/*::]*/: { n:\"KRANGE2\" },\n\t\t/*::[*/0x0024/*::]*/: { n:\"PROTEC\" },\n\t\t/*::[*/0x0025/*::]*/: { n:\"FOOTER\" },\n\t\t/*::[*/0x0026/*::]*/: { n:\"HEADER\" },\n\t\t/*::[*/0x0027/*::]*/: { n:\"SETUP\" },\n\t\t/*::[*/0x0028/*::]*/: { n:\"MARGINS\" },\n\t\t/*::[*/0x0029/*::]*/: { n:\"LABELFMT\" },\n\t\t/*::[*/0x002A/*::]*/: { n:\"TITLES\" },\n\t\t/*::[*/0x002B/*::]*/: { n:\"SHEETJS\" },\n\t\t/*::[*/0x002D/*::]*/: { n:\"GRAPH\" },\n\t\t/*::[*/0x002E/*::]*/: { n:\"NGRAPH\" },\n\t\t/*::[*/0x002F/*::]*/: { n:\"CALCCOUNT\" },\n\t\t/*::[*/0x0030/*::]*/: { n:\"UNFORMATTED\" },\n\t\t/*::[*/0x0031/*::]*/: { n:\"CURSORW12\" },\n\t\t/*::[*/0x0032/*::]*/: { n:\"WINDOW\" },\n\t\t/*::[*/0x0033/*::]*/: { n:\"STRING\", f:parse_LABEL },\n\t\t/*::[*/0x0037/*::]*/: { n:\"PASSWORD\" },\n\t\t/*::[*/0x0038/*::]*/: { n:\"LOCKED\" },\n\t\t/*::[*/0x003C/*::]*/: { n:\"QUERY\" },\n\t\t/*::[*/0x003D/*::]*/: { n:\"QUERYNAME\" },\n\t\t/*::[*/0x003E/*::]*/: { n:\"PRINT\" },\n\t\t/*::[*/0x003F/*::]*/: { n:\"PRINTNAME\" },\n\t\t/*::[*/0x0040/*::]*/: { n:\"GRAPH2\" },\n\t\t/*::[*/0x0041/*::]*/: { n:\"GRAPHNAME\" },\n\t\t/*::[*/0x0042/*::]*/: { n:\"ZOOM\" },\n\t\t/*::[*/0x0043/*::]*/: { n:\"SYMSPLIT\" },\n\t\t/*::[*/0x0044/*::]*/: { n:\"NSROWS\" },\n\t\t/*::[*/0x0045/*::]*/: { n:\"NSCOLS\" },\n\t\t/*::[*/0x0046/*::]*/: { n:\"RULER\" },\n\t\t/*::[*/0x0047/*::]*/: { n:\"NNAME\" },\n\t\t/*::[*/0x0048/*::]*/: { n:\"ACOMM\" },\n\t\t/*::[*/0x0049/*::]*/: { n:\"AMACRO\" },\n\t\t/*::[*/0x004A/*::]*/: { n:\"PARSE\" },\n\t\t/*::[*/0x0066/*::]*/: { n:\"PRANGES??\" },\n\t\t/*::[*/0x0067/*::]*/: { n:\"RRANGES??\" },\n\t\t/*::[*/0x0068/*::]*/: { n:\"FNAME??\" },\n\t\t/*::[*/0x0069/*::]*/: { n:\"MRANGES??\" },\n\t\t/*::[*/0x00CC/*::]*/: { n:\"SHEETNAMECS\", f:parse_SHEETNAMECS },\n\t\t/*::[*/0x00DE/*::]*/: { n:\"SHEETNAMELP\", f:parse_SHEETNAMELP },\n\t\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n\t};\n\n\tvar WK3Enum = {\n\t\t/*::[*/0x0000/*::]*/: { n:\"BOF\" },\n\t\t/*::[*/0x0001/*::]*/: { n:\"EOF\" },\n\t\t/*::[*/0x0002/*::]*/: { n:\"PASSWORD\" },\n\t\t/*::[*/0x0003/*::]*/: { n:\"CALCSET\" },\n\t\t/*::[*/0x0004/*::]*/: { n:\"WINDOWSET\" },\n\t\t/*::[*/0x0005/*::]*/: { n:\"SHEETCELLPTR\" },\n\t\t/*::[*/0x0006/*::]*/: { n:\"SHEETLAYOUT\" },\n\t\t/*::[*/0x0007/*::]*/: { n:\"COLUMNWIDTH\" },\n\t\t/*::[*/0x0008/*::]*/: { n:\"HIDDENCOLUMN\" },\n\t\t/*::[*/0x0009/*::]*/: { n:\"USERRANGE\" },\n\t\t/*::[*/0x000A/*::]*/: { n:\"SYSTEMRANGE\" },\n\t\t/*::[*/0x000B/*::]*/: { n:\"ZEROFORCE\" },\n\t\t/*::[*/0x000C/*::]*/: { n:\"SORTKEYDIR\" },\n\t\t/*::[*/0x000D/*::]*/: { n:\"FILESEAL\" },\n\t\t/*::[*/0x000E/*::]*/: { n:\"DATAFILLNUMS\" },\n\t\t/*::[*/0x000F/*::]*/: { n:\"PRINTMAIN\" },\n\t\t/*::[*/0x0010/*::]*/: { n:\"PRINTSTRING\" },\n\t\t/*::[*/0x0011/*::]*/: { n:\"GRAPHMAIN\" },\n\t\t/*::[*/0x0012/*::]*/: { n:\"GRAPHSTRING\" },\n\t\t/*::[*/0x0013/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0014/*::]*/: { n:\"ERRCELL\" },\n\t\t/*::[*/0x0015/*::]*/: { n:\"NACELL\" },\n\t\t/*::[*/0x0016/*::]*/: { n:\"LABEL16\", f:parse_LABEL_16},\n\t\t/*::[*/0x0017/*::]*/: { n:\"NUMBER17\", f:parse_NUMBER_17 },\n\t\t/*::[*/0x0018/*::]*/: { n:\"NUMBER18\", f:parse_NUMBER_18 },\n\t\t/*::[*/0x0019/*::]*/: { n:\"FORMULA19\", f:parse_FORMULA_19},\n\t\t/*::[*/0x001A/*::]*/: { n:\"FORMULA1A\" },\n\t\t/*::[*/0x001B/*::]*/: { n:\"XFORMAT\", f:parse_XFORMAT },\n\t\t/*::[*/0x001C/*::]*/: { n:\"DTLABELMISC\" },\n\t\t/*::[*/0x001D/*::]*/: { n:\"DTLABELCELL\" },\n\t\t/*::[*/0x001E/*::]*/: { n:\"GRAPHWINDOW\" },\n\t\t/*::[*/0x001F/*::]*/: { n:\"CPA\" },\n\t\t/*::[*/0x0020/*::]*/: { n:\"LPLAUTO\" },\n\t\t/*::[*/0x0021/*::]*/: { n:\"QUERY\" },\n\t\t/*::[*/0x0022/*::]*/: { n:\"HIDDENSHEET\" },\n\t\t/*::[*/0x0023/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0025/*::]*/: { n:\"NUMBER25\", f:parse_NUMBER_25 },\n\t\t/*::[*/0x0026/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0027/*::]*/: { n:\"NUMBER27\", f:parse_NUMBER_27 },\n\t\t/*::[*/0x0028/*::]*/: { n:\"FORMULA28\", f:parse_FORMULA_28 },\n\t\t/*::[*/0x008E/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0093/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0096/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0097/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0098/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0099/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009B/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00A3/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00AE/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00AF/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B0/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B1/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B8/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B9/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BA/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BB/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BC/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00C3/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00C9/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CC/*::]*/: { n:\"SHEETNAMECS\", f:parse_SHEETNAMECS },\n\t\t/*::[*/0x00CD/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CE/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CF/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00D0/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0100/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0103/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0104/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0105/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0106/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0107/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0109/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010B/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010E/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010F/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0180/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0185/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0186/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0189/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x018C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0200/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0202/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0201/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0204/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0205/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0280/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0281/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0282/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0283/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0284/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0285/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0286/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0287/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0288/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0292/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0293/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0294/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0295/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0296/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0299/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x029A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0300/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0304/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0601/*::]*/: { n:\"SHEETINFOQP\", f:parse_SHEETINFOQP },\n\t\t/*::[*/0x0640/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0642/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0701/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0702/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0703/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0704/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0780/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0800/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0801/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0804/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0A80/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x2AF6/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x3231/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x6E49/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x6F44/*::]*/: { n:\"??\" },\n\t\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n\t};\n\treturn {\n\t\tsheet_to_wk1: sheet_to_wk1,\n\t\tbook_to_wk3: book_to_wk3,\n\t\tto_workbook: lotus_to_workbook\n\t};\n})();\n/* 18.4.7 rPr CT_RPrElt */\nfunction parse_rpr(rpr) {\n\tvar font = {}, m = rpr.match(tagregex), i = 0;\n\tvar pass = false;\n\tif(m) for(;i!=m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(y[0].replace(/\\w*:/g,\"\")) {\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<condense': break;\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<extend': break;\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<shadow':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<shadow>':\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\t\t\tcase '</shadow>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty TODO */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\tfont.cp = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.4.2 outline CT_BooleanProperty TODO */\n\t\t\tcase '<outline':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<outline>':\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\t\t\tcase '</outline>': break;\n\n\t\t\t/* 18.4.5 rFont CT_FontName */\n\t\t\tcase '<rFont': font.name = y.val; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': font.sz = y.val; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<strike>':\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\t\t\tcase '</strike>': break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tif(!y.val) break;\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase 'double': font.uval = \"double\"; break;\n\t\t\t\t\tcase 'singleAccounting': font.uval = \"single-accounting\"; break;\n\t\t\t\t\tcase 'doubleAccounting': font.uval = \"double-accounting\"; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '<u>':\n\t\t\tcase '<u/>': font.u = 1; break;\n\t\t\tcase '</u>': break;\n\n\t\t\t/* 18.8.2 b */\n\t\t\tcase '<b':\n\t\t\t\tif(y.val == '0') break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<b>':\n\t\t\tcase '<b/>': font.b = 1; break;\n\t\t\tcase '</b>': break;\n\n\t\t\t/* 18.8.26 i */\n\t\t\tcase '<i':\n\t\t\t\tif(y.val == '0') break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<i>':\n\t\t\tcase '<i/>': font.i = 1; break;\n\t\t\tcase '</i>': break;\n\n\t\t\t/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n\t\t\tcase '<color':\n\t\t\t\tif(y.rgb) font.color = y.rgb.slice(2,8);\n\t\t\t\tbreak;\n\t\t\tcase '<color>': case '<color/>': case '</color>': break;\n\n\t\t\t/* 18.8.18 family ST_FontFamily */\n\t\t\tcase '<family': font.family = y.val; break;\n\t\t\tcase '<family>': case '<family/>': case '</family>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n\t\t\tcase '<vertAlign': font.valign = y.val; break;\n\t\t\tcase '<vertAlign>': case '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme TODO */\n\t\t\tcase '<scheme': break;\n\t\t\tcase '<scheme>': case '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault:\n\t\t\t\tif(y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n\t\t}\n\t}\n\treturn font;\n}\n\nvar parse_rs = /*#__PURE__*/(function() {\n\tvar tregex = matchtag(\"t\"), rpregex = matchtag(\"rPr\");\n\t/* 18.4.4 r CT_RElt */\n\tfunction parse_r(r) {\n\t\t/* 18.4.12 t ST_Xstring */\n\t\tvar t = r.match(tregex)/*, cp = 65001*/;\n\t\tif(!t) return {t:\"s\", v:\"\"};\n\n\t\tvar o/*:Cell*/ = ({t:'s', v:unescapexml(t[1])}/*:any*/);\n\t\tvar rpr = r.match(rpregex);\n\t\tif(rpr) o.s = parse_rpr(rpr[1]);\n\t\treturn o;\n\t}\n\tvar rregex = /<(?:\\w+:)?r>/g, rend = /<\\/(?:\\w+:)?r>/;\n\treturn function parse_rs(rs) {\n\t\treturn rs.replace(rregex,\"\").split(rend).map(parse_r).filter(function(r) { return r.v; });\n\t};\n})();\n\n\n/* Parse a list of <r> tags */\nvar rs_to_html = /*#__PURE__*/(function parse_rs_factory() {\n\tvar nlregex = /(\\r\\n|\\n)/g;\n\tfunction parse_rpr2(font, intro, outro) {\n\t\tvar style/*:Array<string>*/ = [];\n\n\t\tif(font.u) style.push(\"text-decoration: underline;\");\n\t\tif(font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\n\t\tif(font.sz) style.push(\"font-size:\" + font.sz + \"pt;\");\n\t\tif(font.outline) style.push(\"text-effect: outline;\");\n\t\tif(font.shadow) style.push(\"text-shadow: auto;\");\n\t\tintro.push('<span style=\"' + style.join(\"\") + '\">');\n\n\t\tif(font.b) { intro.push(\"<b>\"); outro.push(\"</b>\"); }\n\t\tif(font.i) { intro.push(\"<i>\"); outro.push(\"</i>\"); }\n\t\tif(font.strike) { intro.push(\"<s>\"); outro.push(\"</s>\"); }\n\n\t\tvar align = font.valign || \"\";\n\t\tif(align == \"superscript\" || align == \"super\") align = \"sup\";\n\t\telse if(align == \"subscript\") align = \"sub\";\n\t\tif(align != \"\") { intro.push(\"<\" + align + \">\"); outro.push(\"</\" + align + \">\"); }\n\n\t\toutro.push(\"</span>\");\n\t\treturn font;\n\t}\n\n\t/* 18.4.4 r CT_RElt */\n\tfunction r_to_html(r) {\n\t\tvar terms/*:[Array<string>, string, Array<string>]*/ = [[],r.v,[]];\n\t\tif(!r.v) return \"\";\n\n\t\tif(r.s) parse_rpr2(r.s, terms[0], terms[2]);\n\n\t\treturn terms[0].join(\"\") + terms[1].replace(nlregex,'<br/>') + terms[2].join(\"\");\n\t}\n\n\treturn function parse_rs(rs) {\n\t\treturn rs.map(r_to_html).join(\"\");\n\t};\n})();\n\n/* 18.4.8 si CT_Rst */\nvar sitregex = /<(?:\\w+:)?t[^>]*>([^<]*)<\\/(?:\\w+:)?t>/g, sirregex = /<(?:\\w+:)?r>/;\nvar sirphregex = /<(?:\\w+:)?rPh.*?>([\\s\\S]*?)<\\/(?:\\w+:)?rPh>/g;\nfunction parse_si(x, opts) {\n\tvar html = opts ? opts.cellHTML : true;\n\tvar z = {};\n\tif(!x) return { t: \"\" };\n\t//var y;\n\t/* 18.4.12 t ST_Xstring (Plaintext String) */\n\t// TODO: is whitespace actually valid here?\n\tif(x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\n\t\tz.t = unescapexml(utf8read(x.slice(x.indexOf(\">\")+1).split(/<\\/(?:\\w+:)?t>/)[0]||\"\"));\n\t\tz.r = utf8read(x);\n\t\tif(html) z.h = escapehtml(z.t);\n\t}\n\t/* 18.4.4 r CT_RElt (Rich Text Run) */\n\telse if((/*y = */x.match(sirregex))) {\n\t\tz.r = utf8read(x);\n\t\tz.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex)||[]).join(\"\").replace(tagregex,\"\")));\n\t\tif(html) z.h = rs_to_html(parse_rs(z.r));\n\t}\n\t/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n\t/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n\treturn z;\n}\n\n/* 18.4 Shared String Table */\nvar sstr0 = /<(?:\\w+:)?sst([^>]*)>([\\s\\S]*)<\\/(?:\\w+:)?sst>/;\nvar sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\nvar sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\nfunction parse_sst_xml(data/*:string*/, opts)/*:SST*/ {\n\tvar s/*:SST*/ = ([]/*:any*/), ss = \"\";\n\tif(!data) return s;\n\t/* 18.4.9 sst CT_Sst */\n\tvar sst = data.match(sstr0);\n\tif(sst) {\n\t\tss = sst[2].replace(sstr1,\"\").split(sstr2);\n\t\tfor(var i = 0; i != ss.length; ++i) {\n\t\t\tvar o = parse_si(ss[i].trim(), opts);\n\t\t\tif(o != null) s[s.length] = o;\n\t\t}\n\t\tsst = parsexmltag(sst[1]); s.Count = sst.count; s.Unique = sst.uniqueCount;\n\t}\n\treturn s;\n}\n\nvar straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\nfunction write_sst_xml(sst/*:SST*/, opts)/*:string*/ {\n\tif(!opts.bookSST) return \"\";\n\tvar o = [XML_HEADER];\n\to[o.length] = (writextag('sst', null, {\n\t\txmlns: XMLNS_main[0],\n\t\tcount: sst.Count,\n\t\tuniqueCount: sst.Unique\n\t}));\n\tfor(var i = 0; i != sst.length; ++i) { if(sst[i] == null) continue;\n\t\tvar s/*:XLString*/ = sst[i];\n\t\tvar sitag = \"<si>\";\n\t\tif(s.r) sitag += s.r;\n\t\telse {\n\t\t\tsitag += \"<t\";\n\t\t\tif(!s.t) s.t = \"\";\n\t\t\tif(s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\n\t\t\tsitag += \">\" + escapexml(s.t) + \"</t>\";\n\t\t}\n\t\tsitag += \"</si>\";\n\t\to[o.length] = (sitag);\n\t}\n\tif(o.length>2){ o[o.length] = ('</sst>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.221 BrtBeginSst */\nfunction parse_BrtBeginSst(data) {\n\treturn [data.read_shift(4), data.read_shift(4)];\n}\n\n/* [MS-XLSB] 2.1.7.45 Shared Strings */\nfunction parse_sst_bin(data, opts)/*:SST*/ {\n\tvar s/*:SST*/ = ([]/*:any*/);\n\tvar pass = false;\n\trecordhopper(data, function hopper_sst(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009F: /* BrtBeginSst */\n\t\t\t\ts.Count = val[0]; s.Unique = val[1]; break;\n\t\t\tcase 0x0013: /* BrtSSTItem */\n\t\t\t\ts.push(val); break;\n\t\t\tcase 0x00A0: /* BrtEndSst */\n\t\t\t\treturn true;\n\n\t\t\tcase 0x0023: /* BrtFRTBegin */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* BrtFRTEnd */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){}\n\t\t\t\tif(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn s;\n}\n\nfunction write_BrtBeginSst(sst, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(4, sst.Count);\n\to.write_shift(4, sst.Unique);\n\treturn o;\n}\n\nvar write_BrtSSTItem = write_RichStr;\n\nfunction write_sst_bin(sst/*::, opts*/) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x009F /* BrtBeginSst */, write_BrtBeginSst(sst));\n\tfor(var i = 0; i < sst.length; ++i) write_record(ba, 0x0013 /* BrtSSTItem */, write_BrtSSTItem(sst[i]));\n\t/* FRTSST */\n\twrite_record(ba, 0x00A0 /* BrtEndSst */);\n\treturn ba.end();\n}\nfunction _JS2ANSI(str/*:string*/)/*:Array<number>*/ {\n\tif(typeof $cptable !== 'undefined') return $cptable.utils.encode(current_ansi, str);\n\tvar o/*:Array<number>*/ = [], oo = str.split(\"\");\n\tfor(var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.4 Version */\nfunction parse_CRYPTOVersion(blob, length/*:?number*/) {\n\tvar o/*:any*/ = {};\n\to.Major = blob.read_shift(2);\n\to.Minor = blob.read_shift(2);\n\t/*:: if(length == null) return o; */\n\tif(length >= 4) blob.l += length - 4;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\nfunction parse_DataSpaceVersionInfo(blob) {\n\tvar o = {};\n\to.id = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\nfunction parse_DataSpaceMapEntry(blob) {\n\tvar len = blob.read_shift(4);\n\tvar end = blob.l + len - 4;\n\tvar o = {};\n\tvar cnt = blob.read_shift(4);\n\tvar comps/*:Array<{t:number, v:string}>*/ = [];\n\t/* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\n\twhile(cnt-- > 0) comps.push({ t: blob.read_shift(4), v: blob.read_shift(0, 'lpp4') });\n\to.name = blob.read_shift(0, 'lpp4');\n\to.comps = comps;\n\tif(blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\nfunction parse_DataSpaceMap(blob) {\n\tvar o = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\nfunction parse_DataSpaceDefinition(blob)/*:Array<string>*/ {\n\tvar o/*:Array<string>*/ = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\nfunction parse_TransformInfoHeader(blob) {\n\tvar o = {};\n\t/*var len = */blob.read_shift(4);\n\tblob.l += 4; // must be 0x1\n\to.id = blob.read_shift(0, 'lpp4');\n\to.name = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\nfunction parse_Primary(blob) {\n\t/* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\n\tvar hdr = parse_TransformInfoHeader(blob);\n\t/* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\n\thdr.ename = blob.read_shift(0, '8lpp4');\n\thdr.blksz = blob.read_shift(4);\n\thdr.cmode = blob.read_shift(4);\n\tif(blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\n\treturn hdr;\n}\n\n/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\nfunction parse_EncryptionHeader(blob, length/*:number*/) {\n\tvar tgt = blob.l + length;\n\tvar o = {};\n\to.Flags = (blob.read_shift(4) & 0x3F);\n\tblob.l += 4;\n\to.AlgID = blob.read_shift(4);\n\tvar valid = false;\n\tswitch(o.AlgID) {\n\t\tcase 0x660E: case 0x660F: case 0x6610: valid = (o.Flags == 0x24); break;\n\t\tcase 0x6801: valid = (o.Flags == 0x04); break;\n\t\tcase 0: valid = (o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24); break;\n\t\tdefault: throw 'Unrecognized encryption algorithm: ' + o.AlgID;\n\t}\n\tif(!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\n\to.AlgIDHash = blob.read_shift(4);\n\to.KeySize = blob.read_shift(4);\n\to.ProviderType = blob.read_shift(4);\n\tblob.l += 8;\n\to.CSPName = blob.read_shift((tgt-blob.l)>>1, 'utf16le');\n\tblob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\nfunction parse_EncryptionVerifier(blob, length/*:number*/) {\n\tvar o = {}, tgt = blob.l + length;\n\tblob.l += 4; // SaltSize must be 0x10\n\to.Salt = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\to.Verifier = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\t/*var sz = */blob.read_shift(4);\n\to.VerifierHash = blob.slice(blob.l, tgt); blob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\nfunction parse_EncryptionInfo(blob) {\n\tvar vers = parse_CRYPTOVersion(blob);\n\tswitch(vers.Minor) {\n\t\tcase 0x02: return [vers.Minor, parse_EncInfoStd(blob, vers)];\n\t\tcase 0x03: return [vers.Minor, parse_EncInfoExt(blob, vers)];\n\t\tcase 0x04: return [vers.Minor, parse_EncInfoAgl(blob, vers)];\n\t}\n\tthrow new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\nfunction parse_EncInfoStd(blob/*::, vers*/) {\n\tvar flags = blob.read_shift(4);\n\tif((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\n\tvar sz = blob.read_shift(4);\n\t//var tgt = blob.l + sz;\n\tvar hdr = parse_EncryptionHeader(blob, sz);\n\tvar verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\n\treturn { t:\"Std\", h:hdr, v:verifier };\n}\n/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\nfunction parse_EncInfoExt(/*::blob, vers*/) { throw new Error(\"File is password-protected: ECMA-376 Extensible\"); }\n/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\nfunction parse_EncInfoAgl(blob/*::, vers*/) {\n\tvar KeyData = [\"saltSize\",\"blockSize\",\"keyBits\",\"hashSize\",\"cipherAlgorithm\",\"cipherChaining\",\"hashAlgorithm\",\"saltValue\"];\n\tblob.l+=4;\n\tvar xml = blob.read_shift(blob.length - blob.l, 'utf8');\n\tvar o = {};\n\txml.replace(tagregex, function xml_agile(x) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<encryption': case '</encryption>': break;\n\t\t\tcase '<keyData': KeyData.forEach(function(k) { o[k] = y[k]; }); break;\n\t\t\tcase '<dataIntegrity': o.encryptedHmacKey = y.encryptedHmacKey; o.encryptedHmacValue = y.encryptedHmacValue; break;\n\t\t\tcase '<keyEncryptors>': case '<keyEncryptors': o.encs = []; break;\n\t\t\tcase '</keyEncryptors>': break;\n\n\t\t\tcase '<keyEncryptor': o.uri = y.uri; break;\n\t\t\tcase '</keyEncryptor>': break;\n\t\t\tcase '<encryptedKey': o.encs.push(y); break;\n\t\t\tdefault: throw y[0];\n\t\t}\n\t});\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\nfunction parse_RC4CryptoHeader(blob, length/*:number*/) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4); length -= 4;\n\tif(vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\n\tif(vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\n\to.Flags = blob.read_shift(4); length -= 4;\n\tvar sz = blob.read_shift(4); length -= 4;\n\to.EncryptionHeader = parse_EncryptionHeader(blob, sz); length -= sz;\n\to.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\n\treturn o;\n}\n/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\nfunction parse_RC4Header(blob/*::, length*/) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n\tif(vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\n\to.Salt = blob.read_shift(16);\n\to.EncryptedVerifier = blob.read_shift(16);\n\to.EncryptedVerifierHash = blob.read_shift(16);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\nfunction crypto_CreatePasswordVerifier_Method1(Password/*:string*/) {\n\tvar Verifier = 0x0000, PasswordArray;\n\tvar PasswordDecoded = _JS2ANSI(Password);\n\tvar len = PasswordDecoded.length + 1, i, PasswordByte;\n\tvar Intermediate1, Intermediate2, Intermediate3;\n\tPasswordArray = new_raw_buf(len);\n\tPasswordArray[0] = PasswordDecoded.length;\n\tfor(i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i-1];\n\tfor(i = len-1; i >= 0; --i) {\n\t\tPasswordByte = PasswordArray[i];\n\t\tIntermediate1 = ((Verifier & 0x4000) === 0x0000) ? 0 : 1;\n\t\tIntermediate2 = (Verifier << 1) & 0x7FFF;\n\t\tIntermediate3 = Intermediate1 | Intermediate2;\n\t\tVerifier = Intermediate3 ^ PasswordByte;\n\t}\n\treturn Verifier ^ 0xCE4B;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\nvar crypto_CreateXorArray_Method1 = /*#__PURE__*/(function() {\n\tvar PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\n\tvar InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\n\tvar XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\n\tvar Ror = function(Byte) { return ((Byte/2) | (Byte*128)) & 0xFF; };\n\tvar XorRor = function(byte1, byte2) { return Ror(byte1 ^ byte2); };\n\tvar CreateXorKey_Method1 = function(Password) {\n\t\tvar XorKey = InitialCode[Password.length - 1];\n\t\tvar CurrentElement = 0x68;\n\t\tfor(var i = Password.length-1; i >= 0; --i) {\n\t\t\tvar Char = Password[i];\n\t\t\tfor(var j = 0; j != 7; ++j) {\n\t\t\t\tif(Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\n\t\t\t\tChar *= 2; --CurrentElement;\n\t\t\t}\n\t\t}\n\t\treturn XorKey;\n\t};\n\treturn function(password/*:string*/) {\n\t\tvar Password = _JS2ANSI(password);\n\t\tvar XorKey = CreateXorKey_Method1(Password);\n\t\tvar Index = Password.length;\n\t\tvar ObfuscationArray = new_raw_buf(16);\n\t\tfor(var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\n\t\tvar Temp, PasswordLastChar, PadIndex;\n\t\tif((Index & 1) === 1) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[0], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tPasswordLastChar = Password[Password.length - 1];\n\t\t\tObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\n\t\t}\n\t\twhile(Index > 0) {\n\t\t\t--Index;\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t}\n\t\tIndex = 15;\n\t\tPadIndex = 15 - Password.length;\n\t\twhile(PadIndex > 0) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t}\n\t\treturn ObfuscationArray;\n\t};\n})();\n\n/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\nvar crypto_DecryptData_Method1 = function(password/*:string*/, Data, XorArrayIndex, XorArray, O) {\n\t/* If XorArray is set, use it; if O is not set, make changes in-place */\n\tif(!O) O = Data;\n\tif(!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\n\tvar Index, Value;\n\tfor(Index = 0; Index != Data.length; ++Index) {\n\t\tValue = Data[Index];\n\t\tValue ^= XorArray[XorArrayIndex];\n\t\tValue = ((Value>>5) | (Value<<3)) & 0xFF;\n\t\tO[Index] = Value;\n\t\t++XorArrayIndex;\n\t}\n\treturn [O, XorArrayIndex, XorArray];\n};\n\nvar crypto_MakeXorDecryptor = function(password/*:string*/) {\n\tvar XorArrayIndex = 0, XorArray = crypto_CreateXorArray_Method1(password);\n\treturn function(Data) {\n\t\tvar O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\n\t\tXorArrayIndex = O[1];\n\t\treturn O[0];\n\t};\n};\n\n/* 2.5.343 */\nfunction parse_XORObfuscation(blob, length, opts, out) {\n\tvar o = ({ key: parseuint16(blob), verificationBytes: parseuint16(blob) }/*:any*/);\n\tif(opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\n\tout.valid = o.verificationBytes === o.verifier;\n\tif(out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\n\treturn o;\n}\n\n/* 2.4.117 */\nfunction parse_FilePassHeader(blob, length/*:number*/, oo) {\n\tvar o = oo || {}; o.Info = blob.read_shift(2); blob.l -= 2;\n\tif(o.Info === 1) o.Data = parse_RC4Header(blob, length);\n\telse o.Data = parse_RC4CryptoHeader(blob, length);\n\treturn o;\n}\nfunction parse_FilePass(blob, length/*:number*/, opts) {\n\tvar o = ({ Type: opts.biff >= 8 ? blob.read_shift(2) : 0 }/*:any*/); /* wEncryptionType */\n\tif(o.Type) parse_FilePassHeader(blob, length-2, o);\n\telse parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\n\treturn o;\n}\n\n\nvar RTF = /*#__PURE__*/(function() {\n\tfunction rtf_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return rtf_to_sheet_str(Base64_decode(d), opts);\n\t\t\tcase 'binary': return rtf_to_sheet_str(d, opts);\n\t\t\tcase 'buffer': return rtf_to_sheet_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array':  return rtf_to_sheet_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\n\t/* TODO: this is a stub */\n\tfunction rtf_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tvar o = opts || {};\n\t\tvar ws/*:Worksheet*/ = o.dense ? ([]/*:any*/) : ({}/*:any*/);\n\n\t\tvar rows = str.match(/\\\\trowd.*?\\\\row\\b/g);\n\t\tif(!rows.length) throw new Error(\"RTF missing table\");\n\t\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:0, r:rows.length - 1}}/*:any*/);\n\t\trows.forEach(function(rowtf, R) {\n\t\t\tif(Array.isArray(ws)) ws[R] = [];\n\t\t\tvar rtfre = /\\\\\\w+\\b/g;\n\t\t\tvar last_index = 0;\n\t\t\tvar res;\n\t\t\tvar C = -1;\n\t\t\twhile((res = rtfre.exec(rowtf))) {\n\t\t\t\tswitch(res[0]) {\n\t\t\t\t\tcase \"\\\\cell\":\n\t\t\t\t\t\tvar data = rowtf.slice(last_index, rtfre.lastIndex - res[0].length);\n\t\t\t\t\t\tif(data[0] == \" \") data = data.slice(1);\n\t\t\t\t\t\t++C;\n\t\t\t\t\t\tif(data.length) {\n\t\t\t\t\t\t\t// TODO: value parsing, including codepage adjustments\n\t\t\t\t\t\t\tvar cell = {v: data, t:\"s\"};\n\t\t\t\t\t\t\tif(Array.isArray(ws)) ws[R][C] = cell;\n\t\t\t\t\t\t\telse ws[encode_cell({r:R, c:C})] = cell;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlast_index = rtfre.lastIndex;\n\t\t\t}\n\t\t\tif(C > range.e.c) range.e.c = C;\n\t\t});\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\n\tfunction rtf_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(rtf_to_sheet(d, opts), opts); }\n\n\t/* TODO: this is a stub */\n\tfunction sheet_to_rtf(ws/*:Worksheet*//*::, opts*/)/*:string*/ {\n\t\tvar o = [\"{\\\\rtf1\\\\ansi\"];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\to.push(\"\\\\trowd\\\\trautofit1\");\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) o.push(\"\\\\cellx\" + (C+1));\n\t\t\to.push(\"\\\\pard\\\\intbl\");\n\t\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C]: ws[coord];\n\t\t\t\tif(!cell || cell.v == null && (!cell.f || cell.F)) continue;\n\t\t\t\to.push(\" \" + (cell.w || (format_cell(cell), cell.w)));\n\t\t\t\to.push(\"\\\\cell\");\n\t\t\t}\n\t\t\to.push(\"\\\\pard\\\\intbl\\\\row\");\n\t\t}\n\t\treturn o.join(\"\") + \"}\";\n\t}\n\n\treturn {\n\t\tto_workbook: rtf_to_workbook,\n\t\tto_sheet: rtf_to_sheet,\n\t\tfrom_sheet: sheet_to_rtf\n\t};\n})();\nfunction hex2RGB(h) {\n\tvar o = h.slice(h[0]===\"#\"?1:0).slice(0,6);\n\treturn [parseInt(o.slice(0,2),16),parseInt(o.slice(2,4),16),parseInt(o.slice(4,6),16)];\n}\nfunction rgb2Hex(rgb) {\n\tfor(var i=0,o=1; i!=3; ++i) o = o*256 + (rgb[i]>255?255:rgb[i]<0?0:rgb[i]);\n\treturn o.toString(16).toUpperCase().slice(1);\n}\n\nfunction rgb2HSL(rgb) {\n\tvar R = rgb[0]/255, G = rgb[1]/255, B=rgb[2]/255;\n\tvar M = Math.max(R, G, B), m = Math.min(R, G, B), C = M - m;\n\tif(C === 0) return [0, 0, R];\n\n\tvar H6 = 0, S = 0, L2 = (M + m);\n\tS = C / (L2 > 1 ? 2 - L2 : L2);\n\tswitch(M){\n\t\tcase R: H6 = ((G - B) / C + 6)%6; break;\n\t\tcase G: H6 = ((B - R) / C + 2); break;\n\t\tcase B: H6 = ((R - G) / C + 4); break;\n\t}\n\treturn [H6 / 6, S, L2 / 2];\n}\n\nfunction hsl2RGB(hsl){\n\tvar H = hsl[0], S = hsl[1], L = hsl[2];\n\tvar C = S * 2 * (L < 0.5 ? L : 1 - L), m = L - C/2;\n\tvar rgb = [m,m,m], h6 = 6*H;\n\n\tvar X;\n\tif(S !== 0) switch(h6|0) {\n\t\tcase 0: case 6: X = C * h6; rgb[0] += C; rgb[1] += X; break;\n\t\tcase 1: X = C * (2 - h6);   rgb[0] += X; rgb[1] += C; break;\n\t\tcase 2: X = C * (h6 - 2);   rgb[1] += C; rgb[2] += X; break;\n\t\tcase 3: X = C * (4 - h6);   rgb[1] += X; rgb[2] += C; break;\n\t\tcase 4: X = C * (h6 - 4);   rgb[2] += C; rgb[0] += X; break;\n\t\tcase 5: X = C * (6 - h6);   rgb[2] += X; rgb[0] += C; break;\n\t}\n\tfor(var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i]*255);\n\treturn rgb;\n}\n\n/* 18.8.3 bgColor tint algorithm */\nfunction rgb_tint(hex, tint) {\n\tif(tint === 0) return hex;\n\tvar hsl = rgb2HSL(hex2RGB(hex));\n\tif (tint < 0) hsl[2] = hsl[2] * (1 + tint);\n\telse hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\n\treturn rgb2Hex(hsl2RGB(hsl));\n}\n\n/* 18.3.1.13 width calculations */\n/* [MS-OI29500] 2.1.595 Column Width & Formatting */\nvar DEF_MDW = 6, MAX_MDW = 15, MIN_MDW = 1, MDW = DEF_MDW;\nfunction width2px(width) { return Math.floor(( width + (Math.round(128/MDW))/256 )* MDW ); }\nfunction px2char(px) { return (Math.floor((px - 5)/MDW * 100 + 0.5))/100; }\nfunction char2width(chr) { return (Math.round((chr * MDW + 5)/MDW*256))/256; }\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\nfunction cycle_width(collw) { return char2width(px2char(width2px(collw))); }\n/* XLSX/XLSB/XLS specify width in units of MDW */\nfunction find_mdw_colw(collw) {\n\tvar delta = Math.abs(collw - cycle_width(collw)), _MDW = MDW;\n\tif(delta > 0.005) for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) if(Math.abs(collw - cycle_width(collw)) <= delta) { delta = Math.abs(collw - cycle_width(collw)); _MDW = MDW; }\n\tMDW = _MDW;\n}\n/* XLML specifies width in terms of pixels */\n/*function find_mdw_wpx(wpx) {\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\n\t\tguess = char2width_(px2char_(wpx))*256;\n\t\tguess = (guess) % 1;\n\t\tif(guess > 0.5) guess--;\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\n\t}\n\tMDW = _MDW;\n}*/\n\nfunction process_col(coll/*:ColInfo*/) {\n\tif(coll.width) {\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.MDW = MDW;\n\t} else if(coll.wpx) {\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.MDW = MDW;\n\t} else if(typeof coll.wch == 'number') {\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.MDW = MDW;\n\t}\n\tif(coll.customWidth) delete coll.customWidth;\n}\n\nvar DEF_PPI = 96, PPI = DEF_PPI;\nfunction px2pt(px) { return px * 96 / PPI; }\nfunction pt2px(pt) { return pt * PPI / 96; }\n\n/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\nvar XLMLPatternTypeMap = {\n\t\"None\": \"none\",\n\t\"Solid\": \"solid\",\n\t\"Gray50\": \"mediumGray\",\n\t\"Gray75\": \"darkGray\",\n\t\"Gray25\": \"lightGray\",\n\t\"HorzStripe\": \"darkHorizontal\",\n\t\"VertStripe\": \"darkVertical\",\n\t\"ReverseDiagStripe\": \"darkDown\",\n\t\"DiagStripe\": \"darkUp\",\n\t\"DiagCross\": \"darkGrid\",\n\t\"ThickDiagCross\": \"darkTrellis\",\n\t\"ThinHorzStripe\": \"lightHorizontal\",\n\t\"ThinVertStripe\": \"lightVertical\",\n\t\"ThinReverseDiagStripe\": \"lightDown\",\n\t\"ThinHorzCross\": \"lightGrid\"\n};\n\n/* 18.8.5 borders CT_Borders */\nfunction parse_borders(t, styles, themes, opts) {\n\tstyles.Borders = [];\n\tvar border = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<borders': case '<borders>': case '</borders>': break;\n\n\t\t\t/* 18.8.4 border CT_Border */\n\t\t\tcase '<border': case '<border>': case '<border/>':\n\t\t\t\tborder = /*::(*/{}/*:: :any)*/;\n\t\t\t\tif(y.diagonalUp) border.diagonalUp = parsexmlbool(y.diagonalUp);\n\t\t\t\tif(y.diagonalDown) border.diagonalDown = parsexmlbool(y.diagonalDown);\n\t\t\t\tstyles.Borders.push(border);\n\t\t\t\tbreak;\n\t\t\tcase '</border>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<left/>': break;\n\t\t\tcase '<left': case '<left>': break;\n\t\t\tcase '</left>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<right/>': break;\n\t\t\tcase '<right': case '<right>': break;\n\t\t\tcase '</right>': break;\n\n\t\t\t/* 18.8.43 top CT_BorderPr */\n\t\t\tcase '<top/>': break;\n\t\t\tcase '<top': case '<top>': break;\n\t\t\tcase '</top>': break;\n\n\t\t\t/* 18.8.6 bottom CT_BorderPr */\n\t\t\tcase '<bottom/>': break;\n\t\t\tcase '<bottom': case '<bottom>': break;\n\t\t\tcase '</bottom>': break;\n\n\t\t\t/* 18.8.13 diagonal CT_BorderPr */\n\t\t\tcase '<diagonal': case '<diagonal>': case '<diagonal/>': break;\n\t\t\tcase '</diagonal>': break;\n\n\t\t\t/* 18.8.25 horizontal CT_BorderPr */\n\t\t\tcase '<horizontal': case '<horizontal>': case '<horizontal/>': break;\n\t\t\tcase '</horizontal>': break;\n\n\t\t\t/* 18.8.44 vertical CT_BorderPr */\n\t\t\tcase '<vertical': case '<vertical>': case '<vertical/>': break;\n\t\t\tcase '</vertical>': break;\n\n\t\t\t/* 18.8.37 start CT_BorderPr */\n\t\t\tcase '<start': case '<start>': case '<start/>': break;\n\t\t\tcase '</start>': break;\n\n\t\t\t/* 18.8.16 end CT_BorderPr */\n\t\t\tcase '<end': case '<end>': case '<end/>': break;\n\t\t\tcase '</end>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color>':\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in borders');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.21 fills CT_Fills */\nfunction parse_fills(t, styles, themes, opts) {\n\tstyles.Fills = [];\n\tvar fill = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fills': case '<fills>': case '</fills>': break;\n\n\t\t\t/* 18.8.20 fill CT_Fill */\n\t\t\tcase '<fill>': case '<fill': case '<fill/>':\n\t\t\t\tfill = {}; styles.Fills.push(fill); break;\n\t\t\tcase '</fill>': break;\n\n\t\t\t/* 18.8.24 gradientFill CT_GradientFill */\n\t\t\tcase '<gradientFill>': break;\n\t\t\tcase '<gradientFill':\n\t\t\tcase '</gradientFill>': styles.Fills.push(fill); fill = {}; break;\n\n\t\t\t/* 18.8.32 patternFill CT_PatternFill */\n\t\t\tcase '<patternFill': case '<patternFill>':\n\t\t\t\tif(y.patternType) fill.patternType = y.patternType;\n\t\t\t\tbreak;\n\t\t\tcase '<patternFill/>': case '</patternFill>': break;\n\n\t\t\t/* 18.8.3 bgColor CT_Color */\n\t\t\tcase '<bgColor':\n\t\t\t\tif(!fill.bgColor) fill.bgColor = {};\n\t\t\t\tif(y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\n\t\t\t\tif(y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.bgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<bgColor/>': case '</bgColor>': break;\n\n\t\t\t/* 18.8.19 fgColor CT_Color */\n\t\t\tcase '<fgColor':\n\t\t\t\tif(!fill.fgColor) fill.fgColor = {};\n\t\t\t\tif(y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.fgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb != null) fill.fgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<fgColor/>': case '</fgColor>': break;\n\n\t\t\t/* 18.8.38 stop CT_GradientStop */\n\t\t\tcase '<stop': case '<stop/>': break;\n\t\t\tcase '</stop>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color/>': break;\n\t\t\tcase '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fills');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.23 fonts CT_Fonts */\nfunction parse_fonts(t, styles, themes, opts) {\n\tstyles.Fonts = [];\n\tvar font = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fonts': case '<fonts>': case '</fonts>': break;\n\n\t\t\t/* 18.8.22 font CT_Font */\n\t\t\tcase '<font': case '<font>': break;\n\t\t\tcase '</font>': case '<font/>':\n\t\t\t\tstyles.Fonts.push(font);\n\t\t\t\tfont = {};\n\t\t\t\tbreak;\n\n\t\t\t/* 18.8.29 name CT_FontName */\n\t\t\tcase '<name': if(y.val) font.name = utf8read(y.val); break;\n\t\t\tcase '<name/>': case '</name>': break;\n\n\t\t\t/* 18.8.2  b CT_BooleanProperty */\n\t\t\tcase '<b': font.bold = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<b/>': font.bold = 1; break;\n\n\t\t\t/* 18.8.26 i CT_BooleanProperty */\n\t\t\tcase '<i': font.italic = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<i/>': font.italic = 1; break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase \"none\": font.underline = 0x00; break;\n\t\t\t\t\tcase \"single\": font.underline = 0x01; break;\n\t\t\t\t\tcase \"double\": font.underline = 0x02; break;\n\t\t\t\t\tcase \"singleAccounting\": font.underline = 0x21; break;\n\t\t\t\t\tcase \"doubleAccounting\": font.underline = 0x22; break;\n\t\t\t\t} break;\n\t\t\tcase '<u/>': font.underline = 1; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike': font.strike = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\n\t\t\t/* 18.4.2  outline CT_BooleanProperty */\n\t\t\tcase '<outline': font.outline = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\tcase '<shadow': font.shadow = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\tcase '<condense': font.condense = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<condense/>': font.condense = 1; break;\n\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\tcase '<extend': font.extend = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<extend/>': font.extend = 1; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': if(y.val) font.sz = +y.val; break;\n\t\t\tcase '<sz/>': case '</sz>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\n\t\t\tcase '<vertAlign': if(y.val) font.vertAlign = y.val; break;\n\t\t\tcase '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.18 family CT_FontFamily */\n\t\t\tcase '<family': if(y.val) font.family = parseInt(y.val,10); break;\n\t\t\tcase '<family/>': case '</family>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme */\n\t\t\tcase '<scheme': if(y.val) font.scheme = y.val; break;\n\t\t\tcase '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\ty.codepage = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.?.? color CT_Color */\n\t\t\tcase '<color':\n\t\t\t\tif(!font.color) font.color = {};\n\t\t\t\tif(y.auto) font.color.auto = parsexmlbool(y.auto);\n\n\t\t\t\tif(y.rgb) font.color.rgb = y.rgb.slice(-6);\n\t\t\t\telse if(y.indexed) {\n\t\t\t\t\tfont.color.index = parseInt(y.indexed, 10);\n\t\t\t\t\tvar icv = XLSIcv[font.color.index];\n\t\t\t\t\tif(font.color.index == 81) icv = XLSIcv[1];\n\t\t\t\t\tif(!icv) icv = XLSIcv[1]; //throw new Error(x); // note: 206 is valid\n\t\t\t\t\tfont.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\n\t\t\t\t} else if(y.theme) {\n\t\t\t\t\tfont.color.theme = parseInt(y.theme, 10);\n\t\t\t\t\tif(y.tint) font.color.tint = parseFloat(y.tint);\n\t\t\t\t\tif(y.theme && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\t\tfont.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* note: sometimes mc:AlternateContent appears bare */\n\t\t\tcase '<AlternateContent': pass = true; break;\n\t\t\tcase '</AlternateContent>': pass = false; break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.31 numFmts CT_NumFmts */\nfunction parse_numFmts(t, styles, opts) {\n\tstyles.NumberFmt = [];\n\tvar k/*Array<number>*/ = (keys(table_fmt)/*:any*/);\n\tfor(var i=0; i < k.length; ++i) styles.NumberFmt[k[i]] = table_fmt[k[i]];\n\tvar m = t[0].match(tagregex);\n\tif(!m) return;\n\tfor(i=0; i < m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<numFmts': case '</numFmts>': case '<numFmts/>': case '<numFmts>': break;\n\t\t\tcase '<numFmt': {\n\t\t\t\tvar f=unescapexml(utf8read(y.formatCode)), j=parseInt(y.numFmtId,10);\n\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\tif(j>0) {\n\t\t\t\t\tif(j > 0x188) {\n\t\t\t\t\t\tfor(j = 0x188; j > 0x3c; --j) if(styles.NumberFmt[j] == null) break;\n\t\t\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\t\t}\n\t\t\t\t\tSSF_load(f,j);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase '</numFmt>': break;\n\t\t\tdefault: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\n\t\t}\n\t}\n}\n\nfunction write_numFmts(NF/*:{[n:number|string]:string}*//*::, opts*/) {\n\tvar o = [\"<numFmts>\"];\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) o[o.length] = (writextag('numFmt',null,{numFmtId:i,formatCode:escapexml(NF[i])}));\n\t});\n\tif(o.length === 1) return \"\";\n\to[o.length] = (\"</numFmts>\");\n\to[0] = writextag('numFmts', null, { count:o.length-2 }).replace(\"/>\", \">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8.10 cellXfs CT_CellXfs */\nvar cellXF_uint = [ \"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\" ];\nvar cellXF_bool = [ \"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\" ];\nfunction parse_cellXfs(t, styles, opts) {\n\tstyles.CellXf = [];\n\tvar xf;\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x), i = 0;\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<cellXfs': case '<cellXfs>': case '<cellXfs/>': case '</cellXfs>': break;\n\n\t\t\t/* 18.8.45 xf CT_Xf */\n\t\t\tcase '<xf': case '<xf/>':\n\t\t\t\txf = y;\n\t\t\t\tdelete xf[0];\n\t\t\t\tfor(i = 0; i < cellXF_uint.length; ++i) if(xf[cellXF_uint[i]])\n\t\t\t\t\txf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\n\t\t\t\tfor(i = 0; i < cellXF_bool.length; ++i) if(xf[cellXF_bool[i]])\n\t\t\t\t\txf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\n\t\t\t\tif(styles.NumberFmt && xf.numFmtId > 0x188) {\n\t\t\t\t\tfor(i = 0x188; i > 0x3c; --i) if(styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) { xf.numFmtId = i; break; }\n\t\t\t\t}\n\t\t\t\tstyles.CellXf.push(xf); break;\n\t\t\tcase '</xf>': break;\n\n\t\t\t/* 18.8.1 alignment CT_CellAlignment */\n\t\t\tcase '<alignment': case '<alignment/>':\n\t\t\t\tvar alignment = {};\n\t\t\t\tif(y.vertical) alignment.vertical = y.vertical;\n\t\t\t\tif(y.horizontal) alignment.horizontal = y.horizontal;\n\t\t\t\tif(y.textRotation != null) alignment.textRotation = y.textRotation;\n\t\t\t\tif(y.indent) alignment.indent = y.indent;\n\t\t\t\tif(y.wrapText) alignment.wrapText = parsexmlbool(y.wrapText);\n\t\t\t\txf.alignment = alignment;\n\t\t\t\tbreak;\n\t\t\tcase '</alignment>': break;\n\n\t\t\t/* 18.8.33 protection CT_CellProtection */\n\t\t\tcase '<protection':\n\t\t\t\tbreak;\n\t\t\tcase '</protection>': case '<protection/>': break;\n\n\t\t\t/* note: sometimes mc:AlternateContent appears bare */\n\t\t\tcase '<AlternateContent': pass = true; break;\n\t\t\tcase '</AlternateContent>': pass = false; break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction write_cellXfs(cellXfs)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\to[o.length] = (writextag('cellXfs',null));\n\tcellXfs.forEach(function(c) {\n\t\to[o.length] = (writextag('xf', null, c));\n\t});\n\to[o.length] = (\"</cellXfs>\");\n\tif(o.length === 2) return \"\";\n\to[0] = writextag('cellXfs',null, {count:o.length-2}).replace(\"/>\",\">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8 Styles CT_Stylesheet*/\nvar parse_sty_xml= /*#__PURE__*/(function make_pstyx() {\nvar numFmtRegex = /<(?:\\w+:)?numFmts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?numFmts>/;\nvar cellXfRegex = /<(?:\\w+:)?cellXfs([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?cellXfs>/;\nvar fillsRegex = /<(?:\\w+:)?fills([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fills>/;\nvar fontsRegex = /<(?:\\w+:)?fonts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fonts>/;\nvar bordersRegex = /<(?:\\w+:)?borders([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?borders>/;\n\nreturn function parse_sty_xml(data, themes, opts) {\n\tvar styles = {};\n\tif(!data) return styles;\n\tdata = data.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\t/* 18.8.39 styleSheet CT_Stylesheet */\n\tvar t;\n\n\t/* 18.8.31 numFmts CT_NumFmts ? */\n\tif((t=data.match(numFmtRegex))) parse_numFmts(t, styles, opts);\n\n\t/* 18.8.23 fonts CT_Fonts ? */\n\tif((t=data.match(fontsRegex))) parse_fonts(t, styles, themes, opts);\n\n\t/* 18.8.21 fills CT_Fills ? */\n\tif((t=data.match(fillsRegex))) parse_fills(t, styles, themes, opts);\n\n\t/* 18.8.5  borders CT_Borders ? */\n\tif((t=data.match(bordersRegex))) parse_borders(t, styles, themes, opts);\n\n\t/* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\n\t/* 18.8.8  cellStyles CT_CellStyles ? */\n\n\t/* 18.8.10 cellXfs CT_CellXfs ? */\n\tif((t=data.match(cellXfRegex))) parse_cellXfs(t, styles, opts);\n\n\t/* 18.8.15 dxfs CT_Dxfs ? */\n\t/* 18.8.42 tableStyles CT_TableStyles ? */\n\t/* 18.8.11 colors CT_Colors ? */\n\t/* 18.2.10 extLst CT_ExtensionList ? */\n\n\treturn styles;\n};\n})();\n\nfunction write_sty_xml(wb/*:Workbook*/, opts)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('styleSheet', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t'xmlns:vt': XMLNS.vt\n\t})], w;\n\tif(wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\n\to[o.length] = ('<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>');\n\to[o.length] = ('<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>');\n\to[o.length] = ('<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>');\n\to[o.length] = ('<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>');\n\tif((w = write_cellXfs(opts.cellXfs))) o[o.length] = (w);\n\to[o.length] = ('<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>');\n\to[o.length] = ('<dxfs count=\"0\"/>');\n\to[o.length] = ('<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>');\n\n\tif(o.length>2){ o[o.length] = ('</styleSheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.657 BrtFmt */\nfunction parse_BrtFmt(data, length/*:number*/) {\n\tvar numFmtId = data.read_shift(2);\n\tvar stFmtCode = parse_XLWideString(data,length-2);\n\treturn [numFmtId, stFmtCode];\n}\nfunction write_BrtFmt(i/*:number*/, f/*:string*/, o) {\n\tif(!o) o = new_buf(6 + 4 * f.length);\n\to.write_shift(2, i);\n\twrite_XLWideString(f, o);\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(o.l == null) o.l = o.length;\n\treturn out;\n}\n\n/* [MS-XLSB] 2.4.659 BrtFont TODO */\nfunction parse_BrtFont(data, length/*:number*/, opts) {\n\tvar out = ({}/*:any*/);\n\n\tout.sz = data.read_shift(2) / 20;\n\n\tvar grbit = parse_FontFlags(data, 2, opts);\n\tif(grbit.fItalic) out.italic = 1;\n\tif(grbit.fCondense) out.condense = 1;\n\tif(grbit.fExtend) out.extend = 1;\n\tif(grbit.fShadow) out.shadow = 1;\n\tif(grbit.fOutline) out.outline = 1;\n\tif(grbit.fStrikeout) out.strike = 1;\n\n\tvar bls = data.read_shift(2);\n\tif(bls === 0x02BC) out.bold = 1;\n\n\tswitch(data.read_shift(2)) {\n\t\t/* case 0: out.vertAlign = \"baseline\"; break; */\n\t\tcase 1: out.vertAlign = \"superscript\"; break;\n\t\tcase 2: out.vertAlign = \"subscript\"; break;\n\t}\n\n\tvar underline = data.read_shift(1);\n\tif(underline != 0) out.underline = underline;\n\n\tvar family = data.read_shift(1);\n\tif(family > 0) out.family = family;\n\n\tvar bCharSet = data.read_shift(1);\n\tif(bCharSet > 0) out.charset = bCharSet;\n\n\tdata.l++;\n\tout.color = parse_BrtColor(data, 8);\n\n\tswitch(data.read_shift(1)) {\n\t\t/* case 0: out.scheme = \"none\": break; */\n\t\tcase 1: out.scheme = \"major\"; break;\n\t\tcase 2: out.scheme = \"minor\"; break;\n\t}\n\n\tout.name = parse_XLWideString(data, length - 21);\n\n\treturn out;\n}\nfunction write_BrtFont(font/*:any*/, o) {\n\tif(!o) o = new_buf(25+4*32);\n\to.write_shift(2, font.sz * 20);\n\twrite_FontFlags(font, o);\n\to.write_shift(2, font.bold ? 0x02BC : 0x0190);\n\tvar sss = 0;\n\tif(font.vertAlign == \"superscript\") sss = 1;\n\telse if(font.vertAlign == \"subscript\") sss = 2;\n\to.write_shift(2, sss);\n\to.write_shift(1, font.underline || 0);\n\to.write_shift(1, font.family || 0);\n\to.write_shift(1, font.charset || 0);\n\to.write_shift(1, 0);\n\twrite_BrtColor(font.color, o);\n\tvar scheme = 0;\n\tif(font.scheme == \"major\") scheme = 1;\n\tif(font.scheme == \"minor\") scheme = 2;\n\to.write_shift(1, scheme);\n\twrite_XLWideString(font.name, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.650 BrtFill */\nvar XLSBFillPTNames = [\n\t\"none\",\n\t\"solid\",\n\t\"mediumGray\",\n\t\"darkGray\",\n\t\"lightGray\",\n\t\"darkHorizontal\",\n\t\"darkVertical\",\n\t\"darkDown\",\n\t\"darkUp\",\n\t\"darkGrid\",\n\t\"darkTrellis\",\n\t\"lightHorizontal\",\n\t\"lightVertical\",\n\t\"lightDown\",\n\t\"lightUp\",\n\t\"lightGrid\",\n\t\"lightTrellis\",\n\t\"gray125\",\n\t\"gray0625\"\n];\nvar rev_XLSBFillPTNames/*:EvertNumType*/;\n/* TODO: gradient fill representation */\nvar parse_BrtFill = parsenoop;\nfunction write_BrtFill(fill, o) {\n\tif(!o) o = new_buf(4*3 + 8*7 + 16*1);\n\tif(!rev_XLSBFillPTNames) rev_XLSBFillPTNames = (evert(XLSBFillPTNames)/*:any*/);\n\tvar fls/*:number*/ = rev_XLSBFillPTNames[fill.patternType];\n\tif(fls == null) fls = 0x28;\n\to.write_shift(4, fls);\n\tvar j = 0;\n\tif(fls != 0x28) {\n\t\t/* TODO: custom FG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\t\t/* TODO: custom BG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0);\n\t} else {\n\t\tfor(; j < 4; ++j) o.write_shift(4, 0);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0); /* TODO */\n\t\t/* iGradientType */\n\t\t/* xnumDegree */\n\t\t/* xnumFillToLeft */\n\t\t/* xnumFillToRight */\n\t\t/* xnumFillToTop */\n\t\t/* xnumFillToBottom */\n\t\t/* cNumStop */\n\t\t/* xfillGradientStop */\n\t}\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.824 BrtXF */\nfunction parse_BrtXF(data, length/*:number*/) {\n\tvar tgt = data.l + length;\n\tvar ixfeParent = data.read_shift(2);\n\tvar ifmt = data.read_shift(2);\n\tdata.l = tgt;\n\treturn {ixfe:ixfeParent, numFmtId:ifmt };\n}\nfunction write_BrtXF(data, ixfeP, o) {\n\tif(!o) o = new_buf(16);\n\to.write_shift(2, ixfeP||0);\n\to.write_shift(2, data.numFmtId||0);\n\to.write_shift(2, 0); /* iFont */\n\to.write_shift(2, 0); /* iFill */\n\to.write_shift(2, 0); /* ixBorder */\n\to.write_shift(1, 0); /* trot */\n\to.write_shift(1, 0); /* indent */\n\tvar flow = 0;\n\to.write_shift(1, flow); /* flags */\n\to.write_shift(1, 0); /* flags */\n\to.write_shift(1, 0); /* xfGrbitAtr */\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.4 Blxf TODO */\nfunction write_Blxf(data, o) {\n\tif(!o) o = new_buf(10);\n\to.write_shift(1, 0); /* dg */\n\to.write_shift(1, 0);\n\to.write_shift(4, 0); /* color */\n\to.write_shift(4, 0); /* color */\n\treturn o;\n}\n/* [MS-XLSB] 2.4.302 BrtBorder TODO */\nvar parse_BrtBorder = parsenoop;\nfunction write_BrtBorder(border, o) {\n\tif(!o) o = new_buf(51);\n\to.write_shift(1, 0); /* diagonal */\n\twrite_Blxf(null, o); /* top */\n\twrite_Blxf(null, o); /* bottom */\n\twrite_Blxf(null, o); /* left */\n\twrite_Blxf(null, o); /* right */\n\twrite_Blxf(null, o); /* diag */\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.763 BrtStyle TODO */\nfunction write_BrtStyle(style, o) {\n\tif(!o) o = new_buf(12+4*10);\n\to.write_shift(4, style.xfId);\n\to.write_shift(2, 1);\n\to.write_shift(1, +style.builtinId);\n\to.write_shift(1, 0); /* iLevel */\n\twrite_XLNullableWideString(style.name || \"\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\nfunction write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\n\tvar o = new_buf(4+256*2*4);\n\to.write_shift(4, cnt);\n\twrite_XLNullableWideString(defTableStyle, o);\n\twrite_XLNullableWideString(defPivotStyle, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction parse_sty_bin(data, themes, opts) {\n\tvar styles = {};\n\tstyles.NumberFmt = ([]/*:any*/);\n\tfor(var y in table_fmt) styles.NumberFmt[y] = table_fmt[y];\n\n\tstyles.CellXf = [];\n\tstyles.Fonts = [];\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_sty(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x002C: /* BrtFmt */\n\t\t\t\tstyles.NumberFmt[val[0]] = val[1]; SSF_load(val[1], val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x002B: /* BrtFont */\n\t\t\t\tstyles.Fonts.push(val);\n\t\t\t\tif(val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\tval.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0401: /* BrtKnownFonts */ break;\n\t\t\tcase 0x002D: /* BrtFill */\n\t\t\t\tbreak;\n\t\t\tcase 0x002E: /* BrtBorder */\n\t\t\t\tbreak;\n\t\t\tcase 0x002F: /* BrtXF */\n\t\t\t\tif(state[state.length - 1] == 0x0269 /* BrtBeginCellXFs */) {\n\t\t\t\t\tstyles.CellXf.push(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0030: /* BrtStyle */\n\t\t\tcase 0x01FB: /* BrtDXF */\n\t\t\tcase 0x023C: /* BrtMRUColor */\n\t\t\tcase 0x01DB: /* BrtIndexedColor */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0493: /* BrtDXF14 */\n\t\t\tcase 0x0836: /* BrtDXF15 */\n\t\t\tcase 0x046A: /* BrtSlicerStyleElement */\n\t\t\tcase 0x0200: /* BrtTableStyleElement */\n\t\t\tcase 0x082F: /* BrtTimelineStyleElement */\n\t\t\tcase 0x0C00: /* BrtUid */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* BrtFRTBegin */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* BrtFRTEnd */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* BrtACBegin */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* BrtACEnd */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T > 0) state.push(RT);\n\t\t\t\telse if(R.T < 0) state.pop();\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != 0x0025 /* BrtACBegin */)) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn styles;\n}\n\nfunction write_FMTS_bin(ba, NF/*:?SSFTable*/) {\n\tif(!NF) return;\n\tvar cnt = 0;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) ++cnt;\n\t});\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0267 /* BrtBeginFmts */, write_UInt32LE(cnt));\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_record(ba, 0x002C /* BrtFmt */, write_BrtFmt(i, NF[i]));\n\t});\n\twrite_record(ba, 0x0268 /* BrtEndFmts */);\n}\n\nfunction write_FONTS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0263 /* BrtBeginFonts */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002B /* BrtFont */, write_BrtFont({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Calibri\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}));\n\t/* 1*65491BrtFont [ACFONTS] */\n\twrite_record(ba, 0x0264 /* BrtEndFonts */);\n}\n\nfunction write_FILLS_bin(ba/*::, data*/) {\n\tvar cnt = 2;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x025B /* BrtBeginFills */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002D /* BrtFill */, write_BrtFill({patternType:\"none\"}));\n\twrite_record(ba, 0x002D /* BrtFill */, write_BrtFill({patternType:\"gray125\"}));\n\t/* 1*65431BrtFill */\n\twrite_record(ba, 0x025C /* BrtEndFills */);\n}\n\nfunction write_BORDERS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0265 /* BrtBeginBorders */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002E /* BrtBorder */, write_BrtBorder({}));\n\t/* 1*65430BrtBorder */\n\twrite_record(ba, 0x0266 /* BrtEndBorders */);\n}\n\nfunction write_CELLSTYLEXFS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\twrite_record(ba, 0x0272 /* BrtBeginCellStyleXFs */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002F /* BrtXF */, write_BrtXF({\n\t\tnumFmtId: 0,\n\t\tfontId:   0,\n\t\tfillId:   0,\n\t\tborderId: 0\n\t}, 0xFFFF));\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, 0x0273 /* BrtEndCellStyleXFs */);\n}\n\nfunction write_CELLXFS_bin(ba, data) {\n\twrite_record(ba, 0x0269 /* BrtBeginCellXFs */, write_UInt32LE(data.length));\n\tdata.forEach(function(c) { write_record(ba, 0x002F /* BrtXF */, write_BrtXF(c,0)); });\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, 0x026A /* BrtEndCellXFs */);\n}\n\nfunction write_STYLES_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\twrite_record(ba, 0x026B /* BrtBeginStyles */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x0030 /* BrtStyle */, write_BrtStyle({\n\t\txfId:0,\n\t\tbuiltinId:0,\n\t\tname:\"Normal\"\n\t}));\n\t/* 1*65430(BrtStyle *FRT) */\n\twrite_record(ba, 0x026C /* BrtEndStyles */);\n}\n\nfunction write_DXFS_bin(ba/*::, data*/) {\n\tvar cnt = 0;\n\n\twrite_record(ba, 0x01F9 /* BrtBeginDXFs */, write_UInt32LE(cnt));\n\t/* *2147483647(BrtDXF *FRT) */\n\twrite_record(ba, 0x01FA /* BrtEndDXFs */);\n}\n\nfunction write_TABLESTYLES_bin(ba/*::, data*/) {\n\tvar cnt = 0;\n\n\twrite_record(ba, 0x01FC /* BrtBeginTableStyles */, write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\n\t/* *TABLESTYLE */\n\twrite_record(ba, 0x01FD /* BrtEndTableStyles */);\n}\n\nfunction write_COLORPALETTE_bin(/*::ba, data*/) {\n\treturn;\n\t/* BrtBeginColorPalette [INDEXEDCOLORS] [MRUCOLORS] BrtEndColorPalette */\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction write_sty_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x0116 /* BrtBeginStyleSheet */);\n\twrite_FMTS_bin(ba, wb.SSF);\n\twrite_FONTS_bin(ba, wb);\n\twrite_FILLS_bin(ba, wb);\n\twrite_BORDERS_bin(ba, wb);\n\twrite_CELLSTYLEXFS_bin(ba, wb);\n\twrite_CELLXFS_bin(ba, opts.cellXfs);\n\twrite_STYLES_bin(ba, wb);\n\twrite_DXFS_bin(ba, wb);\n\twrite_TABLESTYLES_bin(ba, wb);\n\twrite_COLORPALETTE_bin(ba, wb);\n\t/* FRTSTYLESHEET*/\n\twrite_record(ba, 0x0117 /* BrtEndStyleSheet */);\n\treturn ba.end();\n}\n/* Even though theme layout is dk1 lt1 dk2 lt2, true order is lt1 dk1 lt2 dk2 */\nvar XLSXThemeClrScheme = [\n\t'</a:lt1>', '</a:dk1>', '</a:lt2>', '</a:dk2>',\n\t'</a:accent1>', '</a:accent2>', '</a:accent3>',\n\t'</a:accent4>', '</a:accent5>', '</a:accent6>',\n\t'</a:hlink>', '</a:folHlink>'\n];\n/* 20.1.6.2 clrScheme CT_ColorScheme */\nfunction parse_clrScheme(t, themes, opts) {\n\tthemes.themeElements.clrScheme = [];\n\tvar color = {};\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\t/* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\n\t\t\tcase '<a:clrScheme': case '</a:clrScheme>': break;\n\n\t\t\t/* 20.1.2.3.32 srgbClr CT_SRgbColor */\n\t\t\tcase '<a:srgbClr':\n\t\t\t\tcolor.rgb = y.val; break;\n\n\t\t\t/* 20.1.2.3.33 sysClr CT_SystemColor */\n\t\t\tcase '<a:sysClr':\n\t\t\t\tcolor.rgb = y.lastClr; break;\n\n\t\t\t/* 20.1.4.1.1 accent1 (Accent 1) */\n\t\t\t/* 20.1.4.1.2 accent2 (Accent 2) */\n\t\t\t/* 20.1.4.1.3 accent3 (Accent 3) */\n\t\t\t/* 20.1.4.1.4 accent4 (Accent 4) */\n\t\t\t/* 20.1.4.1.5 accent5 (Accent 5) */\n\t\t\t/* 20.1.4.1.6 accent6 (Accent 6) */\n\t\t\t/* 20.1.4.1.9 dk1 (Dark 1) */\n\t\t\t/* 20.1.4.1.10 dk2 (Dark 2) */\n\t\t\t/* 20.1.4.1.15 folHlink (Followed Hyperlink) */\n\t\t\t/* 20.1.4.1.19 hlink (Hyperlink) */\n\t\t\t/* 20.1.4.1.22 lt1 (Light 1) */\n\t\t\t/* 20.1.4.1.23 lt2 (Light 2) */\n\t\t\tcase '<a:dk1>': case '</a:dk1>':\n\t\t\tcase '<a:lt1>': case '</a:lt1>':\n\t\t\tcase '<a:dk2>': case '</a:dk2>':\n\t\t\tcase '<a:lt2>': case '</a:lt2>':\n\t\t\tcase '<a:accent1>': case '</a:accent1>':\n\t\t\tcase '<a:accent2>': case '</a:accent2>':\n\t\t\tcase '<a:accent3>': case '</a:accent3>':\n\t\t\tcase '<a:accent4>': case '</a:accent4>':\n\t\t\tcase '<a:accent5>': case '</a:accent5>':\n\t\t\tcase '<a:accent6>': case '</a:accent6>':\n\t\t\tcase '<a:hlink>': case '</a:hlink>':\n\t\t\tcase '<a:folHlink>': case '</a:folHlink>':\n\t\t\t\tif (y[0].charAt(1) === '/') {\n\t\t\t\t\tthemes.themeElements.clrScheme[XLSXThemeClrScheme.indexOf(y[0])] = color;\n\t\t\t\t\tcolor = {};\n\t\t\t\t} else {\n\t\t\t\t\tcolor.name = y[0].slice(3, y[0].length - 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault: if(opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\n\t\t}\n\t});\n}\n\n/* 20.1.4.1.18 fontScheme CT_FontScheme */\nfunction parse_fontScheme(/*::t, themes, opts*/) { }\n\n/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\nfunction parse_fmtScheme(/*::t, themes, opts*/) { }\n\nvar clrsregex = /<a:clrScheme([^>]*)>[\\s\\S]*<\\/a:clrScheme>/;\nvar fntsregex = /<a:fontScheme([^>]*)>[\\s\\S]*<\\/a:fontScheme>/;\nvar fmtsregex = /<a:fmtScheme([^>]*)>[\\s\\S]*<\\/a:fmtScheme>/;\n\n/* 20.1.6.10 themeElements CT_BaseStyles */\nfunction parse_themeElements(data, themes, opts) {\n\tthemes.themeElements = {};\n\n\tvar t;\n\n\t[\n\t\t/* clrScheme CT_ColorScheme */\n\t\t['clrScheme', clrsregex, parse_clrScheme],\n\t\t/* fontScheme CT_FontScheme */\n\t\t['fontScheme', fntsregex, parse_fontScheme],\n\t\t/* fmtScheme CT_StyleMatrix */\n\t\t['fmtScheme', fmtsregex, parse_fmtScheme]\n\t].forEach(function(m) {\n\t\tif(!(t=data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');\n\t\tm[2](t, themes, opts);\n\t});\n}\n\nvar themeltregex = /<a:themeElements([^>]*)>[\\s\\S]*<\\/a:themeElements>/;\n\n/* 14.2.7 Theme Part */\nfunction parse_theme_xml(data/*:string*/, opts) {\n\t/* 20.1.6.9 theme CT_OfficeStyleSheet */\n\tif(!data || data.length === 0) data = write_theme();\n\n\tvar t;\n\tvar themes = {};\n\n\t/* themeElements CT_BaseStyles */\n\tif(!(t=data.match(themeltregex))) throw new Error('themeElements not found in theme');\n\tparse_themeElements(t[0], themes, opts);\n\tthemes.raw = data;\n\treturn themes;\n}\n\nfunction write_theme(Themes, opts)/*:string*/ {\n\tif(opts && opts.themeXLSX) return opts.themeXLSX;\n\tif(Themes && typeof Themes.raw == \"string\") return Themes.raw;\n\tvar o = [XML_HEADER];\n\to[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\n\to[o.length] =  '<a:themeElements>';\n\n\to[o.length] =   '<a:clrScheme name=\"Office\">';\n\to[o.length] =    '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\n\to[o.length] =    '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\n\to[o.length] =    '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\n\to[o.length] =    '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\n\to[o.length] =    '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\n\to[o.length] =    '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\n\to[o.length] =    '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\n\to[o.length] =    '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\n\to[o.length] =    '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\n\to[o.length] =    '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\n\to[o.length] =    '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\n\to[o.length] =    '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\n\to[o.length] =   '</a:clrScheme>';\n\n\to[o.length] =   '<a:fontScheme name=\"Office\">';\n\to[o.length] =    '<a:majorFont>';\n\to[o.length] =     '<a:latin typeface=\"Cambria\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:majorFont>';\n\to[o.length] =    '<a:minorFont>';\n\to[o.length] =     '<a:latin typeface=\"Calibri\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:minorFont>';\n\to[o.length] =   '</a:fontScheme>';\n\n\to[o.length] =   '<a:fmtScheme name=\"Office\">';\n\to[o.length] =    '<a:fillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"1\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"0\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:fillStyleLst>';\n\to[o.length] =    '<a:lnStyleLst>';\n\to[o.length] =     '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =    '</a:lnStyleLst>';\n\to[o.length] =    '<a:effectStyleLst>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =      '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\n\to[o.length] =      '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =    '</a:effectStyleLst>';\n\to[o.length] =    '<a:bgFillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:bgFillStyleLst>';\n\to[o.length] =   '</a:fmtScheme>';\n\to[o.length] =  '</a:themeElements>';\n\n\to[o.length] =  '<a:objectDefaults>';\n\to[o.length] =   '<a:spDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:spDef>';\n\to[o.length] =   '<a:lnDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:lnDef>';\n\to[o.length] =  '</a:objectDefaults>';\n\to[o.length] =  '<a:extraClrSchemeLst/>';\n\to[o.length] = '</a:theme>';\n\treturn o.join(\"\");\n}\n/* [MS-XLS] 2.4.326 TODO: payload is a zip file */\nfunction parse_Theme(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar dwThemeVersion = blob.read_shift(4);\n\tif(dwThemeVersion === 124226) return;\n\tif(!opts.cellStyles) { blob.l = end; return; }\n\tvar data = blob.slice(blob.l);\n\tblob.l = end;\n\tvar zip; try { zip = zip_read(data, {type: \"array\"}); } catch(e) { return; }\n\tvar themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\n\tif(!themeXML) return;\n\treturn parse_theme_xml(themeXML, opts);\n}\n\n/* 2.5.49 */\nfunction parse_ColorTheme(blob/*::, length*/) { return blob.read_shift(4); }\n\n/* 2.5.155 */\nfunction parse_FullColorExt(blob/*::, length*/) {\n\tvar o = {};\n\to.xclrType = blob.read_shift(2);\n\to.nTintShade = blob.read_shift(2);\n\tswitch(o.xclrType) {\n\t\tcase 0: blob.l += 4; break;\n\t\tcase 1: o.xclrValue = parse_IcvXF(blob, 4); break;\n\t\tcase 2: o.xclrValue = parse_LongRGBA(blob, 4); break;\n\t\tcase 3: o.xclrValue = parse_ColorTheme(blob, 4); break;\n\t\tcase 4: blob.l += 4; break;\n\t}\n\tblob.l += 8;\n\treturn o;\n}\n\n/* 2.5.164 TODO: read 7 bits*/\nfunction parse_IcvXF(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* 2.5.280 */\nfunction parse_XFExtGradient(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* [MS-XLS] 2.5.108 */\nfunction parse_ExtProp(blob/*::, length*/)/*:Array<any>*/ {\n\tvar extType = blob.read_shift(2);\n\tvar cb = blob.read_shift(2) - 4;\n\tvar o = [extType];\n\tswitch(extType) {\n\t\tcase 0x04: case 0x05: case 0x07: case 0x08:\n\t\tcase 0x09: case 0x0A: case 0x0B: case 0x0D:\n\t\t\to[1] = parse_FullColorExt(blob, cb); break;\n\t\tcase 0x06: o[1] = parse_XFExtGradient(blob, cb); break;\n\t\tcase 0x0E: case 0x0F: o[1] = blob.read_shift(cb === 1 ? 1 : 2); break;\n\t\tdefault: throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\n\t}\n\treturn o;\n}\n\n/* 2.4.355 */\nfunction parse_XFExt(blob, length) {\n\tvar end = blob.l + length;\n\tblob.l += 2;\n\tvar ixfe = blob.read_shift(2);\n\tblob.l += 2;\n\tvar cexts = blob.read_shift(2);\n\tvar ext/*:AOA*/ = [];\n\twhile(cexts-- > 0) ext.push(parse_ExtProp(blob, end-blob.l));\n\treturn {ixfe:ixfe, ext:ext};\n}\n\n/* xf is an XF, see parse_XFExt for xfext */\nfunction update_xfext(xf, xfext) {\n\txfext.forEach(function(xfe) {\n\t\tswitch(xfe[0]) { /* 2.5.108 extPropData */\n\t\t\tcase 0x04: break; /* foreground color */\n\t\t\tcase 0x05: break; /* background color */\n\t\t\tcase 0x06: break; /* gradient fill */\n\t\t\tcase 0x07: break; /* top cell border color */\n\t\t\tcase 0x08: break; /* bottom cell border color */\n\t\t\tcase 0x09: break; /* left cell border color */\n\t\t\tcase 0x0a: break; /* right cell border color */\n\t\t\tcase 0x0b: break; /* diagonal cell border color */\n\t\t\tcase 0x0d: /* text color */\n\t\t\t\tbreak;\n\t\t\tcase 0x0e: break; /* font scheme */\n\t\t\tcase 0x0f: break; /* indentation level */\n\t\t}\n\t});\n}\n\nfunction parse_BrtMdtinfo(data, length) {\n  return {\n    flags: data.read_shift(4),\n    version: data.read_shift(4),\n    name: parse_XLWideString(data, length - 8)\n  };\n}\nfunction write_BrtMdtinfo(data) {\n  var o = new_buf(12 + 2 * data.name.length);\n  o.write_shift(4, data.flags);\n  o.write_shift(4, data.version);\n  write_XLWideString(data.name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtMdb(data) {\n  var out = [];\n  var cnt = data.read_shift(4);\n  while (cnt-- > 0)\n    out.push([data.read_shift(4), data.read_shift(4)]);\n  return out;\n}\nfunction write_BrtMdb(mdb) {\n  var o = new_buf(4 + 8 * mdb.length);\n  o.write_shift(4, mdb.length);\n  for (var i = 0; i < mdb.length; ++i) {\n    o.write_shift(4, mdb[i][0]);\n    o.write_shift(4, mdb[i][1]);\n  }\n  return o;\n}\nfunction write_BrtBeginEsfmd(cnt, name) {\n  var o = new_buf(8 + 2 * name.length);\n  o.write_shift(4, cnt);\n  write_XLWideString(name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtBeginEsmdb(data) {\n  data.l += 4;\n  return data.read_shift(4) != 0;\n}\nfunction write_BrtBeginEsmdb(cnt, cm) {\n  var o = new_buf(8);\n  o.write_shift(4, cnt);\n  o.write_shift(4, cm ? 1 : 0);\n  return o;\n}\nfunction parse_xlmeta_bin(data, name, _opts) {\n  var out = { Types: [], Cell: [], Value: [] };\n  var opts = _opts || {};\n  var state = [];\n  var pass = false;\n  var metatype = 2;\n  recordhopper(data, function(val, R, RT) {\n    switch (RT) {\n      case 335:\n        out.Types.push({ name: val.name });\n        break;\n      case 51:\n        val.forEach(function(r) {\n          if (metatype == 1)\n            out.Cell.push({ type: out.Types[r[0] - 1].name, index: r[1] });\n          else if (metatype == 0)\n            out.Value.push({ type: out.Types[r[0] - 1].name, index: r[1] });\n        });\n        break;\n      case 337:\n        metatype = val ? 1 : 0;\n        break;\n      case 338:\n        metatype = 2;\n        break;\n      case 35:\n        state.push(RT);\n        pass = true;\n        break;\n      case 36:\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (R.T) {\n        } else if (!pass || opts.WTF && state[state.length - 1] != 35)\n          throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\nfunction write_xlmeta_bin() {\n  var ba = buf_array();\n  write_record(ba, 332);\n  write_record(ba, 334, write_UInt32LE(1));\n  write_record(ba, 335, write_BrtMdtinfo({\n    name: \"XLDAPR\",\n    version: 12e4,\n    flags: 3496657072\n  }));\n  write_record(ba, 336);\n  write_record(ba, 339, write_BrtBeginEsfmd(1, \"XLDAPR\"));\n  write_record(ba, 52);\n  write_record(ba, 35, write_UInt32LE(514));\n  write_record(ba, 4096, write_UInt32LE(0));\n  write_record(ba, 4097, writeuint16(1));\n  write_record(ba, 36);\n  write_record(ba, 53);\n  write_record(ba, 340);\n  write_record(ba, 337, write_BrtBeginEsmdb(1, true));\n  write_record(ba, 51, write_BrtMdb([[1, 0]]));\n  write_record(ba, 338);\n  write_record(ba, 333);\n  return ba.end();\n}\nfunction parse_xlmeta_xml(data, name, opts) {\n  var out = { Types: [], Cell: [], Value: [] };\n  if (!data)\n    return out;\n  var pass = false;\n  var metatype = 2;\n  var lastmeta;\n  data.replace(tagregex, function(x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case \"<?xml\":\n        break;\n      case \"<metadata\":\n      case \"</metadata>\":\n        break;\n      case \"<metadataTypes\":\n      case \"</metadataTypes>\":\n        break;\n      case \"<metadataType\":\n        out.Types.push({ name: y.name });\n        break;\n      case \"</metadataType>\":\n        break;\n      case \"<futureMetadata\":\n        for (var j = 0; j < out.Types.length; ++j)\n          if (out.Types[j].name == y.name)\n            lastmeta = out.Types[j];\n        break;\n      case \"</futureMetadata>\":\n        break;\n      case \"<bk>\":\n        break;\n      case \"</bk>\":\n        break;\n      case \"<rc\":\n        if (metatype == 1)\n          out.Cell.push({ type: out.Types[y.t - 1].name, index: +y.v });\n        else if (metatype == 0)\n          out.Value.push({ type: out.Types[y.t - 1].name, index: +y.v });\n        break;\n      case \"</rc>\":\n        break;\n      case \"<cellMetadata\":\n        metatype = 1;\n        break;\n      case \"</cellMetadata>\":\n        metatype = 2;\n        break;\n      case \"<valueMetadata\":\n        metatype = 0;\n        break;\n      case \"</valueMetadata>\":\n        metatype = 2;\n        break;\n      case \"<extLst\":\n      case \"<extLst>\":\n      case \"</extLst>\":\n      case \"<extLst/>\":\n        break;\n      case \"<ext\":\n        pass = true;\n        break;\n      case \"</ext>\":\n        pass = false;\n        break;\n      case \"<rvb\":\n        if (!lastmeta)\n          break;\n        if (!lastmeta.offsets)\n          lastmeta.offsets = [];\n        lastmeta.offsets.push(+y.i);\n        break;\n      default:\n        if (!pass && opts.WTF)\n          throw new Error(\"unrecognized \" + y[0] + \" in metadata\");\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_xlmeta_xml() {\n  var o = [XML_HEADER];\n  o.push('<metadata xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:xlrd=\"http://schemas.microsoft.com/office/spreadsheetml/2017/richdata\" xmlns:xda=\"http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray\">\\n  <metadataTypes count=\"1\">\\n    <metadataType name=\"XLDAPR\" minSupportedVersion=\"120000\" copy=\"1\" pasteAll=\"1\" pasteValues=\"1\" merge=\"1\" splitFirst=\"1\" rowColShift=\"1\" clearFormats=\"1\" clearComments=\"1\" assign=\"1\" coerce=\"1\" cellMeta=\"1\"/>\\n  </metadataTypes>\\n  <futureMetadata name=\"XLDAPR\" count=\"1\">\\n    <bk>\\n      <extLst>\\n        <ext uri=\"{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}\">\\n          <xda:dynamicArrayProperties fDynamic=\"1\" fCollapsed=\"0\"/>\\n        </ext>\\n      </extLst>\\n    </bk>\\n  </futureMetadata>\\n  <cellMetadata count=\"1\">\\n    <bk>\\n      <rc t=\"1\" v=\"0\"/>\\n    </bk>\\n  </cellMetadata>\\n</metadata>');\n  return o.join(\"\");\n}\n/* 18.6 Calculation Chain */\nfunction parse_cc_xml(data/*::, name, opts*/)/*:Array<any>*/ {\n\tvar d = [];\n\tif(!data) return d;\n\tvar i = 1;\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\tcase '<?xml': break;\n\t\t\t/* 18.6.2  calcChain CT_CalcChain 1 */\n\t\t\tcase '<calcChain': case '<calcChain>': case '</calcChain>': break;\n\t\t\t/* 18.6.1  c CT_CalcCell 1 */\n\t\t\tcase '<c': delete y[0]; if(y.i) i = y.i; else y.i = i; d.push(y); break;\n\t\t}\n\t});\n\treturn d;\n}\n\n//function write_cc_xml(data, opts) { }\n\n/* [MS-XLSB] 2.6.4.1 */\nfunction parse_BrtCalcChainItem$(data) {\n\tvar out = {};\n\tout.i = data.read_shift(4);\n\tvar cell = {};\n\tcell.r = data.read_shift(4);\n\tcell.c = data.read_shift(4);\n\tout.r = encode_cell(cell);\n\tvar flags = data.read_shift(1);\n\tif(flags & 0x2) out.l = '1';\n\tif(flags & 0x8) out.a = '1';\n\treturn out;\n}\n\n/* 18.6 Calculation Chain */\nfunction parse_cc_bin(data, name, opts) {\n\tvar out = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_cc(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x003F: /* 'BrtCalcChainItem$' */\n\t\t\t\tout.push(val); break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn out;\n}\n\n//function write_cc_bin(data, opts) { }\n/* 18.14 Supplementary Workbook Data */\nfunction parse_xlink_xml(/*::data, rel, name:string, _opts*/) {\n\t//var opts = _opts || {};\n\t//if(opts.WTF) throw \"XLSX External Link\";\n}\n\n/* [MS-XLSB] 2.1.7.25 External Link */\nfunction parse_xlink_bin(data, rel, name/*:string*/, _opts) {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\n\tvar pass = false, end = false;\n\n\trecordhopper(data, function xlink_parse(val, R, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0167: /* 'BrtSupTabs' */\n\t\t\tcase 0x016B: /* 'BrtExternTableStart' */\n\t\t\tcase 0x016C: /* 'BrtExternTableEnd' */\n\t\t\tcase 0x016E: /* 'BrtExternRowHdr' */\n\t\t\tcase 0x016F: /* 'BrtExternCellBlank' */\n\t\t\tcase 0x0170: /* 'BrtExternCellReal' */\n\t\t\tcase 0x0171: /* 'BrtExternCellBool' */\n\t\t\tcase 0x0172: /* 'BrtExternCellError' */\n\t\t\tcase 0x0173: /* 'BrtExternCellString' */\n\t\t\tcase 0x01D8: /* 'BrtExternValueMeta' */\n\t\t\tcase 0x0241: /* 'BrtSupNameStart' */\n\t\t\tcase 0x0242: /* 'BrtSupNameValueStart' */\n\t\t\tcase 0x0243: /* 'BrtSupNameValueEnd' */\n\t\t\tcase 0x0244: /* 'BrtSupNameNum' */\n\t\t\tcase 0x0245: /* 'BrtSupNameErr' */\n\t\t\tcase 0x0246: /* 'BrtSupNameSt' */\n\t\t\tcase 0x0247: /* 'BrtSupNameNil' */\n\t\t\tcase 0x0248: /* 'BrtSupNameBool' */\n\t\t\tcase 0x0249: /* 'BrtSupNameFmla' */\n\t\t\tcase 0x024A: /* 'BrtSupNameBits' */\n\t\t\tcase 0x024B: /* 'BrtSupNameEnd' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n}\n/* 20.5 DrawingML - SpreadsheetML Drawing */\n/* 20.5.2.35 wsDr CT_Drawing */\nfunction parse_drawing(data, rels/*:any*/) {\n\tif(!data) return \"??\";\n\t/*\n\t  Chartsheet Drawing:\n\t   - 20.5.2.35 wsDr CT_Drawing\n\t    - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\n\t     - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\n\t      - 20.1.2.2.16 graphic CT_GraphicalObject\n\t       - 20.1.2.2.17 graphicData CT_GraphicalObjectData\n          - chart reference\n\t   the actual type is based on the URI of the graphicData\n\t\tTODO: handle embedded charts and other types of graphics\n\t*/\n\tvar id = (data.match(/<c:chart [^>]*r:id=\"([^\"]*)\"/)||[\"\",\"\"])[1];\n\n\treturn rels['!id'][id].Target;\n}\n\n/* L.5.5.2 SpreadsheetML Comments + VML Schema */\nvar _shapeid = 1024;\nfunction write_comments_vml(rId/*:number*/, comments) {\n\tvar csize = [21600, 21600];\n\t/* L.5.2.1.2 Path Attribute */\n\tvar bbox = [\"m0,0l0\",csize[1],csize[0],csize[1],csize[0],\"0xe\"].join(\",\");\n\tvar o = [\n\t\twritextag(\"xml\", null, { 'xmlns:v': XLMLNS.v, 'xmlns:o': XLMLNS.o, 'xmlns:x': XLMLNS.x, 'xmlns:mv': XLMLNS.mv }).replace(/\\/>/,\">\"),\n\t\twritextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {'v:ext':\"edit\", 'data':rId}), {'v:ext':\"edit\"}),\n\t\twritextag(\"v:shapetype\", [\n\t\t\twritextag(\"v:stroke\", null, {joinstyle:\"miter\"}),\n\t\t\twritextag(\"v:path\", null, {gradientshapeok:\"t\", 'o:connecttype':\"rect\"})\n\t\t].join(\"\"), {id:\"_x0000_t202\", 'o:spt':202, coordsize:csize.join(\",\"),path:bbox})\n\t];\n\twhile(_shapeid < rId * 1000) _shapeid += 1000;\n\n\tcomments.forEach(function(x) {\n\tvar c = decode_cell(x[0]);\n\tvar fillopts = /*::(*/{'color2':\"#BEFF82\", 'type':\"gradient\"}/*:: :any)*/;\n\tif(fillopts.type == \"gradient\") fillopts.angle = \"-180\";\n\tvar fillparm = fillopts.type == \"gradient\" ? writextag(\"o:fill\", null, {type:\"gradientUnscaled\", 'v:ext':\"view\"}) : null;\n\tvar fillxml = writextag('v:fill', fillparm, fillopts);\n\n\tvar shadata = ({on:\"t\", 'obscured':\"t\"}/*:any*/);\n\t++_shapeid;\n\n\to = o.concat([\n\t'<v:shape' + wxt_helper({\n\t\tid:'_x0000_s' + _shapeid,\n\t\ttype:\"#_x0000_t202\",\n\t\tstyle:\"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10\" + (x[1].hidden ? \";visibility:hidden\" : \"\") ,\n\t\tfillcolor:\"#ECFAD4\",\n\t\tstrokecolor:\"#edeaa1\"\n\t}) + '>',\n\t\tfillxml,\n\t\twritextag(\"v:shadow\", null, shadata),\n\t\twritextag(\"v:path\", null, {'o:connecttype':\"none\"}),\n\t\t'<v:textbox><div style=\"text-align:left\"></div></v:textbox>',\n\t\t'<x:ClientData ObjectType=\"Note\">',\n\t\t\t'<x:MoveWithCells/>',\n\t\t\t'<x:SizeWithCells/>',\n\t\t\t/* Part 4 19.4.2.3 Anchor (Anchor) */\n\t\t\twritetag('x:Anchor', [c.c+1, 0, c.r+1, 0, c.c+3, 20, c.r+5, 20].join(\",\")),\n\t\t\twritetag('x:AutoFill', \"False\"),\n\t\t\twritetag('x:Row', String(c.r)),\n\t\t\twritetag('x:Column', String(c.c)),\n\t\t\tx[1].hidden ? '' : '<x:Visible/>',\n\t\t'</x:ClientData>',\n\t'</v:shape>'\n\t]); });\n\to.push('</xml>');\n\treturn o.join(\"\");\n}\nfunction sheet_insert_comments(sheet, comments/*:Array<RawComment>*/, threaded/*:boolean*/, people/*:?Array<any>*/) {\n\tvar dense = Array.isArray(sheet);\n\tvar cell/*:Cell*/;\n\tcomments.forEach(function(comment) {\n\t\tvar r = decode_cell(comment.ref);\n\t\tif(dense) {\n\t\t\tif(!sheet[r.r]) sheet[r.r] = [];\n\t\t\tcell = sheet[r.r][r.c];\n\t\t} else cell = sheet[comment.ref];\n\t\tif (!cell) {\n\t\t\tcell = ({t:\"z\"}/*:any*/);\n\t\t\tif(dense) sheet[r.r][r.c] = cell;\n\t\t\telse sheet[comment.ref] = cell;\n\t\t\tvar range = safe_decode_range(sheet[\"!ref\"]||\"BDWGO1000001:A1\");\n\t\t\tif(range.s.r > r.r) range.s.r = r.r;\n\t\t\tif(range.e.r < r.r) range.e.r = r.r;\n\t\t\tif(range.s.c > r.c) range.s.c = r.c;\n\t\t\tif(range.e.c < r.c) range.e.c = r.c;\n\t\t\tvar encoded = encode_range(range);\n\t\t\tif (encoded !== sheet[\"!ref\"]) sheet[\"!ref\"] = encoded;\n\t\t}\n\n\t\tif (!cell.c) cell.c = [];\n\t\tvar o/*:Comment*/ = ({a: comment.author, t: comment.t, r: comment.r, T: threaded});\n\t\tif(comment.h) o.h = comment.h;\n\n\t\t/* threaded comments always override */\n\t\tfor(var i = cell.c.length - 1; i >= 0; --i) {\n\t\t\tif(!threaded && cell.c[i].T) return;\n\t\t\tif(threaded && !cell.c[i].T) cell.c.splice(i, 1);\n\t\t}\n\t\tif(threaded && people) for(i = 0; i < people.length; ++i) {\n\t\t\tif(o.a == people[i].id) { o.a = people[i].name || o.a; break; }\n\t\t}\n\t\tcell.c.push(o);\n\t});\n}\n\n/* 18.7 Comments */\nfunction parse_comments_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {\n\t/* 18.7.6 CT_Comments */\n\tif(data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\n\tvar authors/*:Array<string>*/ = [];\n\tvar commentList/*:Array<RawComment>*/ = [];\n\tvar authtag = data.match(/<(?:\\w+:)?authors>([\\s\\S]*)<\\/(?:\\w+:)?authors>/);\n\tif(authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar a = x.match(/<(?:\\w+:)?author[^>]*>(.*)/);\n\t\tif(a) authors.push(a[1]);\n\t});\n\tvar cmnttag = data.match(/<(?:\\w+:)?commentList>([\\s\\S]*)<\\/(?:\\w+:)?commentList>/);\n\tif(cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar cm = x.match(/<(?:\\w+:)?comment[^>]*>/);\n\t\tif(!cm) return;\n\t\tvar y = parsexmltag(cm[0]);\n\t\tvar comment/*:RawComment*/ = ({ author: y.authorId && authors[y.authorId] || \"sheetjsghost\", ref: y.ref, guid: y.guid }/*:any*/);\n\t\tvar cell = decode_cell(y.ref);\n\t\tif(opts.sheetRows && opts.sheetRows <= cell.r) return;\n\t\tvar textMatch = x.match(/<(?:\\w+:)?text>([\\s\\S]*)<\\/(?:\\w+:)?text>/);\n\t\tvar rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {r:\"\",t:\"\",h:\"\"};\n\t\tcomment.r = rt.r;\n\t\tif(rt.r == \"<t></t>\") rt.t = rt.h = \"\";\n\t\tcomment.t = (rt.t||\"\").replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\t\tif(opts.cellHTML) comment.h = rt.h;\n\t\tcommentList.push(comment);\n\t});\n\treturn commentList;\n}\n\nfunction write_comments_xml(data/*::, opts*/) {\n\tvar o = [XML_HEADER, writextag('comments', null, { 'xmlns': XMLNS_main[0] })];\n\n\tvar iauthor/*:Array<string>*/ = [];\n\to.push(\"<authors>\");\n\tdata.forEach(function(x) { x[1].forEach(function(w) { var a = escapexml(w.a);\n\t\tif(iauthor.indexOf(a) == -1) {\n\t\t\tiauthor.push(a);\n\t\t\to.push(\"<author>\" + a + \"</author>\");\n\t\t}\n\t\tif(w.T && w.ID && iauthor.indexOf(\"tc=\" + w.ID) == -1) {\n\t\t\tiauthor.push(\"tc=\" + w.ID);\n\t\t\to.push(\"<author>\" + \"tc=\" + w.ID + \"</author>\");\n\t\t}\n\t}); });\n\tif(iauthor.length == 0) { iauthor.push(\"SheetJ5\"); o.push(\"<author>SheetJ5</author>\"); }\n\to.push(\"</authors>\");\n\to.push(\"<commentList>\");\n\tdata.forEach(function(d) {\n\t\t/* 18.7.3 CT_Comment */\n\t\tvar lastauthor = 0, ts = [];\n\t\tif(d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf(\"tc=\" + d[1][0].ID);\n\t\telse d[1].forEach(function(c) {\n\t\t\tif(c.a) lastauthor = iauthor.indexOf(escapexml(c.a));\n\t\t\tts.push(c.t||\"\");\n\t\t});\n\t\to.push('<comment ref=\"' + d[0] + '\" authorId=\"' + lastauthor + '\"><text>');\n\t\tif(ts.length <= 1) o.push(writetag(\"t\", escapexml(ts[0]||\"\")));\n\t\telse {\n\t\t\t/* based on Threaded Comments -> Comments projection */\n\t\t\tvar t = \"Comment:\\n    \" + (ts[0]) + \"\\n\";\n\t\t\tfor(var i = 1; i < ts.length; ++i) t += \"Reply:\\n    \" + ts[i] + \"\\n\";\n\t\t\to.push(writetag(\"t\", escapexml(t)));\n\t\t}\n\t\to.push('</text></comment>');\n\t});\n\to.push(\"</commentList>\");\n\tif(o.length>2) { o[o.length] = ('</comments>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.17 */\nfunction parse_tcmnt_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {\n\tvar out = [];\n\tvar pass = false, comment = {}, tidx = 0;\n\tdata.replace(tagregex, function xml_tcmnt(x, idx) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 2.6.207 ThreadedComments CT_ThreadedComments */\n\t\t\tcase '<ThreadedComments': break;\n\t\t\tcase '</ThreadedComments>': break;\n\n\t\t\t/* 2.6.205 threadedComment CT_ThreadedComment */\n\t\t\tcase '<threadedComment': comment = {author: y.personId, guid: y.id, ref: y.ref, T: 1}; break;\n\t\t\tcase '</threadedComment>': if(comment.t != null) out.push(comment); break;\n\n\t\t\tcase '<text>': case '<text': tidx = idx + x.length; break;\n\t\t\tcase '</text>': comment.t = data.slice(tidx, idx).replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\"); break;\n\n\t\t\t/* 2.6.206 mentions CT_ThreadedCommentMentions TODO */\n\t\t\tcase '<mentions': case '<mentions>': pass = true; break;\n\t\t\tcase '</mentions>': pass = false; break;\n\n\t\t\t/* 2.6.202 mention CT_Mention TODO */\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break;\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n\t\t}\n\t\treturn x;\n\t});\n\treturn out;\n}\n\nfunction write_tcmnt_xml(comments, people, opts) {\n\tvar o = [XML_HEADER, writextag('ThreadedComments', null, { 'xmlns': XMLNS.TCMNT }).replace(/[\\/]>/, \">\")];\n\tcomments.forEach(function(carr) {\n\t\tvar rootid = \"\";\n\t\t(carr[1] || []).forEach(function(c, idx) {\n\t\t\tif(!c.T) { delete c.ID; return; }\n\t\t\tif(c.a && people.indexOf(c.a) == -1) people.push(c.a);\n\t\t\tvar tcopts = {\n\t\t\t\tref: carr[0],\n\t\t\t\tid: \"{54EE7951-7262-4200-6969-\" + (\"000000000000\" + opts.tcid++).slice(-12) + \"}\"\n\t\t\t};\n\t\t\tif(idx == 0) rootid = tcopts.id;\n\t\t\telse tcopts.parentId = rootid;\n\t\t\tc.ID = tcopts.id;\n\t\t\tif(c.a) tcopts.personId = \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + people.indexOf(c.a)).slice(-12) + \"}\";\n\t\t\to.push(writextag('threadedComment', writetag('text', c.t||\"\"), tcopts));\n\t\t});\n\t});\n\to.push('</ThreadedComments>');\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.18 */\nfunction parse_people_xml(data/*:string*/, opts) {\n\tvar out = [];\n\tvar pass = false;\n\tdata.replace(tagregex, function xml_tcmnt(x) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 2.4.85 personList CT_PersonList */\n\t\t\tcase '<personList': break;\n\t\t\tcase '</personList>': break;\n\n\t\t\t/* 2.6.203 person CT_Person TODO: providers */\n\t\t\tcase '<person': out.push({name: y.displayname, id: y.id }); break;\n\t\t\tcase '</person>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break;\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n\t\t}\n\t\treturn x;\n\t});\n\treturn out;\n}\nfunction write_people_xml(people/*, opts*/) {\n\tvar o = [XML_HEADER, writextag('personList', null, {\n\t\t'xmlns': XMLNS.TCMNT,\n\t\t'xmlns:x': XMLNS_main[0]\n\t}).replace(/[\\/]>/, \">\")];\n\tpeople.forEach(function(person, idx) {\n\t\to.push(writextag('person', null, {\n\t\t\tdisplayName: person,\n\t\t\tid: \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + idx).slice(-12) + \"}\",\n\t\t\tuserId: person,\n\t\t\tproviderId: \"None\"\n\t\t}));\n\t});\n\to.push(\"</personList>\");\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.28 BrtBeginComment */\nfunction parse_BrtBeginComment(data) {\n\tvar out = {};\n\tout.iauthor = data.read_shift(4);\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tout.rfx = rfx.s;\n\tout.ref = encode_cell(rfx.s);\n\tdata.l += 16; /*var guid = parse_GUID(data); */\n\treturn out;\n}\nfunction write_BrtBeginComment(data, o) {\n\tif(o == null) o = new_buf(36);\n\to.write_shift(4, data[1].iauthor);\n\twrite_UncheckedRfX((data[0]/*:any*/), o);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.327 BrtCommentAuthor */\nvar parse_BrtCommentAuthor = parse_XLWideString;\nfunction write_BrtCommentAuthor(data) { return write_XLWideString(data.slice(0, 54)); }\n\n/* [MS-XLSB] 2.1.7.8 Comments */\nfunction parse_comments_bin(data, opts)/*:Array<RawComment>*/ {\n\tvar out/*:Array<RawComment>*/ = [];\n\tvar authors/*:Array<string>*/ = [];\n\tvar c = {};\n\tvar pass = false;\n\trecordhopper(data, function hopper_cmnt(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x0278: /* 'BrtCommentAuthor' */\n\t\t\t\tauthors.push(val); break;\n\t\t\tcase 0x027B: /* 'BrtBeginComment' */\n\t\t\t\tc = val; break;\n\t\t\tcase 0x027D: /* 'BrtCommentText' */\n\t\t\t\tc.t = val.t; c.h = val.h; c.r = val.r; break;\n\t\t\tcase 0x027C: /* 'BrtEndComment' */\n\t\t\t\tc.author = authors[c.iauthor];\n\t\t\t\tdelete (c/*:any*/).iauthor;\n\t\t\t\tif(opts.sheetRows && c.rfx && opts.sheetRows <= c.rfx.r) break;\n\t\t\t\tif(!c.t) c.t = \"\";\n\t\t\t\tdelete c.rfx; out.push(c); break;\n\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */ break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */ break;\n\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn out;\n}\n\nfunction write_comments_bin(data/*::, opts*/) {\n\tvar ba = buf_array();\n\tvar iauthor/*:Array<string>*/ = [];\n\twrite_record(ba, 0x0274 /* BrtBeginComments */);\n\n\twrite_record(ba, 0x0276 /* BrtBeginCommentAuthors */);\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tif(iauthor.indexOf(c.a) > -1) return;\n\t\t\tiauthor.push(c.a.slice(0,54));\n\t\t\twrite_record(ba, 0x0278 /* BrtCommentAuthor */, write_BrtCommentAuthor(c.a));\n\t\t});\n\t});\n\twrite_record(ba, 0x0277 /* BrtEndCommentAuthors */);\n\n\twrite_record(ba, 0x0279 /* BrtBeginCommentList */);\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tc.iauthor = iauthor.indexOf(c.a);\n\t\t\tvar range = {s:decode_cell(comment[0]),e:decode_cell(comment[0])};\n\t\t\twrite_record(ba, 0x027B /* BrtBeginComment */, write_BrtBeginComment([range, c]));\n\t\t\tif(c.t && c.t.length > 0) write_record(ba, 0x027D /* BrtCommentText */, write_BrtCommentText(c));\n\t\t\twrite_record(ba, 0x027C /* BrtEndComment */);\n\t\t\tdelete c.iauthor;\n\t\t});\n\t});\n\twrite_record(ba, 0x027A /* BrtEndCommentList */);\n\n\twrite_record(ba, 0x0275 /* BrtEndComments */);\n\treturn ba.end();\n}\nvar CT_VBA = \"application/vnd.ms-office.vbaProject\";\nfunction make_vba_xls(cfb) {\n  var newcfb = CFB.utils.cfb_new({ root: \"R\" });\n  cfb.FullPaths.forEach(function(p, i) {\n    if (p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/))\n      return;\n    var newpath = p.replace(/^[^\\/]*/, \"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\n    CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\n  });\n  return CFB.write(newcfb);\n}\nfunction fill_vba_xls(cfb, vba) {\n  vba.FullPaths.forEach(function(p, i) {\n    if (i == 0)\n      return;\n    var newpath = p.replace(/[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\n    if (newpath.slice(-1) !== \"/\")\n      CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\n  });\n}\nvar VBAFMTS = [\"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\"];\n/* macro and dialog sheet stubs */\nfunction parse_ds_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }\nfunction parse_ds_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }\nfunction parse_ms_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }\nfunction parse_ms_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }\n/* TODO: it will be useful to parse the function str */\nvar rc_to_a1 = /*#__PURE__*/(function(){\n\tvar rcregex = /(^|[^A-Za-z_])R(\\[?-?\\d+\\]|[1-9]\\d*|)C(\\[?-?\\d+\\]|[1-9]\\d*|)(?![A-Za-z0-9_])/g;\n\tvar rcbase/*:Cell*/ = ({r:0,c:0}/*:any*/);\n\tfunction rcfunc($$,$1,$2,$3) {\n\t\tvar cRel = false, rRel = false;\n\n\t\tif($2.length == 0) rRel = true;\n\t\telse if($2.charAt(0) == \"[\") { rRel = true; $2 = $2.slice(1, -1); }\n\n\t\tif($3.length == 0) cRel = true;\n\t\telse if($3.charAt(0) == \"[\") { cRel = true; $3 = $3.slice(1, -1); }\n\n\t\tvar R = $2.length>0?parseInt($2,10)|0:0, C = $3.length>0?parseInt($3,10)|0:0;\n\n\t\tif(cRel) C += rcbase.c; else --C;\n\t\tif(rRel) R += rcbase.r; else --R;\n\t\treturn $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\n\t}\n\treturn function rc_to_a1(fstr/*:string*/, base/*:Cell*/)/*:string*/ {\n\t\trcbase = base;\n\t\treturn fstr.replace(rcregex, rcfunc);\n\t};\n})();\n\nvar crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})(?![_.\\(A-Za-z0-9])/g;\nvar a1_to_rc = /*#__PURE__*/(function(){\n\treturn function a1_to_rc(fstr/*:string*/, base/*:CellAddress*/) {\n\t\treturn fstr.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\t\tvar c = decode_col($3) - ($2 ? 0 : base.c);\n\t\t\tvar r = decode_row($5) - ($4 ? 0 : base.r);\n\t\t\tvar R = (r == 0 ? \"\" : !$4 ? \"[\" + r + \"]\" : (r+1));\n\t\t\tvar C = (c == 0 ? \"\" : !$2 ? \"[\" + c + \"]\" : (c+1));\n\t\t\treturn $1 + \"R\" + R + \"C\" + C;\n\t\t});\n\t};\n})();\n\n/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\nfunction shift_formula_str(f/*:string*/, delta/*:Cell*/)/*:string*/ {\n\treturn f.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\treturn $1+($2==\"$\" ? $2+$3 : encode_col(decode_col($3)+delta.c))+($4==\"$\" ? $4+$5 : encode_row(decode_row($5) + delta.r));\n\t});\n}\n\nfunction shift_formula_xlsx(f/*:string*/, range/*:string*/, cell/*:string*/)/*:string*/ {\n\tvar r = decode_range(range), s = r.s, c = decode_cell(cell);\n\tvar delta = {r:c.r - s.r, c:c.c - s.c};\n\treturn shift_formula_str(f, delta);\n}\n\n/* TODO: parse formula */\nfunction fuzzyfmla(f/*:string*/)/*:boolean*/ {\n\tif(f.length == 1) return false;\n\treturn true;\n}\n\nfunction _xlfn(f/*:string*/)/*:string*/ {\n\treturn f.replace(/_xlfn\\./g,\"\");\n}\nfunction parseread1(blob) { blob.l+=1; return; }\n\n/* [MS-XLS] 2.5.51 */\nfunction parse_ColRelU(blob, length) {\n\tvar c = blob.read_shift(length == 1 ? 1 : 2);\n\treturn [c & 0x3FFF, (c >> 14) & 1, (c >> 15) & 1];\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\nfunction parse_RgceArea(blob, length, opts) {\n\tvar w = 2;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob, length, opts);\n\t\telse if(opts.biff == 12) w = 4;\n\t}\n\tvar r=blob.read_shift(w), R=blob.read_shift(w);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n/* BIFF 2-5 encodes flags in the row field */\nfunction parse_RgceArea_BIFF2(blob/*::, length, opts*/) {\n\tvar r=parse_ColRelU(blob, 2), R=parse_ColRelU(blob, 2);\n\tvar c=blob.read_shift(1);\n\tvar C=blob.read_shift(1);\n\treturn { s:{r:r[0], c:c, cRel:r[1], rRel:r[2]}, e:{r:R[0], c:C, cRel:R[1], rRel:R[2]} };\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\nfunction parse_RgceAreaRel(blob, length, opts) {\n\tif(opts.biff < 8) return parse_RgceArea_BIFF2(blob, length, opts);\n\tvar r=blob.read_shift(opts.biff == 12 ? 4 : 2), R=blob.read_shift(opts.biff == 12 ? 4 : 2);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n\n/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\nfunction parse_RgceLoc(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\n\tvar c = parse_ColRelU(blob, 2);\n\treturn {r:r, c:c[0], cRel:c[1], rRel:c[2]};\n}\nfunction parse_RgceLoc_BIFF2(blob/*::, length, opts*/) {\n\tvar r = parse_ColRelU(blob, 2);\n\tvar c = blob.read_shift(1);\n\treturn {r:r[0], c:c, cRel:r[1], rRel:r[2]};\n}\n\n/* [MS-XLS] 2.5.198.107, 2.5.47 */\nfunction parse_RgceElfLoc(blob/*::, length, opts*/) {\n\tvar r = blob.read_shift(2);\n\tvar c = blob.read_shift(2);\n\treturn {r:r, c:c & 0xFF, fQuoted:!!(c & 0x4000), cRel:c>>15, rRel:c>>15 };\n}\n\n/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\nfunction parse_RgceLocRel(blob, length, opts) {\n\tvar biff = opts && opts.biff ? opts.biff : 8;\n\tif(biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(biff >= 12 ? 4 : 2);\n\tvar cl = blob.read_shift(2);\n\tvar cRel = (cl & 0x4000) >> 14, rRel = (cl & 0x8000) >> 15;\n\tcl &= 0x3FFF;\n\tif(rRel == 1) while(r > 0x7FFFF) r -= 0x100000;\n\tif(cRel == 1) while(cl > 0x1FFF) cl = cl - 0x4000;\n\treturn {r:r,c:cl,cRel:cRel,rRel:rRel};\n}\nfunction parse_RgceLocRel_BIFF2(blob/*::, length:number, opts*/) {\n\tvar rl = blob.read_shift(2);\n\tvar c = blob.read_shift(1);\n\tvar rRel = (rl & 0x8000) >> 15, cRel = (rl & 0x4000) >> 14;\n\trl &= 0x3FFF;\n\tif(rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\n\tif(cRel == 1 && c >= 0x80) c = c - 0x100;\n\treturn {r:rl,c:c,cRel:cRel,rRel:rRel};\n}\n\n/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\nfunction parse_PtgArea(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\nfunction parse_PtgArea3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2, 'i');\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tvar area = parse_RgceArea(blob, w, opts);\n\treturn [type, ixti, area];\n}\n\n/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\nfunction parse_PtgAreaErr(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts && (opts.biff > 8) ? 12 : (opts.biff < 8 ? 6 : 8);\n\treturn [type];\n}\n/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\nfunction parse_PtgAreaErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\nfunction parse_PtgAreaN(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceAreaRel(blob, length - 1, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\nfunction parse_PtgArray(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\nfunction parse_PtgAttrBaxcel(blob) {\n\tvar bitSemi = blob[blob.l+1] & 0x01; /* 1 = volatile */\n\tvar bitBaxcel = 1;\n\tblob.l += 4;\n\treturn [bitSemi, bitBaxcel];\n}\n\n/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\nfunction parse_PtgAttrChoose(blob, length, opts)/*:Array<number>*/ {\n\tblob.l +=2;\n\tvar offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar o/*:Array<number>*/ = [];\n\t/* offset is 1 less than the number of elements */\n\tfor(var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\nfunction parse_PtgAttrGoto(blob, length, opts) {\n\tvar bitGoto = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\nfunction parse_PtgAttrIf(blob, length, opts) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLSB] 2.5.97.28 */\nfunction parse_PtgAttrIfError(blob) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(2)];\n}\n\n/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\nfunction parse_PtgAttrSemi(blob, length, opts) {\n\tvar bitSemi = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += opts && opts.biff == 2 ? 3 : 4;\n\treturn [bitSemi];\n}\n\n/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\nfunction parse_PtgAttrSpaceType(blob/*::, length*/) {\n\tvar type = blob.read_shift(1), cch = blob.read_shift(1);\n\treturn [type, cch];\n}\n\n/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\nfunction parse_PtgAttrSpace(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\nfunction parse_PtgAttrSpaceSemi(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\nfunction parse_PtgRef(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLoc(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\nfunction parse_PtgRefN(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLocRel(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\nfunction parse_PtgRef3d(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tif(opts && opts.biff == 5) blob.l += 12;\n\tvar loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\n\treturn [type, ixti, loc];\n}\n\n\n/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\nfunction parse_PtgFunc(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\n\treturn [FtabArgc[iftab], Ftab[iftab], type];\n}\n/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\nfunction parse_PtgFuncVar(blob, length, opts) {\n\tvar type = blob[blob.l++];\n\tvar cparams = blob.read_shift(1), tab = opts && opts.biff <= 3 ? [(type == 0x58 ? -1 : 0), blob.read_shift(1)]: parsetab(blob);\n\treturn [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\n}\n\nfunction parsetab(blob) {\n\treturn [blob[blob.l+1]>>7, blob.read_shift(2) & 0x7FFF];\n}\n\n/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\nfunction parse_PtgAttrSum(blob, length, opts) {\n\tblob.l += opts && opts.biff == 2 ? 3 : 4; return;\n}\n\n/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\nfunction parse_PtgExp(blob, length, opts) {\n\tblob.l++;\n\tif(opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\n\tvar row = blob.read_shift(2);\n\tvar col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [row, col];\n}\n\n/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\nfunction parse_PtgErr(blob) { blob.l++; return BErr[blob.read_shift(1)]; }\n\n/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\nfunction parse_PtgInt(blob) { blob.l++; return blob.read_shift(2); }\n\n/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\nfunction parse_PtgBool(blob) { blob.l++; return blob.read_shift(1)!==0;}\n\n/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\nfunction parse_PtgNum(blob) { blob.l++; return parse_Xnum(blob, 8); }\n\n/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\nfunction parse_PtgStr(blob, length, opts) { blob.l++; return parse_ShortXLUnicodeString(blob, length-1, opts); }\n\n/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\n/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\nfunction parse_SerAr(blob, biff/*:number*/) {\n\tvar val = [blob.read_shift(1)];\n\tif(biff == 12) switch(val[0]) {\n\t\tcase 0x02: val[0] = 0x04; break; /* SerBool */\n\t\tcase 0x04: val[0] = 0x10; break; /* SerErr */\n\t\tcase 0x00: val[0] = 0x01; break; /* SerNum */\n\t\tcase 0x01: val[0] = 0x02; break; /* SerStr */\n\t}\n\tswitch(val[0]) {\n\t\tcase 0x04: /* SerBool -- boolean */\n\t\t\tval[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\n\t\t\tif(biff != 12) blob.l += 7; break;\n\t\tcase 0x25: /* appears to be an alias */\n\t\tcase 0x10: /* SerErr -- error */\n\t\t\tval[1] = BErr[blob[blob.l]];\n\t\t\tblob.l += ((biff == 12) ? 4 : 8); break;\n\t\tcase 0x00: /* SerNil -- honestly, I'm not sure how to reproduce this */\n\t\t\tblob.l += 8; break;\n\t\tcase 0x01: /* SerNum -- Xnum */\n\t\t\tval[1] = parse_Xnum(blob, 8); break;\n\t\tcase 0x02: /* SerStr -- XLUnicodeString (<256 chars) */\n\t\t\tval[1] = parse_XLUnicodeString2(blob, 0, {biff:biff > 0 && biff < 8 ? 2 : biff}); break;\n\t\tdefault: throw new Error(\"Bad SerAr: \" + val[0]); /* Unreachable */\n\t}\n\treturn val;\n}\n\n/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\nfunction parse_PtgExtraMem(blob, cce, opts) {\n\tvar count = blob.read_shift((opts.biff == 12) ? 4 : 2);\n\tvar out/*:Array<Range>*/ = [];\n\tfor(var i = 0; i != count; ++i) out.push(((opts.biff == 12) ? parse_UncheckedRfX : parse_Ref8U)(blob, 8));\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\nfunction parse_PtgExtraArray(blob, length, opts) {\n\tvar rows = 0, cols = 0;\n\tif(opts.biff == 12) {\n\t\trows = blob.read_shift(4); // DRw\n\t\tcols = blob.read_shift(4); // DCol\n\t} else {\n\t\tcols = 1 + blob.read_shift(1); //DColByteU\n\t\trows = 1 + blob.read_shift(2); //DRw\n\t}\n\tif(opts.biff >= 2 && opts.biff < 8) { --rows; if(--cols == 0) cols = 0x100; }\n\t// $FlowIgnore\n\tfor(var i = 0, o/*:Array<Array<any>>*/ = []; i != rows && (o[i] = []); ++i)\n\t\tfor(var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\nfunction parse_PtgName(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar w = (!opts || (opts.biff >= 8)) ? 4 : 2;\n\tvar nameindex = blob.read_shift(w);\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l += 5; break;\n\t\tcase 3: case 4: blob.l += 8; break;\n\t\tcase 5: blob.l += 12; break;\n\t}\n\treturn [type, 0, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\nfunction parse_PtgNameX(blob, length, opts) {\n\tif(opts.biff == 5) return parse_PtgNameX_BIFF5(blob, length, opts);\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tvar nameindex = blob.read_shift(4);\n\treturn [type, ixti, nameindex];\n}\nfunction parse_PtgNameX_BIFF5(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2, 'i'); // XtiIndex\n\tblob.l += 8;\n\tvar nameindex = blob.read_shift(2);\n\tblob.l += 12;\n\treturn [type, ixti, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\nfunction parse_PtgMemArea(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += (opts && opts.biff == 2 ? 3 : 4);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\nfunction parse_PtgMemFunc(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n\n/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\nfunction parse_PtgRefErr(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += 4;\n\tif(opts.biff < 8) blob.l--;\n\tif(opts.biff == 12) blob.l += 2;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\nfunction parse_PtgRefErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 4;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: w = 15; break;\n\t\tcase 12: w = 6; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\nvar parse_PtgMemErr = parsenoop;\n/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\nvar parse_PtgMemNoMem = parsenoop;\n/* [MS-XLS] 2.5.198.92 */\nvar parse_PtgTbl = parsenoop;\n\nfunction parse_PtgElfLoc(blob, length, opts) {\n\tblob.l += 2;\n\treturn [parse_RgceElfLoc(blob, 4, opts)];\n}\nfunction parse_PtgElfNoop(blob/*::, length, opts*/) {\n\tblob.l += 6;\n\treturn [];\n}\n/* [MS-XLS] 2.5.198.46 */\nvar parse_PtgElfCol = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.47 */\nvar parse_PtgElfColS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.48 */\nvar parse_PtgElfColSV = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.49 */\nvar parse_PtgElfColV = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.50 */\nfunction parse_PtgElfLel(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\treturn [parseuint16(blob), blob.read_shift(2) & 0x01];\n}\n/* [MS-XLS] 2.5.198.51 */\nvar parse_PtgElfRadical = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.52 */\nvar parse_PtgElfRadicalLel = parse_PtgElfLel;\n/* [MS-XLS] 2.5.198.53 */\nvar parse_PtgElfRadicalS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.54 */\nvar parse_PtgElfRw = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.55 */\nvar parse_PtgElfRwV = parse_PtgElfLoc;\n\n/* [MS-XLSB] 2.5.97.52 TODO */\nvar PtgListRT = [\n\t\"Data\",\n\t\"All\",\n\t\"Headers\",\n\t\"??\",\n\t\"?Data2\",\n\t\"??\",\n\t\"?DataHeaders\",\n\t\"??\",\n\t\"Totals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?DataTotals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?Current\"\n];\nfunction parse_PtgList(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\tvar ixti = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tvar idx = blob.read_shift(4);\n\tvar c = blob.read_shift(2);\n\tvar C = blob.read_shift(2);\n\tvar rt = PtgListRT[(flags >> 2) & 0x1F];\n\treturn {ixti: ixti, coltype:(flags&0x3), rt:rt, idx:idx, c:c, C:C};\n}\n/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\nfunction parse_PtgSxName(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\treturn [blob.read_shift(4)];\n}\n\n/* [XLS] old spec */\nfunction parse_PtgSheet(blob, length, opts) {\n\tblob.l += 5;\n\tblob.l += 2;\n\tblob.l += (opts.biff == 2 ? 1 : 4);\n\treturn [\"PTGSHEET\"];\n}\nfunction parse_PtgEndSheet(blob, length, opts) {\n\tblob.l += (opts.biff == 2 ? 4 : 5);\n\treturn [\"PTGENDSHEET\"];\n}\nfunction parse_PtgMemAreaN(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgMemNoMemN(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgAttrNoop(blob/*::, length, opts*/) {\n\tblob.l += 4;\n\treturn [0, 0];\n}\n\n/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\nvar PtgTypes = {\n\t/*::[*/0x01/*::]*/: { n:'PtgExp', f:parse_PtgExp },\n\t/*::[*/0x02/*::]*/: { n:'PtgTbl', f:parse_PtgTbl },\n\t/*::[*/0x03/*::]*/: { n:'PtgAdd', f:parseread1 },\n\t/*::[*/0x04/*::]*/: { n:'PtgSub', f:parseread1 },\n\t/*::[*/0x05/*::]*/: { n:'PtgMul', f:parseread1 },\n\t/*::[*/0x06/*::]*/: { n:'PtgDiv', f:parseread1 },\n\t/*::[*/0x07/*::]*/: { n:'PtgPower', f:parseread1 },\n\t/*::[*/0x08/*::]*/: { n:'PtgConcat', f:parseread1 },\n\t/*::[*/0x09/*::]*/: { n:'PtgLt', f:parseread1 },\n\t/*::[*/0x0A/*::]*/: { n:'PtgLe', f:parseread1 },\n\t/*::[*/0x0B/*::]*/: { n:'PtgEq', f:parseread1 },\n\t/*::[*/0x0C/*::]*/: { n:'PtgGe', f:parseread1 },\n\t/*::[*/0x0D/*::]*/: { n:'PtgGt', f:parseread1 },\n\t/*::[*/0x0E/*::]*/: { n:'PtgNe', f:parseread1 },\n\t/*::[*/0x0F/*::]*/: { n:'PtgIsect', f:parseread1 },\n\t/*::[*/0x10/*::]*/: { n:'PtgUnion', f:parseread1 },\n\t/*::[*/0x11/*::]*/: { n:'PtgRange', f:parseread1 },\n\t/*::[*/0x12/*::]*/: { n:'PtgUplus', f:parseread1 },\n\t/*::[*/0x13/*::]*/: { n:'PtgUminus', f:parseread1 },\n\t/*::[*/0x14/*::]*/: { n:'PtgPercent', f:parseread1 },\n\t/*::[*/0x15/*::]*/: { n:'PtgParen', f:parseread1 },\n\t/*::[*/0x16/*::]*/: { n:'PtgMissArg', f:parseread1 },\n\t/*::[*/0x17/*::]*/: { n:'PtgStr', f:parse_PtgStr },\n\t/*::[*/0x1A/*::]*/: { n:'PtgSheet', f:parse_PtgSheet },\n\t/*::[*/0x1B/*::]*/: { n:'PtgEndSheet', f:parse_PtgEndSheet },\n\t/*::[*/0x1C/*::]*/: { n:'PtgErr', f:parse_PtgErr },\n\t/*::[*/0x1D/*::]*/: { n:'PtgBool', f:parse_PtgBool },\n\t/*::[*/0x1E/*::]*/: { n:'PtgInt', f:parse_PtgInt },\n\t/*::[*/0x1F/*::]*/: { n:'PtgNum', f:parse_PtgNum },\n\t/*::[*/0x20/*::]*/: { n:'PtgArray', f:parse_PtgArray },\n\t/*::[*/0x21/*::]*/: { n:'PtgFunc', f:parse_PtgFunc },\n\t/*::[*/0x22/*::]*/: { n:'PtgFuncVar', f:parse_PtgFuncVar },\n\t/*::[*/0x23/*::]*/: { n:'PtgName', f:parse_PtgName },\n\t/*::[*/0x24/*::]*/: { n:'PtgRef', f:parse_PtgRef },\n\t/*::[*/0x25/*::]*/: { n:'PtgArea', f:parse_PtgArea },\n\t/*::[*/0x26/*::]*/: { n:'PtgMemArea', f:parse_PtgMemArea },\n\t/*::[*/0x27/*::]*/: { n:'PtgMemErr', f:parse_PtgMemErr },\n\t/*::[*/0x28/*::]*/: { n:'PtgMemNoMem', f:parse_PtgMemNoMem },\n\t/*::[*/0x29/*::]*/: { n:'PtgMemFunc', f:parse_PtgMemFunc },\n\t/*::[*/0x2A/*::]*/: { n:'PtgRefErr', f:parse_PtgRefErr },\n\t/*::[*/0x2B/*::]*/: { n:'PtgAreaErr', f:parse_PtgAreaErr },\n\t/*::[*/0x2C/*::]*/: { n:'PtgRefN', f:parse_PtgRefN },\n\t/*::[*/0x2D/*::]*/: { n:'PtgAreaN', f:parse_PtgAreaN },\n\t/*::[*/0x2E/*::]*/: { n:'PtgMemAreaN', f:parse_PtgMemAreaN },\n\t/*::[*/0x2F/*::]*/: { n:'PtgMemNoMemN', f:parse_PtgMemNoMemN },\n\t/*::[*/0x39/*::]*/: { n:'PtgNameX', f:parse_PtgNameX },\n\t/*::[*/0x3A/*::]*/: { n:'PtgRef3d', f:parse_PtgRef3d },\n\t/*::[*/0x3B/*::]*/: { n:'PtgArea3d', f:parse_PtgArea3d },\n\t/*::[*/0x3C/*::]*/: { n:'PtgRefErr3d', f:parse_PtgRefErr3d },\n\t/*::[*/0x3D/*::]*/: { n:'PtgAreaErr3d', f:parse_PtgAreaErr3d },\n\t/*::[*/0xFF/*::]*/: {}\n};\n/* These are duplicated in the PtgTypes table */\nvar PtgDupes = {\n\t/*::[*/0x40/*::]*/: 0x20, /*::[*/0x60/*::]*/: 0x20,\n\t/*::[*/0x41/*::]*/: 0x21, /*::[*/0x61/*::]*/: 0x21,\n\t/*::[*/0x42/*::]*/: 0x22, /*::[*/0x62/*::]*/: 0x22,\n\t/*::[*/0x43/*::]*/: 0x23, /*::[*/0x63/*::]*/: 0x23,\n\t/*::[*/0x44/*::]*/: 0x24, /*::[*/0x64/*::]*/: 0x24,\n\t/*::[*/0x45/*::]*/: 0x25, /*::[*/0x65/*::]*/: 0x25,\n\t/*::[*/0x46/*::]*/: 0x26, /*::[*/0x66/*::]*/: 0x26,\n\t/*::[*/0x47/*::]*/: 0x27, /*::[*/0x67/*::]*/: 0x27,\n\t/*::[*/0x48/*::]*/: 0x28, /*::[*/0x68/*::]*/: 0x28,\n\t/*::[*/0x49/*::]*/: 0x29, /*::[*/0x69/*::]*/: 0x29,\n\t/*::[*/0x4A/*::]*/: 0x2A, /*::[*/0x6A/*::]*/: 0x2A,\n\t/*::[*/0x4B/*::]*/: 0x2B, /*::[*/0x6B/*::]*/: 0x2B,\n\t/*::[*/0x4C/*::]*/: 0x2C, /*::[*/0x6C/*::]*/: 0x2C,\n\t/*::[*/0x4D/*::]*/: 0x2D, /*::[*/0x6D/*::]*/: 0x2D,\n\t/*::[*/0x4E/*::]*/: 0x2E, /*::[*/0x6E/*::]*/: 0x2E,\n\t/*::[*/0x4F/*::]*/: 0x2F, /*::[*/0x6F/*::]*/: 0x2F,\n\t/*::[*/0x58/*::]*/: 0x22, /*::[*/0x78/*::]*/: 0x22,\n\t/*::[*/0x59/*::]*/: 0x39, /*::[*/0x79/*::]*/: 0x39,\n\t/*::[*/0x5A/*::]*/: 0x3A, /*::[*/0x7A/*::]*/: 0x3A,\n\t/*::[*/0x5B/*::]*/: 0x3B, /*::[*/0x7B/*::]*/: 0x3B,\n\t/*::[*/0x5C/*::]*/: 0x3C, /*::[*/0x7C/*::]*/: 0x3C,\n\t/*::[*/0x5D/*::]*/: 0x3D, /*::[*/0x7D/*::]*/: 0x3D\n};\n\nvar Ptg18 = {\n\t/*::[*/0x01/*::]*/: { n:'PtgElfLel', f:parse_PtgElfLel },\n\t/*::[*/0x02/*::]*/: { n:'PtgElfRw', f:parse_PtgElfRw },\n\t/*::[*/0x03/*::]*/: { n:'PtgElfCol', f:parse_PtgElfCol },\n\t/*::[*/0x06/*::]*/: { n:'PtgElfRwV', f:parse_PtgElfRwV },\n\t/*::[*/0x07/*::]*/: { n:'PtgElfColV', f:parse_PtgElfColV },\n\t/*::[*/0x0A/*::]*/: { n:'PtgElfRadical', f:parse_PtgElfRadical },\n\t/*::[*/0x0B/*::]*/: { n:'PtgElfRadicalS', f:parse_PtgElfRadicalS },\n\t/*::[*/0x0D/*::]*/: { n:'PtgElfColS', f:parse_PtgElfColS },\n\t/*::[*/0x0F/*::]*/: { n:'PtgElfColSV', f:parse_PtgElfColSV },\n\t/*::[*/0x10/*::]*/: { n:'PtgElfRadicalLel', f:parse_PtgElfRadicalLel },\n\t/*::[*/0x19/*::]*/: { n:'PtgList', f:parse_PtgList },\n\t/*::[*/0x1D/*::]*/: { n:'PtgSxName', f:parse_PtgSxName },\n\t/*::[*/0xFF/*::]*/: {}\n};\nvar Ptg19 = {\n\t/*::[*/0x00/*::]*/: { n:'PtgAttrNoop', f:parse_PtgAttrNoop },\n\t/*::[*/0x01/*::]*/: { n:'PtgAttrSemi', f:parse_PtgAttrSemi },\n\t/*::[*/0x02/*::]*/: { n:'PtgAttrIf', f:parse_PtgAttrIf },\n\t/*::[*/0x04/*::]*/: { n:'PtgAttrChoose', f:parse_PtgAttrChoose },\n\t/*::[*/0x08/*::]*/: { n:'PtgAttrGoto', f:parse_PtgAttrGoto },\n\t/*::[*/0x10/*::]*/: { n:'PtgAttrSum', f:parse_PtgAttrSum },\n\t/*::[*/0x20/*::]*/: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n\t/*::[*/0x21/*::]*/: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n\t/*::[*/0x40/*::]*/: { n:'PtgAttrSpace', f:parse_PtgAttrSpace },\n\t/*::[*/0x41/*::]*/: { n:'PtgAttrSpaceSemi', f:parse_PtgAttrSpaceSemi },\n\t/*::[*/0x80/*::]*/: { n:'PtgAttrIfError', f:parse_PtgAttrIfError },\n\t/*::[*/0xFF/*::]*/: {}\n};\n\n/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\nfunction parse_RgbExtra(blob, length, rgce, opts) {\n\tif(opts.biff < 8) return parsenoop(blob, length);\n\tvar target = blob.l + length;\n\tvar o = [];\n\tfor(var i = 0; i !== rgce.length; ++i) {\n\t\tswitch(rgce[i][0]) {\n\t\t\tcase 'PtgArray': /* PtgArray -> PtgExtraArray */\n\t\t\t\trgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\n\t\t\t\to.push(rgce[i][1]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemArea': /* PtgMemArea -> PtgExtraMem */\n\t\t\t\trgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\n\t\t\t\to.push(rgce[i][2]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgExp': /* PtgExp -> PtgExtraCol */\n\t\t\t\tif(opts && opts.biff == 12) {\n\t\t\t\t\trgce[i][1][1] = blob.read_shift(4);\n\t\t\t\t\to.push(rgce[i][1]);\n\t\t\t\t} break;\n\t\t\tcase 'PtgList': /* TODO: PtgList -> PtgExtraList */\n\t\t\tcase 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColSV': /* TODO: PtgElfColSV -> PtgExtraElf */\n\t\t\t\tthrow \"Unsupported \" + rgce[i][0];\n\t\t\tdefault: break;\n\t\t}\n\t}\n\tlength = target - blob.l;\n\t/* note: this is technically an error but Excel disregards */\n\t//if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\n\tif(length !== 0) o.push(parsenoop(blob, length));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\nfunction parse_Rgce(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar R, id, ptgs = [];\n\twhile(target != blob.l) {\n\t\tlength = target - blob.l;\n\t\tid = blob[blob.l];\n\t\tR = PtgTypes[id] || PtgTypes[PtgDupes[id]];\n\t\tif(id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\n\t\tif(!R || !R.f) { /*ptgs.push*/(parsenoop(blob, length)); }\n\t\telse { ptgs.push([R.n, R.f(blob, length, opts)]); }\n\t}\n\treturn ptgs;\n}\n\nfunction stringify_array(f/*:Array<Array<string>>*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < f.length; ++i) {\n\t\tvar x = f[i], r/*:Array<string>*/ = [];\n\t\tfor(var j = 0; j < x.length; ++j) {\n\t\t\tvar y = x[j];\n\t\t\tif(y) switch(y[0]) {\n\t\t\t\t// TODO: handle embedded quotes\n\t\t\t\tcase 0x02:\n\t\t\t\t\t/*:: if(typeof y[1] != 'string') throw \"unreachable\"; */\n\t\t\t\t\tr.push('\"' + y[1].replace(/\"/g,'\"\"') + '\"'); break;\n\t\t\t\tdefault: r.push(y[1]);\n\t\t\t} else r.push(\"\");\n\t\t}\n\t\to.push(r.join(\",\"));\n\t}\n\treturn o.join(\";\");\n}\n\n/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\nvar PtgBinOp = {\n\tPtgAdd: \"+\",\n\tPtgConcat: \"&\",\n\tPtgDiv: \"/\",\n\tPtgEq: \"=\",\n\tPtgGe: \">=\",\n\tPtgGt: \">\",\n\tPtgLe: \"<=\",\n\tPtgLt: \"<\",\n\tPtgMul: \"*\",\n\tPtgNe: \"<>\",\n\tPtgPower: \"^\",\n\tPtgSub: \"-\"\n};\n\n// List of invalid characters needs to be tested further\nfunction formula_quote_sheet_name(sname/*:string*/, opts)/*:string*/ {\n\tif(!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\n\tif (/[^\\w\\u4E00-\\u9FFF\\u3040-\\u30FF]/.test(sname)) return \"'\" + sname + \"'\";\n\treturn sname;\n}\nfunction get_ixti_raw(supbooks, ixti/*:number*/, opts)/*:string*/ {\n\tif(!supbooks) return \"SH33TJSERR0\";\n\tif(opts.biff > 8 && (!supbooks.XTI || !supbooks.XTI[ixti])) return supbooks.SheetNames[ixti];\n\tif(!supbooks.XTI) return \"SH33TJSERR6\";\n\tvar XTI = supbooks.XTI[ixti];\n\tif(opts.biff < 8) {\n\t\tif(ixti > 10000) ixti-= 65536;\n\t\tif(ixti < 0) ixti = -ixti;\n\t\treturn ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\n\t}\n\tif(!XTI) return \"SH33TJSERR1\";\n\tvar o = \"\";\n\tif(opts.biff > 8) switch(supbooks[XTI[0]][0]) {\n\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\to = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tif(opts.SID != null) return supbooks.SheetNames[opts.SID];\n\t\t\treturn \"SH33TJSSAME\" + supbooks[XTI[0]][0];\n\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\t/* falls through */\n\t\tdefault: return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\n\t}\n\tswitch(supbooks[XTI[0]][0][0]) {\n\t\tcase 0x0401:\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x3A01: return supbooks[XTI[0]].slice(1).map(function(name) { return name.Name; }).join(\";;\"); //return \"SH33TJSERR8\";\n\t\tdefault:\n\t\t\tif(!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\n\t}\n}\nfunction get_ixti(supbooks, ixti/*:number*/, opts)/*:string*/ {\n\tvar ixtiraw = get_ixti_raw(supbooks, ixti, opts);\n\treturn ixtiraw == \"#REF\" ? ixtiraw : formula_quote_sheet_name(ixtiraw, opts);\n}\nfunction stringify_formula(formula/*Array<any>*/, range, cell/*:any*/, supbooks, opts)/*:string*/ {\n\tvar biff = (opts && opts.biff) || 8;\n\tvar _range = /*range != null ? range :*/ {s:{c:0, r:0},e:{c:0, r:0}};\n\tvar stack/*:Array<string>*/ = [], e1, e2, /*::type,*/ c/*:CellAddress*/, ixti=0, nameidx=0, r, sname=\"\";\n\tif(!formula[0] || !formula[0][0]) return \"\";\n\tvar last_sp = -1, sp = \"\";\n\tfor(var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\n\t\tvar f = formula[0][ff];\n\t\tswitch(f[0]) {\n\t\t\tcase 'PtgUminus': /* [MS-XLS] 2.5.198.93 */\n\t\t\t\tstack.push(\"-\" + stack.pop()); break;\n\t\t\tcase 'PtgUplus': /* [MS-XLS] 2.5.198.95 */\n\t\t\t\tstack.push(\"+\" + stack.pop()); break;\n\t\t\tcase 'PtgPercent': /* [MS-XLS] 2.5.198.81 */\n\t\t\t\tstack.push(stack.pop() + \"%\"); break;\n\n\t\t\tcase 'PtgAdd':    /* [MS-XLS] 2.5.198.26 */\n\t\t\tcase 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\n\t\t\tcase 'PtgDiv':    /* [MS-XLS] 2.5.198.45 */\n\t\t\tcase 'PtgEq':     /* [MS-XLS] 2.5.198.56 */\n\t\t\tcase 'PtgGe':     /* [MS-XLS] 2.5.198.64 */\n\t\t\tcase 'PtgGt':     /* [MS-XLS] 2.5.198.65 */\n\t\t\tcase 'PtgLe':     /* [MS-XLS] 2.5.198.68 */\n\t\t\tcase 'PtgLt':     /* [MS-XLS] 2.5.198.69 */\n\t\t\tcase 'PtgMul':    /* [MS-XLS] 2.5.198.75 */\n\t\t\tcase 'PtgNe':     /* [MS-XLS] 2.5.198.78 */\n\t\t\tcase 'PtgPower':  /* [MS-XLS] 2.5.198.82 */\n\t\t\tcase 'PtgSub':    /* [MS-XLS] 2.5.198.90 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\" \", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\"\\r\", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsp = \"\";\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\te2 = e2 + sp;\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(e2+PtgBinOp[f[0]]+e1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgIsect': /* [MS-XLS] 2.5.198.67 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\" \"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgUnion': /* [MS-XLS] 2.5.198.94 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\",\"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRange': /* [MS-XLS] 2.5.198.83 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\":\"+e1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrChoose': /* [MS-XLS] 2.5.198.34 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrGoto': /* [MS-XLS] 2.5.198.35 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIf': /* [MS-XLS] 2.5.198.36 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIfError': /* [MS-XLSB] 2.5.97.28 */\n\t\t\t\tbreak;\n\n\n\t\t\tcase 'PtgRef': /* [MS-XLS] 2.5.198.84 */\n\t\t\t\t/*::type = f[1][0]; */c = shift_cell_xls((f[1][1]/*:any*/), _range, opts);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRefN': /* [MS-XLS] 2.5.198.88 */\n\t\t\t\t/*::type = f[1][0]; */c = cell ? shift_cell_xls((f[1][1]/*:any*/), cell, opts) : (f[1][1]/*:any*/);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRef3d': /* [MS-XLS] 2.5.198.85 */\n\t\t\t\t/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; c = shift_cell_xls((f[1][2]/*:any*/), _range, opts);\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tvar w = sname; /* IE9 fails on defined names */ // eslint-disable-line no-unused-vars\n\t\t\t\tstack.push(sname + \"!\" + encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\n\t\t\tcase 'PtgFuncVar': /* [MS-XLS] 2.5.198.63 */\n\t\t\t\t/* f[1] = [argc, func, type] */\n\t\t\t\tvar argc/*:number*/ = (f[1][0]/*:any*/), func/*:string*/ = (f[1][1]/*:any*/);\n\t\t\t\tif(!argc) argc = 0;\n\t\t\t\targc &= 0x7F;\n\t\t\t\tvar args = argc == 0 ? [] : stack.slice(-argc);\n\t\t\t\tstack.length -= argc;\n\t\t\t\tif(func === 'User') func = args.shift();\n\t\t\t\tstack.push(func + \"(\" + args.join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgBool': /* [MS-XLS] 2.5.198.42 */\n\t\t\t\tstack.push(f[1] ? \"TRUE\" : \"FALSE\"); break;\n\t\t\tcase 'PtgInt': /* [MS-XLS] 2.5.198.66 */\n\t\t\t\tstack.push(/*::String(*/f[1]/*::)*/); break;\n\t\t\tcase 'PtgNum': /* [MS-XLS] 2.5.198.79 TODO: precision? */\n\t\t\t\tstack.push(String(f[1])); break;\n\t\t\tcase 'PtgStr': /* [MS-XLS] 2.5.198.89 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push('\"' + f[1].replace(/\"/g, '\"\"') + '\"'); break;\n\t\t\tcase 'PtgErr': /* [MS-XLS] 2.5.198.57 */\n\t\t\t\tstack.push(/*::String(*/f[1]/*::)*/); break;\n\t\t\tcase 'PtgAreaN': /* [MS-XLS] 2.5.198.31 TODO */\n\t\t\t\t/*::type = f[1][0]; */r = shift_range_xls(f[1][1], cell ? {s:cell} : _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea': /* [MS-XLS] 2.5.198.27 TODO: fixed points */\n\t\t\t\t/*::type = f[1][0]; */r = shift_range_xls(f[1][1], _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea3d': /* [MS-XLS] 2.5.198.28 TODO */\n\t\t\t\t/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; r = f[1][2];\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tstack.push(sname + \"!\" + encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrSum': /* [MS-XLS] 2.5.198.41 */\n\t\t\t\tstack.push(\"SUM(\" + stack.pop() + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\n\t\t\tcase 'PtgAttrSemi': /* [MS-XLS] 2.5.198.37 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgName': /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\n\t\t\t\t/* f[1] = type, 0, nameindex */\n\t\t\t\tnameidx = (f[1][2]/*:any*/);\n\t\t\t\tvar lbl = (supbooks.names||[])[nameidx-1] || (supbooks[0]||[])[nameidx];\n\t\t\t\tvar name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\n\t\t\t\t/* [MS-XLSB] 2.5.97.10 Ftab -- last verified 20220204 */\n\t\t\t\tif(name && name.slice(0,6) == \"_xlfn.\" && !opts.xlfn) name = name.slice(6);\n\t\t\t\tstack.push(name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgNameX': /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\n\t\t\t\t/* f[1] = type, ixti, nameindex */\n\t\t\t\tvar bookidx/*:number*/ = (f[1][1]/*:any*/); nameidx = (f[1][2]/*:any*/); var externbook;\n\t\t\t\t/* TODO: Properly handle missing values -- this should be using get_ixti_raw primarily */\n\t\t\t\tif(opts.biff <= 5) {\n\t\t\t\t\tif(bookidx < 0) bookidx = -bookidx;\n\t\t\t\t\tif(supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\n\t\t\t\t} else {\n\t\t\t\t\tvar o = \"\";\n\t\t\t\t\tif(((supbooks[bookidx]||[])[0]||[])[0] == 0x3A01){/* empty */}\n\t\t\t\t\telse if(((supbooks[bookidx]||[])[0]||[])[0] == 0x0401){\n\t\t\t\t\t\tif(supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\n\t\t\t\t\t\t\to = supbooks.SheetNames[supbooks[bookidx][nameidx].itab-1] + \"!\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse o = supbooks.SheetNames[nameidx-1]+ \"!\";\n\t\t\t\t\tif(supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;\n\t\t\t\t\telse if(supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar ixtidata = (get_ixti_raw(supbooks, bookidx, opts)||\"\").split(\";;\");\n\t\t\t\t\t\tif(ixtidata[nameidx - 1]) o = ixtidata[nameidx - 1]; // TODO: confirm this is correct\n\t\t\t\t\t\telse o += \"SH33TJSERRX\";\n\t\t\t\t\t}\n\t\t\t\t\tstack.push(o);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!externbook) externbook = {Name: \"SH33TJSERRY\"};\n\t\t\t\tstack.push(externbook.Name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgParen': /* [MS-XLS] 2.5.198.80 */\n\t\t\t\tvar lp = '(', rp = ')';\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 2: lp = fill(\" \", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 3: lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 4: rp = fill(\" \", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 5: rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(lp + stack.pop() + rp); break;\n\n\t\t\tcase 'PtgRefErr': /* [MS-XLS] 2.5.198.86 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgRefErr3d': /* [MS-XLS] 2.5.198.87 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgExp': /* [MS-XLS] 2.5.198.58 TODO */\n\t\t\t\tc = {c:(f[1][1]/*:any*/),r:(f[1][0]/*:any*/)};\n\t\t\t\tvar q = ({c: cell.c, r:cell.r}/*:any*/);\n\t\t\t\tif(supbooks.sharedf[encode_cell(c)]) {\n\t\t\t\t\tvar parsedf = (supbooks.sharedf[encode_cell(c)]);\n\t\t\t\t\tstack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\n\t\t\t\t} else {\n\t\t\t\t\tvar fnd = false;\n\t\t\t\t\tfor(e1=0;e1!=supbooks.arrayf.length; ++e1) {\n\t\t\t\t\t\t/* TODO: should be something like range_has */\n\t\t\t\t\t\te2 = supbooks.arrayf[e1];\n\t\t\t\t\t\tif(c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\n\t\t\t\t\t\tif(c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\n\t\t\t\t\t\tstack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\n\t\t\t\t\t\tfnd = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(!fnd) stack.push(/*::String(*/f[1]/*::)*/);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgArray': /* [MS-XLS] 2.5.198.32 TODO */\n\t\t\t\tstack.push(\"{\" + stringify_array(/*::(*/f[1]/*:: :any)*/) + \"}\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemArea': /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\n\t\t\t\t//stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\n\t\t\tcase 'PtgAttrSpaceSemi': /* [MS-XLS] 2.5.198.39 */\n\t\t\t\tlast_sp = ff;\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgTbl': /* [MS-XLS] 2.5.198.92 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemErr': /* [MS-XLS] 2.5.198.71 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMissArg': /* [MS-XLS] 2.5.198.74 */\n\t\t\t\tstack.push(\"\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAreaErr': /* [MS-XLS] 2.5.198.29 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgAreaErr3d': /* [MS-XLS] 2.5.198.30 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgList': /* [MS-XLSB] 2.5.97.52 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemAreaN':\n\t\t\tcase 'PtgMemNoMemN':\n\t\t\tcase 'PtgAttrNoop':\n\t\t\tcase 'PtgSheet':\n\t\t\tcase 'PtgEndSheet':\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemFunc': /* [MS-XLS] 2.5.198.72 TODO */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemNoMem': /* [MS-XLS] 2.5.198.73 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\n\t\t\tcase 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\n\t\t\tcase 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\n\t\t\tcase 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\n\t\t\tcase 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\n\t\t\tcase 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\n\t\t\tcase 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\n\t\t\tcase 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\n\t\t\tcase 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\n\t\t\tcase 'PtgElfRwV': /* [MS-XLS] 2.5.198.55 */\n\t\t\t\tthrow new Error(\"Unsupported ELFs\");\n\n\t\t\tcase 'PtgSxName': /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\n\t\t\t\tthrow new Error('Unrecognized Formula Token: ' + String(f));\n\t\t\tdefault: throw new Error('Unrecognized Formula Token: ' + String(f));\n\t\t}\n\t\tvar PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\n\t\tif(opts.biff != 3) if(last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\n\t\t\tf = formula[0][last_sp];\n\t\t\tvar _left = true;\n\t\t\tswitch(f[1][0]) {\n\t\t\t\t/* note: some bad XLSB files omit the PtgParen */\n\t\t\t\tcase 4: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 0:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\" \", f[1][1]); break;\n\t\t\t\tcase 5: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 1:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\"\\r\", f[1][1]); break;\n\t\t\t\tdefault:\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\n\t\t\t}\n\t\t\tstack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\n\t\t\tlast_sp = -1;\n\t\t}\n\t}\n\tif(stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\n\treturn stack[0];\n}\n\n/* [MS-XLS] 2.5.198.1 TODO */\nfunction parse_ArrayParsedFormula(blob, length, opts/*::, ref*/) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.3 TODO */\nfunction parse_XLSCellParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.21 */\nfunction parse_NameParsedFormula(blob, length, opts, cce) {\n\tvar target = blob.l + length;\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tvar rgcb;\n\tif(target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.118 TODO */\nfunction parse_SharedParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar rgcb, cce = blob.read_shift(2); // length of rgce\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tif(length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\nfunction parse_FormulaValue(blob/*::, length*/) {\n\tvar b;\n\tif(__readUInt16LE(blob,blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob),'n'];\n\tswitch(blob[blob.l]) {\n\t\tcase 0x00: blob.l += 8; return [\"String\", 's'];\n\t\tcase 0x01: b = blob[blob.l+2] === 0x1; blob.l += 8; return [b,'b'];\n\t\tcase 0x02: b = blob[blob.l+2]; blob.l += 8; return [b,'e'];\n\t\tcase 0x03: blob.l += 8; return [\"\",'s'];\n\t}\n\treturn [];\n}\nfunction write_FormulaValue(value) {\n\tif(value == null) {\n\t\t// Blank String Value\n\t\tvar o = new_buf(8);\n\t\to.write_shift(1, 0x03);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0xFFFF);\n\t\treturn o;\n\t} else if(typeof value == \"number\") return write_Xnum(value);\n\treturn write_Xnum(0);\n}\n\n/* [MS-XLS] 2.4.127 TODO */\nfunction parse_Formula(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) ++blob.l;\n\tvar val = parse_FormulaValue(blob,8);\n\tvar flags = blob.read_shift(1);\n\tif(opts.biff != 2) {\n\t\tblob.read_shift(1);\n\t\tif(opts.biff >= 5) {\n\t\t\t/*var chn = */blob.read_shift(4);\n\t\t}\n\t}\n\tvar cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\n\treturn {cell:cell, val:val[0], formula:cbf, shared: (flags >> 3) & 1, tt:val[1]};\n}\nfunction write_Formula(cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, os/*:number*/) {\n\t// Cell\n\tvar o1 = write_XLSCell(R, C, os);\n\n\t// FormulaValue\n\tvar o2 = write_FormulaValue(cell.v);\n\n\t// flags + cache\n\tvar o3 = new_buf(6);\n\tvar flags = 0x01 | 0x20;\n\to3.write_shift(2, flags);\n\to3.write_shift(4, 0);\n\n\t// CellParsedFormula\n\tvar bf = new_buf(cell.bf.length);\n\tfor(var i = 0; i < cell.bf.length; ++i) bf[i] = cell.bf[i];\n\n\tvar out = bconcat([o1, o2, o3, bf]);\n\treturn out;\n}\n\n\n/* XLSB Parsed Formula records have the same shape */\nfunction parse_XLSBParsedFormula(data, length, opts) {\n\tvar cce = data.read_shift(4);\n\tvar rgce = parse_Rgce(data, cce, opts);\n\tvar cb = data.read_shift(4);\n\tvar rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\nvar parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.4 CellParsedFormula */\nvar parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.8 DVParsedFormula */\n//var parse_XLSBDVParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.9 FRTParsedFormula */\n//var parse_XLSBFRTParsedFormula = parse_XLSBParsedFormula2;\n/* [MS-XLSB] 2.5.97.12 NameParsedFormula */\nvar parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\nvar parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\nvar Cetab = {\n  0: \"BEEP\",\n  1: \"OPEN\",\n  2: \"OPEN.LINKS\",\n  3: \"CLOSE.ALL\",\n  4: \"SAVE\",\n  5: \"SAVE.AS\",\n  6: \"FILE.DELETE\",\n  7: \"PAGE.SETUP\",\n  8: \"PRINT\",\n  9: \"PRINTER.SETUP\",\n  10: \"QUIT\",\n  11: \"NEW.WINDOW\",\n  12: \"ARRANGE.ALL\",\n  13: \"WINDOW.SIZE\",\n  14: \"WINDOW.MOVE\",\n  15: \"FULL\",\n  16: \"CLOSE\",\n  17: \"RUN\",\n  22: \"SET.PRINT.AREA\",\n  23: \"SET.PRINT.TITLES\",\n  24: \"SET.PAGE.BREAK\",\n  25: \"REMOVE.PAGE.BREAK\",\n  26: \"FONT\",\n  27: \"DISPLAY\",\n  28: \"PROTECT.DOCUMENT\",\n  29: \"PRECISION\",\n  30: \"A1.R1C1\",\n  31: \"CALCULATE.NOW\",\n  32: \"CALCULATION\",\n  34: \"DATA.FIND\",\n  35: \"EXTRACT\",\n  36: \"DATA.DELETE\",\n  37: \"SET.DATABASE\",\n  38: \"SET.CRITERIA\",\n  39: \"SORT\",\n  40: \"DATA.SERIES\",\n  41: \"TABLE\",\n  42: \"FORMAT.NUMBER\",\n  43: \"ALIGNMENT\",\n  44: \"STYLE\",\n  45: \"BORDER\",\n  46: \"CELL.PROTECTION\",\n  47: \"COLUMN.WIDTH\",\n  48: \"UNDO\",\n  49: \"CUT\",\n  50: \"COPY\",\n  51: \"PASTE\",\n  52: \"CLEAR\",\n  53: \"PASTE.SPECIAL\",\n  54: \"EDIT.DELETE\",\n  55: \"INSERT\",\n  56: \"FILL.RIGHT\",\n  57: \"FILL.DOWN\",\n  61: \"DEFINE.NAME\",\n  62: \"CREATE.NAMES\",\n  63: \"FORMULA.GOTO\",\n  64: \"FORMULA.FIND\",\n  65: \"SELECT.LAST.CELL\",\n  66: \"SHOW.ACTIVE.CELL\",\n  67: \"GALLERY.AREA\",\n  68: \"GALLERY.BAR\",\n  69: \"GALLERY.COLUMN\",\n  70: \"GALLERY.LINE\",\n  71: \"GALLERY.PIE\",\n  72: \"GALLERY.SCATTER\",\n  73: \"COMBINATION\",\n  74: \"PREFERRED\",\n  75: \"ADD.OVERLAY\",\n  76: \"GRIDLINES\",\n  77: \"SET.PREFERRED\",\n  78: \"AXES\",\n  79: \"LEGEND\",\n  80: \"ATTACH.TEXT\",\n  81: \"ADD.ARROW\",\n  82: \"SELECT.CHART\",\n  83: \"SELECT.PLOT.AREA\",\n  84: \"PATTERNS\",\n  85: \"MAIN.CHART\",\n  86: \"OVERLAY\",\n  87: \"SCALE\",\n  88: \"FORMAT.LEGEND\",\n  89: \"FORMAT.TEXT\",\n  90: \"EDIT.REPEAT\",\n  91: \"PARSE\",\n  92: \"JUSTIFY\",\n  93: \"HIDE\",\n  94: \"UNHIDE\",\n  95: \"WORKSPACE\",\n  96: \"FORMULA\",\n  97: \"FORMULA.FILL\",\n  98: \"FORMULA.ARRAY\",\n  99: \"DATA.FIND.NEXT\",\n  100: \"DATA.FIND.PREV\",\n  101: \"FORMULA.FIND.NEXT\",\n  102: \"FORMULA.FIND.PREV\",\n  103: \"ACTIVATE\",\n  104: \"ACTIVATE.NEXT\",\n  105: \"ACTIVATE.PREV\",\n  106: \"UNLOCKED.NEXT\",\n  107: \"UNLOCKED.PREV\",\n  108: \"COPY.PICTURE\",\n  109: \"SELECT\",\n  110: \"DELETE.NAME\",\n  111: \"DELETE.FORMAT\",\n  112: \"VLINE\",\n  113: \"HLINE\",\n  114: \"VPAGE\",\n  115: \"HPAGE\",\n  116: \"VSCROLL\",\n  117: \"HSCROLL\",\n  118: \"ALERT\",\n  119: \"NEW\",\n  120: \"CANCEL.COPY\",\n  121: \"SHOW.CLIPBOARD\",\n  122: \"MESSAGE\",\n  124: \"PASTE.LINK\",\n  125: \"APP.ACTIVATE\",\n  126: \"DELETE.ARROW\",\n  127: \"ROW.HEIGHT\",\n  128: \"FORMAT.MOVE\",\n  129: \"FORMAT.SIZE\",\n  130: \"FORMULA.REPLACE\",\n  131: \"SEND.KEYS\",\n  132: \"SELECT.SPECIAL\",\n  133: \"APPLY.NAMES\",\n  134: \"REPLACE.FONT\",\n  135: \"FREEZE.PANES\",\n  136: \"SHOW.INFO\",\n  137: \"SPLIT\",\n  138: \"ON.WINDOW\",\n  139: \"ON.DATA\",\n  140: \"DISABLE.INPUT\",\n  142: \"OUTLINE\",\n  143: \"LIST.NAMES\",\n  144: \"FILE.CLOSE\",\n  145: \"SAVE.WORKBOOK\",\n  146: \"DATA.FORM\",\n  147: \"COPY.CHART\",\n  148: \"ON.TIME\",\n  149: \"WAIT\",\n  150: \"FORMAT.FONT\",\n  151: \"FILL.UP\",\n  152: \"FILL.LEFT\",\n  153: \"DELETE.OVERLAY\",\n  155: \"SHORT.MENUS\",\n  159: \"SET.UPDATE.STATUS\",\n  161: \"COLOR.PALETTE\",\n  162: \"DELETE.STYLE\",\n  163: \"WINDOW.RESTORE\",\n  164: \"WINDOW.MAXIMIZE\",\n  166: \"CHANGE.LINK\",\n  167: \"CALCULATE.DOCUMENT\",\n  168: \"ON.KEY\",\n  169: \"APP.RESTORE\",\n  170: \"APP.MOVE\",\n  171: \"APP.SIZE\",\n  172: \"APP.MINIMIZE\",\n  173: \"APP.MAXIMIZE\",\n  174: \"BRING.TO.FRONT\",\n  175: \"SEND.TO.BACK\",\n  185: \"MAIN.CHART.TYPE\",\n  186: \"OVERLAY.CHART.TYPE\",\n  187: \"SELECT.END\",\n  188: \"OPEN.MAIL\",\n  189: \"SEND.MAIL\",\n  190: \"STANDARD.FONT\",\n  191: \"CONSOLIDATE\",\n  192: \"SORT.SPECIAL\",\n  193: \"GALLERY.3D.AREA\",\n  194: \"GALLERY.3D.COLUMN\",\n  195: \"GALLERY.3D.LINE\",\n  196: \"GALLERY.3D.PIE\",\n  197: \"VIEW.3D\",\n  198: \"GOAL.SEEK\",\n  199: \"WORKGROUP\",\n  200: \"FILL.GROUP\",\n  201: \"UPDATE.LINK\",\n  202: \"PROMOTE\",\n  203: \"DEMOTE\",\n  204: \"SHOW.DETAIL\",\n  206: \"UNGROUP\",\n  207: \"OBJECT.PROPERTIES\",\n  208: \"SAVE.NEW.OBJECT\",\n  209: \"SHARE\",\n  210: \"SHARE.NAME\",\n  211: \"DUPLICATE\",\n  212: \"APPLY.STYLE\",\n  213: \"ASSIGN.TO.OBJECT\",\n  214: \"OBJECT.PROTECTION\",\n  215: \"HIDE.OBJECT\",\n  216: \"SET.EXTRACT\",\n  217: \"CREATE.PUBLISHER\",\n  218: \"SUBSCRIBE.TO\",\n  219: \"ATTRIBUTES\",\n  220: \"SHOW.TOOLBAR\",\n  222: \"PRINT.PREVIEW\",\n  223: \"EDIT.COLOR\",\n  224: \"SHOW.LEVELS\",\n  225: \"FORMAT.MAIN\",\n  226: \"FORMAT.OVERLAY\",\n  227: \"ON.RECALC\",\n  228: \"EDIT.SERIES\",\n  229: \"DEFINE.STYLE\",\n  240: \"LINE.PRINT\",\n  243: \"ENTER.DATA\",\n  249: \"GALLERY.RADAR\",\n  250: \"MERGE.STYLES\",\n  251: \"EDITION.OPTIONS\",\n  252: \"PASTE.PICTURE\",\n  253: \"PASTE.PICTURE.LINK\",\n  254: \"SPELLING\",\n  256: \"ZOOM\",\n  259: \"INSERT.OBJECT\",\n  260: \"WINDOW.MINIMIZE\",\n  265: \"SOUND.NOTE\",\n  266: \"SOUND.PLAY\",\n  267: \"FORMAT.SHAPE\",\n  268: \"EXTEND.POLYGON\",\n  269: \"FORMAT.AUTO\",\n  272: \"GALLERY.3D.BAR\",\n  273: \"GALLERY.3D.SURFACE\",\n  274: \"FILL.AUTO\",\n  276: \"CUSTOMIZE.TOOLBAR\",\n  277: \"ADD.TOOL\",\n  278: \"EDIT.OBJECT\",\n  279: \"ON.DOUBLECLICK\",\n  280: \"ON.ENTRY\",\n  281: \"WORKBOOK.ADD\",\n  282: \"WORKBOOK.MOVE\",\n  283: \"WORKBOOK.COPY\",\n  284: \"WORKBOOK.OPTIONS\",\n  285: \"SAVE.WORKSPACE\",\n  288: \"CHART.WIZARD\",\n  289: \"DELETE.TOOL\",\n  290: \"MOVE.TOOL\",\n  291: \"WORKBOOK.SELECT\",\n  292: \"WORKBOOK.ACTIVATE\",\n  293: \"ASSIGN.TO.TOOL\",\n  295: \"COPY.TOOL\",\n  296: \"RESET.TOOL\",\n  297: \"CONSTRAIN.NUMERIC\",\n  298: \"PASTE.TOOL\",\n  302: \"WORKBOOK.NEW\",\n  305: \"SCENARIO.CELLS\",\n  306: \"SCENARIO.DELETE\",\n  307: \"SCENARIO.ADD\",\n  308: \"SCENARIO.EDIT\",\n  309: \"SCENARIO.SHOW\",\n  310: \"SCENARIO.SHOW.NEXT\",\n  311: \"SCENARIO.SUMMARY\",\n  312: \"PIVOT.TABLE.WIZARD\",\n  313: \"PIVOT.FIELD.PROPERTIES\",\n  314: \"PIVOT.FIELD\",\n  315: \"PIVOT.ITEM\",\n  316: \"PIVOT.ADD.FIELDS\",\n  318: \"OPTIONS.CALCULATION\",\n  319: \"OPTIONS.EDIT\",\n  320: \"OPTIONS.VIEW\",\n  321: \"ADDIN.MANAGER\",\n  322: \"MENU.EDITOR\",\n  323: \"ATTACH.TOOLBARS\",\n  324: \"VBAActivate\",\n  325: \"OPTIONS.CHART\",\n  328: \"VBA.INSERT.FILE\",\n  330: \"VBA.PROCEDURE.DEFINITION\",\n  336: \"ROUTING.SLIP\",\n  338: \"ROUTE.DOCUMENT\",\n  339: \"MAIL.LOGON\",\n  342: \"INSERT.PICTURE\",\n  343: \"EDIT.TOOL\",\n  344: \"GALLERY.DOUGHNUT\",\n  350: \"CHART.TREND\",\n  352: \"PIVOT.ITEM.PROPERTIES\",\n  354: \"WORKBOOK.INSERT\",\n  355: \"OPTIONS.TRANSITION\",\n  356: \"OPTIONS.GENERAL\",\n  370: \"FILTER.ADVANCED\",\n  373: \"MAIL.ADD.MAILER\",\n  374: \"MAIL.DELETE.MAILER\",\n  375: \"MAIL.REPLY\",\n  376: \"MAIL.REPLY.ALL\",\n  377: \"MAIL.FORWARD\",\n  378: \"MAIL.NEXT.LETTER\",\n  379: \"DATA.LABEL\",\n  380: \"INSERT.TITLE\",\n  381: \"FONT.PROPERTIES\",\n  382: \"MACRO.OPTIONS\",\n  383: \"WORKBOOK.HIDE\",\n  384: \"WORKBOOK.UNHIDE\",\n  385: \"WORKBOOK.DELETE\",\n  386: \"WORKBOOK.NAME\",\n  388: \"GALLERY.CUSTOM\",\n  390: \"ADD.CHART.AUTOFORMAT\",\n  391: \"DELETE.CHART.AUTOFORMAT\",\n  392: \"CHART.ADD.DATA\",\n  393: \"AUTO.OUTLINE\",\n  394: \"TAB.ORDER\",\n  395: \"SHOW.DIALOG\",\n  396: \"SELECT.ALL\",\n  397: \"UNGROUP.SHEETS\",\n  398: \"SUBTOTAL.CREATE\",\n  399: \"SUBTOTAL.REMOVE\",\n  400: \"RENAME.OBJECT\",\n  412: \"WORKBOOK.SCROLL\",\n  413: \"WORKBOOK.NEXT\",\n  414: \"WORKBOOK.PREV\",\n  415: \"WORKBOOK.TAB.SPLIT\",\n  416: \"FULL.SCREEN\",\n  417: \"WORKBOOK.PROTECT\",\n  420: \"SCROLLBAR.PROPERTIES\",\n  421: \"PIVOT.SHOW.PAGES\",\n  422: \"TEXT.TO.COLUMNS\",\n  423: \"FORMAT.CHARTTYPE\",\n  424: \"LINK.FORMAT\",\n  425: \"TRACER.DISPLAY\",\n  430: \"TRACER.NAVIGATE\",\n  431: \"TRACER.CLEAR\",\n  432: \"TRACER.ERROR\",\n  433: \"PIVOT.FIELD.GROUP\",\n  434: \"PIVOT.FIELD.UNGROUP\",\n  435: \"CHECKBOX.PROPERTIES\",\n  436: \"LABEL.PROPERTIES\",\n  437: \"LISTBOX.PROPERTIES\",\n  438: \"EDITBOX.PROPERTIES\",\n  439: \"PIVOT.REFRESH\",\n  440: \"LINK.COMBO\",\n  441: \"OPEN.TEXT\",\n  442: \"HIDE.DIALOG\",\n  443: \"SET.DIALOG.FOCUS\",\n  444: \"ENABLE.OBJECT\",\n  445: \"PUSHBUTTON.PROPERTIES\",\n  446: \"SET.DIALOG.DEFAULT\",\n  447: \"FILTER\",\n  448: \"FILTER.SHOW.ALL\",\n  449: \"CLEAR.OUTLINE\",\n  450: \"FUNCTION.WIZARD\",\n  451: \"ADD.LIST.ITEM\",\n  452: \"SET.LIST.ITEM\",\n  453: \"REMOVE.LIST.ITEM\",\n  454: \"SELECT.LIST.ITEM\",\n  455: \"SET.CONTROL.VALUE\",\n  456: \"SAVE.COPY.AS\",\n  458: \"OPTIONS.LISTS.ADD\",\n  459: \"OPTIONS.LISTS.DELETE\",\n  460: \"SERIES.AXES\",\n  461: \"SERIES.X\",\n  462: \"SERIES.Y\",\n  463: \"ERRORBAR.X\",\n  464: \"ERRORBAR.Y\",\n  465: \"FORMAT.CHART\",\n  466: \"SERIES.ORDER\",\n  467: \"MAIL.LOGOFF\",\n  468: \"CLEAR.ROUTING.SLIP\",\n  469: \"APP.ACTIVATE.MICROSOFT\",\n  470: \"MAIL.EDIT.MAILER\",\n  471: \"ON.SHEET\",\n  472: \"STANDARD.WIDTH\",\n  473: \"SCENARIO.MERGE\",\n  474: \"SUMMARY.INFO\",\n  475: \"FIND.FILE\",\n  476: \"ACTIVE.CELL.FONT\",\n  477: \"ENABLE.TIPWIZARD\",\n  478: \"VBA.MAKE.ADDIN\",\n  480: \"INSERTDATATABLE\",\n  481: \"WORKGROUP.OPTIONS\",\n  482: \"MAIL.SEND.MAILER\",\n  485: \"AUTOCORRECT\",\n  489: \"POST.DOCUMENT\",\n  491: \"PICKLIST\",\n  493: \"VIEW.SHOW\",\n  494: \"VIEW.DEFINE\",\n  495: \"VIEW.DELETE\",\n  509: \"SHEET.BACKGROUND\",\n  510: \"INSERT.MAP.OBJECT\",\n  511: \"OPTIONS.MENONO\",\n  517: \"MSOCHECKS\",\n  518: \"NORMAL\",\n  519: \"LAYOUT\",\n  520: \"RM.PRINT.AREA\",\n  521: \"CLEAR.PRINT.AREA\",\n  522: \"ADD.PRINT.AREA\",\n  523: \"MOVE.BRK\",\n  545: \"HIDECURR.NOTE\",\n  546: \"HIDEALL.NOTES\",\n  547: \"DELETE.NOTE\",\n  548: \"TRAVERSE.NOTES\",\n  549: \"ACTIVATE.NOTES\",\n  620: \"PROTECT.REVISIONS\",\n  621: \"UNPROTECT.REVISIONS\",\n  647: \"OPTIONS.ME\",\n  653: \"WEB.PUBLISH\",\n  667: \"NEWWEBQUERY\",\n  673: \"PIVOT.TABLE.CHART\",\n  753: \"OPTIONS.SAVE\",\n  755: \"OPTIONS.SPELL\",\n  808: \"HIDEALL.INKANNOTS\"\n};\nvar Ftab = {\n  0: \"COUNT\",\n  1: \"IF\",\n  2: \"ISNA\",\n  3: \"ISERROR\",\n  4: \"SUM\",\n  5: \"AVERAGE\",\n  6: \"MIN\",\n  7: \"MAX\",\n  8: \"ROW\",\n  9: \"COLUMN\",\n  10: \"NA\",\n  11: \"NPV\",\n  12: \"STDEV\",\n  13: \"DOLLAR\",\n  14: \"FIXED\",\n  15: \"SIN\",\n  16: \"COS\",\n  17: \"TAN\",\n  18: \"ATAN\",\n  19: \"PI\",\n  20: \"SQRT\",\n  21: \"EXP\",\n  22: \"LN\",\n  23: \"LOG10\",\n  24: \"ABS\",\n  25: \"INT\",\n  26: \"SIGN\",\n  27: \"ROUND\",\n  28: \"LOOKUP\",\n  29: \"INDEX\",\n  30: \"REPT\",\n  31: \"MID\",\n  32: \"LEN\",\n  33: \"VALUE\",\n  34: \"TRUE\",\n  35: \"FALSE\",\n  36: \"AND\",\n  37: \"OR\",\n  38: \"NOT\",\n  39: \"MOD\",\n  40: \"DCOUNT\",\n  41: \"DSUM\",\n  42: \"DAVERAGE\",\n  43: \"DMIN\",\n  44: \"DMAX\",\n  45: \"DSTDEV\",\n  46: \"VAR\",\n  47: \"DVAR\",\n  48: \"TEXT\",\n  49: \"LINEST\",\n  50: \"TREND\",\n  51: \"LOGEST\",\n  52: \"GROWTH\",\n  53: \"GOTO\",\n  54: \"HALT\",\n  55: \"RETURN\",\n  56: \"PV\",\n  57: \"FV\",\n  58: \"NPER\",\n  59: \"PMT\",\n  60: \"RATE\",\n  61: \"MIRR\",\n  62: \"IRR\",\n  63: \"RAND\",\n  64: \"MATCH\",\n  65: \"DATE\",\n  66: \"TIME\",\n  67: \"DAY\",\n  68: \"MONTH\",\n  69: \"YEAR\",\n  70: \"WEEKDAY\",\n  71: \"HOUR\",\n  72: \"MINUTE\",\n  73: \"SECOND\",\n  74: \"NOW\",\n  75: \"AREAS\",\n  76: \"ROWS\",\n  77: \"COLUMNS\",\n  78: \"OFFSET\",\n  79: \"ABSREF\",\n  80: \"RELREF\",\n  81: \"ARGUMENT\",\n  82: \"SEARCH\",\n  83: \"TRANSPOSE\",\n  84: \"ERROR\",\n  85: \"STEP\",\n  86: \"TYPE\",\n  87: \"ECHO\",\n  88: \"SET.NAME\",\n  89: \"CALLER\",\n  90: \"DEREF\",\n  91: \"WINDOWS\",\n  92: \"SERIES\",\n  93: \"DOCUMENTS\",\n  94: \"ACTIVE.CELL\",\n  95: \"SELECTION\",\n  96: \"RESULT\",\n  97: \"ATAN2\",\n  98: \"ASIN\",\n  99: \"ACOS\",\n  100: \"CHOOSE\",\n  101: \"HLOOKUP\",\n  102: \"VLOOKUP\",\n  103: \"LINKS\",\n  104: \"INPUT\",\n  105: \"ISREF\",\n  106: \"GET.FORMULA\",\n  107: \"GET.NAME\",\n  108: \"SET.VALUE\",\n  109: \"LOG\",\n  110: \"EXEC\",\n  111: \"CHAR\",\n  112: \"LOWER\",\n  113: \"UPPER\",\n  114: \"PROPER\",\n  115: \"LEFT\",\n  116: \"RIGHT\",\n  117: \"EXACT\",\n  118: \"TRIM\",\n  119: \"REPLACE\",\n  120: \"SUBSTITUTE\",\n  121: \"CODE\",\n  122: \"NAMES\",\n  123: \"DIRECTORY\",\n  124: \"FIND\",\n  125: \"CELL\",\n  126: \"ISERR\",\n  127: \"ISTEXT\",\n  128: \"ISNUMBER\",\n  129: \"ISBLANK\",\n  130: \"T\",\n  131: \"N\",\n  132: \"FOPEN\",\n  133: \"FCLOSE\",\n  134: \"FSIZE\",\n  135: \"FREADLN\",\n  136: \"FREAD\",\n  137: \"FWRITELN\",\n  138: \"FWRITE\",\n  139: \"FPOS\",\n  140: \"DATEVALUE\",\n  141: \"TIMEVALUE\",\n  142: \"SLN\",\n  143: \"SYD\",\n  144: \"DDB\",\n  145: \"GET.DEF\",\n  146: \"REFTEXT\",\n  147: \"TEXTREF\",\n  148: \"INDIRECT\",\n  149: \"REGISTER\",\n  150: \"CALL\",\n  151: \"ADD.BAR\",\n  152: \"ADD.MENU\",\n  153: \"ADD.COMMAND\",\n  154: \"ENABLE.COMMAND\",\n  155: \"CHECK.COMMAND\",\n  156: \"RENAME.COMMAND\",\n  157: \"SHOW.BAR\",\n  158: \"DELETE.MENU\",\n  159: \"DELETE.COMMAND\",\n  160: \"GET.CHART.ITEM\",\n  161: \"DIALOG.BOX\",\n  162: \"CLEAN\",\n  163: \"MDETERM\",\n  164: \"MINVERSE\",\n  165: \"MMULT\",\n  166: \"FILES\",\n  167: \"IPMT\",\n  168: \"PPMT\",\n  169: \"COUNTA\",\n  170: \"CANCEL.KEY\",\n  171: \"FOR\",\n  172: \"WHILE\",\n  173: \"BREAK\",\n  174: \"NEXT\",\n  175: \"INITIATE\",\n  176: \"REQUEST\",\n  177: \"POKE\",\n  178: \"EXECUTE\",\n  179: \"TERMINATE\",\n  180: \"RESTART\",\n  181: \"HELP\",\n  182: \"GET.BAR\",\n  183: \"PRODUCT\",\n  184: \"FACT\",\n  185: \"GET.CELL\",\n  186: \"GET.WORKSPACE\",\n  187: \"GET.WINDOW\",\n  188: \"GET.DOCUMENT\",\n  189: \"DPRODUCT\",\n  190: \"ISNONTEXT\",\n  191: \"GET.NOTE\",\n  192: \"NOTE\",\n  193: \"STDEVP\",\n  194: \"VARP\",\n  195: \"DSTDEVP\",\n  196: \"DVARP\",\n  197: \"TRUNC\",\n  198: \"ISLOGICAL\",\n  199: \"DCOUNTA\",\n  200: \"DELETE.BAR\",\n  201: \"UNREGISTER\",\n  204: \"USDOLLAR\",\n  205: \"FINDB\",\n  206: \"SEARCHB\",\n  207: \"REPLACEB\",\n  208: \"LEFTB\",\n  209: \"RIGHTB\",\n  210: \"MIDB\",\n  211: \"LENB\",\n  212: \"ROUNDUP\",\n  213: \"ROUNDDOWN\",\n  214: \"ASC\",\n  215: \"DBCS\",\n  216: \"RANK\",\n  219: \"ADDRESS\",\n  220: \"DAYS360\",\n  221: \"TODAY\",\n  222: \"VDB\",\n  223: \"ELSE\",\n  224: \"ELSE.IF\",\n  225: \"END.IF\",\n  226: \"FOR.CELL\",\n  227: \"MEDIAN\",\n  228: \"SUMPRODUCT\",\n  229: \"SINH\",\n  230: \"COSH\",\n  231: \"TANH\",\n  232: \"ASINH\",\n  233: \"ACOSH\",\n  234: \"ATANH\",\n  235: \"DGET\",\n  236: \"CREATE.OBJECT\",\n  237: \"VOLATILE\",\n  238: \"LAST.ERROR\",\n  239: \"CUSTOM.UNDO\",\n  240: \"CUSTOM.REPEAT\",\n  241: \"FORMULA.CONVERT\",\n  242: \"GET.LINK.INFO\",\n  243: \"TEXT.BOX\",\n  244: \"INFO\",\n  245: \"GROUP\",\n  246: \"GET.OBJECT\",\n  247: \"DB\",\n  248: \"PAUSE\",\n  251: \"RESUME\",\n  252: \"FREQUENCY\",\n  253: \"ADD.TOOLBAR\",\n  254: \"DELETE.TOOLBAR\",\n  255: \"User\",\n  256: \"RESET.TOOLBAR\",\n  257: \"EVALUATE\",\n  258: \"GET.TOOLBAR\",\n  259: \"GET.TOOL\",\n  260: \"SPELLING.CHECK\",\n  261: \"ERROR.TYPE\",\n  262: \"APP.TITLE\",\n  263: \"WINDOW.TITLE\",\n  264: \"SAVE.TOOLBAR\",\n  265: \"ENABLE.TOOL\",\n  266: \"PRESS.TOOL\",\n  267: \"REGISTER.ID\",\n  268: \"GET.WORKBOOK\",\n  269: \"AVEDEV\",\n  270: \"BETADIST\",\n  271: \"GAMMALN\",\n  272: \"BETAINV\",\n  273: \"BINOMDIST\",\n  274: \"CHIDIST\",\n  275: \"CHIINV\",\n  276: \"COMBIN\",\n  277: \"CONFIDENCE\",\n  278: \"CRITBINOM\",\n  279: \"EVEN\",\n  280: \"EXPONDIST\",\n  281: \"FDIST\",\n  282: \"FINV\",\n  283: \"FISHER\",\n  284: \"FISHERINV\",\n  285: \"FLOOR\",\n  286: \"GAMMADIST\",\n  287: \"GAMMAINV\",\n  288: \"CEILING\",\n  289: \"HYPGEOMDIST\",\n  290: \"LOGNORMDIST\",\n  291: \"LOGINV\",\n  292: \"NEGBINOMDIST\",\n  293: \"NORMDIST\",\n  294: \"NORMSDIST\",\n  295: \"NORMINV\",\n  296: \"NORMSINV\",\n  297: \"STANDARDIZE\",\n  298: \"ODD\",\n  299: \"PERMUT\",\n  300: \"POISSON\",\n  301: \"TDIST\",\n  302: \"WEIBULL\",\n  303: \"SUMXMY2\",\n  304: \"SUMX2MY2\",\n  305: \"SUMX2PY2\",\n  306: \"CHITEST\",\n  307: \"CORREL\",\n  308: \"COVAR\",\n  309: \"FORECAST\",\n  310: \"FTEST\",\n  311: \"INTERCEPT\",\n  312: \"PEARSON\",\n  313: \"RSQ\",\n  314: \"STEYX\",\n  315: \"SLOPE\",\n  316: \"TTEST\",\n  317: \"PROB\",\n  318: \"DEVSQ\",\n  319: \"GEOMEAN\",\n  320: \"HARMEAN\",\n  321: \"SUMSQ\",\n  322: \"KURT\",\n  323: \"SKEW\",\n  324: \"ZTEST\",\n  325: \"LARGE\",\n  326: \"SMALL\",\n  327: \"QUARTILE\",\n  328: \"PERCENTILE\",\n  329: \"PERCENTRANK\",\n  330: \"MODE\",\n  331: \"TRIMMEAN\",\n  332: \"TINV\",\n  334: \"MOVIE.COMMAND\",\n  335: \"GET.MOVIE\",\n  336: \"CONCATENATE\",\n  337: \"POWER\",\n  338: \"PIVOT.ADD.DATA\",\n  339: \"GET.PIVOT.TABLE\",\n  340: \"GET.PIVOT.FIELD\",\n  341: \"GET.PIVOT.ITEM\",\n  342: \"RADIANS\",\n  343: \"DEGREES\",\n  344: \"SUBTOTAL\",\n  345: \"SUMIF\",\n  346: \"COUNTIF\",\n  347: \"COUNTBLANK\",\n  348: \"SCENARIO.GET\",\n  349: \"OPTIONS.LISTS.GET\",\n  350: \"ISPMT\",\n  351: \"DATEDIF\",\n  352: \"DATESTRING\",\n  353: \"NUMBERSTRING\",\n  354: \"ROMAN\",\n  355: \"OPEN.DIALOG\",\n  356: \"SAVE.DIALOG\",\n  357: \"VIEW.GET\",\n  358: \"GETPIVOTDATA\",\n  359: \"HYPERLINK\",\n  360: \"PHONETIC\",\n  361: \"AVERAGEA\",\n  362: \"MAXA\",\n  363: \"MINA\",\n  364: \"STDEVPA\",\n  365: \"VARPA\",\n  366: \"STDEVA\",\n  367: \"VARA\",\n  368: \"BAHTTEXT\",\n  369: \"THAIDAYOFWEEK\",\n  370: \"THAIDIGIT\",\n  371: \"THAIMONTHOFYEAR\",\n  372: \"THAINUMSOUND\",\n  373: \"THAINUMSTRING\",\n  374: \"THAISTRINGLENGTH\",\n  375: \"ISTHAIDIGIT\",\n  376: \"ROUNDBAHTDOWN\",\n  377: \"ROUNDBAHTUP\",\n  378: \"THAIYEAR\",\n  379: \"RTD\",\n  380: \"CUBEVALUE\",\n  381: \"CUBEMEMBER\",\n  382: \"CUBEMEMBERPROPERTY\",\n  383: \"CUBERANKEDMEMBER\",\n  384: \"HEX2BIN\",\n  385: \"HEX2DEC\",\n  386: \"HEX2OCT\",\n  387: \"DEC2BIN\",\n  388: \"DEC2HEX\",\n  389: \"DEC2OCT\",\n  390: \"OCT2BIN\",\n  391: \"OCT2HEX\",\n  392: \"OCT2DEC\",\n  393: \"BIN2DEC\",\n  394: \"BIN2OCT\",\n  395: \"BIN2HEX\",\n  396: \"IMSUB\",\n  397: \"IMDIV\",\n  398: \"IMPOWER\",\n  399: \"IMABS\",\n  400: \"IMSQRT\",\n  401: \"IMLN\",\n  402: \"IMLOG2\",\n  403: \"IMLOG10\",\n  404: \"IMSIN\",\n  405: \"IMCOS\",\n  406: \"IMEXP\",\n  407: \"IMARGUMENT\",\n  408: \"IMCONJUGATE\",\n  409: \"IMAGINARY\",\n  410: \"IMREAL\",\n  411: \"COMPLEX\",\n  412: \"IMSUM\",\n  413: \"IMPRODUCT\",\n  414: \"SERIESSUM\",\n  415: \"FACTDOUBLE\",\n  416: \"SQRTPI\",\n  417: \"QUOTIENT\",\n  418: \"DELTA\",\n  419: \"GESTEP\",\n  420: \"ISEVEN\",\n  421: \"ISODD\",\n  422: \"MROUND\",\n  423: \"ERF\",\n  424: \"ERFC\",\n  425: \"BESSELJ\",\n  426: \"BESSELK\",\n  427: \"BESSELY\",\n  428: \"BESSELI\",\n  429: \"XIRR\",\n  430: \"XNPV\",\n  431: \"PRICEMAT\",\n  432: \"YIELDMAT\",\n  433: \"INTRATE\",\n  434: \"RECEIVED\",\n  435: \"DISC\",\n  436: \"PRICEDISC\",\n  437: \"YIELDDISC\",\n  438: \"TBILLEQ\",\n  439: \"TBILLPRICE\",\n  440: \"TBILLYIELD\",\n  441: \"PRICE\",\n  442: \"YIELD\",\n  443: \"DOLLARDE\",\n  444: \"DOLLARFR\",\n  445: \"NOMINAL\",\n  446: \"EFFECT\",\n  447: \"CUMPRINC\",\n  448: \"CUMIPMT\",\n  449: \"EDATE\",\n  450: \"EOMONTH\",\n  451: \"YEARFRAC\",\n  452: \"COUPDAYBS\",\n  453: \"COUPDAYS\",\n  454: \"COUPDAYSNC\",\n  455: \"COUPNCD\",\n  456: \"COUPNUM\",\n  457: \"COUPPCD\",\n  458: \"DURATION\",\n  459: \"MDURATION\",\n  460: \"ODDLPRICE\",\n  461: \"ODDLYIELD\",\n  462: \"ODDFPRICE\",\n  463: \"ODDFYIELD\",\n  464: \"RANDBETWEEN\",\n  465: \"WEEKNUM\",\n  466: \"AMORDEGRC\",\n  467: \"AMORLINC\",\n  468: \"CONVERT\",\n  724: \"SHEETJS\",\n  469: \"ACCRINT\",\n  470: \"ACCRINTM\",\n  471: \"WORKDAY\",\n  472: \"NETWORKDAYS\",\n  473: \"GCD\",\n  474: \"MULTINOMIAL\",\n  475: \"LCM\",\n  476: \"FVSCHEDULE\",\n  477: \"CUBEKPIMEMBER\",\n  478: \"CUBESET\",\n  479: \"CUBESETCOUNT\",\n  480: \"IFERROR\",\n  481: \"COUNTIFS\",\n  482: \"SUMIFS\",\n  483: \"AVERAGEIF\",\n  484: \"AVERAGEIFS\"\n};\nvar FtabArgc = {\n  2: 1,\n  3: 1,\n  10: 0,\n  15: 1,\n  16: 1,\n  17: 1,\n  18: 1,\n  19: 0,\n  20: 1,\n  21: 1,\n  22: 1,\n  23: 1,\n  24: 1,\n  25: 1,\n  26: 1,\n  27: 2,\n  30: 2,\n  31: 3,\n  32: 1,\n  33: 1,\n  34: 0,\n  35: 0,\n  38: 1,\n  39: 2,\n  40: 3,\n  41: 3,\n  42: 3,\n  43: 3,\n  44: 3,\n  45: 3,\n  47: 3,\n  48: 2,\n  53: 1,\n  61: 3,\n  63: 0,\n  65: 3,\n  66: 3,\n  67: 1,\n  68: 1,\n  69: 1,\n  70: 1,\n  71: 1,\n  72: 1,\n  73: 1,\n  74: 0,\n  75: 1,\n  76: 1,\n  77: 1,\n  79: 2,\n  80: 2,\n  83: 1,\n  85: 0,\n  86: 1,\n  89: 0,\n  90: 1,\n  94: 0,\n  95: 0,\n  97: 2,\n  98: 1,\n  99: 1,\n  101: 3,\n  102: 3,\n  105: 1,\n  106: 1,\n  108: 2,\n  111: 1,\n  112: 1,\n  113: 1,\n  114: 1,\n  117: 2,\n  118: 1,\n  119: 4,\n  121: 1,\n  126: 1,\n  127: 1,\n  128: 1,\n  129: 1,\n  130: 1,\n  131: 1,\n  133: 1,\n  134: 1,\n  135: 1,\n  136: 2,\n  137: 2,\n  138: 2,\n  140: 1,\n  141: 1,\n  142: 3,\n  143: 4,\n  144: 4,\n  161: 1,\n  162: 1,\n  163: 1,\n  164: 1,\n  165: 2,\n  172: 1,\n  175: 2,\n  176: 2,\n  177: 3,\n  178: 2,\n  179: 1,\n  184: 1,\n  186: 1,\n  189: 3,\n  190: 1,\n  195: 3,\n  196: 3,\n  197: 1,\n  198: 1,\n  199: 3,\n  201: 1,\n  207: 4,\n  210: 3,\n  211: 1,\n  212: 2,\n  213: 2,\n  214: 1,\n  215: 1,\n  225: 0,\n  229: 1,\n  230: 1,\n  231: 1,\n  232: 1,\n  233: 1,\n  234: 1,\n  235: 3,\n  244: 1,\n  247: 4,\n  252: 2,\n  257: 1,\n  261: 1,\n  271: 1,\n  273: 4,\n  274: 2,\n  275: 2,\n  276: 2,\n  277: 3,\n  278: 3,\n  279: 1,\n  280: 3,\n  281: 3,\n  282: 3,\n  283: 1,\n  284: 1,\n  285: 2,\n  286: 4,\n  287: 3,\n  288: 2,\n  289: 4,\n  290: 3,\n  291: 3,\n  292: 3,\n  293: 4,\n  294: 1,\n  295: 3,\n  296: 1,\n  297: 3,\n  298: 1,\n  299: 2,\n  300: 3,\n  301: 3,\n  302: 4,\n  303: 2,\n  304: 2,\n  305: 2,\n  306: 2,\n  307: 2,\n  308: 2,\n  309: 3,\n  310: 2,\n  311: 2,\n  312: 2,\n  313: 2,\n  314: 2,\n  315: 2,\n  316: 4,\n  325: 2,\n  326: 2,\n  327: 2,\n  328: 2,\n  331: 2,\n  332: 2,\n  337: 2,\n  342: 1,\n  343: 1,\n  346: 2,\n  347: 1,\n  350: 4,\n  351: 3,\n  352: 1,\n  353: 2,\n  360: 1,\n  368: 1,\n  369: 1,\n  370: 1,\n  371: 1,\n  372: 1,\n  373: 1,\n  374: 1,\n  375: 1,\n  376: 1,\n  377: 1,\n  378: 1,\n  382: 3,\n  385: 1,\n  392: 1,\n  393: 1,\n  396: 2,\n  397: 2,\n  398: 2,\n  399: 1,\n  400: 1,\n  401: 1,\n  402: 1,\n  403: 1,\n  404: 1,\n  405: 1,\n  406: 1,\n  407: 1,\n  408: 1,\n  409: 1,\n  410: 1,\n  414: 4,\n  415: 1,\n  416: 1,\n  417: 2,\n  420: 1,\n  421: 1,\n  422: 2,\n  424: 1,\n  425: 2,\n  426: 2,\n  427: 2,\n  428: 2,\n  430: 3,\n  438: 3,\n  439: 3,\n  440: 3,\n  443: 2,\n  444: 2,\n  445: 2,\n  446: 2,\n  447: 6,\n  448: 6,\n  449: 2,\n  450: 2,\n  464: 2,\n  468: 3,\n  476: 2,\n  479: 1,\n  480: 2,\n  65535: 0\n};\n/* Part 3 TODO: actually parse formulae */\nfunction ods_to_csf_formula(f/*:string*/)/*:string*/ {\n\tif(f.slice(0,3) == \"of:\") f = f.slice(3);\n\t/* 5.2 Basic Expressions */\n\tif(f.charCodeAt(0) == 61) {\n\t\tf = f.slice(1);\n\t\tif(f.charCodeAt(0) == 61) f = f.slice(1);\n\t}\n\tf = f.replace(/COM\\.MICROSOFT\\./g, \"\");\n\t/* Part 3 Section 5.8 References */\n\tf = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function($$, $1) { return $1.replace(/\\./g,\"\"); });\n\t/* TODO: something other than this */\n\tf = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\n\treturn f.replace(/[;~]/g,\",\").replace(/\\|/g,\";\");\n}\n\nfunction csf_to_ods_formula(f/*:string*/)/*:string*/ {\n\tvar o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g,\":\");\n\t/* TODO: something other than this */\n\treturn o.replace(/;/g, \"|\").replace(/,/g,\";\");\n}\n\nfunction ods_to_csf_3D(r/*:string*/)/*:[string, string]*/ {\n\tvar a = r.split(\":\");\n\tvar s = a[0].split(\".\")[0];\n\treturn [s, a[0].split(\".\")[1] + (a.length > 1 ? (\":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0])) : \"\")];\n}\n\nfunction csf_to_ods_3D(r/*:string*/)/*:string*/ {\n\treturn r.replace(/\\./,\"!\");\n}\n\nvar strs = {}; // shared strings\nvar _ssfopts = {}; // spreadsheet formatting options\n\n\n/*global Map */\nvar browser_has_Map = typeof Map !== 'undefined';\n\nfunction get_sst_id(sst/*:SST*/, str/*:string*/, rev)/*:number*/ {\n\tvar i = 0, len = sst.length;\n\tif(rev) {\n\t\tif(browser_has_Map ? rev.has(str) : Object.prototype.hasOwnProperty.call(rev, str)) {\n\t\t\tvar revarr = browser_has_Map ? rev.get(str) : rev[str];\n\t\t\tfor(; i < revarr.length; ++i) {\n\t\t\t\tif(sst[revarr[i]].t === str) { sst.Count ++; return revarr[i]; }\n\t\t\t}\n\t\t}\n\t} else for(; i < len; ++i) {\n\t\tif(sst[i].t === str) { sst.Count ++; return i; }\n\t}\n\tsst[len] = ({t:str}/*:any*/); sst.Count ++; sst.Unique ++;\n\tif(rev) {\n\t\tif(browser_has_Map) {\n\t\t\tif(!rev.has(str)) rev.set(str, []);\n\t\t\trev.get(str).push(len);\n\t\t} else {\n\t\t\tif(!Object.prototype.hasOwnProperty.call(rev, str)) rev[str] = [];\n\t\t\trev[str].push(len);\n\t\t}\n\t}\n\treturn len;\n}\n\nfunction col_obj_w(C/*:number*/, col) {\n\tvar p = ({min:C+1,max:C+1}/*:any*/);\n\t/* wch (chars), wpx (pixels) */\n\tvar wch = -1;\n\tif(col.MDW) MDW = col.MDW;\n\tif(col.width != null) p.customWidth = 1;\n\telse if(col.wpx != null) wch = px2char(col.wpx);\n\telse if(col.wch != null) wch = col.wch;\n\tif(wch > -1) { p.width = char2width(wch); p.customWidth = 1; }\n\telse if(col.width != null) p.width = col.width;\n\tif(col.hidden) p.hidden = true;\n\tif(col.level != null) { p.outlineLevel = p.level = col.level; }\n\treturn p;\n}\n\nfunction default_margins(margins/*:Margins*/, mode/*:?string*/) {\n\tif(!margins) return;\n\tvar defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\n\tif(mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\n\tif(margins.left   == null) margins.left   = defs[0];\n\tif(margins.right  == null) margins.right  = defs[1];\n\tif(margins.top    == null) margins.top    = defs[2];\n\tif(margins.bottom == null) margins.bottom = defs[3];\n\tif(margins.header == null) margins.header = defs[4];\n\tif(margins.footer == null) margins.footer = defs[5];\n}\n\nfunction get_cell_style(styles/*:Array<any>*/, cell/*:Cell*/, opts) {\n\tvar z = opts.revssf[cell.z != null ? cell.z : \"General\"];\n\tvar i = 0x3c, len = styles.length;\n\tif(z == null && opts.ssf) {\n\t\tfor(; i < 0x188; ++i) if(opts.ssf[i] == null) {\n\t\t\tSSF_load(cell.z, i);\n\t\t\t// $FlowIgnore\n\t\t\topts.ssf[i] = cell.z;\n\t\t\topts.revssf[cell.z] = z = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i = 0; i != len; ++i) if(styles[i].numFmtId === z) return i;\n\tstyles[len] = {\n\t\tnumFmtId:z,\n\t\tfontId:0,\n\t\tfillId:0,\n\t\tborderId:0,\n\t\txfId:0,\n\t\tapplyNumberFormat:1\n\t};\n\treturn len;\n}\n\nfunction safe_format(p/*:Cell*/, fmtid/*:number*/, fillid/*:?number*/, opts, themes, styles) {\n\ttry {\n\t\tif(opts.cellNF) p.z = table_fmt[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(p.t === 'z' && !opts.cellStyles) return;\n\tif(p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);\n\tif((!opts || opts.cellText !== false) && p.t !== 'z') try {\n\t\tif(table_fmt[fmtid] == null) SSF_load(SSFImplicit[fmtid] || \"General\", fmtid);\n\t\tif(p.t === 'e') p.w = p.w || BErr[p.v];\n\t\telse if(fmtid === 0) {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = p.v.toString(10);\n\t\t\t\telse p.w = SSF_general_num(p.v);\n\t\t\t}\n\t\t\telse if(p.t === 'd') {\n\t\t\t\tvar dd = datenum(p.v);\n\t\t\t\tif((dd|0) === dd) p.w = dd.toString(10);\n\t\t\t\telse p.w = SSF_general_num(dd);\n\t\t\t}\n\t\t\telse if(p.v === undefined) return \"\";\n\t\t\telse p.w = SSF_general(p.v,_ssfopts);\n\t\t}\n\t\telse if(p.t === 'd') p.w = SSF_format(fmtid,datenum(p.v),_ssfopts);\n\t\telse p.w = SSF_format(fmtid,p.v,_ssfopts);\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts.cellStyles) return;\n\tif(fillid != null) try {\n\t\tp.s = styles.Fills[fillid];\n\t\tif (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\n\t\t\tp.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\n\t\t}\n\t\tif (p.s.bgColor && p.s.bgColor.theme) {\n\t\t\tp.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\n\t\t}\n\t} catch(e) { if(opts.WTF && styles.Fills) throw e; }\n}\n\nfunction check_ws(ws/*:Worksheet*/, sname/*:string*/, i/*:number*/) {\n\tif(ws && ws['!ref']) {\n\t\tvar range = safe_decode_range(ws['!ref']);\n\t\tif(range.e.c < range.s.c || range.e.r < range.s.r) throw new Error(\"Bad range (\" + i + \"): \" + ws['!ref']);\n\t}\n}\nfunction parse_ws_xml_dim(ws/*:Worksheet*/, s/*:string*/) {\n\tvar d = safe_decode_range(s);\n\tif(d.s.r<=d.e.r && d.s.c<=d.e.c && d.s.r>=0 && d.s.c>=0) ws[\"!ref\"] = encode_range(d);\n}\nvar mergecregex = /<(?:\\w:)?mergeCell ref=\"[A-Z0-9:]+\"\\s*[\\/]?>/g;\nvar sheetdataregex = /<(?:\\w+:)?sheetData[^>]*>([\\s\\S]*)<\\/(?:\\w+:)?sheetData>/;\nvar hlinkregex = /<(?:\\w:)?hyperlink [^>]*>/mg;\nvar dimregex = /\"(\\w*:\\w*)\"/;\nvar colregex = /<(?:\\w:)?col\\b[^>]*[\\/]?>/g;\nvar afregex = /<(?:\\w:)?autoFilter[^>]*([\\/]|>([\\s\\S]*)<\\/(?:\\w:)?autoFilter)>/g;\nvar marginregex= /<(?:\\w:)?pageMargins[^>]*\\/>/g;\nvar sheetprregex = /<(?:\\w:)?sheetPr\\b(?:[^>a-z][^>]*)?\\/>/;\nvar sheetprregex2= /<(?:\\w:)?sheetPr[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetPr)>/;\nvar svsregex = /<(?:\\w:)?sheetViews[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetViews)>/;\n\n/* 18.3 Worksheets */\nfunction parse_ws_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\n\t/* 18.3.1.99 worksheet CT_Worksheet */\n\tvar s = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\tvar refguess/*:Range*/ = ({s: {r:2000000, c:2000000}, e: {r:0, c:0} }/*:any*/);\n\n\tvar data1 = \"\", data2 = \"\";\n\tvar mtch/*:?any*/ = data.match(sheetdataregex);\n\tif(mtch) {\n\t\tdata1 = data.slice(0, mtch.index);\n\t\tdata2 = data.slice(mtch.index + mtch[0].length);\n\t} else data1 = data2 = data;\n\n\t/* 18.3.1.82 sheetPr CT_SheetPr */\n\tvar sheetPr = data1.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\telse if((sheetPr = data1.match(sheetprregex2))) parse_ws_xml_sheetpr2(sheetPr[0], sheetPr[1]||\"\", s, wb, idx, styles, themes);\n\n\t/* 18.3.1.35 dimension CT_SheetDimension */\n\tvar ridx = (data1.match(/<(?:\\w*:)?dimension/)||{index:-1}).index;\n\tif(ridx > 0) {\n\t\tvar ref = data1.slice(ridx,ridx+50).match(dimregex);\n\t\tif(ref) parse_ws_xml_dim(s, ref[1]);\n\t}\n\n\t/* 18.3.1.88 sheetViews CT_SheetViews */\n\tvar svs = data1.match(svsregex);\n\tif(svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\n\n\t/* 18.3.1.17 cols CT_Cols */\n\tvar columns/*:Array<ColInfo>*/ = [];\n\tif(opts.cellStyles) {\n\t\t/* 18.3.1.13 col CT_Col */\n\t\tvar cols = data1.match(colregex);\n\t\tif(cols) parse_ws_xml_cols(columns, cols);\n\t}\n\n\t/* 18.3.1.80 sheetData CT_SheetData ? */\n\tif(mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles);\n\n\t/* 18.3.1.2  autoFilter CT_AutoFilter */\n\tvar afilter = data2.match(afregex);\n\tif(afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\n\n\t/* 18.3.1.55 mergeCells CT_MergeCells */\n\tvar merges/*:Array<Range>*/ = [];\n\tvar _merge = data2.match(mergecregex);\n\tif(_merge) for(ridx = 0; ridx != _merge.length; ++ridx)\n\t\tmerges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\")+1));\n\n\t/* 18.3.1.48 hyperlinks CT_Hyperlinks */\n\tvar hlink = data2.match(hlinkregex);\n\tif(hlink) parse_ws_xml_hlinks(s, hlink, rels);\n\n\t/* 18.3.1.62 pageMargins CT_PageMargins */\n\tvar margins = data2.match(marginregex);\n\tif(margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\n\n\tif(!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\n\tif(opts.sheetRows > 0 && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(columns.length > 0) s[\"!cols\"] = columns;\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\treturn s;\n}\n\nfunction write_ws_xml_merges(merges/*:Array<Range>*/)/*:string*/ {\n\tif(merges.length === 0) return \"\";\n\tvar o = '<mergeCells count=\"' + merges.length + '\">';\n\tfor(var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\n\treturn o + '</mergeCells>';\n}\n\n/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\nfunction parse_ws_xml_sheetpr(sheetPr/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {\n\tvar data = parsexmltag(sheetPr);\n\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\tif(data.codeName) wb.Sheets[idx].CodeName = unescapexml(utf8read(data.codeName));\n}\nfunction parse_ws_xml_sheetpr2(sheetPr/*:string*/, body/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {\n\tparse_ws_xml_sheetpr(sheetPr.slice(0, sheetPr.indexOf(\">\")), s, wb, idx);\n}\nfunction write_ws_xml_sheetpr(ws, wb, idx, opts, o) {\n\tvar needed = false;\n\tvar props = {}, payload = null;\n\tif(opts.bookType !== 'xlsx' && wb.vbaraw) {\n\t\tvar cname = wb.SheetNames[idx];\n\t\ttry { if(wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname; } catch(e) {}\n\t\tneeded = true;\n\t\tprops.codeName = utf8write(escapexml(cname));\n\t}\n\n\tif(ws && ws[\"!outline\"]) {\n\t\tvar outlineprops = {summaryBelow:1, summaryRight:1};\n\t\tif(ws[\"!outline\"].above) outlineprops.summaryBelow = 0;\n\t\tif(ws[\"!outline\"].left) outlineprops.summaryRight = 0;\n\t\tpayload = (payload||\"\") + writextag('outlinePr', null, outlineprops);\n\t}\n\n\tif(!needed && !payload) return;\n\to[o.length] = (writextag('sheetPr', payload, props));\n}\n\n/* 18.3.1.85 sheetProtection CT_SheetProtection */\nvar sheetprot_deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\nvar sheetprot_deftrue = [\n\t\"formatColumns\", \"formatRows\", \"formatCells\",\n\t\"insertColumns\", \"insertRows\", \"insertHyperlinks\",\n\t\"deleteColumns\", \"deleteRows\",\n\t\"sort\", \"autoFilter\", \"pivotTables\"\n];\nfunction write_ws_xml_protection(sp)/*:string*/ {\n\t// algorithmName, hashValue, saltValue, spinCount\n\tvar o = ({sheet:1}/*:any*/);\n\tsheetprot_deffalse.forEach(function(n) { if(sp[n] != null && sp[n]) o[n] = \"1\"; });\n\tsheetprot_deftrue.forEach(function(n) { if(sp[n] != null && !sp[n]) o[n] = \"0\"; });\n\t/* TODO: algorithm */\n\tif(sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\n\treturn writextag('sheetProtection', null, o);\n}\n\nfunction parse_ws_xml_hlinks(s, data/*:Array<string>*/, rels) {\n\tvar dense = Array.isArray(s);\n\tfor(var i = 0; i != data.length; ++i) {\n\t\tvar val = parsexmltag(utf8read(data[i]), true);\n\t\tif(!val.ref) return;\n\t\tvar rel = ((rels || {})['!id']||[])[val.id];\n\t\tif(rel) {\n\t\t\tval.Target = rel.Target;\n\t\t\tif(val.location) val.Target += \"#\"+unescapexml(val.location);\n\t\t} else {\n\t\t\tval.Target = \"#\" + unescapexml(val.location);\n\t\t\trel = {Target: val.Target, TargetMode: 'Internal'};\n\t\t}\n\t\tval.Rel = rel;\n\t\tif(val.tooltip) { val.Tooltip = val.tooltip; delete val.tooltip; }\n\t\tvar rng = safe_decode_range(val.ref);\n\t\tfor(var R=rng.s.r;R<=rng.e.r;++R) for(var C=rng.s.c;C<=rng.e.c;++C) {\n\t\t\tvar addr = encode_cell({c:C,r:R});\n\t\t\tif(dense) {\n\t\t\t\tif(!s[R]) s[R] = [];\n\t\t\t\tif(!s[R][C]) s[R][C] = {t:\"z\",v:undefined};\n\t\t\t\ts[R][C].l = val;\n\t\t\t} else {\n\t\t\t\tif(!s[addr]) s[addr] = {t:\"z\",v:undefined};\n\t\t\t\ts[addr].l = val;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction parse_ws_xml_margins(margin) {\n\tvar o = {};\n\t[\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function(k) {\n\t\tif(margin[k]) o[k] = parseFloat(margin[k]);\n\t});\n\treturn o;\n}\nfunction write_ws_xml_margins(margin)/*:string*/ {\n\tdefault_margins(margin);\n\treturn writextag('pageMargins', null, margin);\n}\n\nfunction parse_ws_xml_cols(columns, cols) {\n\tvar seencol = false;\n\tfor(var coli = 0; coli != cols.length; ++coli) {\n\t\tvar coll = parsexmltag(cols[coli], true);\n\t\tif(coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\n\t\tvar colm=parseInt(coll.min, 10)-1, colM=parseInt(coll.max,10)-1;\n\t\tif(coll.outlineLevel) coll.level = (+coll.outlineLevel || 0);\n\t\tdelete coll.min; delete coll.max; coll.width = +coll.width;\n\t\tif(!seencol && coll.width) { seencol = true; find_mdw_colw(coll.width); }\n\t\tprocess_col(coll);\n\t\twhile(colm <= colM) columns[colm++] = dup(coll);\n\t}\n}\nfunction write_ws_xml_cols(ws, cols)/*:string*/ {\n\tvar o = [\"<cols>\"], col;\n\tfor(var i = 0; i != cols.length; ++i) {\n\t\tif(!(col = cols[i])) continue;\n\t\to[o.length] = (writextag('col', null, col_obj_w(i, col)));\n\t}\n\to[o.length] = \"</cols>\";\n\treturn o.join(\"\");\n}\n\nfunction parse_ws_xml_autofilter(data/*:string*/) {\n\tvar o = { ref: (data.match(/ref=\"([^\"]*)\"/)||[])[1]};\n\treturn o;\n}\nfunction write_ws_xml_autofilter(data, ws, wb, idx)/*:string*/ {\n\tvar ref = typeof data.ref == \"string\" ? data.ref : encode_range(data.ref);\n\tif(!wb.Workbook) wb.Workbook = ({Sheets:[]}/*:any*/);\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names/*: Array<any> */ = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = \"'\" + wb.SheetNames[idx] + \"'!\" + ref; break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref  });\n\treturn writextag(\"autoFilter\", null, {ref:ref});\n}\n\n/* 18.3.1.88 sheetViews CT_SheetViews */\n/* 18.3.1.87 sheetView CT_SheetView */\nvar sviewregex = /<(?:\\w:)?sheetView(?:[^>a-z][^>]*)?\\/?>/;\nfunction parse_ws_xml_sheetviews(data, wb/*:WBWBProps*/) {\n\tif(!wb.Views) wb.Views = [{}];\n\t(data.match(sviewregex)||[]).forEach(function(r/*:string*/, i/*:number*/) {\n\t\tvar tag = parsexmltag(r);\n\t\t// $FlowIgnore\n\t\tif(!wb.Views[i]) wb.Views[i] = {};\n\t\t// $FlowIgnore\n\t\tif(+tag.zoomScale) wb.Views[i].zoom = +tag.zoomScale;\n\t\t// $FlowIgnore\n\t\tif(parsexmlbool(tag.rightToLeft)) wb.Views[i].RTL = true;\n\t});\n}\nfunction write_ws_xml_sheetviews(ws, opts, idx, wb)/*:string*/ {\n\tvar sview = ({workbookViewId:\"0\"}/*:any*/);\n\t// $FlowIgnore\n\tif((((wb||{}).Workbook||{}).Views||[])[0]) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\n\treturn writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\n}\n\nfunction write_ws_xml_cell(cell/*:Cell*/, ref, ws, opts/*::, idx, wb*/)/*:string*/ {\n\tif(cell.c) ws['!comments'].push([ref, cell.c]);\n\tif(cell.v === undefined && typeof cell.f !== \"string\" || cell.t === 'z' && !cell.f) return \"\";\n\tvar vv = \"\";\n\tvar oldt = cell.t, oldv = cell.v;\n\tif(cell.t !== \"z\") switch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'n': vv = ''+cell.v; break;\n\t\tcase 'e': vv = BErr[cell.v]; break;\n\t\tcase 'd':\n\t\t\tif(opts && opts.cellDates) vv = parseDate(cell.v, -1).toISOString();\n\t\t\telse {\n\t\t\t\tcell = dup(cell);\n\t\t\t\tcell.t = 'n';\n\t\t\t\tvv = ''+(cell.v = datenum(parseDate(cell.v)));\n\t\t\t}\n\t\t\tif(typeof cell.z === 'undefined') cell.z = table_fmt[14];\n\t\t\tbreak;\n\t\tdefault: vv = cell.v; break;\n\t}\n\tvar v = writetag('v', escapexml(vv)), o = ({r:ref}/*:any*/);\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tif(os !== 0) o.s = os;\n\tswitch(cell.t) {\n\t\tcase 'n': break;\n\t\tcase 'd': o.t = \"d\"; break;\n\t\tcase 'b': o.t = \"b\"; break;\n\t\tcase 'e': o.t = \"e\"; break;\n\t\tcase 'z': break;\n\t\tdefault: if(cell.v == null) { delete cell.t; break; }\n\t\t\tif(cell.v.length > 32767) throw new Error(\"Text length must not exceed 32767 characters\");\n\t\t\tif(opts && opts.bookSST) {\n\t\t\t\tv = writetag('v', ''+get_sst_id(opts.Strings, cell.v, opts.revStrings));\n\t\t\t\to.t = \"s\"; break;\n\t\t\t}\n\t\t\to.t = \"str\"; break;\n\t}\n\tif(cell.t != oldt) { cell.t = oldt; cell.v = oldv; }\n\tif(typeof cell.f == \"string\" && cell.f) {\n\t\tvar ff = cell.F && cell.F.slice(0, ref.length) == ref ? {t:\"array\", ref:cell.F} : null;\n\t\tv = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\n\t}\n\tif(cell.l) ws['!links'].push([ref, cell.l]);\n\tif(cell.D) o.cm = 1;\n\treturn writextag('c', v, o);\n}\n\nvar parse_ws_xml_data = /*#__PURE__*/(function() {\n\tvar cellregex = /<(?:\\w+:)?c[ \\/>]/, rowregex = /<\\/(?:\\w+:)?row>/;\n\tvar rregex = /r=[\"']([^\"']*)[\"']/, isregex = /<(?:\\w+:)?is>([\\S\\s]*?)<\\/(?:\\w+:)?is>/;\n\tvar refregex = /ref=[\"']([^\"']*)[\"']/;\n\tvar match_v = matchtag(\"v\"), match_f = matchtag(\"f\");\n\nreturn function parse_ws_xml_data(sdata/*:string*/, s, opts, guess/*:Range*/, themes, styles) {\n\tvar ri = 0, x = \"\", cells/*:Array<string>*/ = [], cref/*:?Array<string>*/ = [], idx=0, i=0, cc=0, d=\"\", p/*:any*/;\n\tvar tag, tagr = 0, tagc = 0;\n\tvar sstr, ftag;\n\tvar fmtid = 0, fillid = 0;\n\tvar do_format = Array.isArray(styles.CellXf), cf;\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar sharedf = [];\n\tvar dense = Array.isArray(s);\n\tvar rows/*:Array<RowInfo>*/ = [], rowobj = {}, rowrite = false;\n\tvar sheetStubs = !!opts.sheetStubs;\n\tfor(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\n\t\tx = marr[mt].trim();\n\t\tvar xlen = x.length;\n\t\tif(xlen === 0) continue;\n\n\t\t/* 18.3.1.73 row CT_Row */\n\t\tvar rstarti = 0;\n\t\touta: for(ri = 0; ri < xlen; ++ri) switch(/*x.charCodeAt(ri)*/x[ri]) {\n\t\t\tcase \">\" /*62*/:\n\t\t\t\tif(/*x.charCodeAt(ri-1) != 47*/x[ri-1] != \"/\") { ++ri; break outa; }\n\t\t\t\tif(opts && opts.cellStyles) {\n\t\t\t\t\t// TODO: avoid duplication\n\t\t\t\t\ttag = parsexmltag(x.slice(rstarti,ri), true);\n\t\t\t\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\t\t\t\trowobj = {}; rowrite = false;\n\t\t\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\t\t\tif(tag.hidden == \"1\") { rowrite = true; rowobj.hidden = true; }\n\t\t\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"<\" /*60*/: rstarti = ri; break;\n\t\t}\n\t\tif(rstarti >= ri) break;\n\t\ttag = parsexmltag(x.slice(rstarti,ri), true);\n\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\tif(guess.s.r > tagr - 1) guess.s.r = tagr - 1;\n\t\tif(guess.e.r < tagr - 1) guess.e.r = tagr - 1;\n\n\t\tif(opts && opts.cellStyles) {\n\t\t\trowobj = {}; rowrite = false;\n\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\tif(tag.hidden == \"1\") { rowrite = true; rowobj.hidden = true; }\n\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t}\n\n\t\t/* 18.3.1.4 c CT_Cell */\n\t\tcells = x.slice(ri).split(cellregex);\n\t\tfor(var rslice = 0; rslice != cells.length; ++rslice) if(cells[rslice].trim().charAt(0) != \"<\") break;\n\t\tcells = cells.slice(rslice);\n\t\tfor(ri = 0; ri != cells.length; ++ri) {\n\t\t\tx = cells[ri].trim();\n\t\t\tif(x.length === 0) continue;\n\t\t\tcref = x.match(rregex); idx = ri; i=0; cc=0;\n\t\t\tx = \"<c \" + (x.slice(0,1)==\"<\"?\">\":\"\") + x;\n\t\t\tif(cref != null && cref.length === 2) {\n\t\t\t\tidx = 0; d=cref[1];\n\t\t\t\tfor(i=0; i != d.length; ++i) {\n\t\t\t\t\tif((cc=d.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\t\t\t\tidx = 26*idx + cc;\n\t\t\t\t}\n\t\t\t\t--idx;\n\t\t\t\ttagc = idx;\n\t\t\t} else ++tagc;\n\t\t\tfor(i = 0; i != x.length; ++i) if(x.charCodeAt(i) === 62) break; ++i;\n\t\t\ttag = parsexmltag(x.slice(0,i), true);\n\t\t\tif(!tag.r) tag.r = encode_cell({r:tagr-1, c:tagc});\n\t\t\td = x.slice(i);\n\t\t\tp = ({t:\"\"}/*:any*/);\n\n\t\t\tif((cref=d.match(match_v))!= null && /*::cref != null && */cref[1] !== '') p.v=unescapexml(cref[1]);\n\t\t\tif(opts.cellFormula) {\n\t\t\t\tif((cref=d.match(match_f))!= null && /*::cref != null && */cref[1] !== '') {\n\t\t\t\t\t/* TODO: match against XLSXFutureFunctions */\n\t\t\t\t\tp.f=unescapexml(utf8read(cref[1])).replace(/\\r\\n/g, \"\\n\");\n\t\t\t\t\tif(!opts.xlfn) p.f = _xlfn(p.f);\n\t\t\t\t\tif(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"array\"') > -1) {\n\t\t\t\t\t\tp.F = (d.match(refregex)||[])[1];\n\t\t\t\t\t\tif(p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\n\t\t\t\t\t} else if(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n\t\t\t\t\t\t// TODO: parse formula\n\t\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\t\tvar ___f = unescapexml(utf8read(cref[1]));\n\t\t\t\t\t\tif(!opts.xlfn) ___f = _xlfn(___f);\n\t\t\t\t\t\tsharedf[parseInt(ftag.si, 10)] = [ftag, ___f, tag.r];\n\t\t\t\t\t}\n\t\t\t\t} else if((cref=d.match(/<f[^>]*\\/>/))) {\n\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\tif(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2]/*[0].ref*/, tag.r);\n\t\t\t\t}\n\t\t\t\t/* TODO: factor out contains logic */\n\t\t\t\tvar _tag = decode_cell(tag.r);\n\t\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\tif(_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r)\n\t\t\t\t\t\tif(_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\tp.F = arrayf[i][1];\n\t\t\t}\n\n\t\t\tif(tag.t == null && p.v === undefined) {\n\t\t\t\tif(p.f || p.F) {\n\t\t\t\t\tp.v = 0; p.t = \"n\";\n\t\t\t\t} else if(!sheetStubs) continue;\n\t\t\t\telse p.t = \"z\";\n\t\t\t}\n\t\t\telse p.t = tag.t || \"n\";\n\t\t\tif(guess.s.c > tagc) guess.s.c = tagc;\n\t\t\tif(guess.e.c < tagc) guess.e.c = tagc;\n\t\t\t/* 18.18.11 t ST_CellType */\n\t\t\tswitch(p.t) {\n\t\t\t\tcase 'n':\n\t\t\t\t\tif(p.v == \"\" || p.v == null) {\n\t\t\t\t\t\tif(!sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else p.v = parseFloat(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 's':\n\t\t\t\t\tif(typeof p.v == 'undefined') {\n\t\t\t\t\t\tif(!sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsstr = strs[parseInt(p.v, 10)];\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tp.r = sstr.r;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'str':\n\t\t\t\t\tp.t = \"s\";\n\t\t\t\t\tp.v = (p.v!=null) ? utf8read(p.v) : '';\n\t\t\t\t\tif(opts.cellHTML) p.h = escapehtml(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'inlineStr':\n\t\t\t\t\tcref = d.match(isregex);\n\t\t\t\t\tp.t = 's';\n\t\t\t\t\tif(cref != null && (sstr = parse_si(cref[1]))) {\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t} else p.v = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'b': p.v = parsexmlbool(p.v); break;\n\t\t\t\tcase 'd':\n\t\t\t\t\tif(opts.cellDates) p.v = parseDate(p.v, 1);\n\t\t\t\t\telse { p.v = datenum(parseDate(p.v, 1)); p.t = 'n'; }\n\t\t\t\t\tbreak;\n\t\t\t\t/* error string in .w, number in .v */\n\t\t\t\tcase 'e':\n\t\t\t\t\tif(!opts || opts.cellText !== false) p.w = p.v;\n\t\t\t\t\tp.v = RBErr[p.v]; break;\n\t\t\t}\n\t\t\t/* formatting */\n\t\t\tfmtid = fillid = 0;\n\t\t\tcf = null;\n\t\t\tif(do_format && tag.s !== undefined) {\n\t\t\t\tcf = styles.CellXf[tag.s];\n\t\t\t\tif(cf != null) {\n\t\t\t\t\tif(cf.numFmtId != null) fmtid = cf.numFmtId;\n\t\t\t\t\tif(opts.cellStyles) {\n\t\t\t\t\t\tif(cf.fillId != null) fillid = cf.fillId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsafe_format(p, fmtid, fillid, opts, themes, styles);\n\t\t\tif(opts.cellDates && do_format && p.t == 'n' && fmt_is_date(table_fmt[fmtid])) { p.t = 'd'; p.v = numdate(p.v); }\n\t\t\tif(tag.cm && opts.xlmeta) {\n\t\t\t\tvar cm = (opts.xlmeta.Cell||[])[+tag.cm-1];\n\t\t\t\tif(cm && cm.type == 'XLDAPR') p.D = true;\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\tvar _r = decode_cell(tag.r);\n\t\t\t\tif(!s[_r.r]) s[_r.r] = [];\n\t\t\t\ts[_r.r][_r.c] = p;\n\t\t\t} else s[tag.r] = p;\n\t\t}\n\t}\n\tif(rows.length > 0) s['!rows'] = rows;\n}; })();\n\nfunction write_ws_xml_data(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*//*::, rels*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], r/*:Array<string>*/ = [], range = safe_decode_range(ws['!ref']), cell=\"\", ref, rr = \"\", cols/*:Array<string>*/ = [], R=0, C=0, rows = ws['!rows'];\n\tvar dense = Array.isArray(ws);\n\tvar params = ({r:rr}/*:any*/), row/*:RowInfo*/, height = -1;\n\tfor(C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\tfor(R = range.s.r; R <= range.e.r; ++R) {\n\t\tr = [];\n\t\trr = encode_row(R);\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tref = cols[C] + rr;\n\t\t\tvar _cell = dense ? (ws[R]||[])[C]: ws[ref];\n\t\t\tif(_cell === undefined) continue;\n\t\t\tif((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb)) != null) r.push(cell);\n\t\t}\n\t\tif(r.length > 0 || (rows && rows[R])) {\n\t\t\tparams = ({r:rr}/*:any*/);\n\t\t\tif(rows && rows[R]) {\n\t\t\t\trow = rows[R];\n\t\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\t\theight = -1;\n\t\t\t\tif(row.hpx) height = px2pt(row.hpx);\n\t\t\t\telse if(row.hpt) height = row.hpt;\n\t\t\t\tif(height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\t\tif(row.level) { params.outlineLevel = row.level; }\n\t\t\t}\n\t\t\to[o.length] = (writextag('row', r.join(\"\"), params));\n\t\t}\n\t}\n\tif(rows) for(; R < rows.length; ++R) {\n\t\tif(rows && rows[R]) {\n\t\t\tparams = ({r:R+1}/*:any*/);\n\t\t\trow = rows[R];\n\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\theight = -1;\n\t\t\tif (row.hpx) height = px2pt(row.hpx);\n\t\t\telse if (row.hpt) height = row.hpt;\n\t\t\tif (height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\tif (row.level) { params.outlineLevel = row.level; }\n\t\t\to[o.length] = (writextag('row', \"\", params));\n\t\t}\n\t}\n\treturn o.join(\"\");\n}\n\nfunction write_ws_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('worksheet', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t'xmlns:r': XMLNS.r\n\t})];\n\tvar s = wb.SheetNames[idx], sidx = 0, rdata = \"\";\n\tvar ws = wb.Sheets[s];\n\tif(ws == null) ws = {};\n\tvar ref = ws['!ref'] || 'A1';\n\tvar range = safe_decode_range(ref);\n\tif(range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + ref + \" exceeds format limit A1:XFD1048576\");\n\t\trange.e.c = Math.min(range.e.c, 0x3FFF);\n\t\trange.e.r = Math.min(range.e.c, 0xFFFFF);\n\t\tref = encode_range(range);\n\t}\n\tif(!rels) rels = {};\n\tws['!comments'] = [];\n\tvar _drawing = [];\n\n\twrite_ws_xml_sheetpr(ws, wb, idx, opts, o);\n\n\to[o.length] = (writextag('dimension', null, {'ref': ref}));\n\n\to[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\n\n\t/* TODO: store in WB, process styles */\n\tif(opts.sheetFormat) o[o.length] = (writextag('sheetFormatPr', null, {\n\t\tdefaultRowHeight:opts.sheetFormat.defaultRowHeight||'16',\n\t\tbaseColWidth:opts.sheetFormat.baseColWidth||'10',\n\t\toutlineLevelRow:opts.sheetFormat.outlineLevelRow||'7'\n\t}));\n\n\tif(ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = (write_ws_xml_cols(ws, ws['!cols']));\n\n\to[sidx = o.length] = '<sheetData/>';\n\tws['!links'] = [];\n\tif(ws['!ref'] != null) {\n\t\trdata = write_ws_xml_data(ws, opts, idx, wb, rels);\n\t\tif(rdata.length > 0) o[o.length] = (rdata);\n\t}\n\tif(o.length>sidx+1) { o[o.length] = ('</sheetData>'); o[sidx]=o[sidx].replace(\"/>\",\">\"); }\n\n\t/* sheetCalcPr */\n\n\tif(ws['!protect']) o[o.length] = write_ws_xml_protection(ws['!protect']);\n\n\t/* protectedRanges */\n\t/* scenarios */\n\n\tif(ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);\n\n\t/* sortState */\n\t/* dataConsolidate */\n\t/* customSheetViews */\n\n\tif(ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = (write_ws_xml_merges(ws['!merges']));\n\n\t/* phoneticPr */\n\t/* conditionalFormatting */\n\t/* dataValidations */\n\n\tvar relc = -1, rel, rId = -1;\n\tif(/*::(*/ws['!links']/*::||[])*/.length > 0) {\n\t\to[o.length] = \"<hyperlinks>\";\n\t\t/*::(*/ws['!links']/*::||[])*/.forEach(function(l) {\n\t\t\tif(!l[1].Target) return;\n\t\t\trel = ({\"ref\":l[0]}/*:any*/);\n\t\t\tif(l[1].Target.charAt(0) != \"#\") {\n\t\t\t\trId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#.*$/, \"\"), RELS.HLINK);\n\t\t\t\trel[\"r:id\"] = \"rId\"+rId;\n\t\t\t}\n\t\t\tif((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc+1));\n\t\t\tif(l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\n\t\t\to[o.length] = writextag(\"hyperlink\",null,rel);\n\t\t});\n\t\to[o.length] = \"</hyperlinks>\";\n\t}\n\tdelete ws['!links'];\n\n\t/* printOptions */\n\n\tif(ws['!margins'] != null) o[o.length] =  write_ws_xml_margins(ws['!margins']);\n\n\t/* pageSetup */\n\t/* headerFooter */\n\t/* rowBreaks */\n\t/* colBreaks */\n\t/* customProperties */\n\t/* cellWatches */\n\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) o[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {numberStoredAsText:1, sqref:ref}));\n\n\t/* smartTags */\n\n\tif(_drawing.length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n\t\to[o.length] = writextag(\"drawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!drawing'] = _drawing;\n\t}\n\n\tif(ws['!comments'].length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\to[o.length] = writextag(\"legacyDrawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!legacy'] = rId;\n\t}\n\n\t/* legacyDrawingHF */\n\t/* picture */\n\t/* oleObjects */\n\t/* controls */\n\t/* webPublishItems */\n\t/* tableParts */\n\t/* extLst */\n\n\tif(o.length>1) { o[o.length] = ('</worksheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.726 BrtRowHdr */\nfunction parse_BrtRowHdr(data, length) {\n\tvar z = ({}/*:any*/);\n\tvar tgt = data.l + length;\n\tz.r = data.read_shift(4);\n\tdata.l += 4; // TODO: ixfe\n\tvar miyRw = data.read_shift(2);\n\tdata.l += 1; // TODO: top/bot padding\n\tvar flags = data.read_shift(1);\n\tdata.l = tgt;\n\tif(flags & 0x07) z.level = flags & 0x07;\n\tif(flags & 0x10) z.hidden = true;\n\tif(flags & 0x20) z.hpt = miyRw / 20;\n\treturn z;\n}\nfunction write_BrtRowHdr(R/*:number*/, range, ws) {\n\tvar o = new_buf(17+8*16);\n\tvar row = (ws['!rows']||[])[R]||{};\n\to.write_shift(4, R);\n\n\to.write_shift(4, 0); /* TODO: ixfe */\n\n\tvar miyRw = 0x0140;\n\tif(row.hpx) miyRw = px2pt(row.hpx) * 20;\n\telse if(row.hpt) miyRw = row.hpt * 20;\n\to.write_shift(2, miyRw);\n\n\to.write_shift(1, 0); /* top/bot padding */\n\n\tvar flags = 0x0;\n\tif(row.level) flags |= row.level;\n\tif(row.hidden) flags |= 0x10;\n\tif(row.hpx || row.hpt) flags |= 0x20;\n\to.write_shift(1, flags);\n\n\to.write_shift(1, 0); /* phonetic guide */\n\n\t/* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\n\tvar ncolspan = 0, lcs = o.l;\n\to.l += 4;\n\n\tvar caddr = {r:R, c:0};\n\tfor(var i = 0; i < 16; ++i) {\n\t\tif((range.s.c > ((i+1) << 10)) || (range.e.c < (i << 10))) continue;\n\t\tvar first = -1, last = -1;\n\t\tfor(var j = (i<<10); j < ((i+1)<<10); ++j) {\n\t\t\tcaddr.c = j;\n\t\t\tvar cell = Array.isArray(ws) ? (ws[caddr.r]||[])[caddr.c] : ws[encode_cell(caddr)];\n\t\t\tif(cell) { if(first < 0) first = j; last = j; }\n\t\t}\n\t\tif(first < 0) continue;\n\t\t++ncolspan;\n\t\to.write_shift(4, first);\n\t\to.write_shift(4, last);\n\t}\n\n\tvar l = o.l;\n\to.l = lcs;\n\to.write_shift(4, ncolspan);\n\to.l = l;\n\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_row_header(ba, ws, range, R) {\n\tvar o = write_BrtRowHdr(R, range, ws);\n\tif((o.length > 17) || (ws['!rows']||[])[R]) write_record(ba, 0x0000 /* BrtRowHdr */, o);\n}\n\n/* [MS-XLSB] 2.4.820 BrtWsDim */\nvar parse_BrtWsDim = parse_UncheckedRfX;\nvar write_BrtWsDim = write_UncheckedRfX;\n\n/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\nfunction parse_BrtWsFmtInfo(/*::data, length*/) {\n}\n//function write_BrtWsFmtInfo(ws, o) { }\n\n/* [MS-XLSB] 2.4.823 BrtWsProp */\nfunction parse_BrtWsProp(data, length) {\n\tvar z = {};\n\tvar f = data[data.l]; ++data.l;\n\tz.above = !(f & 0x40);\n\tz.left  = !(f & 0x80);\n\t/* TODO: pull flags */\n\tdata.l += 18;\n\tz.name = parse_XLSBCodeName(data, length - 19);\n\treturn z;\n}\nfunction write_BrtWsProp(str, outl, o) {\n\tif(o == null) o = new_buf(84+4*str.length);\n\tvar f = 0xC0;\n\tif(outl) {\n\t\tif(outl.above) f &= ~0x40;\n\t\tif(outl.left)  f &= ~0x80;\n\t}\n\to.write_shift(1, f);\n\tfor(var i = 1; i < 3; ++i) o.write_shift(1,0);\n\twrite_BrtColor({auto:1}, o);\n\to.write_shift(-4,-1);\n\to.write_shift(-4,-1);\n\twrite_XLSBCodeName(str, o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.306 BrtCellBlank */\nfunction parse_BrtCellBlank(data) {\n\tvar cell = parse_XLSBCell(data);\n\treturn [cell];\n}\nfunction write_BrtCellBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\treturn write_XLSBCell(ncell, o);\n}\nfunction parse_BrtShortBlank(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\treturn [cell];\n}\nfunction write_BrtShortBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(4);\n\treturn write_XLSBShortCell(ncell, o);\n}\n\n/* [MS-XLSB] 2.4.307 BrtCellBool */\nfunction parse_BrtCellBool(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtCellBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\nfunction parse_BrtShortBool(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtShortBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(5);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.308 BrtCellError */\nfunction parse_BrtCellError(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\nfunction write_BrtCellError(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v);\n\treturn o;\n}\nfunction parse_BrtShortError(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\nfunction write_BrtShortError(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(1, cell.v);\n\to.write_shift(2, 0);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n\n/* [MS-XLSB] 2.4.311 BrtCellIsst */\nfunction parse_BrtCellIsst(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtCellIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\nfunction parse_BrtShortIsst(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtShortIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.313 BrtCellReal */\nfunction parse_BrtCellReal(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(16);\n\twrite_XLSBCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\nfunction parse_BrtShortReal(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtShortReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.314 BrtCellRk */\nfunction parse_BrtCellRk(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\nfunction parse_BrtShortRk(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtShortRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtCellRString */\nfunction parse_BrtCellRString(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RichStr(data);\n\treturn [cell, value, 'is'];\n}\n\n/* [MS-XLSB] 2.4.317 BrtCellSt */\nfunction parse_BrtCellSt(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtCellSt(cell, ncell, o) {\n\tif(o == null) o = new_buf(12 + 4 * cell.v.length);\n\twrite_XLSBCell(ncell, o);\n\twrite_XLWideString(cell.v, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction parse_BrtShortSt(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtShortSt(cell, ncell, o) {\n\tif(o == null) o = new_buf(8 + 4 * cell.v.length);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_XLWideString(cell.v, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.653 BrtFmlaBool */\nfunction parse_BrtFmlaBool(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'b'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.654 BrtFmlaError */\nfunction parse_BrtFmlaError(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'e'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.655 BrtFmlaNum */\nfunction parse_BrtFmlaNum(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_Xnum(data);\n\tvar o = [cell, value, 'n'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.656 BrtFmlaString */\nfunction parse_BrtFmlaString(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_XLWideString(data);\n\tvar o = [cell, value, 'str'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.682 BrtMergeCell */\nvar parse_BrtMergeCell = parse_UncheckedRfX;\nvar write_BrtMergeCell = write_UncheckedRfX;\n/* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\nfunction write_BrtBeginMergeCells(cnt, o) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(4, cnt);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.662 BrtHLink */\nfunction parse_BrtHLink(data, length/*::, opts*/) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar relId = parse_XLNullableWideString(data);\n\tvar loc = parse_XLWideString(data);\n\tvar tooltip = parse_XLWideString(data);\n\tvar display = parse_XLWideString(data);\n\tdata.l = end;\n\tvar o = ({rfx:rfx, relId:relId, loc:loc, display:display}/*:any*/);\n\tif(tooltip) o.Tooltip = tooltip;\n\treturn o;\n}\nfunction write_BrtHLink(l, rId) {\n\tvar o = new_buf(50+4*(l[1].Target.length + (l[1].Tooltip || \"\").length));\n\twrite_UncheckedRfX({s:decode_cell(l[0]), e:decode_cell(l[0])}, o);\n\twrite_RelID(\"rId\" + rId, o);\n\tvar locidx = l[1].Target.indexOf(\"#\");\n\tvar loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx+1);\n\twrite_XLWideString(loc || \"\", o);\n\twrite_XLWideString(l[1].Tooltip || \"\", o);\n\twrite_XLWideString(\"\", o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.692 BrtPane */\nfunction parse_BrtPane(/*data, length, opts*/) {\n}\n\n/* [MS-XLSB] 2.4.6 BrtArrFmla */\nfunction parse_BrtArrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_RfX(data, 16);\n\tvar fAlwaysCalc = data.read_shift(1);\n\tvar o = [rfx]; o[2] = fAlwaysCalc;\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.750 BrtShrFmla */\nfunction parse_BrtShrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar o = [rfx];\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t\tdata.l = end;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtColInfo */\n/* TODO: once XLS ColInfo is set, combine the functions */\nfunction write_BrtColInfo(C/*:number*/, col, o) {\n\tif(o == null) o = new_buf(18);\n\tvar p = col_obj_w(C, col);\n\to.write_shift(-4, C);\n\to.write_shift(-4, C);\n\to.write_shift(4, (p.width || 10) * 256);\n\to.write_shift(4, 0/*ixfe*/); // style\n\tvar flags = 0;\n\tif(col.hidden) flags |= 0x01;\n\tif(typeof p.width == 'number') flags |= 0x02;\n\tif(col.level) flags |= (col.level << 8);\n\to.write_shift(2, flags); // bit flag\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.678 BrtMargins */\nvar BrtMarginKeys = [\"left\",\"right\",\"top\",\"bottom\",\"header\",\"footer\"];\nfunction parse_BrtMargins(data/*::, length, opts*/)/*:Margins*/ {\n\tvar margins = ({}/*:any*/);\n\tBrtMarginKeys.forEach(function(k) { margins[k] = parse_Xnum(data, 8); });\n\treturn margins;\n}\nfunction write_BrtMargins(margins/*:Margins*/, o) {\n\tif(o == null) o = new_buf(6*8);\n\tdefault_margins(margins);\n\tBrtMarginKeys.forEach(function(k) { write_Xnum((margins/*:any*/)[k], o); });\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.299 BrtBeginWsView */\nfunction parse_BrtBeginWsView(data/*::, length, opts*/) {\n\tvar f = data.read_shift(2);\n\tdata.l += 28;\n\treturn { RTL: f & 0x20 };\n}\nfunction write_BrtBeginWsView(ws, Workbook, o) {\n\tif(o == null) o = new_buf(30);\n\tvar f = 0x39c;\n\tif((((Workbook||{}).Views||[])[0]||{}).RTL) f |= 0x20;\n\to.write_shift(2, f); // bit flag\n\to.write_shift(4, 0);\n\to.write_shift(4, 0); // view first row\n\to.write_shift(4, 0); // view first col\n\to.write_shift(1, 0); // gridline color ICV\n\to.write_shift(1, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 100); // zoom scale\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(4, 0); // workbook view id\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\nfunction write_BrtCellIgnoreEC(ref) {\n\tvar o = new_buf(24);\n\to.write_shift(4, 4);\n\to.write_shift(4, 1);\n\twrite_UncheckedRfX(ref, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.748 BrtSheetProtection */\nfunction write_BrtSheetProtection(sp, o) {\n\tif(o == null) o = new_buf(16*4+2);\n\to.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\n\to.write_shift(4, 1); // this record should not be written if no protection\n\t[\n\t\t[\"objects\",             false], // fObjects\n\t\t[\"scenarios\",           false], // fScenarios\n\t\t[\"formatCells\",          true], // fFormatCells\n\t\t[\"formatColumns\",        true], // fFormatColumns\n\t\t[\"formatRows\",           true], // fFormatRows\n\t\t[\"insertColumns\",        true], // fInsertColumns\n\t\t[\"insertRows\",           true], // fInsertRows\n\t\t[\"insertHyperlinks\",     true], // fInsertHyperlinks\n\t\t[\"deleteColumns\",        true], // fDeleteColumns\n\t\t[\"deleteRows\",           true], // fDeleteRows\n\t\t[\"selectLockedCells\",   false], // fSelLockedCells\n\t\t[\"sort\",                 true], // fSort\n\t\t[\"autoFilter\",           true], // fAutoFilter\n\t\t[\"pivotTables\",          true], // fPivotTables\n\t\t[\"selectUnlockedCells\", false]  // fSelUnlockedCells\n\t].forEach(function(n) {\n\t\t/*:: if(o == null) throw \"unreachable\"; */\n\t\tif(n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);\n\t\telse      o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\n\t});\n\treturn o;\n}\n\nfunction parse_BrtDVal(/*data, length, opts*/) {\n}\nfunction parse_BrtDVal14(/*data, length, opts*/) {\n}\n/* [MS-XLSB] 2.1.7.61 Worksheet */\nfunction parse_ws_bin(data, _opts, idx, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar s/*:Worksheet*/ = (opts.dense ? [] : {});\n\n\tvar ref;\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false, end = false;\n\tvar row, p, cf, R, C, addr, sstr, rr, cell/*:Cell*/;\n\tvar merges/*:Array<Range>*/ = [];\n\topts.biff = 12;\n\topts['!row'] = 0;\n\n\tvar ai = 0, af = false;\n\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar sharedf = {};\n\tvar supbooks = opts.supbooks || /*::(*/wb/*:: :any)*/.supbooks || ([[]]/*:any*/);\n\tsupbooks.sharedf = sharedf;\n\tsupbooks.arrayf = arrayf;\n\tsupbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function(x) { return x.name; });\n\tif(!opts.supbooks) {\n\t\topts.supbooks = supbooks;\n\t\tif(wb.Names) for(var i = 0; i < wb.Names.length; ++i) supbooks[0][i+1] = wb.Names[i];\n\t}\n\n\tvar colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];\n\tvar seencol = false;\n\n\tXLSBRecordEnum[0x0010] = { n:\"BrtShortReal\", f:parse_BrtShortReal };\n\n\tvar cm, vm;\n\n\trecordhopper(data, function ws_parse(val, RR, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0094: /* 'BrtWsDim' */\n\t\t\t\tref = val; break;\n\t\t\tcase 0x0000: /* 'BrtRowHdr' */\n\t\t\t\trow = val;\n\t\t\t\tif(opts.sheetRows && opts.sheetRows <= row.r) end=true;\n\t\t\t\trr = encode_row(R = row.r);\n\t\t\t\topts['!row'] = row.r;\n\t\t\t\tif(val.hidden || val.hpt || val.level != null) {\n\t\t\t\t\tif(val.hpt) val.hpx = pt2px(val.hpt);\n\t\t\t\t\trowinfo[val.r] = val;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0002: /* 'BrtCellRk' */\n\t\t\tcase 0x0003: /* 'BrtCellError' */\n\t\t\tcase 0x0004: /* 'BrtCellBool' */\n\t\t\tcase 0x0005: /* 'BrtCellReal' */\n\t\t\tcase 0x0006: /* 'BrtCellSt' */\n\t\t\tcase 0x0007: /* 'BrtCellIsst' */\n\t\t\tcase 0x0008: /* 'BrtFmlaString' */\n\t\t\tcase 0x0009: /* 'BrtFmlaNum' */\n\t\t\tcase 0x000A: /* 'BrtFmlaBool' */\n\t\t\tcase 0x000B: /* 'BrtFmlaError' */\n\t\t\tcase 0x000D: /* 'BrtShortRk' */\n\t\t\tcase 0x000E: /* 'BrtShortError' */\n\t\t\tcase 0x000F: /* 'BrtShortBool' */\n\t\t\tcase 0x0010: /* 'BrtShortReal' */\n\t\t\tcase 0x0011: /* 'BrtShortSt' */\n\t\t\tcase 0x0012: /* 'BrtShortIsst' */\n\t\t\tcase 0x003E: /* 'BrtCellRString' */\n\t\t\t\tp = ({t:val[2]}/*:any*/);\n\t\t\t\tswitch(val[2]) {\n\t\t\t\t\tcase 'n': p.v = val[1]; break;\n\t\t\t\t\tcase 's': sstr = strs[val[1]]; p.v = sstr.t; p.r = sstr.r; break;\n\t\t\t\t\tcase 'b': p.v = val[1] ? true : false; break;\n\t\t\t\t\tcase 'e': p.v = val[1]; if(opts.cellText !== false) p.w = BErr[p.v]; break;\n\t\t\t\t\tcase 'str': p.t = 's'; p.v = val[1]; break;\n\t\t\t\t\tcase 'is': p.t = 's'; p.v = val[1].t; break;\n\t\t\t\t}\n\t\t\t\tif((cf = styles.CellXf[val[0].iStyleRef])) safe_format(p,cf.numFmtId,null,opts, themes, styles);\n\t\t\t\tC = val[0].c == -1 ? C + 1 : val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\taf = false;\n\t\t\t\t\tfor(ai = 0; ai < arrayf.length; ++ai) {\n\t\t\t\t\t\tvar aii = arrayf[ai];\n\t\t\t\t\t\tif(row.r >= aii[0].s.r && row.r <= aii[0].e.r)\n\t\t\t\t\t\t\tif(C >= aii[0].s.c && C <= aii[0].e.c) {\n\t\t\t\t\t\t\t\tp.F = encode_range(aii[0]); af = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!af && val.length > 3) p.f = val[3];\n\t\t\t\t}\n\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(opts.cellDates && cf && p.t == 'n' && fmt_is_date(table_fmt[cf.numFmtId])) {\n\t\t\t\t\tvar _d = SSF_parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t\t\t\t}\n\t\t\t\tif(cm) {\n\t\t\t\t\tif(cm.type == 'XLDAPR') p.D = true;\n\t\t\t\t\tcm = void 0;\n\t\t\t\t}\n\t\t\t\tif(vm) vm = void 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0001: /* 'BrtCellBlank' */\n\t\t\tcase 0x000C: /* 'BrtShortBlank' */\n\t\t\t\tif(!opts.sheetStubs || pass) break;\n\t\t\t\tp = ({t:'z',v:void 0}/*:any*/);\n\t\t\t\tC = val[0].c == -1 ? C + 1 : val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(cm) {\n\t\t\t\t\tif(cm.type == 'XLDAPR') p.D = true;\n\t\t\t\t\tcm = void 0;\n\t\t\t\t}\n\t\t\t\tif(vm) vm = void 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00B0: /* 'BrtMergeCell' */\n\t\t\t\tmerges.push(val); break;\n\n\t\t\tcase 0x0031: { /* 'BrtCellMeta' */\n\t\t\t\tcm = ((opts.xlmeta||{}).Cell||[])[val-1];\n\t\t\t} break;\n\n\t\t\tcase 0x01EE: /* 'BrtHLink' */\n\t\t\t\tvar rel = rels['!id'][val.relId];\n\t\t\t\tif(rel) {\n\t\t\t\t\tval.Target = rel.Target;\n\t\t\t\t\tif(val.loc) val.Target += \"#\"+val.loc;\n\t\t\t\t\tval.Rel = rel;\n\t\t\t\t} else if(val.relId == '') {\n\t\t\t\t\tval.Target = \"#\" + val.loc;\n\t\t\t\t}\n\t\t\t\tfor(R=val.rfx.s.r;R<=val.rfx.e.r;++R) for(C=val.rfx.s.c;C<=val.rfx.e.c;++C) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!s[R]) s[R] = [];\n\t\t\t\t\t\tif(!s[R][C]) s[R][C] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[R][C].l = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddr = encode_cell({c:C,r:R});\n\t\t\t\t\t\tif(!s[addr]) s[addr] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[addr].l = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01AA: /* 'BrtArrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tarrayf.push(val);\n\t\t\t\tcell = ((opts.dense ? s[R][C] : s[encode_col(C) + rr])/*:any*/);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tcell.F = encode_range(val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x01AB: /* 'BrtShrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tsharedf[encode_cell(val[0].s)] = val[1];\n\t\t\t\tcell = (opts.dense ? s[R][C] : s[encode_col(C) + rr]);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tbreak;\n\n\t\t\t/* identical to 'ColInfo' in XLS */\n\t\t\tcase 0x003C: /* 'BrtColInfo' */\n\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, hidden: !!(val.flags & 0x01), level: val.level };\n\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00A1: /* 'BrtBeginAFilter' */\n\t\t\t\ts['!autofilter'] = { ref:encode_range(val) };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\t\ts['!margins'] = val;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0093: /* 'BrtWsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tif(val.above || val.left) s['!outline'] = { above: val.above, left: val.left };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0089: /* 'BrtBeginWsView' */\n\t\t\t\tif(!wb.Views) wb.Views = [{}];\n\t\t\t\tif(!wb.Views[0]) wb.Views[0] = {};\n\t\t\t\tif(val.RTL) wb.Views[0].RTL = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01E5: /* 'BrtWsFmtInfo' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0040: /* 'BrtDVal' */\n\t\t\tcase 0x041D: /* 'BrtDVal14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0097: /* 'BrtPane' */\n\t\t\t\tbreak;\n\t\t\tcase 0x0098: /* 'BrtSel' */\n\t\t\tcase 0x00AF: /* 'BrtAFilterDateGroupItem' */\n\t\t\tcase 0x0284: /* 'BrtActiveX' */\n\t\t\tcase 0x0271: /* 'BrtBigName' */\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x018C: /* 'BrtBrk' */\n\t\t\tcase 0x0458: /* 'BrtCFIcon' */\n\t\t\tcase 0x047A: /* 'BrtCFRuleExt' */\n\t\t\tcase 0x01D7: /* 'BrtCFVO' */\n\t\t\tcase 0x041A: /* 'BrtCFVO14' */\n\t\t\tcase 0x0289: /* 'BrtCellIgnoreEC' */\n\t\t\tcase 0x0451: /* 'BrtCellIgnoreEC14' */\n\t\t\tcase 0x024D: /* 'BrtCellSmartTagProperty' */\n\t\t\tcase 0x025F: /* 'BrtCellWatch' */\n\t\t\tcase 0x0234: /* 'BrtColor' */\n\t\t\tcase 0x041F: /* 'BrtColor14' */\n\t\t\tcase 0x00A8: /* 'BrtColorFilter' */\n\t\t\tcase 0x00AE: /* 'BrtCustomFilter' */\n\t\t\tcase 0x049C: /* 'BrtCustomFilter14' */\n\t\t\tcase 0x01F3: /* 'BrtDRef' */\n\t\t\tcase 0x01FB: /* 'BrtDXF' */\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\tcase 0x00AB: /* 'BrtDynamicFilter' */\n\t\t\tcase 0x00A7: /* 'BrtFilter' */\n\t\t\tcase 0x0499: /* 'BrtFilter14' */\n\t\t\tcase 0x00A9: /* 'BrtIconFilter' */\n\t\t\tcase 0x049D: /* 'BrtIconFilter14' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x0295: /* 'BrtListPart' */\n\t\t\tcase 0x027F: /* 'BrtOleObject' */\n\t\t\tcase 0x01DE: /* 'BrtPageSetup' */\n\t\t\tcase 0x0219: /* 'BrtPhoneticInfo' */\n\t\t\tcase 0x01DD: /* 'BrtPrintOptions' */\n\t\t\tcase 0x0218: /* 'BrtRangeProtection' */\n\t\t\tcase 0x044F: /* 'BrtRangeProtection14' */\n\t\t\tcase 0x02A8: /* 'BrtRangeProtectionIso' */\n\t\t\tcase 0x0450: /* 'BrtRangeProtectionIso14' */\n\t\t\tcase 0x0400: /* 'BrtRwDescent' */\n\t\t\tcase 0x0297: /* 'BrtSheetCalcProp' */\n\t\t\tcase 0x0217: /* 'BrtSheetProtection' */\n\t\t\tcase 0x02A6: /* 'BrtSheetProtectionIso' */\n\t\t\tcase 0x01F8: /* 'BrtSlc' */\n\t\t\tcase 0x0413: /* 'BrtSparkline' */\n\t\t\tcase 0x01AC: /* 'BrtTable' */\n\t\t\tcase 0x00AA: /* 'BrtTop10Filter' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0032: /* 'BrtValueMeta' */\n\t\t\tcase 0x0816: /* 'BrtWebExtension' */\n\t\t\tcase 0x0415: /* 'BrtWsFmtInfoEx14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(RR.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tdelete opts.supbooks;\n\tdelete opts['!row'];\n\n\tif(!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\n\tif(opts.sheetRows && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\tif(colinfo.length > 0) s[\"!cols\"] = colinfo;\n\tif(rowinfo.length > 0) s[\"!rows\"] = rowinfo;\n\treturn s;\n}\n\n/* TODO: something useful -- this is a stub */\nfunction write_ws_bin_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, ws/*:Worksheet*/, last_seen/*:boolean*/)/*:boolean*/ {\n\tif(cell.v === undefined) return false;\n\tvar vv = \"\";\n\tswitch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'd': // no BrtCellDate :(\n\t\t\tcell = dup(cell);\n\t\t\tcell.z = cell.z || table_fmt[14];\n\t\t\tcell.v = datenum(parseDate(cell.v)); cell.t = 'n';\n\t\t\tbreak;\n\t\t/* falls through */\n\t\tcase 'n': case 'e': vv = ''+cell.v; break;\n\t\tdefault: vv = cell.v; break;\n\t}\n\tvar o/*:any*/ = ({r:R, c:C}/*:any*/);\n\t/* TODO: cell style */\n\to.s = get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.l) ws['!links'].push([encode_cell(o), cell.l]);\n\tif(cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\n\tswitch(cell.t) {\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvv = get_sst_id(opts.Strings, (cell.v/*:any*/), opts.revStrings);\n\t\t\t\to.t = \"s\"; o.v = vv;\n\t\t\t\tif(last_seen) write_record(ba, 0x0012 /* BrtShortIsst */, write_BrtShortIsst(cell, o));\n\t\t\t\telse write_record(ba, 0x0007 /* BrtCellIsst */, write_BrtCellIsst(cell, o));\n\t\t\t} else {\n\t\t\t\to.t = \"str\";\n\t\t\t\tif(last_seen) write_record(ba, 0x0011 /* BrtShortSt */, write_BrtShortSt(cell, o));\n\t\t\t\telse write_record(ba, 0x0006 /* BrtCellSt */, write_BrtCellSt(cell, o));\n\t\t\t}\n\t\t\treturn true;\n\t\tcase 'n':\n\t\t\t/* TODO: determine threshold for Real vs RK */\n\t\t\tif(cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) {\n\t\t\t\tif(last_seen) write_record(ba, 0x000D /* BrtShortRk */, write_BrtShortRk(cell, o));\n\t\t\t\telse write_record(ba, 0x0002 /* BrtCellRk */, write_BrtCellRk(cell, o));\n\t\t\t} else {\n\t\t\t\tif(last_seen) write_record(ba, 0x0010 /* BrtShortReal */, write_BrtShortReal(cell, o));\n\t\t\t\telse write_record(ba, 0x0005 /* BrtCellReal */, write_BrtCellReal(cell, o));\n\t\t\t} return true;\n\t\tcase 'b':\n\t\t\to.t = \"b\";\n\t\t\tif(last_seen) write_record(ba, 0x000F /* BrtShortBool */, write_BrtShortBool(cell, o));\n\t\t\telse write_record(ba, 0x0004 /* BrtCellBool */, write_BrtCellBool(cell, o));\n\t\t\treturn true;\n\t\tcase 'e':\n\t\t\to.t = \"e\";\n\t\t\tif(last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError(cell, o));\n\t\t\telse write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError(cell, o));\n\t\t\treturn true;\n\t}\n\tif(last_seen) write_record(ba, 0x000C /* BrtShortBlank */, write_BrtShortBlank(cell, o));\n\telse write_record(ba, 0x0001 /* BrtCellBlank */, write_BrtCellBlank(cell, o));\n\treturn true;\n}\n\nfunction write_CELLTABLE(ba, ws/*:Worksheet*/, idx/*:number*/, opts/*::, wb:Workbook*/) {\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols/*:Array<string>*/ = [];\n\twrite_record(ba, 0x0091 /* BrtBeginSheetData */);\n\tvar dense = Array.isArray(ws);\n\tvar cap = range.e.r;\n\tif(ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\n\tfor(var R = range.s.r; R <= cap; ++R) {\n\t\trr = encode_row(R);\n\t\t/* [ACCELLTABLE] */\n\t\t/* BrtRowHdr */\n\t\twrite_row_header(ba, ws, range, R);\n\t\tvar last_seen = false;\n\t\tif(R <= range.e.r) for(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t/* *16384CELL */\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) { last_seen = false; continue; }\n\t\t\t/* write cell */\n\t\t\tlast_seen = write_ws_bin_cell(ba, cell, R, C, opts, ws, last_seen);\n\t\t}\n\t}\n\twrite_record(ba, 0x0092 /* BrtEndSheetData */);\n}\n\nfunction write_MERGECELLS(ba, ws/*:Worksheet*/) {\n\tif(!ws || !ws['!merges']) return;\n\twrite_record(ba, 0x00B1 /* BrtBeginMergeCells */, write_BrtBeginMergeCells(ws['!merges'].length));\n\tws['!merges'].forEach(function(m) { write_record(ba, 0x00B0 /* BrtMergeCell */, write_BrtMergeCell(m)); });\n\twrite_record(ba, 0x00B2 /* BrtEndMergeCells */);\n}\n\nfunction write_COLINFOS(ba, ws/*:Worksheet*//*::, idx:number, opts, wb:Workbook*/) {\n\tif(!ws || !ws['!cols']) return;\n\twrite_record(ba, 0x0186 /* BrtBeginColInfos */);\n\tws['!cols'].forEach(function(m, i) { if(m) write_record(ba, 0x003C /* 'BrtColInfo' */, write_BrtColInfo(i, m)); });\n\twrite_record(ba, 0x0187 /* BrtEndColInfos */);\n}\n\nfunction write_IGNOREECS(ba, ws/*:Worksheet*/) {\n\tif(!ws || !ws['!ref']) return;\n\twrite_record(ba, 0x0288 /* BrtBeginCellIgnoreECs */);\n\twrite_record(ba, 0x0289 /* BrtCellIgnoreEC */, write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\n\twrite_record(ba, 0x028A /* BrtEndCellIgnoreECs */);\n}\n\nfunction write_HLINKS(ba, ws/*:Worksheet*/, rels) {\n\t/* *BrtHLink */\n\tws['!links'].forEach(function(l) {\n\t\tif(!l[1].Target) return;\n\t\tvar rId = add_rels(rels, -1, l[1].Target.replace(/#.*$/, \"\"), RELS.HLINK);\n\t\twrite_record(ba, 0x01EE /* BrtHLink */, write_BrtHLink(l, rId));\n\t});\n\tdelete ws['!links'];\n}\nfunction write_LEGACYDRAWING(ba, ws/*:Worksheet*/, idx/*:number*/, rels) {\n\t/* [BrtLegacyDrawing] */\n\tif(ws['!comments'].length > 0) {\n\t\tvar rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\twrite_record(ba, 0x0227 /* BrtLegacyDrawing */, write_RelID(\"rId\" + rId));\n\t\tws['!legacy'] = rId;\n\t}\n}\n\nfunction write_AUTOFILTER(ba, ws, wb, idx) {\n\tif(!ws['!autofilter']) return;\n\tvar data = ws['!autofilter'];\n\tvar ref = typeof data.ref === \"string\" ? data.ref : encode_range(data.ref);\n\n\t/* Update FilterDatabase defined name for the worksheet */\n\tif(!wb.Workbook) wb.Workbook = ({Sheets:[]}/*:any*/);\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names/*: Array<any> */ = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = \"'\" + wb.SheetNames[idx] + \"'!\" + ref; break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref  });\n\n\twrite_record(ba, 0x00A1 /* BrtBeginAFilter */, write_UncheckedRfX(safe_decode_range(ref)));\n\t/* *FILTERCOLUMN */\n\t/* [SORTSTATE] */\n\t/* BrtEndAFilter */\n\twrite_record(ba, 0x00A2 /* BrtEndAFilter */);\n}\n\nfunction write_WSVIEWS2(ba, ws, Workbook) {\n\twrite_record(ba, 0x0085 /* BrtBeginWsViews */);\n\t{ /* 1*WSVIEW2 */\n\t\t/* [ACUID] */\n\t\twrite_record(ba, 0x0089 /* BrtBeginWsView */, write_BrtBeginWsView(ws, Workbook));\n\t\t/* [BrtPane] */\n\t\t/* *4BrtSel */\n\t\t/* *4SXSELECT */\n\t\t/* *FRT */\n\t\twrite_record(ba, 0x008A /* BrtEndWsView */);\n\t}\n\t/* *FRT */\n\twrite_record(ba, 0x0086 /* BrtEndWsViews */);\n}\n\nfunction write_WSFMTINFO(/*::ba, ws*/) {\n\t/* [ACWSFMTINFO] */\n\t// write_record(ba, 0x01E5 /* BrtWsFmtInfo */, write_BrtWsFmtInfo(ws));\n}\n\nfunction write_SHEETPROTECT(ba, ws) {\n\tif(!ws['!protect']) return;\n\t/* [BrtSheetProtectionIso] */\n\twrite_record(ba, 0x0217 /* BrtSheetProtection */, write_BrtSheetProtection(ws['!protect']));\n}\n\nfunction write_ws_bin(idx/*:number*/, opts, wb/*:Workbook*/, rels) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar c/*:string*/ = s; try { if(wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c; } catch(e) {}\n\tvar r = safe_decode_range(ws['!ref'] || \"A1\");\n\tif(r.e.c > 0x3FFF || r.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:XFD1048576\");\n\t\tr.e.c = Math.min(r.e.c, 0x3FFF);\n\t\tr.e.r = Math.min(r.e.c, 0xFFFFF);\n\t}\n\tws['!links'] = [];\n\t/* passed back to write_zip and removed there */\n\tws['!comments'] = [];\n\twrite_record(ba, 0x0081 /* BrtBeginSheet */);\n\tif(wb.vbaraw || ws['!outline']) write_record(ba, 0x0093 /* BrtWsProp */, write_BrtWsProp(c, ws['!outline']));\n\twrite_record(ba, 0x0094 /* BrtWsDim */, write_BrtWsDim(r));\n\twrite_WSVIEWS2(ba, ws, wb.Workbook);\n\twrite_WSFMTINFO(ba, ws);\n\twrite_COLINFOS(ba, ws, idx, opts, wb);\n\twrite_CELLTABLE(ba, ws, idx, opts, wb);\n\t/* [BrtSheetCalcProp] */\n\twrite_SHEETPROTECT(ba, ws);\n\t/* *([BrtRangeProtectionIso] BrtRangeProtection) */\n\t/* [SCENMAN] */\n\twrite_AUTOFILTER(ba, ws, wb, idx);\n\t/* [SORTSTATE] */\n\t/* [DCON] */\n\t/* [USERSHVIEWS] */\n\twrite_MERGECELLS(ba, ws);\n\t/* [BrtPhoneticInfo] */\n\t/* *CONDITIONALFORMATTING */\n\t/* [DVALS] */\n\twrite_HLINKS(ba, ws, rels);\n\t/* [BrtPrintOptions] */\n\tif(ws['!margins']) write_record(ba, 0x01DC /* BrtMargins */, write_BrtMargins(ws['!margins']));\n\t/* [BrtPageSetup] */\n\t/* [HEADERFOOTER] */\n\t/* [RWBRK] */\n\t/* [COLBRK] */\n\t/* *BrtBigName */\n\t/* [CELLWATCHES] */\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) write_IGNOREECS(ba, ws);\n\t/* [SMARTTAGS] */\n\t/* [BrtDrawing] */\n\twrite_LEGACYDRAWING(ba, ws, idx, rels);\n\t/* [BrtLegacyDrawingHF] */\n\t/* [BrtBkHim] */\n\t/* [OLEOBJECTS] */\n\t/* [ACTIVEXCONTROLS] */\n\t/* [WEBPUBITEMS] */\n\t/* [LISTPARTS] */\n\t/* FRTWORKSHEET */\n\twrite_record(ba, 0x0082 /* BrtEndSheet */);\n\treturn ba.end();\n}\nfunction parse_Cache(data/*:string*/)/*:[Array<number|string>, string, ?string]*/ {\n\tvar col/*:Array<number|string>*/ = [];\n\tvar num = data.match(/^<c:numCache>/);\n\tvar f;\n\n\t/* 21.2.2.150 pt CT_NumVal */\n\t(data.match(/<c:pt idx=\"(\\d*)\">(.*?)<\\/c:pt>/mg)||[]).forEach(function(pt) {\n\t\tvar q = pt.match(/<c:pt idx=\"(\\d*?)\"><c:v>(.*)<\\/c:v><\\/c:pt>/);\n\t\tif(!q) return;\n\t\tcol[+q[1]] = num ? +q[2] : q[2];\n\t});\n\n\t/* 21.2.2.71 formatCode CT_Xstring */\n\tvar nf = unescapexml((data.match(/<c:formatCode>([\\s\\S]*?)<\\/c:formatCode>/) || [\"\",\"General\"])[1]);\n\n\t(data.match(/<c:f>(.*?)<\\/c:f>/mg)||[]).forEach(function(F) { f = F.replace(/<.*?>/g,\"\"); });\n\n\treturn [col, nf, f];\n}\n\n/* 21.2 DrawingML - Charts */\nfunction parse_chart(data/*:?string*/, name/*:string*/, opts, rels, wb, csheet) {\n\tvar cs/*:Worksheet*/ = ((csheet || {\"!type\":\"chart\"})/*:any*/);\n\tif(!data) return csheet;\n\t/* 21.2.2.27 chart CT_Chart */\n\n\tvar C = 0, R = 0, col = \"A\";\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\t/* 21.2.2.120 numCache CT_NumData */\n\t(data.match(/<c:numCache>[\\s\\S]*?<\\/c:numCache>/gm)||[]).forEach(function(nc) {\n\t\tvar cache = parse_Cache(nc);\n\t\trefguess.s.r = refguess.s.c = 0;\n\t\trefguess.e.c = C;\n\t\tcol = encode_col(C);\n\t\tcache[0].forEach(function(n,i) {\n\t\t\tcs[col + encode_row(i)] = {t:'n', v:n, z:cache[1] };\n\t\t\tR = i;\n\t\t});\n\t\tif(refguess.e.r < R) refguess.e.r = R;\n\t\t++C;\n\t});\n\tif(C > 0) cs[\"!ref\"] = encode_range(refguess);\n\treturn cs;\n}\n/* 18.3 Worksheets also covers Chartsheets */\nfunction parse_cs_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {\n\tif(!data) return data;\n\t/* 18.3.1.12 chartsheet CT_ChartSheet */\n\tif(!rels) rels = {'!id':{}};\n\tvar s = ({'!type':\"chart\", '!drawel':null, '!rel':\"\"}/*:any*/);\n\tvar m;\n\n\t/* 18.3.1.83 sheetPr CT_ChartsheetPr */\n\tvar sheetPr = data.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n\t/* 18.3.1.36 drawing CT_Drawing */\n\tif((m = data.match(/drawing r:id=\"(.*?)\"/))) s['!rel'] = m[1];\n\n\tif(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n\treturn s;\n}\nfunction write_cs_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('chartsheet', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t'xmlns:r': XMLNS.r\n\t})];\n\to[o.length] = writextag(\"drawing\", null, {\"r:id\": \"rId1\"});\n\tadd_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n\tif(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.331 BrtCsProp */\nfunction parse_BrtCsProp(data, length/*:number*/) {\n\tdata.l += 10;\n\tvar name = parse_XLWideString(data, length - 10);\n\treturn { name: name };\n}\n\n/* [MS-XLSB] 2.1.7.7 Chart Sheet */\nfunction parse_cs_bin(data, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tvar s = {'!type':\"chart\", '!drawel':null, '!rel':\"\"};\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\trecordhopper(data, function cs_parse(val, R, RT) {\n\t\tswitch(RT) {\n\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\t\ts['!rel'] = val; break;\n\n\t\t\tcase 0x028B: /* 'BrtCsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x028C: /* 'BrtCsPageSetup' */\n\t\t\tcase 0x029D: /* 'BrtCsProtection' */\n\t\t\tcase 0x02A7: /* 'BrtCsProtectionIso' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T > 0) state.push(RT);\n\t\t\t\telse if(R.T < 0) state.pop();\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tif(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n\treturn s;\n}\nfunction write_cs_bin(/*::idx:number, opts, wb:Workbook, rels*/) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x0081 /* BrtBeginSheet */);\n\t/* [BrtCsProp] */\n\t/* CSVIEWS */\n\t/* [[BrtCsProtectionIso] BrtCsProtection] */\n\t/* [USERCSVIEWS] */\n\t/* [BrtMargins] */\n\t/* [BrtCsPageSetup] */\n\t/* [HEADERFOOTER] */\n\t/* BrtDrawing */\n\t/* [BrtLegacyDrawing] */\n\t/* [BrtLegacyDrawingHF] */\n\t/* [BrtBkHim] */\n\t/* [WEBPUBITEMS] */\n\t/* FRTCHARTSHEET */\n\twrite_record(ba, 0x0082 /* BrtEndSheet */);\n\treturn ba.end();\n}\n/* 18.2.28 (CT_WorkbookProtection) Defaults */\nvar WBPropsDef = [\n\t['allowRefreshQuery',           false, \"bool\"],\n\t['autoCompressPictures',        true,  \"bool\"],\n\t['backupFile',                  false, \"bool\"],\n\t['checkCompatibility',          false, \"bool\"],\n\t['CodeName',                    ''],\n\t['date1904',                    false, \"bool\"],\n\t['defaultThemeVersion',         0,      \"int\"],\n\t['filterPrivacy',               false, \"bool\"],\n\t['hidePivotFieldList',          false, \"bool\"],\n\t['promptedSolutions',           false, \"bool\"],\n\t['publishItems',                false, \"bool\"],\n\t['refreshAllConnections',       false, \"bool\"],\n\t['saveExternalLinkValues',      true,  \"bool\"],\n\t['showBorderUnselectedTables',  true,  \"bool\"],\n\t['showInkAnnotation',           true,  \"bool\"],\n\t['showObjects',                 'all'],\n\t['showPivotChartFilter',        false, \"bool\"],\n\t['updateLinks', 'userSet']\n];\n\n/* 18.2.30 (CT_BookView) Defaults */\nvar WBViewDef = [\n\t['activeTab',                   0,      \"int\"],\n\t['autoFilterDateGrouping',      true,  \"bool\"],\n\t['firstSheet',                  0,      \"int\"],\n\t['minimized',                   false, \"bool\"],\n\t['showHorizontalScroll',        true,  \"bool\"],\n\t['showSheetTabs',               true,  \"bool\"],\n\t['showVerticalScroll',          true,  \"bool\"],\n\t['tabRatio',                    600,    \"int\"],\n\t['visibility',                  'visible']\n\t//window{Height,Width}, {x,y}Window\n];\n\n/* 18.2.19 (CT_Sheet) Defaults */\nvar SheetDef = [\n\t//['state', 'visible']\n];\n\n/* 18.2.2  (CT_CalcPr) Defaults */\nvar CalcPrDef = [\n\t['calcCompleted', 'true'],\n\t['calcMode', 'auto'],\n\t['calcOnSave', 'true'],\n\t['concurrentCalc', 'true'],\n\t['fullCalcOnLoad', 'false'],\n\t['fullPrecision', 'true'],\n\t['iterate', 'false'],\n\t['iterateCount', '100'],\n\t['iterateDelta', '0.001'],\n\t['refMode', 'A1']\n];\n\n/* 18.2.3 (CT_CustomWorkbookView) Defaults */\n/*var CustomWBViewDef = [\n\t['autoUpdate', 'false'],\n\t['changesSavedWin', 'false'],\n\t['includeHiddenRowCol', 'true'],\n\t['includePrintSettings', 'true'],\n\t['maximized', 'false'],\n\t['minimized', 'false'],\n\t['onlySync', 'false'],\n\t['personalView', 'false'],\n\t['showComments', 'commIndicator'],\n\t['showFormulaBar', 'true'],\n\t['showHorizontalScroll', 'true'],\n\t['showObjects', 'all'],\n\t['showSheetTabs', 'true'],\n\t['showStatusbar', 'true'],\n\t['showVerticalScroll', 'true'],\n\t['tabRatio', '600'],\n\t['xWindow', '0'],\n\t['yWindow', '0']\n];*/\n\nfunction push_defaults_array(target, defaults) {\n\tfor(var j = 0; j != target.length; ++j) { var w = target[j];\n\t\tfor(var i=0; i != defaults.length; ++i) { var z = defaults[i];\n\t\t\tif(w[z[0]] == null) w[z[0]] = z[1];\n\t\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]); break;\n\t\t\tcase \"int\": if(typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10); break;\n\t\t\t}\n\t\t}\n\t}\n}\nfunction push_defaults(target, defaults) {\n\tfor(var i = 0; i != defaults.length; ++i) { var z = defaults[i];\n\t\tif(target[z[0]] == null) target[z[0]] = z[1];\n\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]); break;\n\t\t\tcase \"int\": if(typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10); break;\n\t\t}\n\t}\n}\n\nfunction parse_wb_defaults(wb) {\n\tpush_defaults(wb.WBProps, WBPropsDef);\n\tpush_defaults(wb.CalcPr, CalcPrDef);\n\n\tpush_defaults_array(wb.WBView, WBViewDef);\n\tpush_defaults_array(wb.Sheets, SheetDef);\n\n\t_ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\n}\n\nfunction safe1904(wb/*:Workbook*/)/*:string*/ {\n\t/* TODO: store date1904 somewhere else */\n\tif(!wb.Workbook) return \"false\";\n\tif(!wb.Workbook.WBProps) return \"false\";\n\treturn parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\n}\n\nvar badchars = /*#__PURE__*/\"][*?\\/\\\\\".split(\"\");\nfunction check_ws_name(n/*:string*/, safe/*:?boolean*/)/*:boolean*/ {\n\tif(n.length > 31) { if(safe) return false; throw new Error(\"Sheet names cannot exceed 31 chars\"); }\n\tvar _good = true;\n\tbadchars.forEach(function(c) {\n\t\tif(n.indexOf(c) == -1) return;\n\t\tif(!safe) throw new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\n\t\t_good = false;\n\t});\n\treturn _good;\n}\nfunction check_wb_names(N, S, codes) {\n\tN.forEach(function(n,i) {\n\t\tcheck_ws_name(n);\n\t\tfor(var j = 0; j < i; ++j) if(n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\n\t\tif(codes) {\n\t\t\tvar cn = (S && S[i] && S[i].CodeName) || n;\n\t\t\tif(cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\n\t\t}\n\t});\n}\nfunction check_wb(wb) {\n\tif(!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\n\tif(!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\n\tvar Sheets = (wb.Workbook && wb.Workbook.Sheets) || [];\n\tcheck_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);\n\t/* TODO: validate workbook */\n}\n/* 18.2 Workbook */\nvar wbnsregex = /<\\w+:workbook/;\nfunction parse_wb_xml(data, opts)/*:WorkbookFile*/ {\n\tif(!data) throw new Error(\"Could not find file\");\n\tvar wb = /*::(*/{ AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, Names:[], xmlns: \"\" }/*::)*/;\n\tvar pass = false, xmlns = \"xmlns\";\n\tvar dname = {}, dnstart = 0;\n\tdata.replace(tagregex, function xml_wb(x, idx) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 18.2.27 workbook CT_Workbook 1 */\n\t\t\tcase '<workbook':\n\t\t\t\tif(x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\n\t\t\t\twb.xmlns = y[xmlns];\n\t\t\t\tbreak;\n\t\t\tcase '</workbook>': break;\n\n\t\t\t/* 18.2.13 fileVersion CT_FileVersion ? */\n\t\t\tcase '<fileVersion': delete y[0]; wb.AppVersion = y; break;\n\t\t\tcase '<fileVersion/>': case '</fileVersion>': break;\n\n\t\t\t/* 18.2.12 fileSharing CT_FileSharing ? */\n\t\t\tcase '<fileSharing':\n\t\t\t\tbreak;\n\t\t\tcase '<fileSharing/>': break;\n\n\t\t\t/* 18.2.28 workbookPr CT_WorkbookPr ? */\n\t\t\tcase '<workbookPr':\n\t\t\tcase '<workbookPr/>':\n\t\t\t\tWBPropsDef.forEach(function(w) {\n\t\t\t\t\tif(y[w[0]] == null) return;\n\t\t\t\t\tswitch(w[2]) {\n\t\t\t\t\t\tcase \"bool\": wb.WBProps[w[0]] = parsexmlbool(y[w[0]]); break;\n\t\t\t\t\t\tcase \"int\": wb.WBProps[w[0]] = parseInt(y[w[0]], 10); break;\n\t\t\t\t\t\tdefault: wb.WBProps[w[0]] = y[w[0]];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(y.codeName) wb.WBProps.CodeName = utf8read(y.codeName);\n\t\t\t\tbreak;\n\t\t\tcase '</workbookPr>': break;\n\n\t\t\t/* 18.2.29 workbookProtection CT_WorkbookProtection ? */\n\t\t\tcase '<workbookProtection':\n\t\t\t\tbreak;\n\t\t\tcase '<workbookProtection/>': break;\n\n\t\t\t/* 18.2.1  bookViews CT_BookViews ? */\n\t\t\tcase '<bookViews': case '<bookViews>': case '</bookViews>': break;\n\t\t\t/* 18.2.30   workbookView CT_BookView + */\n\t\t\tcase '<workbookView': case '<workbookView/>': delete y[0]; wb.WBView.push(y); break;\n\t\t\tcase '</workbookView>': break;\n\n\t\t\t/* 18.2.20 sheets CT_Sheets 1 */\n\t\t\tcase '<sheets': case '<sheets>': case '</sheets>': break; // aggregate sheet\n\t\t\t/* 18.2.19   sheet CT_Sheet + */\n\t\t\tcase '<sheet':\n\t\t\t\tswitch(y.state) {\n\t\t\t\t\tcase \"hidden\": y.Hidden = 1; break;\n\t\t\t\t\tcase \"veryHidden\": y.Hidden = 2; break;\n\t\t\t\t\tdefault: y.Hidden = 0;\n\t\t\t\t}\n\t\t\t\tdelete y.state;\n\t\t\t\ty.name = unescapexml(utf8read(y.name));\n\t\t\t\tdelete y[0]; wb.Sheets.push(y); break;\n\t\t\tcase '</sheet>': break;\n\n\t\t\t/* 18.2.15 functionGroups CT_FunctionGroups ? */\n\t\t\tcase '<functionGroups': case '<functionGroups/>': break;\n\t\t\t/* 18.2.14   functionGroup CT_FunctionGroup + */\n\t\t\tcase '<functionGroup': break;\n\n\t\t\t/* 18.2.9  externalReferences CT_ExternalReferences ? */\n\t\t\tcase '<externalReferences': case '</externalReferences>': case '<externalReferences>': break;\n\t\t\t/* 18.2.8    externalReference CT_ExternalReference + */\n\t\t\tcase '<externalReference': break;\n\n\t\t\t/* 18.2.6  definedNames CT_DefinedNames ? */\n\t\t\tcase '<definedNames/>': break;\n\t\t\tcase '<definedNames>': case '<definedNames': pass=true; break;\n\t\t\tcase '</definedNames>': pass=false; break;\n\t\t\t/* 18.2.5    definedName CT_DefinedName + */\n\t\t\tcase '<definedName': {\n\t\t\t\tdname = {};\n\t\t\t\tdname.Name = utf8read(y.name);\n\t\t\t\tif(y.comment) dname.Comment = y.comment;\n\t\t\t\tif(y.localSheetId) dname.Sheet = +y.localSheetId;\n\t\t\t\tif(parsexmlbool(y.hidden||\"0\")) dname.Hidden = true;\n\t\t\t\tdnstart = idx + x.length;\n\t\t\t}\tbreak;\n\t\t\tcase '</definedName>': {\n\t\t\t\tdname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));\n\t\t\t\twb.Names.push(dname);\n\t\t\t} break;\n\t\t\tcase '<definedName/>': break;\n\n\t\t\t/* 18.2.2  calcPr CT_CalcPr ? */\n\t\t\tcase '<calcPr': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '<calcPr/>': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '</calcPr>': break;\n\n\t\t\t/* 18.2.16 oleSize CT_OleSize ? (ref required) */\n\t\t\tcase '<oleSize': break;\n\n\t\t\t/* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\n\t\t\tcase '<customWorkbookViews>': case '</customWorkbookViews>': case '<customWorkbookViews': break;\n\t\t\t/* 18.2.3  customWorkbookView CT_CustomWorkbookView + */\n\t\t\tcase '<customWorkbookView': case '</customWorkbookView>': break;\n\n\t\t\t/* 18.2.18 pivotCaches CT_PivotCaches ? */\n\t\t\tcase '<pivotCaches>': case '</pivotCaches>': case '<pivotCaches': break;\n\t\t\t/* 18.2.17 pivotCache CT_PivotCache ? */\n\t\t\tcase '<pivotCache': break;\n\n\t\t\t/* 18.2.21 smartTagPr CT_SmartTagPr ? */\n\t\t\tcase '<smartTagPr': case '<smartTagPr/>': break;\n\n\t\t\t/* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\n\t\t\tcase '<smartTagTypes': case '<smartTagTypes>': case '</smartTagTypes>': break;\n\t\t\t/* 18.2.22 smartTagType CT_SmartTagType ? */\n\t\t\tcase '<smartTagType': break;\n\n\t\t\t/* 18.2.24 webPublishing CT_WebPublishing ? */\n\t\t\tcase '<webPublishing': case '<webPublishing/>': break;\n\n\t\t\t/* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\n\t\t\tcase '<fileRecoveryPr': case '<fileRecoveryPr/>': break;\n\n\t\t\t/* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\n\t\t\tcase '<webPublishObjects>': case '<webPublishObjects': case '</webPublishObjects>': break;\n\t\t\t/* 18.2.25 webPublishObject CT_WebPublishObject ? */\n\t\t\tcase '<webPublishObject': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break; //TODO: check with versions of excel\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\t/* Others */\n\t\t\tcase '<ArchID': break;\n\t\t\tcase '<AlternateContent':\n\t\t\tcase '<AlternateContent>': pass=true; break;\n\t\t\tcase '</AlternateContent>': pass=false; break;\n\n\t\t\t/* TODO */\n\t\t\tcase '<revisionPtr': break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\n\t\t}\n\t\treturn x;\n\t});\n\tif(XMLNS_main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\n\n\tparse_wb_defaults(wb);\n\n\treturn wb;\n}\n\nfunction write_wb_xml(wb/*:Workbook*//*::, opts:?WriteOpts*/)/*:string*/ {\n\tvar o = [XML_HEADER];\n\to[o.length] = writextag('workbook', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t//'xmlns:mx': XMLNS.mx,\n\t\t//'xmlns:s': XMLNS_main[0],\n\t\t'xmlns:r': XMLNS.r\n\t});\n\n\tvar write_names = (wb.Workbook && (wb.Workbook.Names||[]).length > 0);\n\n\t/* fileVersion */\n\t/* fileSharing */\n\n\tvar workbookPr/*:any*/ = ({codeName:\"ThisWorkbook\"}/*:any*/);\n\tif(wb.Workbook && wb.Workbook.WBProps) {\n\t\tWBPropsDef.forEach(function(x) {\n\t\t\t/*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n\t\t\tif((wb.Workbook.WBProps[x[0]]/*:any*/) == null) return;\n\t\t\tif((wb.Workbook.WBProps[x[0]]/*:any*/) == x[1]) return;\n\t\t\tworkbookPr[x[0]] = (wb.Workbook.WBProps[x[0]]/*:any*/);\n\t\t});\n\t\t/*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n\t\tif(wb.Workbook.WBProps.CodeName) { workbookPr.codeName = wb.Workbook.WBProps.CodeName; delete workbookPr.CodeName; }\n\t}\n\to[o.length] = (writextag('workbookPr', null, workbookPr));\n\n\t/* workbookProtection */\n\n\tvar sheets = wb.Workbook && wb.Workbook.Sheets || [];\n\tvar i = 0;\n\n\t/* bookViews only written if first worksheet is hidden */\n\tif(sheets && sheets[0] && !!sheets[0].Hidden) {\n\t\to[o.length] = \"<bookViews>\";\n\t\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\t\tif(!sheets[i]) break;\n\t\t\tif(!sheets[i].Hidden) break;\n\t\t}\n\t\tif(i == wb.SheetNames.length) i = 0;\n\t\to[o.length] = '<workbookView firstSheet=\"' + i + '\" activeTab=\"' + i + '\"/>';\n\t\to[o.length] = \"</bookViews>\";\n\t}\n\n\to[o.length] = \"<sheets>\";\n\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\tvar sht = ({name:escapexml(wb.SheetNames[i].slice(0,31))}/*:any*/);\n\t\tsht.sheetId = \"\"+(i+1);\n\t\tsht[\"r:id\"] = \"rId\"+(i+1);\n\t\tif(sheets[i]) switch(sheets[i].Hidden) {\n\t\t\tcase 1: sht.state = \"hidden\"; break;\n\t\t\tcase 2: sht.state = \"veryHidden\"; break;\n\t\t}\n\t\to[o.length] = (writextag('sheet',null,sht));\n\t}\n\to[o.length] = \"</sheets>\";\n\n\t/* functionGroups */\n\t/* externalReferences */\n\n\tif(write_names) {\n\t\to[o.length] = \"<definedNames>\";\n\t\tif(wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function(n) {\n\t\t\tvar d/*:any*/ = {name:n.Name};\n\t\t\tif(n.Comment) d.comment = n.Comment;\n\t\t\tif(n.Sheet != null) d.localSheetId = \"\"+n.Sheet;\n\t\t\tif(n.Hidden) d.hidden = \"1\";\n\t\t\tif(!n.Ref) return;\n\t\t\to[o.length] = writextag('definedName', escapexml(n.Ref), d);\n\t\t});\n\t\to[o.length] = \"</definedNames>\";\n\t}\n\n\t/* calcPr */\n\t/* oleSize */\n\t/* customWorkbookViews */\n\t/* pivotCaches */\n\t/* smartTagPr */\n\t/* smartTagTypes */\n\t/* webPublishing */\n\t/* fileRecoveryPr */\n\t/* webPublishObjects */\n\t/* extLst */\n\n\tif(o.length>2){ o[o.length] = '</workbook>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.304 BrtBundleSh */\nfunction parse_BrtBundleSh(data, length/*:number*/) {\n\tvar z = {};\n\tz.Hidden = data.read_shift(4); //hsState ST_SheetState\n\tz.iTabID = data.read_shift(4);\n\tz.strRelID = parse_RelID(data,length-8);\n\tz.name = parse_XLWideString(data);\n\treturn z;\n}\nfunction write_BrtBundleSh(data, o) {\n\tif(!o) o = new_buf(127);\n\to.write_shift(4, data.Hidden);\n\to.write_shift(4, data.iTabID);\n\twrite_RelID(data.strRelID, o);\n\twrite_XLWideString(data.name.slice(0,31), o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.815 BrtWbProp */\nfunction parse_BrtWbProp(data, length)/*:WBProps*/ {\n\tvar o/*:WBProps*/ = ({}/*:any*/);\n\tvar flags = data.read_shift(4);\n\to.defaultThemeVersion = data.read_shift(4);\n\tvar strName = (length > 8) ? parse_XLWideString(data) : \"\";\n\tif(strName.length > 0) o.CodeName = strName;\n\to.autoCompressPictures = !!(flags & 0x10000);\n\to.backupFile = !!(flags & 0x40);\n\to.checkCompatibility = !!(flags & 0x1000);\n\to.date1904 = !!(flags & 0x01);\n\to.filterPrivacy = !!(flags & 0x08);\n\to.hidePivotFieldList = !!(flags & 0x400);\n\to.promptedSolutions = !!(flags & 0x10);\n\to.publishItems = !!(flags & 0x800);\n\to.refreshAllConnections = !!(flags & 0x40000);\n\to.saveExternalLinkValues = !!(flags & 0x80);\n\to.showBorderUnselectedTables = !!(flags & 0x04);\n\to.showInkAnnotation = !!(flags & 0x20);\n\to.showObjects = [\"all\", \"placeholders\", \"none\"][(flags >> 13) & 0x03];\n\to.showPivotChartFilter = !!(flags & 0x8000);\n\to.updateLinks = [\"userSet\", \"never\", \"always\"][(flags >> 8) & 0x03];\n\treturn o;\n}\nfunction write_BrtWbProp(data/*:?WBProps*/, o) {\n\tif(!o) o = new_buf(72);\n\tvar flags = 0;\n\tif(data) {\n\t\t/* TODO: mirror parse_BrtWbProp fields */\n\t\tif(data.filterPrivacy) flags |= 0x08;\n\t}\n\to.write_shift(4, flags);\n\to.write_shift(4, 0);\n\twrite_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\n\treturn o.slice(0, o.l);\n}\n\nfunction parse_BrtFRTArchID$(data, length) {\n\tvar o = {};\n\tdata.read_shift(4);\n\to.ArchID = data.read_shift(4);\n\tdata.l += length - 8;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.687 BrtName */\nfunction parse_BrtName(data, length, opts) {\n\tvar end = data.l + length;\n\tdata.l += 4; //var flags = data.read_shift(4);\n\tdata.l += 1; //var chKey = data.read_shift(1);\n\tvar itab = data.read_shift(4);\n\tvar name = parse_XLNameWideString(data);\n\tvar formula = parse_XLSBNameParsedFormula(data, 0, opts);\n\tvar comment = parse_XLNullableWideString(data);\n\t//if(0 /* fProc */) {\n\t\t// unusedstring1: XLNullableWideString\n\t\t// description: XLNullableWideString\n\t\t// helpTopic: XLNullableWideString\n\t\t// unusedstring2: XLNullableWideString\n\t//}\n\tdata.l = end;\n\tvar out = ({Name:name, Ptg:formula}/*:any*/);\n\tif(itab < 0xFFFFFFF) out.Sheet = itab;\n\tif(comment) out.Comment = comment;\n\treturn out;\n}\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction parse_wb_bin(data, opts)/*:WorkbookFile*/ {\n\tvar wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, xmlns: \"\" };\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\n\tif(!opts) opts = {};\n\topts.biff = 12;\n\n\tvar Names = [];\n\tvar supbooks = ([[]]/*:any*/);\n\tsupbooks.SheetNames = [];\n\tsupbooks.XTI = [];\n\n\tXLSBRecordEnum[0x0010] = { n:\"BrtFRTArchID$\", f:parse_BrtFRTArchID$ };\n\n\trecordhopper(data, function hopper_wb(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009C: /* 'BrtBundleSh' */\n\t\t\t\tsupbooks.SheetNames.push(val.name);\n\t\t\t\twb.Sheets.push(val); break;\n\n\t\t\tcase 0x0099: /* 'BrtWbProp' */\n\t\t\t\twb.WBProps = val; break;\n\n\t\t\tcase 0x0027: /* 'BrtName' */\n\t\t\t\tif(val.Sheet != null) opts.SID = val.Sheet;\n\t\t\t\tval.Ref = stringify_formula(val.Ptg, null, null, supbooks, opts);\n\t\t\t\tdelete opts.SID;\n\t\t\t\tdelete val.Ptg;\n\t\t\t\tNames.push(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x040C: /* 'BrtNameExt' */ break;\n\n\t\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\tcase 0x029B: /* 'BrtSupAddin' */\n\t\t\t\tif(!supbooks[0].length) supbooks[0] = [RT, val];\n\t\t\t\telse supbooks.push([RT, val]);\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = [];\n\t\t\t\tbreak;\n\t\t\tcase 0x016A: /* 'BrtExternSheet' */\n\t\t\t\tif(supbooks.length === 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n\t\t\t\tsupbooks.XTI = supbooks.XTI.concat(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x0169: /* 'BrtPlaceholderName' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0817: /* 'BrtAbsPath15' */\n\t\t\tcase 0x009E: /* 'BrtBookView' */\n\t\t\tcase 0x008F: /* 'BrtBeginBundleShs' */\n\t\t\tcase 0x0298: /* 'BrtBeginFnGroup' */\n\t\t\tcase 0x0161: /* 'BrtBeginExternals' */\n\t\t\t\tbreak;\n\n\t\t\t/* case 'BrtModelTimeGroupingCalcCol' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0C01: /* 'BrtRevisionPtr' */\n\t\t\tcase 0x0216: /* 'BrtBookProtection' */\n\t\t\tcase 0x02A5: /* 'BrtBookProtectionIso' */\n\t\t\tcase 0x009D: /* 'BrtCalcProp' */\n\t\t\tcase 0x0262: /* 'BrtCrashRecErr' */\n\t\t\tcase 0x0802: /* 'BrtDecoupledPivotCacheID' */\n\t\t\tcase 0x009B: /* 'BrtFileRecover' */\n\t\t\tcase 0x0224: /* 'BrtFileSharing' */\n\t\t\tcase 0x02A4: /* 'BrtFileSharingIso' */\n\t\t\tcase 0x0080: /* 'BrtFileVersion' */\n\t\t\tcase 0x0299: /* 'BrtFnGroup' */\n\t\t\tcase 0x0850: /* 'BrtModelRelationship' */\n\t\t\tcase 0x084D: /* 'BrtModelTable' */\n\t\t\tcase 0x0225: /* 'BrtOleSize' */\n\t\t\tcase 0x0805: /* 'BrtPivotTableRef' */\n\t\t\tcase 0x0254: /* 'BrtSmartTagType' */\n\t\t\tcase 0x081C: /* 'BrtTableSlicerCacheID' */\n\t\t\tcase 0x081B: /* 'BrtTableSlicerCacheIDs' */\n\t\t\tcase 0x0822: /* 'BrtTimelineCachePivotCacheID' */\n\t\t\tcase 0x018D: /* 'BrtUserBookView' */\n\t\t\tcase 0x009A: /* 'BrtWbFactoid' */\n\t\t\tcase 0x045D: /* 'BrtWbProp14' */\n\t\t\tcase 0x0229: /* 'BrtWebOpt' */\n\t\t\tcase 0x082B: /* 'BrtWorkBookPr15' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tcase 0x0010: /* 'BrtFRTArchID$' */ break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != 0x0025 /* BrtACBegin */ && state[state.length-1] != 0x0023 /* BrtFRTBegin */)) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tparse_wb_defaults(wb);\n\n\t// $FlowIgnore\n\twb.Names = Names;\n\n\t(wb/*:any*/).supbooks = supbooks;\n\treturn wb;\n}\n\nfunction write_BUNDLESHS(ba, wb/*::, opts*/) {\n\twrite_record(ba, 0x008F /* BrtBeginBundleShs */);\n\tfor(var idx = 0; idx != wb.SheetNames.length; ++idx) {\n\t\tvar viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\n\t\tvar d = { Hidden: viz, iTabID: idx+1, strRelID: 'rId' + (idx+1), name: wb.SheetNames[idx] };\n\t\twrite_record(ba, 0x009C /* BrtBundleSh */, write_BrtBundleSh(d));\n\t}\n\twrite_record(ba, 0x0090 /* BrtEndBundleShs */);\n}\n\n/* [MS-XLSB] 2.4.649 BrtFileVersion */\nfunction write_BrtFileVersion(data, o) {\n\tif(!o) o = new_buf(127);\n\tfor(var i = 0; i != 4; ++i) o.write_shift(4, 0);\n\twrite_XLWideString(\"SheetJS\", o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(\"7262\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.301 BrtBookView */\nfunction write_BrtBookView(idx, o) {\n\tif(!o) o = new_buf(29);\n\to.write_shift(-4, 0);\n\to.write_shift(-4, 460);\n\to.write_shift(4,  28800);\n\to.write_shift(4,  17600);\n\to.write_shift(4,  500);\n\to.write_shift(4,  idx);\n\to.write_shift(4,  idx);\n\tvar flags = 0x78;\n\to.write_shift(1,  flags);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\nfunction write_BOOKVIEWS(ba, wb/*::, opts*/) {\n\t/* required if hidden tab appears before visible tab */\n\tif(!wb.Workbook || !wb.Workbook.Sheets) return;\n\tvar sheets = wb.Workbook.Sheets;\n\tvar i = 0, vistab = -1, hidden = -1;\n\tfor(; i < sheets.length; ++i) {\n\t\tif(!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;\n\t\telse if(sheets[i].Hidden == 1 && hidden == -1) hidden = i;\n\t}\n\tif(hidden > vistab) return;\n\twrite_record(ba, 0x0087 /* BrtBeginBookViews */);\n\twrite_record(ba, 0x009E /* BrtBookView */, write_BrtBookView(vistab));\n\t/* 1*(BrtBookView *FRT) */\n\twrite_record(ba, 0x0088 /* BrtEndBookViews */);\n}\n\n/* [MS-XLSB] 2.4.305 BrtCalcProp */\n/*function write_BrtCalcProp(data, o) {\n\tif(!o) o = new_buf(26);\n\to.write_shift(4,0); // force recalc\n\to.write_shift(4,1);\n\to.write_shift(4,0);\n\twrite_Xnum(0, o);\n\to.write_shift(-4, 1023);\n\to.write_shift(1, 0x33);\n\to.write_shift(1, 0x00);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.4.646 BrtFileRecover */\n/*function write_BrtFileRecover(data, o) {\n\tif(!o) o = new_buf(1);\n\to.write_shift(1,0);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction write_wb_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x0083 /* BrtBeginBook */);\n\twrite_record(ba, 0x0080 /* BrtFileVersion */, write_BrtFileVersion());\n\t/* [[BrtFileSharingIso] BrtFileSharing] */\n\twrite_record(ba, 0x0099 /* BrtWbProp */, write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\n\t/* [ACABSPATH] */\n\t/* [[BrtBookProtectionIso] BrtBookProtection] */\n\twrite_BOOKVIEWS(ba, wb, opts);\n\twrite_BUNDLESHS(ba, wb, opts);\n\t/* [FNGROUP] */\n\t/* [EXTERNALS] */\n\t/* *BrtName */\n\t/* write_record(ba, 0x009D BrtCalcProp, write_BrtCalcProp()); */\n\t/* [BrtOleSize] */\n\t/* *(BrtUserBookView *FRT) */\n\t/* [PIVOTCACHEIDS] */\n\t/* [BrtWbFactoid] */\n\t/* [SMARTTAGTYPES] */\n\t/* [BrtWebOpt] */\n\t/* write_record(ba, 0x009B BrtFileRecover, write_BrtFileRecover()); */\n\t/* [WEBPUBITEMS] */\n\t/* [CRERRS] */\n\t/* FRTWORKBOOK */\n\twrite_record(ba, 0x0084 /* BrtEndBook */);\n\n\treturn ba.end();\n}\nfunction parse_wb(data, name/*:string*/, opts)/*:WorkbookFile*/ {\n\tif(name.slice(-4)===\".bin\") return parse_wb_bin((data/*:any*/), opts);\n\treturn parse_wb_xml((data/*:any*/), opts);\n}\n\nfunction parse_ws(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ws_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ws_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_cs(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_cs_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_cs_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ms(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ms_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ms_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ds(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ds_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ds_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_sty(data, name/*:string*/, themes, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_sty_bin((data/*:any*/), themes, opts);\n\treturn parse_sty_xml((data/*:any*/), themes, opts);\n}\n\nfunction parse_theme(data/*:string*/, name/*:string*/, opts) {\n\treturn parse_theme_xml(data, opts);\n}\n\nfunction parse_sst(data, name/*:string*/, opts)/*:SST*/ {\n\tif(name.slice(-4)===\".bin\") return parse_sst_bin((data/*:any*/), opts);\n\treturn parse_sst_xml((data/*:any*/), opts);\n}\n\nfunction parse_cmnt(data, name/*:string*/, opts)/*:Array<RawComment>*/ {\n\tif(name.slice(-4)===\".bin\") return parse_comments_bin((data/*:any*/), opts);\n\treturn parse_comments_xml((data/*:any*/), opts);\n}\n\nfunction parse_cc(data, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_cc_bin((data/*:any*/), name, opts);\n\treturn parse_cc_xml((data/*:any*/), name, opts);\n}\n\nfunction parse_xlink(data, rel, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlink_bin((data/*:any*/), rel, name, opts);\n\treturn parse_xlink_xml((data/*:any*/), rel, name, opts);\n}\n\nfunction parse_xlmeta(data, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlmeta_bin((data/*:any*/), name, opts);\n\treturn parse_xlmeta_xml((data/*:any*/), name, opts);\n}\n\nfunction write_wb(wb, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_wb_bin : write_wb_xml)(wb, opts);\n}\n\nfunction write_ws(data/*:number*/, name/*:string*/, opts, wb/*:Workbook*/, rels) {\n\treturn (name.slice(-4)===\".bin\" ? write_ws_bin : write_ws_xml)(data, opts, wb, rels);\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction write_cs(data/*:number*/, name/*:string*/, opts, wb/*:Workbook*/, rels) {\n\treturn (name.slice(-4)===\".bin\" ? write_cs_bin : write_cs_xml)(data, opts, wb, rels);\n}\n\nfunction write_sty(data, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_sty_bin : write_sty_xml)(data, opts);\n}\n\nfunction write_sst(data/*:SST*/, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_sst_bin : write_sst_xml)(data, opts);\n}\n\nfunction write_cmnt(data/*:Array<any>*/, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_comments_bin : write_comments_xml)(data, opts);\n}\n/*\nfunction write_cc(data, name:string, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_cc_bin : write_cc_xml)(data, opts);\n}\n*/\n\nfunction write_xlmeta(name/*:string*/) {\n\treturn (name.slice(-4)===\".bin\" ? write_xlmeta_bin : write_xlmeta_xml)();\n}\nvar attregexg2=/([\\w:]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\nvar attregex2=/([\\w:]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\nfunction xlml_parsexmltag(tag/*:string*/, skip_root/*:?boolean*/) {\n\tvar words = tag.split(/\\s+/);\n\tvar z/*:any*/ = ([]/*:any*/); if(!skip_root) z[0] = words[0];\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\n/*:: if(!y || !y[2]) continue; */\n\t\tif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\nfunction xlml_parsexmltagobj(tag/*:string*/) {\n\tvar words = tag.split(/\\s+/);\n\tvar z = {};\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\n/*:: if(!y || !y[2]) continue; */\n\t\tif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\n\n// ----\n\n/* map from xlml named formats to SSF TODO: localize */\nvar XLMLFormatMap/*: {[string]:string}*/;\n\nfunction xlml_format(format, value)/*:string*/ {\n\tvar fmt = XLMLFormatMap[format] || unescapexml(format);\n\tif(fmt === \"General\") return SSF_general(value);\n\treturn SSF_format(fmt, value);\n}\n\nfunction xlml_set_custprop(Custprops, key, cp, val/*:string*/) {\n\tvar oval/*:any*/ = val;\n\tswitch((cp[0].match(/dt:dt=\"([\\w.]+)\"/)||[\"\",\"\"])[1]) {\n\t\tcase \"boolean\": oval = parsexmlbool(val); break;\n\t\tcase \"i2\": case \"int\": oval = parseInt(val, 10); break;\n\t\tcase \"r4\": case \"float\": oval = parseFloat(val); break;\n\t\tcase \"date\": case \"dateTime.tz\": oval = parseDate(val); break;\n\t\tcase \"i8\": case \"string\": case \"fixed\": case \"uuid\": case \"bin.base64\": break;\n\t\tdefault: throw new Error(\"bad custprop:\" + cp[0]);\n\t}\n\tCustprops[unescapexml(key)] = oval;\n}\n\nfunction safe_format_xlml(cell/*:Cell*/, nf, o) {\n\tif(cell.t === 'z') return;\n\tif(!o || o.cellText !== false) try {\n\t\tif(cell.t === 'e') { cell.w = cell.w || BErr[cell.v]; }\n\t\telse if(nf === \"General\") {\n\t\t\tif(cell.t === 'n') {\n\t\t\t\tif((cell.v|0) === cell.v) cell.w = cell.v.toString(10);\n\t\t\t\telse cell.w = SSF_general_num(cell.v);\n\t\t\t}\n\t\t\telse cell.w = SSF_general(cell.v);\n\t\t}\n\t\telse cell.w = xlml_format(nf||\"General\", cell.v);\n\t} catch(e) { if(o.WTF) throw e; }\n\ttry {\n\t\tvar z = XLMLFormatMap[nf]||nf||\"General\";\n\t\tif(o.cellNF) cell.z = z;\n\t\tif(o.cellDates && cell.t == 'n' && fmt_is_date(z)) {\n\t\t\tvar _d = SSF_parse_date_code(cell.v); if(_d) { cell.t = 'd'; cell.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t\t}\n\t} catch(e) { if(o.WTF) throw e; }\n}\n\nfunction process_style_xlml(styles, stag, opts) {\n\tif(opts.cellStyles) {\n\t\tif(stag.Interior) {\n\t\t\tvar I = stag.Interior;\n\t\t\tif(I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\n\t\t}\n\t}\n\tstyles[stag.ID] = stag;\n}\n\n/* TODO: there must exist some form of OSP-blessed spec */\nfunction parse_xlml_data(xml, ss, data, cell/*:any*/, base, styles, csty, row, arrayf, o) {\n\tvar nf = \"General\", sid = cell.StyleID, S = {}; o = o || {};\n\tvar interiors = [];\n\tvar i = 0;\n\tif(sid === undefined && row) sid = row.StyleID;\n\tif(sid === undefined && csty) sid = csty.StyleID;\n\twhile(styles[sid] !== undefined) {\n\t\tif(styles[sid].nf) nf = styles[sid].nf;\n\t\tif(styles[sid].Interior) interiors.push(styles[sid].Interior);\n\t\tif(!styles[sid].Parent) break;\n\t\tsid = styles[sid].Parent;\n\t}\n\tswitch(data.Type) {\n\t\tcase 'Boolean':\n\t\t\tcell.t = 'b';\n\t\t\tcell.v = parsexmlbool(xml);\n\t\t\tbreak;\n\t\tcase 'String':\n\t\t\tcell.t = 's'; cell.r = xlml_fixstr(unescapexml(xml));\n\t\t\tcell.v = (xml.indexOf(\"<\") > -1 ? unescapexml(ss||xml).replace(/<.*?>/g, \"\") : cell.r); // todo: BR etc\n\t\t\tbreak;\n\t\tcase 'DateTime':\n\t\t\tif(xml.slice(-1) != \"Z\") xml += \"Z\";\n\t\t\tcell.v = (parseDate(xml) - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n\t\t\tif(cell.v !== cell.v) cell.v = unescapexml(xml);\n\t\t\telse if(cell.v<60) cell.v = cell.v -1;\n\t\t\tif(!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\n\t\t\t/* falls through */\n\t\tcase 'Number':\n\t\t\tif(cell.v === undefined) cell.v=+xml;\n\t\t\tif(!cell.t) cell.t = 'n';\n\t\t\tbreak;\n\t\tcase 'Error': cell.t = 'e'; cell.v = RBErr[xml]; if(o.cellText !== false) cell.w = xml; break;\n\t\tdefault:\n\t\t\tif(xml == \"\" && ss == \"\") { cell.t = 'z'; }\n\t\t\telse { cell.t = 's'; cell.v = xlml_fixstr(ss||xml); }\n\t\t\tbreak;\n\t}\n\tsafe_format_xlml(cell, nf, o);\n\tif(o.cellFormula !== false) {\n\t\tif(cell.Formula) {\n\t\t\tvar fstr = unescapexml(cell.Formula);\n\t\t\t/* strictly speaking, the leading = is required but some writers omit */\n\t\t\tif(fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\n\t\t\tcell.f = rc_to_a1(fstr, base);\n\t\t\tdelete cell.Formula;\n\t\t\tif(cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);\n\t\t\telse if(cell.ArrayRange) {\n\t\t\t\tcell.F = rc_to_a1(cell.ArrayRange, base);\n\t\t\t\tarrayf.push([safe_decode_range(cell.F), cell.F]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\tif(base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r)\n\t\t\t\t\tif(base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\tcell.F = arrayf[i][1];\n\t\t}\n\t}\n\tif(o.cellStyles) {\n\t\tinteriors.forEach(function(x) {\n\t\t\tif(!S.patternType && x.patternType) S.patternType = x.patternType;\n\t\t});\n\t\tcell.s = S;\n\t}\n\tif(cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\n}\n\nfunction xlml_clean_comment(comment/*:any*/) {\n\tcomment.t = comment.v || \"\";\n\tcomment.t = comment.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\tcomment.v = comment.w = comment.ixfe = undefined;\n}\n\n/* TODO: Everything */\nfunction parse_xlml_xml(d, _opts)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tmake_ssf();\n\tvar str = debom(xlml_normalize(d));\n\tif(opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\n\t\tif(typeof $cptable !== 'undefined') str = $cptable.utils.decode(65001, char_codes(str));\n\t\telse str = utf8read(str);\n\t}\n\tvar opening = str.slice(0, 1024).toLowerCase(), ishtml = false;\n\topening = opening.replace(/\".*?\"/g, \"\");\n\tif((opening.indexOf(\">\") & 1023) > Math.min((opening.indexOf(\",\") & 1023), (opening.indexOf(\";\")&1023))) { var _o = dup(opts); _o.type = \"string\"; return PRN.to_workbook(str, _o); }\n\tif(opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function(tag) { if(opening.indexOf(\"<\" + tag) >= 0) ishtml = true; });\n\tif(ishtml) return html_to_workbook(str, opts);\n\n\tXLMLFormatMap = ({\n\t\t\"General Number\": \"General\",\n\t\t\"General Date\": table_fmt[22],\n\t\t\"Long Date\": \"dddd, mmmm dd, yyyy\",\n\t\t\"Medium Date\": table_fmt[15],\n\t\t\"Short Date\": table_fmt[14],\n\t\t\"Long Time\": table_fmt[19],\n\t\t\"Medium Time\": table_fmt[18],\n\t\t\"Short Time\": table_fmt[20],\n\t\t\"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\t\"Fixed\": table_fmt[2],\n\t\t\"Standard\": table_fmt[4],\n\t\t\"Percent\": table_fmt[10],\n\t\t\"Scientific\": table_fmt[11],\n\t\t\"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\n\t\t\"True/False\": '\"True\";\"True\";\"False\";@',\n\t\t\"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\n\t}/*:any*/);\n\n\n\tvar Rn;\n\tvar state = [], tmp;\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar sheets = {}, sheetnames/*:Array<string>*/ = [], cursheet/*:Worksheet*/ = (opts.dense ? [] : {}), sheetname = \"\";\n\tvar cell = ({}/*:any*/), row = {};// eslint-disable-line no-unused-vars\n\tvar dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'), didx = 0;\n\tvar c = 0, r = 0;\n\tvar refguess/*:Range*/ = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\tvar styles = {}, stag = {};\n\tvar ss = \"\", fidx = 0;\n\tvar merges/*:Array<Range>*/ = [];\n\tvar Props = {}, Custprops = {}, pidx = 0, cp = [];\n\tvar comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);\n\tvar cstys = [], csty, seencol = false;\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar rowinfo/*:Array<RowInfo>*/ = [], rowobj = {}, cc = 0, rr = 0;\n\tvar Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false} }/*:any*/), wsprops = {};\n\txlmlregex.lastIndex = 0;\n\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\");\n\tvar raw_Rn3 = \"\";\n\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3] = (raw_Rn3 = Rn[3]).toLowerCase())) {\n\t\tcase 'data' /*case 'Data'*/:\n\t\t\tif(raw_Rn3 == \"data\") {\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(state[state.length-1][1]) break;\n\t\t\tif(Rn[1]==='/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length-1][0]==/*\"Comment\"*/\"comment\"?comment:cell, {c:c,r:r}, styles, cstys[c], row, arrayf, opts);\n\t\t\telse { ss = \"\"; dtag = xlml_parsexmltag(Rn[0]); didx = Rn.index + Rn[0].length; }\n\t\t\tbreak;\n\t\tcase 'cell' /*case 'Cell'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif(comments.length > 0) cell.c = comments;\n\t\t\t\tif((!opts.sheetRows || opts.sheetRows > r) && cell.v !== undefined) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!cursheet[r]) cursheet[r] = [];\n\t\t\t\t\t\tcursheet[r][c] = cell;\n\t\t\t\t\t} else cursheet[encode_col(c) + encode_row(r)] = cell;\n\t\t\t\t}\n\t\t\t\tif(cell.HRef) {\n\t\t\t\t\tcell.l = ({Target:unescapexml(cell.HRef)}/*:any*/);\n\t\t\t\t\tif(cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\n\t\t\t\t\tdelete cell.HRef; delete cell.HRefScreenTip;\n\t\t\t\t}\n\t\t\t\tif(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\tcc = c + (parseInt(cell.MergeAcross,10)|0);\n\t\t\t\t\trr = r + (parseInt(cell.MergeDown,10)|0);\n\t\t\t\t\tmerges.push({s:{c:c,r:r},e:{c:cc,r:rr}});\n\t\t\t\t}\n\t\t\t\tif(!opts.sheetStubs) { if(cell.MergeAcross) c = cc + 1; else ++c; }\n\t\t\t\telse if(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\t/*:: if(!cc) cc = 0; if(!rr) rr = 0; */\n\t\t\t\t\tfor(var cma = c; cma <= cc; ++cma) {\n\t\t\t\t\t\tfor(var cmd = r; cmd <= rr; ++cmd) {\n\t\t\t\t\t\t\tif(cma > c || cmd > r) {\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!cursheet[cmd]) cursheet[cmd] = [];\n\t\t\t\t\t\t\t\t\tcursheet[cmd][cma] = {t:'z'};\n\t\t\t\t\t\t\t\t} else cursheet[encode_col(cma) + encode_row(cmd)] = {t:'z'};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tc = cc + 1;\n\t\t\t\t}\n\t\t\t\telse ++c;\n\t\t\t} else {\n\t\t\t\tcell = xlml_parsexmltagobj(Rn[0]);\n\t\t\t\tif(cell.Index) c = +cell.Index - 1;\n\t\t\t\tif(c < refguess.s.c) refguess.s.c = c;\n\t\t\t\tif(c > refguess.e.c) refguess.e.c = c;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") ++c;\n\t\t\t\tcomments = [];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'row' /*case 'Row'*/:\n\t\t\tif(Rn[1]==='/' || Rn[0].slice(-2) === \"/>\") {\n\t\t\t\tif(r < refguess.s.r) refguess.s.r = r;\n\t\t\t\tif(r > refguess.e.r) refguess.e.r = r;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") {\n\t\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\t}\n\t\t\t\tc = 0; ++r;\n\t\t\t} else {\n\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\trowobj = {};\n\t\t\t\tif(row.AutoFitHeight == \"0\" || row.Height) {\n\t\t\t\t\trowobj.hpx = parseInt(row.Height, 10); rowobj.hpt = px2pt(rowobj.hpx);\n\t\t\t\t\trowinfo[r] = rowobj;\n\t\t\t\t}\n\t\t\t\tif(row.Hidden == \"1\") { rowobj.hidden = true; rowinfo[r] = rowobj; }\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'worksheet' /*case 'Worksheet'*/: /* TODO: read range from FullRows/FullColumns */\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\tsheetnames.push(sheetname);\n\t\t\t\tif(refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\n\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows <= refguess.e.r) {\n\t\t\t\t\t\tcursheet[\"!fullref\"] = cursheet[\"!ref\"];\n\t\t\t\t\t\trefguess.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(merges.length) cursheet[\"!merges\"] = merges;\n\t\t\t\tif(cstys.length > 0) cursheet[\"!cols\"] = cstys;\n\t\t\t\tif(rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\n\t\t\t\tsheets[sheetname] = cursheet;\n\t\t\t} else {\n\t\t\t\trefguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\t\t\t\tr = c = 0;\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tsheetname = unescapexml(tmp.Name);\n\t\t\t\tcursheet = (opts.dense ? [] : {});\n\t\t\t\tmerges = [];\n\t\t\t\tarrayf = [];\n\t\t\t\trowinfo = [];\n\t\t\t\twsprops = {name:sheetname, Hidden:0};\n\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'table' /*case 'Table'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].slice(-2) == \"/>\") break;\n\t\t\telse {\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\tcstys = []; seencol = false;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'style' /*case 'Style'*/:\n\t\t\tif(Rn[1]==='/') process_style_xlml(styles, stag, opts);\n\t\t\telse stag = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\n\t\tcase 'numberformat' /*case 'NumberFormat'*/:\n\t\t\tstag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\n\t\t\tif(XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\n\t\t\tfor(var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if(table_fmt[ssfidx] == stag.nf) break;\n\t\t\tif(ssfidx == 0x188) for(ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if(table_fmt[ssfidx] == null) { SSF_load(stag.nf, ssfidx); break; }\n\t\t\tbreak;\n\n\t\tcase 'column' /*case 'Column'*/:\n\t\t\tif(state[state.length-1][0] !== /*'Table'*/'table') break;\n\t\t\tcsty = xlml_parsexmltag(Rn[0]);\n\t\t\tif(csty.Hidden) { csty.hidden = true; delete csty.Hidden; }\n\t\t\tif(csty.Width) csty.wpx = parseInt(csty.Width, 10);\n\t\t\tif(!seencol && csty.wpx > 10) {\n\t\t\t\tseencol = true; MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\n\t\t\t\tfor(var _col = 0; _col < cstys.length; ++_col) if(cstys[_col]) process_col(cstys[_col]);\n\t\t\t}\n\t\t\tif(seencol) process_col(csty);\n\t\t\tcstys[(csty.Index-1||cstys.length)] = csty;\n\t\t\tfor(var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\n\t\t\tbreak;\n\n\t\tcase 'namedrange' /*case 'NamedRange'*/:\n\t\t\tif(Rn[1]==='/') break;\n\t\t\tif(!Workbook.Names) Workbook.Names = [];\n\t\t\tvar _NamedRange = parsexmltag(Rn[0]);\n\t\t\tvar _DefinedName/*:DefinedName*/ = ({\n\t\t\t\tName: _NamedRange.Name,\n\t\t\t\tRef: rc_to_a1(_NamedRange.RefersTo.slice(1), {r:0, c:0})\n\t\t\t}/*:any*/);\n\t\t\tif(Workbook.Sheets.length>0) _DefinedName.Sheet=Workbook.Sheets.length-1;\n\t\t\t/*:: if(Workbook.Names) */Workbook.Names.push(_DefinedName);\n\t\t\tbreak;\n\n\t\tcase 'namedcell' /*case 'NamedCell'*/: break;\n\t\tcase 'b' /*case 'B'*/: break;\n\t\tcase 'i' /*case 'I'*/: break;\n\t\tcase 'u' /*case 'U'*/: break;\n\t\tcase 's' /*case 'S'*/: break;\n\t\tcase 'em' /*case 'EM'*/: break;\n\t\tcase 'h2' /*case 'H2'*/: break;\n\t\tcase 'h3' /*case 'H3'*/: break;\n\t\tcase 'sub' /*case 'Sub'*/: break;\n\t\tcase 'sup' /*case 'Sup'*/: break;\n\t\tcase 'span' /*case 'Span'*/: break;\n\t\tcase 'alignment' /*case 'Alignment'*/:\n\t\t\tbreak;\n\t\tcase 'borders' /*case 'Borders'*/: break;\n\t\tcase 'border' /*case 'Border'*/: break;\n\t\tcase 'font' /*case 'Font'*/:\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") ss += str.slice(fidx, Rn.index);\n\t\t\telse fidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'interior' /*case 'Interior'*/:\n\t\t\tif(!opts.cellStyles) break;\n\t\t\tstag.Interior = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\t\tcase 'protection' /*case 'Protection'*/: break;\n\n\t\tcase 'author' /*case 'Author'*/:\n\t\tcase 'title' /*case 'Title'*/:\n\t\tcase 'description' /*case 'Description'*/:\n\t\tcase 'created' /*case 'Created'*/:\n\t\tcase 'keywords' /*case 'Keywords'*/:\n\t\tcase 'subject' /*case 'Subject'*/:\n\t\tcase 'category' /*case 'Category'*/:\n\t\tcase 'company' /*case 'Company'*/:\n\t\tcase 'lastauthor' /*case 'LastAuthor'*/:\n\t\tcase 'lastsaved' /*case 'LastSaved'*/:\n\t\tcase 'lastprinted' /*case 'LastPrinted'*/:\n\t\tcase 'version' /*case 'Version'*/:\n\t\tcase 'revision' /*case 'Revision'*/:\n\t\tcase 'totaltime' /*case 'TotalTime'*/:\n\t\tcase 'hyperlinkbase' /*case 'HyperlinkBase'*/:\n\t\tcase 'manager' /*case 'Manager'*/:\n\t\tcase 'contentstatus' /*case 'ContentStatus'*/:\n\t\tcase 'identifier' /*case 'Identifier'*/:\n\t\tcase 'language' /*case 'Language'*/:\n\t\tcase 'appname' /*case 'AppName'*/:\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") xlml_set_prop(Props, raw_Rn3, str.slice(pidx, Rn.index));\n\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'paragraphs' /*case 'Paragraphs'*/: break;\n\n\t\tcase 'styles' /*case 'Styles'*/:\n\t\tcase 'workbook' /*case 'Workbook'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse state.push([Rn[3], false]);\n\t\t\tbreak;\n\n\t\tcase 'comment' /*case 'Comment'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\txlml_clean_comment(comment);\n\t\t\t\tcomments.push(comment);\n\t\t\t} else {\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcomment = ({a:tmp.Author}/*:any*/);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'autofilter' /*case 'AutoFilter'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\tvar AutoFilter = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcursheet['!autofilter'] = { ref:rc_to_a1(AutoFilter.Range).replace(/\\$/g,\"\") };\n\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'name' /*case 'Name'*/: break;\n\n\t\tcase 'datavalidation' /*case 'DataValidation'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t} else {\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'pixelsperinch' /*case 'PixelsPerInch'*/:\n\t\t\tbreak;\n\t\tcase 'componentoptions' /*case 'ComponentOptions'*/:\n\t\tcase 'documentproperties' /*case 'DocumentProperties'*/:\n\t\tcase 'customdocumentproperties' /*case 'CustomDocumentProperties'*/:\n\t\tcase 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n\t\tcase 'pivottable' /*case 'PivotTable'*/:\n\t\tcase 'pivotcache' /*case 'PivotCache'*/:\n\t\tcase 'names' /*case 'Names'*/:\n\t\tcase 'mapinfo' /*case 'MapInfo'*/:\n\t\tcase 'pagebreaks' /*case 'PageBreaks'*/:\n\t\tcase 'querytable' /*case 'QueryTable'*/:\n\t\tcase 'sorting' /*case 'Sorting'*/:\n\t\tcase 'schema' /*case 'Schema'*/: //case 'data' /*case 'data'*/:\n\t\tcase 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n\t\tcase 'smarttagtype' /*case 'SmartTagType'*/:\n\t\tcase 'smarttags' /*case 'SmartTags'*/:\n\t\tcase 'excelworkbook' /*case 'ExcelWorkbook'*/:\n\t\tcase 'workbookoptions' /*case 'WorkbookOptions'*/:\n\t\tcase 'worksheetoptions' /*case 'WorksheetOptions'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\tbreak;\n\n\t\tcase 'null' /*case 'Null'*/: break;\n\n\t\tdefault:\n\t\t\t/* FODS file root is <office:document> */\n\t\t\tif(state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\n\t\t\t/* UOS file root is <uof:UOF> */\n\t\t\tif(state.length == 0 && Rn[3] == \"uof\"/*\"UOF\"*/) return parse_fods(str, opts);\n\n\t\t\tvar seen = true;\n\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t/* OfficeDocumentSettings */\n\t\t\t\tcase 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'allowpng' /*case 'AllowPNG'*/: break;\n\t\t\t\t\tcase 'removepersonalinformation' /*case 'RemovePersonalInformation'*/: break;\n\t\t\t\t\tcase 'downloadcomponents' /*case 'DownloadComponents'*/: break;\n\t\t\t\t\tcase 'locationofcomponents' /*case 'LocationOfComponents'*/: break;\n\t\t\t\t\tcase 'colors' /*case 'Colors'*/: break;\n\t\t\t\t\tcase 'color' /*case 'Color'*/: break;\n\t\t\t\t\tcase 'index' /*case 'Index'*/: break;\n\t\t\t\t\tcase 'rgb' /*case 'RGB'*/: break;\n\t\t\t\t\tcase 'targetscreensize' /*case 'TargetScreenSize'*/: break;\n\t\t\t\t\tcase 'readonlyrecommended' /*case 'ReadOnlyRecommended'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ComponentOptions */\n\t\t\t\tcase 'componentoptions' /*case 'ComponentOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'toolbar' /*case 'Toolbar'*/: break;\n\t\t\t\t\tcase 'hideofficelogo' /*case 'HideOfficeLogo'*/: break;\n\t\t\t\t\tcase 'spreadsheetautofit' /*case 'SpreadsheetAutoFit'*/: break;\n\t\t\t\t\tcase 'label' /*case 'Label'*/: break;\n\t\t\t\t\tcase 'caption' /*case 'Caption'*/: break;\n\t\t\t\t\tcase 'maxheight' /*case 'MaxHeight'*/: break;\n\t\t\t\t\tcase 'maxwidth' /*case 'MaxWidth'*/: break;\n\t\t\t\t\tcase 'nextsheetnumber' /*case 'NextSheetNumber'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ExcelWorkbook */\n\t\t\t\tcase 'excelworkbook' /*case 'ExcelWorkbook'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'date1904' /*case 'Date1904'*/:\n\t\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\t\tWorkbook.WBProps.date1904 = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'windowheight' /*case 'WindowHeight'*/: break;\n\t\t\t\t\tcase 'windowwidth' /*case 'WindowWidth'*/: break;\n\t\t\t\t\tcase 'windowtopx' /*case 'WindowTopX'*/: break;\n\t\t\t\t\tcase 'windowtopy' /*case 'WindowTopY'*/: break;\n\t\t\t\t\tcase 'tabratio' /*case 'TabRatio'*/: break;\n\t\t\t\t\tcase 'protectstructure' /*case 'ProtectStructure'*/: break;\n\t\t\t\t\tcase 'protectwindow' /*case 'ProtectWindow'*/: break;\n\t\t\t\t\tcase 'protectwindows' /*case 'ProtectWindows'*/: break;\n\t\t\t\t\tcase 'activesheet' /*case 'ActiveSheet'*/: break;\n\t\t\t\t\tcase 'displayinknotes' /*case 'DisplayInkNotes'*/: break;\n\t\t\t\t\tcase 'firstvisiblesheet' /*case 'FirstVisibleSheet'*/: break;\n\t\t\t\t\tcase 'supbook' /*case 'SupBook'*/: break;\n\t\t\t\t\tcase 'sheetname' /*case 'SheetName'*/: break;\n\t\t\t\t\tcase 'sheetindex' /*case 'SheetIndex'*/: break;\n\t\t\t\t\tcase 'sheetindexfirst' /*case 'SheetIndexFirst'*/: break;\n\t\t\t\t\tcase 'sheetindexlast' /*case 'SheetIndexLast'*/: break;\n\t\t\t\t\tcase 'dll' /*case 'Dll'*/: break;\n\t\t\t\t\tcase 'acceptlabelsinformulas' /*case 'AcceptLabelsInFormulas'*/: break;\n\t\t\t\t\tcase 'donotsavelinkvalues' /*case 'DoNotSaveLinkValues'*/: break;\n\t\t\t\t\tcase 'iteration' /*case 'Iteration'*/: break;\n\t\t\t\t\tcase 'maxiterations' /*case 'MaxIterations'*/: break;\n\t\t\t\t\tcase 'maxchange' /*case 'MaxChange'*/: break;\n\t\t\t\t\tcase 'path' /*case 'Path'*/: break;\n\t\t\t\t\tcase 'xct' /*case 'Xct'*/: break;\n\t\t\t\t\tcase 'count' /*case 'Count'*/: break;\n\t\t\t\t\tcase 'selectedsheets' /*case 'SelectedSheets'*/: break;\n\t\t\t\t\tcase 'calculation' /*case 'Calculation'*/: break;\n\t\t\t\t\tcase 'uncalced' /*case 'Uncalced'*/: break;\n\t\t\t\t\tcase 'startupprompt' /*case 'StartupPrompt'*/: break;\n\t\t\t\t\tcase 'crn' /*case 'Crn'*/: break;\n\t\t\t\t\tcase 'externname' /*case 'ExternName'*/: break;\n\t\t\t\t\tcase 'formula' /*case 'Formula'*/: break;\n\t\t\t\t\tcase 'colfirst' /*case 'ColFirst'*/: break;\n\t\t\t\t\tcase 'collast' /*case 'ColLast'*/: break;\n\t\t\t\t\tcase 'wantadvise' /*case 'WantAdvise'*/: break;\n\t\t\t\t\tcase 'boolean' /*case 'Boolean'*/: break;\n\t\t\t\t\tcase 'error' /*case 'Error'*/: break;\n\t\t\t\t\tcase 'text' /*case 'Text'*/: break;\n\t\t\t\t\tcase 'ole' /*case 'OLE'*/: break;\n\t\t\t\t\tcase 'noautorecover' /*case 'NoAutoRecover'*/: break;\n\t\t\t\t\tcase 'publishobjects' /*case 'PublishObjects'*/: break;\n\t\t\t\t\tcase 'donotcalculatebeforesave' /*case 'DoNotCalculateBeforeSave'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'refmoder1c1' /*case 'RefModeR1C1'*/: break;\n\t\t\t\t\tcase 'embedsavesmarttags' /*case 'EmbedSaveSmartTags'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorkbookOptions */\n\t\t\t\tcase 'workbookoptions' /*case 'WorkbookOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'owcversion' /*case 'OWCVersion'*/: break;\n\t\t\t\t\tcase 'height' /*case 'Height'*/: break;\n\t\t\t\t\tcase 'width' /*case 'Width'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorksheetOptions */\n\t\t\t\tcase 'worksheetoptions' /*case 'WorksheetOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'visible' /*case 'Visible'*/:\n\t\t\t\t\t\tif(Rn[0].slice(-2) === \"/>\"){/* empty */}\n\t\t\t\t\t\telse if(Rn[1]===\"/\") switch(str.slice(pidx, Rn.index)) {\n\t\t\t\t\t\t\tcase \"SheetHidden\": wsprops.Hidden = 1; break;\n\t\t\t\t\t\t\tcase \"SheetVeryHidden\": wsprops.Hidden = 2; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'header' /*case 'Header'*/:\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tif(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].header = +parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'footer' /*case 'Footer'*/:\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tif(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].footer = +parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'pagemargins' /*case 'PageMargins'*/:\n\t\t\t\t\t\tvar pagemargins = parsexmltag(Rn[0]);\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={},'xlml');\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Top)) cursheet['!margins'].top = +pagemargins.Top;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Left)) cursheet['!margins'].left = +pagemargins.Left;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Right)) cursheet['!margins'].right = +pagemargins.Right;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Bottom)) cursheet['!margins'].bottom = +pagemargins.Bottom;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'displayrighttoleft' /*case 'DisplayRightToLeft'*/:\n\t\t\t\t\t\tif(!Workbook.Views) Workbook.Views = [];\n\t\t\t\t\t\tif(!Workbook.Views[0]) Workbook.Views[0] = {};\n\t\t\t\t\t\tWorkbook.Views[0].RTL = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'freezepanes' /*case 'FreezePanes'*/: break;\n\t\t\t\t\tcase 'frozennosplit' /*case 'FrozenNoSplit'*/: break;\n\n\t\t\t\t\tcase 'splithorizontal' /*case 'SplitHorizontal'*/:\n\t\t\t\t\tcase 'splitvertical' /*case 'SplitVertical'*/:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'donotdisplaygridlines' /*case 'DoNotDisplayGridlines'*/:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'activerow' /*case 'ActiveRow'*/: break;\n\t\t\t\t\tcase 'activecol' /*case 'ActiveCol'*/: break;\n\t\t\t\t\tcase 'toprowbottompane' /*case 'TopRowBottomPane'*/: break;\n\t\t\t\t\tcase 'leftcolumnrightpane' /*case 'LeftColumnRightPane'*/: break;\n\n\t\t\t\t\tcase 'unsynced' /*case 'Unsynced'*/: break;\n\t\t\t\t\tcase 'print' /*case 'Print'*/: break;\n\t\t\t\t\tcase 'printerrors' /*case 'PrintErrors'*/: break;\n\t\t\t\t\tcase 'panes' /*case 'Panes'*/: break;\n\t\t\t\t\tcase 'scale' /*case 'Scale'*/: break;\n\t\t\t\t\tcase 'pane' /*case 'Pane'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'layout' /*case 'Layout'*/: break;\n\t\t\t\t\tcase 'pagesetup' /*case 'PageSetup'*/: break;\n\t\t\t\t\tcase 'selected' /*case 'Selected'*/: break;\n\t\t\t\t\tcase 'protectobjects' /*case 'ProtectObjects'*/: break;\n\t\t\t\t\tcase 'enableselection' /*case 'EnableSelection'*/: break;\n\t\t\t\t\tcase 'protectscenarios' /*case 'ProtectScenarios'*/: break;\n\t\t\t\t\tcase 'validprinterinfo' /*case 'ValidPrinterInfo'*/: break;\n\t\t\t\t\tcase 'horizontalresolution' /*case 'HorizontalResolution'*/: break;\n\t\t\t\t\tcase 'verticalresolution' /*case 'VerticalResolution'*/: break;\n\t\t\t\t\tcase 'numberofcopies' /*case 'NumberofCopies'*/: break;\n\t\t\t\t\tcase 'activepane' /*case 'ActivePane'*/: break;\n\t\t\t\t\tcase 'toprowvisible' /*case 'TopRowVisible'*/: break;\n\t\t\t\t\tcase 'leftcolumnvisible' /*case 'LeftColumnVisible'*/: break;\n\t\t\t\t\tcase 'fittopage' /*case 'FitToPage'*/: break;\n\t\t\t\t\tcase 'rangeselection' /*case 'RangeSelection'*/: break;\n\t\t\t\t\tcase 'papersizeindex' /*case 'PaperSizeIndex'*/: break;\n\t\t\t\t\tcase 'pagelayoutzoom' /*case 'PageLayoutZoom'*/: break;\n\t\t\t\t\tcase 'pagebreakzoom' /*case 'PageBreakZoom'*/: break;\n\t\t\t\t\tcase 'filteron' /*case 'FilterOn'*/: break;\n\t\t\t\t\tcase 'fitwidth' /*case 'FitWidth'*/: break;\n\t\t\t\t\tcase 'fitheight' /*case 'FitHeight'*/: break;\n\t\t\t\t\tcase 'commentslayout' /*case 'CommentsLayout'*/: break;\n\t\t\t\t\tcase 'zoom' /*case 'Zoom'*/: break;\n\t\t\t\t\tcase 'lefttoright' /*case 'LeftToRight'*/: break;\n\t\t\t\t\tcase 'gridlines' /*case 'Gridlines'*/: break;\n\t\t\t\t\tcase 'allowsort' /*case 'AllowSort'*/: break;\n\t\t\t\t\tcase 'allowfilter' /*case 'AllowFilter'*/: break;\n\t\t\t\t\tcase 'allowinsertrows' /*case 'AllowInsertRows'*/: break;\n\t\t\t\t\tcase 'allowdeleterows' /*case 'AllowDeleteRows'*/: break;\n\t\t\t\t\tcase 'allowinsertcols' /*case 'AllowInsertCols'*/: break;\n\t\t\t\t\tcase 'allowdeletecols' /*case 'AllowDeleteCols'*/: break;\n\t\t\t\t\tcase 'allowinserthyperlinks' /*case 'AllowInsertHyperlinks'*/: break;\n\t\t\t\t\tcase 'allowformatcells' /*case 'AllowFormatCells'*/: break;\n\t\t\t\t\tcase 'allowsizecols' /*case 'AllowSizeCols'*/: break;\n\t\t\t\t\tcase 'allowsizerows' /*case 'AllowSizeRows'*/: break;\n\t\t\t\t\tcase 'nosummaryrowsbelowdetail' /*case 'NoSummaryRowsBelowDetail'*/:\n\t\t\t\t\t\tif(!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n\t\t\t\t\t\tcursheet[\"!outline\"].above = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'tabcolorindex' /*case 'TabColorIndex'*/: break;\n\t\t\t\t\tcase 'donotdisplayheadings' /*case 'DoNotDisplayHeadings'*/: break;\n\t\t\t\t\tcase 'showpagelayoutzoom' /*case 'ShowPageLayoutZoom'*/: break;\n\t\t\t\t\tcase 'nosummarycolumnsrightdetail' /*case 'NoSummaryColumnsRightDetail'*/:\n\t\t\t\t\t\tif(!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n\t\t\t\t\t\tcursheet[\"!outline\"].left = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blackandwhite' /*case 'BlackAndWhite'*/: break;\n\t\t\t\t\tcase 'donotdisplayzeros' /*case 'DoNotDisplayZeros'*/: break;\n\t\t\t\t\tcase 'displaypagebreak' /*case 'DisplayPageBreak'*/: break;\n\t\t\t\t\tcase 'rowcolheadings' /*case 'RowColHeadings'*/: break;\n\t\t\t\t\tcase 'donotdisplayoutline' /*case 'DoNotDisplayOutline'*/: break;\n\t\t\t\t\tcase 'noorientation' /*case 'NoOrientation'*/: break;\n\t\t\t\t\tcase 'allowusepivottables' /*case 'AllowUsePivotTables'*/: break;\n\t\t\t\t\tcase 'zeroheight' /*case 'ZeroHeight'*/: break;\n\t\t\t\t\tcase 'viewablerange' /*case 'ViewableRange'*/: break;\n\t\t\t\t\tcase 'selection' /*case 'Selection'*/: break;\n\t\t\t\t\tcase 'protectcontents' /*case 'ProtectContents'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PivotTable */\n\t\t\t\tcase 'pivottable' /*case 'PivotTable'*/: case 'pivotcache' /*case 'PivotCache'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'immediateitemsondrop' /*case 'ImmediateItemsOnDrop'*/: break;\n\t\t\t\t\tcase 'showpagemultipleitemlabel' /*case 'ShowPageMultipleItemLabel'*/: break;\n\t\t\t\t\tcase 'compactrowindent' /*case 'CompactRowIndent'*/: break;\n\t\t\t\t\tcase 'location' /*case 'Location'*/: break;\n\t\t\t\t\tcase 'pivotfield' /*case 'PivotField'*/: break;\n\t\t\t\t\tcase 'orientation' /*case 'Orientation'*/: break;\n\t\t\t\t\tcase 'layoutform' /*case 'LayoutForm'*/: break;\n\t\t\t\t\tcase 'layoutsubtotallocation' /*case 'LayoutSubtotalLocation'*/: break;\n\t\t\t\t\tcase 'layoutcompactrow' /*case 'LayoutCompactRow'*/: break;\n\t\t\t\t\tcase 'position' /*case 'Position'*/: break;\n\t\t\t\t\tcase 'pivotitem' /*case 'PivotItem'*/: break;\n\t\t\t\t\tcase 'datatype' /*case 'DataType'*/: break;\n\t\t\t\t\tcase 'datafield' /*case 'DataField'*/: break;\n\t\t\t\t\tcase 'sourcename' /*case 'SourceName'*/: break;\n\t\t\t\t\tcase 'parentfield' /*case 'ParentField'*/: break;\n\t\t\t\t\tcase 'ptlineitems' /*case 'PTLineItems'*/: break;\n\t\t\t\t\tcase 'ptlineitem' /*case 'PTLineItem'*/: break;\n\t\t\t\t\tcase 'countofsameitems' /*case 'CountOfSameItems'*/: break;\n\t\t\t\t\tcase 'item' /*case 'Item'*/: break;\n\t\t\t\t\tcase 'itemtype' /*case 'ItemType'*/: break;\n\t\t\t\t\tcase 'ptsource' /*case 'PTSource'*/: break;\n\t\t\t\t\tcase 'cacheindex' /*case 'CacheIndex'*/: break;\n\t\t\t\t\tcase 'consolidationreference' /*case 'ConsolidationReference'*/: break;\n\t\t\t\t\tcase 'filename' /*case 'FileName'*/: break;\n\t\t\t\t\tcase 'reference' /*case 'Reference'*/: break;\n\t\t\t\t\tcase 'nocolumngrand' /*case 'NoColumnGrand'*/: break;\n\t\t\t\t\tcase 'norowgrand' /*case 'NoRowGrand'*/: break;\n\t\t\t\t\tcase 'blanklineafteritems' /*case 'BlankLineAfterItems'*/: break;\n\t\t\t\t\tcase 'hidden' /*case 'Hidden'*/: break;\n\t\t\t\t\tcase 'subtotal' /*case 'Subtotal'*/: break;\n\t\t\t\t\tcase 'basefield' /*case 'BaseField'*/: break;\n\t\t\t\t\tcase 'mapchilditems' /*case 'MapChildItems'*/: break;\n\t\t\t\t\tcase 'function' /*case 'Function'*/: break;\n\t\t\t\t\tcase 'refreshonfileopen' /*case 'RefreshOnFileOpen'*/: break;\n\t\t\t\t\tcase 'printsettitles' /*case 'PrintSetTitles'*/: break;\n\t\t\t\t\tcase 'mergelabels' /*case 'MergeLabels'*/: break;\n\t\t\t\t\tcase 'defaultversion' /*case 'DefaultVersion'*/: break;\n\t\t\t\t\tcase 'refreshname' /*case 'RefreshName'*/: break;\n\t\t\t\t\tcase 'refreshdate' /*case 'RefreshDate'*/: break;\n\t\t\t\t\tcase 'refreshdatecopy' /*case 'RefreshDateCopy'*/: break;\n\t\t\t\t\tcase 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;\n\t\t\t\t\tcase 'versionlastupdate' /*case 'VersionLastUpdate'*/: break;\n\t\t\t\t\tcase 'versionupdateablemin' /*case 'VersionUpdateableMin'*/: break;\n\t\t\t\t\tcase 'versionrefreshablemin' /*case 'VersionRefreshableMin'*/: break;\n\t\t\t\t\tcase 'calculation' /*case 'Calculation'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PageBreaks */\n\t\t\t\tcase 'pagebreaks' /*case 'PageBreaks'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'colbreaks' /*case 'ColBreaks'*/: break;\n\t\t\t\t\tcase 'colbreak' /*case 'ColBreak'*/: break;\n\t\t\t\t\tcase 'rowbreaks' /*case 'RowBreaks'*/: break;\n\t\t\t\t\tcase 'rowbreak' /*case 'RowBreak'*/: break;\n\t\t\t\t\tcase 'colstart' /*case 'ColStart'*/: break;\n\t\t\t\t\tcase 'colend' /*case 'ColEnd'*/: break;\n\t\t\t\t\tcase 'rowend' /*case 'RowEnd'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* AutoFilter */\n\t\t\t\tcase 'autofilter' /*case 'AutoFilter'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'autofiltercolumn' /*case 'AutoFilterColumn'*/: break;\n\t\t\t\t\tcase 'autofiltercondition' /*case 'AutoFilterCondition'*/: break;\n\t\t\t\t\tcase 'autofilterand' /*case 'AutoFilterAnd'*/: break;\n\t\t\t\t\tcase 'autofilteror' /*case 'AutoFilterOr'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* QueryTable */\n\t\t\t\tcase 'querytable' /*case 'QueryTable'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'id' /*case 'Id'*/: break;\n\t\t\t\t\tcase 'autoformatfont' /*case 'AutoFormatFont'*/: break;\n\t\t\t\t\tcase 'autoformatpattern' /*case 'AutoFormatPattern'*/: break;\n\t\t\t\t\tcase 'querysource' /*case 'QuerySource'*/: break;\n\t\t\t\t\tcase 'querytype' /*case 'QueryType'*/: break;\n\t\t\t\t\tcase 'enableredirections' /*case 'EnableRedirections'*/: break;\n\t\t\t\t\tcase 'refreshedinxl9' /*case 'RefreshedInXl9'*/: break;\n\t\t\t\t\tcase 'urlstring' /*case 'URLString'*/: break;\n\t\t\t\t\tcase 'htmltables' /*case 'HTMLTables'*/: break;\n\t\t\t\t\tcase 'connection' /*case 'Connection'*/: break;\n\t\t\t\t\tcase 'commandtext' /*case 'CommandText'*/: break;\n\t\t\t\t\tcase 'refreshinfo' /*case 'RefreshInfo'*/: break;\n\t\t\t\t\tcase 'notitles' /*case 'NoTitles'*/: break;\n\t\t\t\t\tcase 'nextid' /*case 'NextId'*/: break;\n\t\t\t\t\tcase 'columninfo' /*case 'ColumnInfo'*/: break;\n\t\t\t\t\tcase 'overwritecells' /*case 'OverwriteCells'*/: break;\n\t\t\t\t\tcase 'donotpromptforfile' /*case 'DoNotPromptForFile'*/: break;\n\t\t\t\t\tcase 'textwizardsettings' /*case 'TextWizardSettings'*/: break;\n\t\t\t\t\tcase 'source' /*case 'Source'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'decimal' /*case 'Decimal'*/: break;\n\t\t\t\t\tcase 'thousandseparator' /*case 'ThousandSeparator'*/: break;\n\t\t\t\t\tcase 'trailingminusnumbers' /*case 'TrailingMinusNumbers'*/: break;\n\t\t\t\t\tcase 'formatsettings' /*case 'FormatSettings'*/: break;\n\t\t\t\t\tcase 'fieldtype' /*case 'FieldType'*/: break;\n\t\t\t\t\tcase 'delimiters' /*case 'Delimiters'*/: break;\n\t\t\t\t\tcase 'tab' /*case 'Tab'*/: break;\n\t\t\t\t\tcase 'comma' /*case 'Comma'*/: break;\n\t\t\t\t\tcase 'autoformatname' /*case 'AutoFormatName'*/: break;\n\t\t\t\t\tcase 'versionlastedit' /*case 'VersionLastEdit'*/: break;\n\t\t\t\t\tcase 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'datavalidation' /*case 'DataValidation'*/:\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\n\t\t\t\t\tcase 'type' /*case 'Type'*/: break;\n\t\t\t\t\tcase 'min' /*case 'Min'*/: break;\n\t\t\t\t\tcase 'max' /*case 'Max'*/: break;\n\t\t\t\t\tcase 'sort' /*case 'Sort'*/: break;\n\t\t\t\t\tcase 'descending' /*case 'Descending'*/: break;\n\t\t\t\t\tcase 'order' /*case 'Order'*/: break;\n\t\t\t\t\tcase 'casesensitive' /*case 'CaseSensitive'*/: break;\n\t\t\t\t\tcase 'value' /*case 'Value'*/: break;\n\t\t\t\t\tcase 'errorstyle' /*case 'ErrorStyle'*/: break;\n\t\t\t\t\tcase 'errormessage' /*case 'ErrorMessage'*/: break;\n\t\t\t\t\tcase 'errortitle' /*case 'ErrorTitle'*/: break;\n\t\t\t\t\tcase 'inputmessage' /*case 'InputMessage'*/: break;\n\t\t\t\t\tcase 'inputtitle' /*case 'InputTitle'*/: break;\n\t\t\t\t\tcase 'combohide' /*case 'ComboHide'*/: break;\n\t\t\t\t\tcase 'inputhide' /*case 'InputHide'*/: break;\n\t\t\t\t\tcase 'condition' /*case 'Condition'*/: break;\n\t\t\t\t\tcase 'qualifier' /*case 'Qualifier'*/: break;\n\t\t\t\t\tcase 'useblank' /*case 'UseBlank'*/: break;\n\t\t\t\t\tcase 'value1' /*case 'Value1'*/: break;\n\t\t\t\t\tcase 'value2' /*case 'Value2'*/: break;\n\t\t\t\t\tcase 'format' /*case 'Format'*/: break;\n\n\t\t\t\t\tcase 'cellrangelist' /*case 'CellRangeList'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'sorting' /*case 'Sorting'*/:\n\t\t\t\tcase 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\t\t\t\t\tcase 'type' /*case 'Type'*/: break;\n\t\t\t\t\tcase 'min' /*case 'Min'*/: break;\n\t\t\t\t\tcase 'max' /*case 'Max'*/: break;\n\t\t\t\t\tcase 'sort' /*case 'Sort'*/: break;\n\t\t\t\t\tcase 'descending' /*case 'Descending'*/: break;\n\t\t\t\t\tcase 'order' /*case 'Order'*/: break;\n\t\t\t\t\tcase 'casesensitive' /*case 'CaseSensitive'*/: break;\n\t\t\t\t\tcase 'value' /*case 'Value'*/: break;\n\t\t\t\t\tcase 'errorstyle' /*case 'ErrorStyle'*/: break;\n\t\t\t\t\tcase 'errormessage' /*case 'ErrorMessage'*/: break;\n\t\t\t\t\tcase 'errortitle' /*case 'ErrorTitle'*/: break;\n\t\t\t\t\tcase 'cellrangelist' /*case 'CellRangeList'*/: break;\n\t\t\t\t\tcase 'inputmessage' /*case 'InputMessage'*/: break;\n\t\t\t\t\tcase 'inputtitle' /*case 'InputTitle'*/: break;\n\t\t\t\t\tcase 'combohide' /*case 'ComboHide'*/: break;\n\t\t\t\t\tcase 'inputhide' /*case 'InputHide'*/: break;\n\t\t\t\t\tcase 'condition' /*case 'Condition'*/: break;\n\t\t\t\t\tcase 'qualifier' /*case 'Qualifier'*/: break;\n\t\t\t\t\tcase 'useblank' /*case 'UseBlank'*/: break;\n\t\t\t\t\tcase 'value1' /*case 'Value1'*/: break;\n\t\t\t\t\tcase 'value2' /*case 'Value2'*/: break;\n\t\t\t\t\tcase 'format' /*case 'Format'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* MapInfo (schema) */\n\t\t\t\tcase 'mapinfo' /*case 'MapInfo'*/: case 'schema' /*case 'Schema'*/: case 'data' /*case 'data'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'map' /*case 'Map'*/: break;\n\t\t\t\t\tcase 'entry' /*case 'Entry'*/: break;\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\t\t\t\t\tcase 'xpath' /*case 'XPath'*/: break;\n\t\t\t\t\tcase 'field' /*case 'Field'*/: break;\n\t\t\t\t\tcase 'xsdtype' /*case 'XSDType'*/: break;\n\t\t\t\t\tcase 'filteron' /*case 'FilterOn'*/: break;\n\t\t\t\t\tcase 'aggregate' /*case 'Aggregate'*/: break;\n\t\t\t\t\tcase 'elementtype' /*case 'ElementType'*/: break;\n\t\t\t\t\tcase 'attributetype' /*case 'AttributeType'*/: break;\n\t\t\t\t/* These are from xsd (XML Schema Definition) */\n\t\t\t\t\tcase 'schema' /*case 'schema'*/:\n\t\t\t\t\tcase 'element' /*case 'element'*/:\n\t\t\t\t\tcase 'complextype' /*case 'complexType'*/:\n\t\t\t\t\tcase 'datatype' /*case 'datatype'*/:\n\t\t\t\t\tcase 'all' /*case 'all'*/:\n\t\t\t\t\tcase 'attribute' /*case 'attribute'*/:\n\t\t\t\t\tcase 'extends' /*case 'extends'*/: break;\n\n\t\t\t\t\tcase 'row' /*case 'row'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* SmartTags (can be anything) */\n\t\t\t\tcase 'smarttags' /*case 'SmartTags'*/: break;\n\n\t\t\t\tdefault: seen = false; break;\n\t\t\t}\n\t\t\tif(seen) break;\n\t\t\t/* CustomDocumentProperties */\n\t\t\tif(Rn[3].match(/!\\[CDATA/)) break;\n\t\t\tif(!state[state.length-1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t\t\tif(state[state.length-1][0]===/*'CustomDocumentProperties'*/'customdocumentproperties') {\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") xlml_set_custprop(Custprops, raw_Rn3, cp, str.slice(pidx, Rn.index));\n\t\t\t\telse { cp = Rn; pidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t}\n\tvar out = ({}/*:any*/);\n\tif(!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\n\tout.SheetNames = sheetnames;\n\tout.Workbook = Workbook;\n\tout.SSF = dup(table_fmt);\n\tout.Props = Props;\n\tout.Custprops = Custprops;\n\treturn out;\n}\n\nfunction parse_xlml(data/*:RawBytes|string*/, opts)/*:Workbook*/ {\n\tfix_read_opts(opts=opts||{});\n\tswitch(opts.type||\"base64\") {\n\t\tcase \"base64\": return parse_xlml_xml(Base64_decode(data), opts);\n\t\tcase \"binary\": case \"buffer\": case \"file\": return parse_xlml_xml(data, opts);\n\t\tcase \"array\": return parse_xlml_xml(a2s(data), opts);\n\t}\n\t/*:: throw new Error(\"unsupported type \" + opts.type); */\n}\n\n/* TODO */\nfunction write_props_xlml(wb/*:Workbook*/, opts)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\t/* DocumentProperties */\n\tif(wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\n\t/* CustomDocumentProperties */\n\tif(wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops, opts));\n\treturn o.join(\"\");\n}\n/* TODO */\nfunction write_wb_xlml(/*::wb, opts*/)/*:string*/ {\n\t/* OfficeDocumentSettings */\n\t/* ExcelWorkbook */\n\treturn \"\";\n}\n/* TODO */\nfunction write_sty_xlml(wb, opts)/*:string*/ {\n\t/* Styles */\n\tvar styles/*:Array<string>*/ = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\n\topts.cellXfs.forEach(function(xf, id) {\n\t\tvar payload/*:Array<string>*/ = [];\n\t\tpayload.push(writextag('NumberFormat', null, {\"ss:Format\": escapexml(table_fmt[xf.numFmtId])}));\n\n\t\tvar o = /*::(*/{\"ss:ID\": \"s\" + (21+id)}/*:: :any)*/;\n\t\tstyles.push(writextag('Style', payload.join(\"\"), o));\n\t});\n\treturn writextag(\"Styles\", styles.join(\"\"));\n}\nfunction write_name_xlml(n) { return writextag(\"NamedRange\", null, {\"ss:Name\": n.Name, \"ss:RefersTo\":\"=\" + a1_to_rc(n.Ref, {r:0,c:0})}); }\nfunction write_names_xlml(wb/*::, opts*/)/*:string*/ {\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\n\t/*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n\tvar names/*:Array<any>*/ = wb.Workbook.Names;\n\tvar out/*:Array<string>*/ = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != null) continue;\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn writextag(\"Names\", out.join(\"\"));\n}\nfunction write_ws_xlml_names(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws) return \"\";\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\n\t/*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n\tvar names/*:Array<any>*/ = wb.Workbook.Names;\n\tvar out/*:Array<string>*/ = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != idx) continue;\n\t\t/*switch(n.Name) {\n\t\t\tcase \"_\": continue;\n\t\t}*/\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn out.join(\"\");\n}\n/* WorksheetOptions */\nfunction write_ws_xlml_wsopts(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws) return \"\";\n\tvar o/*:Array<string>*/ = [];\n\t/* NOTE: spec technically allows any order, but stick with implied order */\n\n\t/* FitToPage */\n\t/* DoNotDisplayColHeaders */\n\t/* DoNotDisplayRowHeaders */\n\t/* ViewableRange */\n\t/* Selection */\n\t/* GridlineColor */\n\t/* Name */\n\t/* ExcelWorksheetType */\n\t/* IntlMacro */\n\t/* Unsynced */\n\t/* Selected */\n\t/* CodeName */\n\n\tif(ws['!margins']) {\n\t\to.push(\"<PageSetup>\");\n\t\tif(ws['!margins'].header) o.push(writextag(\"Header\", null, {'x:Margin':ws['!margins'].header}));\n\t\tif(ws['!margins'].footer) o.push(writextag(\"Footer\", null, {'x:Margin':ws['!margins'].footer}));\n\t\to.push(writextag(\"PageMargins\", null, {\n\t\t\t'x:Bottom': ws['!margins'].bottom || \"0.75\",\n\t\t\t'x:Left': ws['!margins'].left || \"0.7\",\n\t\t\t'x:Right': ws['!margins'].right || \"0.7\",\n\t\t\t'x:Top': ws['!margins'].top || \"0.75\"\n\t\t}));\n\t\to.push(\"</PageSetup>\");\n\t}\n\n\t/* PageSetup */\n\t/* DisplayPageBreak */\n\t/* TransitionExpressionEvaluation */\n\t/* TransitionFormulaEntry */\n\t/* Print */\n\t/* Zoom */\n\t/* PageLayoutZoom */\n\t/* PageBreakZoom */\n\t/* ShowPageBreakZoom */\n\t/* DefaultRowHeight */\n\t/* DefaultColumnWidth */\n\t/* StandardWidth */\n\n\tif(wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\n\t\t/* Visible */\n\t\tif(wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", (wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\"), {}));\n\t\telse {\n\t\t\t/* Selected */\n\t\t\tfor(var i = 0; i < idx; ++i) if(wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\n\t\t\tif(i == idx) o.push(\"<Selected/>\");\n\t\t}\n\t}\n\n\t/* LeftColumnVisible */\n\n\tif(((((wb||{}).Workbook||{}).Views||[])[0]||{}).RTL) o.push(\"<DisplayRightToLeft/>\");\n\n\t/* GridlineColorIndex */\n\t/* DisplayFormulas */\n\t/* DoNotDisplayGridlines */\n\t/* DoNotDisplayHeadings */\n\t/* DoNotDisplayOutline */\n\t/* ApplyAutomaticOutlineStyles */\n\t/* NoSummaryRowsBelowDetail */\n\t/* NoSummaryColumnsRightDetail */\n\t/* DoNotDisplayZeros */\n\t/* ActiveRow */\n\t/* ActiveColumn */\n\t/* FilterOn */\n\t/* RangeSelection */\n\t/* TopRowVisible */\n\t/* TopRowBottomPane */\n\t/* LeftColumnRightPane */\n\t/* ActivePane */\n\t/* SplitHorizontal */\n\t/* SplitVertical */\n\t/* FreezePanes */\n\t/* FrozenNoSplit */\n\t/* TabColorIndex */\n\t/* Panes */\n\n\t/* NOTE: Password not supported in XLML Format */\n\tif(ws['!protect']) {\n\t\to.push(writetag(\"ProtectContents\", \"True\"));\n\t\tif(ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\n\t\tif(ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\n\t\tif(ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));\n\t\telse if(ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\n\t[\n\t\t[ \"formatCells\", \"AllowFormatCells\" ],\n\t\t[ \"formatColumns\", \"AllowSizeCols\" ],\n\t\t[ \"formatRows\", \"AllowSizeRows\" ],\n\t\t[ \"insertColumns\", \"AllowInsertCols\" ],\n\t\t[ \"insertRows\", \"AllowInsertRows\" ],\n\t\t[ \"insertHyperlinks\", \"AllowInsertHyperlinks\" ],\n\t\t[ \"deleteColumns\", \"AllowDeleteCols\" ],\n\t\t[ \"deleteRows\", \"AllowDeleteRows\" ],\n\t\t[ \"sort\", \"AllowSort\" ],\n\t\t[ \"autoFilter\", \"AllowFilter\" ],\n\t\t[ \"pivotTables\", \"AllowUsePivotTables\" ]\n\t].forEach(function(x) { if(ws['!protect'][x[0]]) o.push(\"<\"+x[1]+\"/>\"); });\n\t}\n\n\tif(o.length == 0) return \"\";\n\treturn writextag(\"WorksheetOptions\", o.join(\"\"), {xmlns:XLMLNS.x});\n}\nfunction write_ws_xlml_comment(comments/*:Array<any>*/)/*:string*/ {\n\treturn comments.map(function(c) {\n\t\t// TODO: formatted text\n\t\tvar t = xlml_unfixstr(c.t||\"\");\n\t\tvar d =writextag(\"ss:Data\", t, {\"xmlns\":\"http://www.w3.org/TR/REC-html40\"});\n\t\treturn writextag(\"Comment\", d, {\"ss:Author\":c.a});\n\t}).join(\"\");\n}\nfunction write_ws_xlml_cell(cell, ref/*:string*/, ws, opts, idx/*:number*/, wb, addr)/*:string*/{\n\tif(!cell || (cell.v == undefined && cell.f == undefined)) return \"\";\n\n\tvar attr = {};\n\tif(cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\n\tif(cell.F && cell.F.slice(0, ref.length) == ref) {\n\t\tvar end = decode_cell(cell.F.slice(ref.length + 1));\n\t\tattr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\n\t}\n\n\tif(cell.l && cell.l.Target) {\n\t\tattr[\"ss:HRef\"] = escapexml(cell.l.Target);\n\t\tif(cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\n\t}\n\n\tif(ws['!merges']) {\n\t\tvar marr = ws['!merges'];\n\t\tfor(var mi = 0; mi != marr.length; ++mi) {\n\t\t\tif(marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\n\t\t\tif(marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\n\t\t\tif(marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\n\t\t}\n\t}\n\n\tvar t = \"\", p = \"\";\n\tswitch(cell.t) {\n\t\tcase 'z': if(!opts.sheetStubs) return \"\"; break;\n\t\tcase 'n': t = 'Number'; p = String(cell.v); break;\n\t\tcase 'b': t = 'Boolean'; p = (cell.v ? \"1\" : \"0\"); break;\n\t\tcase 'e': t = 'Error'; p = BErr[cell.v]; break;\n\t\tcase 'd': t = 'DateTime'; p = new Date(cell.v).toISOString(); if(cell.z == null) cell.z = cell.z || table_fmt[14]; break;\n\t\tcase 's': t = 'String'; p = escapexlml(cell.v||\"\"); break;\n\t}\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tattr[\"ss:StyleID\"] = \"s\" + (21+os);\n\tattr[\"ss:Index\"] = addr.c + 1;\n\tvar _v = (cell.v != null ? p : \"\");\n\tvar m = cell.t == 'z' ? \"\" : ('<Data ss:Type=\"' + t + '\">' + _v + '</Data>');\n\n\tif((cell.c||[]).length > 0) m += write_ws_xlml_comment(cell.c);\n\n\treturn writextag(\"Cell\", m, attr);\n}\nfunction write_ws_xlml_row(R/*:number*/, row)/*:string*/ {\n\tvar o = '<Row ss:Index=\"' + (R+1) + '\"';\n\tif(row) {\n\t\tif(row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\n\t\tif(row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\n\t\tif(row.hidden) o += ' ss:Hidden=\"1\"';\n\t}\n\treturn o + '>';\n}\n/* TODO */\nfunction write_ws_xlml_table(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws['!ref']) return \"\";\n\tvar range/*:Range*/ = safe_decode_range(ws['!ref']);\n\tvar marr/*:Array<Range>*/ = ws['!merges'] || [], mi = 0;\n\tvar o/*:Array<string>*/ = [];\n\tif(ws['!cols']) ws['!cols'].forEach(function(n, i) {\n\t\tprocess_col(n);\n\t\tvar w = !!n.width;\n\t\tvar p = col_obj_w(i, n);\n\t\tvar k/*:any*/ = {\"ss:Index\":i+1};\n\t\tif(w) k['ss:Width'] = width2px(p.width);\n\t\tif(n.hidden) k['ss:Hidden']=\"1\";\n\t\to.push(writextag(\"Column\",null,k));\n\t});\n\tvar dense = Array.isArray(ws);\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\tvar row = [write_ws_xlml_row(R, (ws['!rows']||[])[R])];\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tvar skip = false;\n\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(skip) continue;\n\t\t\tvar addr = {r:R,c:C};\n\t\t\tvar ref = encode_cell(addr), cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\trow.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\n\t\t}\n\t\trow.push(\"</Row>\");\n\t\tif(row.length > 2) o.push(row.join(\"\"));\n\t}\n\treturn o.join(\"\");\n}\nfunction write_ws_xlml(idx/*:number*/, opts, wb/*:Workbook*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tvar s = wb.SheetNames[idx];\n\tvar ws = wb.Sheets[s];\n\n\tvar t/*:string*/ = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\n\n\t/* Table */\n\tt = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\n\n\t/* WorksheetOptions */\n\to.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\n\n\treturn o.join(\"\");\n}\nfunction write_xlml(wb, opts)/*:string*/ {\n\tif(!opts) opts = {};\n\tif(!wb.SSF) wb.SSF = dup(table_fmt);\n\tif(wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t\topts.cellXfs = [];\n\t\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\t}\n\tvar d/*:Array<string>*/ = [];\n\td.push(write_props_xlml(wb, opts));\n\td.push(write_wb_xlml(wb, opts));\n\td.push(\"\");\n\td.push(\"\");\n\tfor(var i = 0; i < wb.SheetNames.length; ++i)\n\t\td.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\"ss:Name\":escapexml(wb.SheetNames[i])}));\n\td[2] = write_sty_xlml(wb, opts);\n\td[3] = write_names_xlml(wb, opts);\n\treturn XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\n\t\t'xmlns':      XLMLNS.ss,\n\t\t'xmlns:o':    XLMLNS.o,\n\t\t'xmlns:x':    XLMLNS.x,\n\t\t'xmlns:ss':   XLMLNS.ss,\n\t\t'xmlns:dt':   XLMLNS.dt,\n\t\t'xmlns:html': XLMLNS.html\n\t});\n}\n/* [MS-OLEDS] 2.3.8 CompObjStream */\nfunction parse_compobj(obj/*:CFBEntry*/) {\n\tvar v = {};\n\tvar o = obj.content;\n\t/*:: if(o == null) return; */\n\n\t/* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\n\to.l = 28;\n\n\tv.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\n\tv.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\n\n\tif(o.length - o.l <= 4) return v;\n\n\tvar m/*:number*/ = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\n\n\tif(o.length - o.l <= 4) return v;\n\tm = o.read_shift(4);\n\tif(m !== 0x71b239f4) return v;\n\tv.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\n\n\tm = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved2 = o.read_shift(0, \"lpwstr\");\n}\n\n/*\n\tContinue logic for:\n\t- 2.4.58 Continue          0x003c\n\t- 2.4.59 ContinueBigName   0x043c\n\t- 2.4.60 ContinueFrt       0x0812\n\t- 2.4.61 ContinueFrt11     0x0875\n\t- 2.4.62 ContinueFrt12     0x087f\n*/\nvar CONTINUE_RT = [ 0x003c, 0x043c, 0x0812, 0x0875, 0x087f ];\nfunction slurp(RecordType, R, blob, length/*:number*/, opts)/*:any*/ {\n\tvar l = length;\n\tvar bufs = [];\n\tvar d = blob.slice(blob.l,blob.l+l);\n\tif(opts && opts.enc && opts.enc.insitu && d.length > 0) switch(RecordType) {\n\tcase 0x0009: case 0x0209: case 0x0409: case 0x0809/* BOF */: case 0x002f /* FilePass */: case 0x0195 /* FileLock */: case 0x00e1 /* InterfaceHdr */: case 0x0196 /* RRDInfo */: case 0x0138 /* RRDHead */: case 0x0194 /* UsrExcl */: case 0x000a /* EOF */:\n\t\tbreak;\n\tcase 0x0085 /* BoundSheet8 */:\n\t\tbreak;\n\tdefault:\n\t\topts.enc.insitu(d);\n\t}\n\tbufs.push(d);\n\tblob.l += l;\n\tvar nextrt = __readUInt16LE(blob,blob.l), next = XLSRecordEnum[nextrt];\n\tvar start = 0;\n\twhile(next != null && CONTINUE_RT.indexOf(nextrt) > -1) {\n\t\tl = __readUInt16LE(blob,blob.l+2);\n\t\tstart = blob.l + 4;\n\t\tif(nextrt == 0x0812 /* ContinueFrt */) start += 4;\n\t\telse if(nextrt == 0x0875 || nextrt == 0x087f) {\n\t\t\tstart += 12;\n\t\t}\n\t\td = blob.slice(start,blob.l+4+l);\n\t\tbufs.push(d);\n\t\tblob.l += 4+l;\n\t\tnext = (XLSRecordEnum[nextrt = __readUInt16LE(blob, blob.l)]);\n\t}\n\tvar b = (bconcat(bufs)/*:any*/);\n\tprep_blob(b, 0);\n\tvar ll = 0; b.lens = [];\n\tfor(var j = 0; j < bufs.length; ++j) { b.lens.push(ll); ll += bufs[j].length; }\n\tif(b.length < length) throw \"XLS Record 0x\" + RecordType.toString(16) + \" Truncated: \" + b.length + \" < \" + length;\n\treturn R.f(b, b.length, opts);\n}\n\nfunction safe_format_xf(p/*:any*/, opts/*:ParseOpts*/, date1904/*:?boolean*/) {\n\tif(p.t === 'z') return;\n\tif(!p.XF) return;\n\tvar fmtid = 0;\n\ttry {\n\t\tfmtid = p.z || p.XF.numFmtId || 0;\n\t\tif(opts.cellNF) p.z = table_fmt[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts || opts.cellText !== false) try {\n\t\tif(p.t === 'e') { p.w = p.w || BErr[p.v]; }\n\t\telse if(fmtid === 0 || fmtid == \"General\") {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = p.v.toString(10);\n\t\t\t\telse p.w = SSF_general_num(p.v);\n\t\t\t}\n\t\t\telse p.w = SSF_general(p.v);\n\t\t}\n\t\telse p.w = SSF_format(fmtid,p.v, {date1904:!!date1904, dateNF: opts && opts.dateNF});\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(opts.cellDates && fmtid && p.t == 'n' && fmt_is_date(table_fmt[fmtid] || String(fmtid))) {\n\t\tvar _d = SSF_parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t}\n}\n\nfunction make_cell(val, ixfe, t)/*:Cell*/ {\n\treturn ({v:val, ixfe:ixfe, t:t}/*:any*/);\n}\n\n// 2.3.2\nfunction parse_workbook(blob, options/*:ParseOpts*/)/*:Workbook*/ {\n\tvar wb = ({opts:{}}/*:any*/);\n\tvar Sheets = {};\n\tif(DENSE != null && options.dense == null) options.dense = DENSE;\n\tvar out/*:Worksheet*/ = ((options.dense ? [] : {})/*:any*/);\n\tvar Directory = {};\n\tvar range/*:Range*/ = ({}/*:any*/);\n\tvar last_formula = null;\n\tvar sst/*:SST*/ = ([]/*:any*/);\n\tvar cur_sheet = \"\";\n\tvar Preamble = {};\n\tvar lastcell, last_cell = \"\", cc/*:Cell*/, cmnt, rngC, rngR;\n\tvar sharedf = {};\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar temp_val/*:Cell*/;\n\tvar country;\n\tvar XFs = []; /* XF records */\n\tvar palette/*:Array<[number, number, number]>*/ = [];\n\tvar Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false}, Views:[{}] }/*:any*/), wsprops = {};\n\tvar get_rgb = function getrgb(icv/*:number*/)/*:[number, number, number]*/ {\n\t\tif(icv < 8) return XLSIcv[icv];\n\t\tif(icv < 64) return palette[icv-8] || XLSIcv[icv];\n\t\treturn XLSIcv[icv];\n\t};\n\tvar process_cell_style = function pcs(cell, line/*:any*/, options) {\n\t\tvar xfd = line.XF.data;\n\t\tif(!xfd || !xfd.patternType || !options || !options.cellStyles) return;\n\t\tline.s = ({}/*:any*/);\n\t\tline.s.patternType = xfd.patternType;\n\t\tvar t;\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvFore)))) { line.s.fgColor = {rgb:t}; }\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvBack)))) { line.s.bgColor = {rgb:t}; }\n\t};\n\tvar addcell = function addcell(cell/*:any*/, line/*:any*/, options/*:any*/) {\n\t\tif(file_depth > 1) return;\n\t\tif(options.sheetRows && cell.r >= options.sheetRows) return;\n\t\tif(options.cellStyles && line.XF && line.XF.data) process_cell_style(cell, line, options);\n\t\tdelete line.ixfe; delete line.XF;\n\t\tlastcell = cell;\n\t\tlast_cell = encode_cell(cell);\n\t\tif(!range || !range.s || !range.e) range = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\tif(cell.r < range.s.r) range.s.r = cell.r;\n\t\tif(cell.c < range.s.c) range.s.c = cell.c;\n\t\tif(cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\n\t\tif(cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\n\t\tif(options.cellFormula && line.f) {\n\t\t\tfor(var afi = 0; afi < arrayf.length; ++afi) {\n\t\t\t\tif(arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\n\t\t\t\tif(arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\n\t\t\t\tline.F = encode_range(arrayf[afi][0]);\n\t\t\t\tif(arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\n\t\t\t\tif(line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tif(options.dense) {\n\t\t\t\tif(!out[cell.r]) out[cell.r] = [];\n\t\t\t\tout[cell.r][cell.c] = line;\n\t\t\t} else out[last_cell] = line;\n\t\t}\n\t};\n\tvar opts = ({\n\t\tenc: false, // encrypted\n\t\tsbcch: 0, // cch in the preceding SupBook\n\t\tsnames: [], // sheetnames\n\t\tsharedf: sharedf, // shared formulae by address\n\t\tarrayf: arrayf, // array formulae array\n\t\trrtabid: [], // RRTabId\n\t\tlastuser: \"\", // Last User from WriteAccess\n\t\tbiff: 8, // BIFF version\n\t\tcodepage: 0, // CP from CodePage record\n\t\twinlocked: 0, // fLockWn from WinProtect\n\t\tcellStyles: !!options && !!options.cellStyles,\n\t\tWTF: !!options && !!options.wtf\n\t}/*:any*/);\n\tif(options.password) opts.password = options.password;\n\tvar themes;\n\tvar merges/*:Array<Range>*/ = [];\n\tvar objects = [];\n\tvar colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];\n\tvar seencol = false;\n\tvar supbooks = ([]/*:any*/); // 1-indexed, will hold extern names\n\tsupbooks.SheetNames = opts.snames;\n\tsupbooks.sharedf = opts.sharedf;\n\tsupbooks.arrayf = opts.arrayf;\n\tsupbooks.names = [];\n\tsupbooks.XTI = [];\n\tvar last_RT = 0;\n\tvar file_depth = 0; /* TODO: make a real stack */\n\tvar BIFF2Fmt = 0, BIFF2FmtTable/*:Array<string>*/ = [];\n\tvar FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\n\tvar last_lbl/*:?DefinedName*/;\n\n\t/* explicit override for some broken writers */\n\topts.codepage = 1200;\n\tset_cp(1200);\n\tvar seen_codepage = false;\n\twhile(blob.l < blob.length - 1) {\n\t\tvar s = blob.l;\n\t\tvar RecordType = blob.read_shift(2);\n\t\tif(RecordType === 0 && last_RT === 0x000a /* EOF */) break;\n\t\tvar length = (blob.l === blob.length ? 0 : blob.read_shift(2));\n\t\tvar R = XLSRecordEnum[RecordType];\n\t\t//console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\n\t\t//if(!R) console.log(blob.slice(blob.l, blob.l + length));\n\t\tif(R && R.f) {\n\t\t\tif(options.bookSheets) {\n\t\t\t\tif(last_RT === 0x0085 /* BoundSheet8 */ && RecordType !== 0x0085 /* R.n !== 'BoundSheet8' */) break;\n\t\t\t}\n\t\t\tlast_RT = RecordType;\n\t\t\tif(R.r === 2 || R.r == 12) {\n\t\t\t\tvar rt = blob.read_shift(2); length -= 2;\n\t\t\t\tif(!opts.enc && rt !== RecordType && (((rt&0xFF)<<8)|(rt>>8)) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\n\t\t\t\tif(R.r == 12){\n\t\t\t\t\tblob.l += 10; length -= 10;\n\t\t\t\t} // skip FRT\n\t\t\t}\n\t\t\t//console.error(R,blob.l,length,blob.length);\n\t\t\tvar val/*:any*/ = ({}/*:any*/);\n\t\t\tif(RecordType === 0x000a /* EOF */) val = /*::(*/R.f(blob, length, opts)/*:: :any)*/;\n\t\t\telse val = /*::(*/slurp(RecordType, R, blob, length, opts)/*:: :any)*/;\n\t\t\t/*:: val = (val:any); */\n\t\t\tif(file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(last_RT) === -1 /* 'BOF' */) continue;\n\t\t\tswitch(RecordType) {\n\t\t\t\tcase 0x0022 /* Date1904 */:\n\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\twb.opts.Date1904 = Workbook.WBProps.date1904 = val; break;\n\t\t\t\tcase 0x0086 /* WriteProtect */: wb.opts.WriteProtect = true; break;\n\t\t\t\tcase 0x002f /* FilePass */:\n\t\t\t\t\tif(!opts.enc) blob.l = 0;\n\t\t\t\t\topts.enc = val;\n\t\t\t\t\tif(!options.password) throw new Error(\"File is password-protected\");\n\t\t\t\t\tif(val.valid == null) throw new Error(\"Encryption scheme unsupported\");\n\t\t\t\t\tif(!val.valid) throw new Error(\"Password is incorrect\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x005c /* WriteAccess */: opts.lastuser = val; break;\n\t\t\t\tcase 0x0042 /* CodePage */:\n\t\t\t\t\tvar cpval = Number(val);\n\t\t\t\t\t/* overrides based on test cases */\n\t\t\t\t\tswitch(cpval) {\n\t\t\t\t\t\tcase 0x5212: cpval =  1200; break;\n\t\t\t\t\t\tcase 0x8000: cpval = 10000; break;\n\t\t\t\t\t\tcase 0x8001: cpval =  1252; break;\n\t\t\t\t\t}\n\t\t\t\t\tset_cp(opts.codepage = cpval);\n\t\t\t\t\tseen_codepage = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x013d /* RRTabId */: opts.rrtabid = val; break;\n\t\t\t\tcase 0x0019 /* WinProtect */: opts.winlocked = val; break;\n\t\t\t\tcase 0x01b7 /* RefreshAll */: wb.opts[\"RefreshAll\"] = val; break;\n\t\t\t\tcase 0x000c /* CalcCount */: wb.opts[\"CalcCount\"] = val; break;\n\t\t\t\tcase 0x0010 /* CalcDelta */: wb.opts[\"CalcDelta\"] = val; break;\n\t\t\t\tcase 0x0011 /* CalcIter */: wb.opts[\"CalcIter\"] = val; break;\n\t\t\t\tcase 0x000d /* CalcMode */: wb.opts[\"CalcMode\"] = val; break;\n\t\t\t\tcase 0x000e /* CalcPrecision */: wb.opts[\"CalcPrecision\"] = val; break;\n\t\t\t\tcase 0x005f /* CalcSaveRecalc */: wb.opts[\"CalcSaveRecalc\"] = val; break;\n\t\t\t\tcase 0x000f /* CalcRefMode */: opts.CalcRefMode = val; break; // TODO: implement R1C1\n\t\t\t\tcase 0x08a3 /* ForceFullCalculation */: wb.opts.FullCalc = val; break;\n\t\t\t\tcase 0x0081 /* WsBool */:\n\t\t\t\t\tif(val.fDialog) out[\"!type\"] = \"dialog\";\n\t\t\t\t\tif(!val.fBelow) (out[\"!outline\"] || (out[\"!outline\"] = {})).above = true;\n\t\t\t\t\tif(!val.fRight) (out[\"!outline\"] || (out[\"!outline\"] = {})).left = true;\n\t\t\t\t\tbreak; // TODO\n\t\t\t\tcase 0x00e0 /* XF */:\n\t\t\t\t\tXFs.push(val); break;\n\t\t\t\tcase 0x01ae /* SupBook */:\n\t\t\t\t\tsupbooks.push([val]);\n\t\t\t\t\tsupbooks[supbooks.length-1].XTI = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0023: case 0x0223 /* ExternName */:\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0018: case 0x0218 /* Lbl */:\n\t\t\t\t\tlast_lbl = ({\n\t\t\t\t\t\tName: val.Name,\n\t\t\t\t\t\tRef: stringify_formula(val.rgce,range,null,supbooks,opts)\n\t\t\t\t\t}/*:DefinedName*/);\n\t\t\t\t\tif(val.itab > 0) last_lbl.Sheet = val.itab - 1;\n\t\t\t\t\tsupbooks.names.push(last_lbl);\n\t\t\t\t\tif(!supbooks[0]) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tif(val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0)\n\t\t\t\t\t\tif(val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d')\n\t\t\t\t\t\t\tFilterDatabases[val.itab - 1] = { ref: encode_range(val.rgce[0][0][1][2]) };\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0016 /* ExternCount */: opts.ExternCount = val; break;\n\t\t\t\tcase 0x0017 /* ExternSheet */:\n\t\t\t\t\tif(supbooks.length == 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val); supbooks.XTI = supbooks.XTI.concat(val); break;\n\t\t\t\tcase 0x0894 /* NameCmt */:\n\t\t\t\t\t/* TODO: search for correct name */\n\t\t\t\t\tif(opts.biff < 8) break;\n\t\t\t\t\tif(last_lbl != null) last_lbl.Comment = val[1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0012 /* Protect */: out[\"!protect\"] = val; break; /* for sheet or book */\n\t\t\t\tcase 0x0013 /* Password */: if(val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val); break;\n\t\t\t\tcase 0x0085 /* BoundSheet8 */: {\n\t\t\t\t\tDirectory[val.pos] = val;\n\t\t\t\t\topts.snames.push(val.name);\n\t\t\t\t} break;\n\t\t\t\tcase 0x000a /* EOF */: {\n\t\t\t\t\tif(--file_depth) break;\n\t\t\t\t\tif(range.e) {\n\t\t\t\t\t\tif(range.e.r > 0 && range.e.c > 0) {\n\t\t\t\t\t\t\trange.e.r--; range.e.c--;\n\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\tif(options.sheetRows && options.sheetRows <= range.e.r) {\n\t\t\t\t\t\t\t\tvar tmpri = range.e.r;\n\t\t\t\t\t\t\t\trange.e.r = options.sheetRows - 1;\n\t\t\t\t\t\t\t\tout[\"!fullref\"] = out[\"!ref\"];\n\t\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\t\trange.e.r = tmpri;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trange.e.r++; range.e.c++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(merges.length > 0) out[\"!merges\"] = merges;\n\t\t\t\t\t\tif(objects.length > 0) out[\"!objects\"] = objects;\n\t\t\t\t\t\tif(colinfo.length > 0) out[\"!cols\"] = colinfo;\n\t\t\t\t\t\tif(rowinfo.length > 0) out[\"!rows\"] = rowinfo;\n\t\t\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t\t\t}\n\t\t\t\t\tif(cur_sheet === \"\") Preamble = out; else Sheets[cur_sheet] = out;\n\t\t\t\t\tout = ((options.dense ? [] : {})/*:any*/);\n\t\t\t\t} break;\n\t\t\t\tcase 0x0009: case 0x0209: case 0x0409: case 0x0809 /* BOF */: {\n\t\t\t\t\tif(opts.biff === 8) opts.biff = {\n\t\t\t\t\t\t/*::[*/0x0009/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0209/*::]*/:3,\n\t\t\t\t\t\t/*::[*/0x0409/*::]*/:4\n\t\t\t\t\t}[RecordType] || {\n\t\t\t\t\t\t/*::[*/0x0200/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0300/*::]*/:3,\n\t\t\t\t\t\t/*::[*/0x0400/*::]*/:4,\n\t\t\t\t\t\t/*::[*/0x0500/*::]*/:5,\n\t\t\t\t\t\t/*::[*/0x0600/*::]*/:8,\n\t\t\t\t\t\t/*::[*/0x0002/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0007/*::]*/:2\n\t\t\t\t\t}[val.BIFFVer] || 8;\n\t\t\t\t\topts.biffguess = val.BIFFVer == 0;\n\t\t\t\t\tif(val.BIFFVer == 0 && val.dt == 0x1000) { opts.biff = 5; seen_codepage = true; set_cp(opts.codepage = 28591); }\n\t\t\t\t\tif(opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;\n\t\t\t\t\tif(file_depth++) break;\n\t\t\t\t\tout = ((options.dense ? [] : {})/*:any*/);\n\n\t\t\t\t\tif(opts.biff < 8 && !seen_codepage) { seen_codepage = true; set_cp(opts.codepage = options.codepage || 1252); }\n\n\t\t\t\t\tif(opts.biff < 5 || val.BIFFVer == 0 && val.dt == 0x1000) {\n\t\t\t\t\t\tif(cur_sheet === \"\") cur_sheet = \"Sheet1\";\n\t\t\t\t\t\trange = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\t\t\t\t\t/* fake BoundSheet8 */\n\t\t\t\t\t\tvar fakebs8 = {pos: blob.l - length, name:cur_sheet};\n\t\t\t\t\t\tDirectory[fakebs8.pos] = fakebs8;\n\t\t\t\t\t\topts.snames.push(cur_sheet);\n\t\t\t\t\t}\n\t\t\t\t\telse cur_sheet = (Directory[s] || {name:\"\"}).name;\n\t\t\t\t\tif(val.dt == 0x20) out[\"!type\"] = \"chart\";\n\t\t\t\t\tif(val.dt == 0x40) out[\"!type\"] = \"macro\";\n\t\t\t\t\tmerges = [];\n\t\t\t\t\tobjects = [];\n\t\t\t\t\topts.arrayf = arrayf = [];\n\t\t\t\t\tcolinfo = []; rowinfo = [];\n\t\t\t\t\tseencol = false;\n\t\t\t\t\twsprops = {Hidden:(Directory[s]||{hs:0}).hs, name:cur_sheet };\n\t\t\t\t} break;\n\t\t\t\tcase 0x0203 /* Number */: case 0x0003 /* BIFF2NUM */: case 0x0002 /* BIFF2INT */: {\n\t\t\t\t\tif(out[\"!type\"] == \"chart\") if(options.dense ? (out[val.r]||[])[val.c]: out[encode_cell({c:val.c, r:val.r})]) ++val.c;\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe]||{}, v:val.val, t:'n'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x0005: case 0x0205 /* BoolErr */: {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.val, t:val.t}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x027e /* RK */: {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.rknum, t:'n'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x00bd /* MulRk */: {\n\t\t\t\t\tfor(var j = val.c; j <= val.C; ++j) {\n\t\t\t\t\t\tvar ixfe = val.rkrec[j-val.c][0];\n\t\t\t\t\t\ttemp_val= ({ixfe:ixfe, XF:XFs[ixfe], v:val.rkrec[j-val.c][1], t:'n'}/*:any*/);\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0006: case 0x0206: case 0x0406 /* Formula */: {\n\t\t\t\t\tif(val.val == 'String') { last_formula = val; break; }\n\t\t\t\t\ttemp_val = make_cell(val.val, val.cell.ixfe, val.tt);\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\tvar _f = val.formula;\n\t\t\t\t\t\tif(_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\n\t\t\t\t\t\t\tvar _fr = _f[0][0][1][0], _fc = _f[0][0][1][1];\n\t\t\t\t\t\t\tvar _fe = encode_cell({r:_fr, c:_fc});\n\t\t\t\t\t\t\tif(sharedf[_fe]) temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t\t\telse temp_val.F = ((options.dense ? (out[_fr]||[])[_fc]: out[_fe]) || {}).F;\n\t\t\t\t\t\t} else temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell(val.cell, temp_val, options);\n\t\t\t\t\tlast_formula = val;\n\t\t\t\t} break;\n\t\t\t\tcase 0x0007: case 0x0207 /* String */: {\n\t\t\t\t\tif(last_formula) { /* technically always true */\n\t\t\t\t\t\tlast_formula.val = val;\n\t\t\t\t\t\ttemp_val = make_cell(val, last_formula.cell.ixfe, 's');\n\t\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\t\ttemp_val.f = \"\"+stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell(last_formula.cell, temp_val, options);\n\t\t\t\t\t\tlast_formula = null;\n\t\t\t\t\t} else throw new Error(\"String record expects Formula\");\n\t\t\t\t} break;\n\t\t\t\tcase 0x0021: case 0x0221 /* Array */: {\n\t\t\t\t\tarrayf.push(val);\n\t\t\t\t\tvar _arraystart = encode_cell(val[0].s);\n\t\t\t\t\tcc = options.dense ? (out[val[0].s.r]||[])[val[0].s.c] : out[_arraystart];\n\t\t\t\t\tif(options.cellFormula && cc) {\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tif(!_arraystart || !cc) break;\n\t\t\t\t\t\tcc.f = \"\"+stringify_formula(val[1], range, val[0], supbooks, opts);\n\t\t\t\t\t\tcc.F = encode_range(val[0]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x04bc /* ShrFmla */: {\n\t\t\t\t\tif(!options.cellFormula) break;\n\t\t\t\t\tif(last_cell) {\n\t\t\t\t\t\t/* TODO: capture range */\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tsharedf[encode_cell(last_formula.cell)]= val[0];\n\t\t\t\t\t\tcc = options.dense ? (out[last_formula.cell.r]||[])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\n\t\t\t\t\t\t(cc||{}).f = \"\"+stringify_formula(val[0], range, lastcell, supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x00fd /* LabelSst */:\n\t\t\t\t\ttemp_val=make_cell(sst[val.isst].t, val.ixfe, 's');\n\t\t\t\t\tif(sst[val.isst].h) temp_val.h = sst[val.isst].h;\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0201 /* Blank */: if(options.sheetStubs) {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], t:'z'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x00be /* MulBlank */: if(options.sheetStubs) {\n\t\t\t\t\tfor(var _j = val.c; _j <= val.C; ++_j) {\n\t\t\t\t\t\tvar _ixfe = val.ixfe[_j-val.c];\n\t\t\t\t\t\ttemp_val= ({ixfe:_ixfe, XF:XFs[_ixfe], t:'z'}/*:any*/);\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:_j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x00d6 /* RString */:\n\t\t\t\tcase 0x0204 /* Label */: case 0x0004 /* BIFF2STR */:\n\t\t\t\t\ttemp_val=make_cell(val.val, val.ixfe, 's');\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0x0000: case 0x0200 /* Dimensions */: {\n\t\t\t\t\tif(file_depth === 1) range = val; /* TODO: stack */\n\t\t\t\t} break;\n\t\t\t\tcase 0x00fc /* SST */: {\n\t\t\t\t\tsst = val;\n\t\t\t\t} break;\n\t\t\t\tcase 0x041e /* Format */: { /* val = [id, fmt] */\n\t\t\t\t\tif(opts.biff == 4) {\n\t\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val[1];\n\t\t\t\t\t\tfor(var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if(table_fmt[b4idx] == val[1]) break;\n\t\t\t\t\t\tif(b4idx >= 163) SSF_load(val[1], BIFF2Fmt + 163);\n\t\t\t\t\t}\n\t\t\t\t\telse SSF_load(val[1], val[0]);\n\t\t\t\t} break;\n\t\t\t\tcase 0x001e /* BIFF2FORMAT */: {\n\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val;\n\t\t\t\t\tfor(var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if(table_fmt[b2idx] == val) break;\n\t\t\t\t\tif(b2idx >= 163) SSF_load(val, BIFF2Fmt + 163);\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x00e5 /* MergeCells */: merges = merges.concat(val); break;\n\n\t\t\t\tcase 0x005d /* Obj */: objects[val.cmo[0]] = opts.lastobj = val; break;\n\t\t\t\tcase 0x01b6 /* TxO */: opts.lastobj.TxO = val; break;\n\t\t\t\tcase 0x007f /* ImData */: opts.lastobj.ImData = val; break;\n\n\t\t\t\tcase 0x01b8 /* HLink */: {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc) cc.l = val[1];\n\t\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0800 /* HLinkTooltip */: {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc && cc.l) cc.l.Tooltip = val[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x001c /* Note */: {\n\t\t\t\t\tif(opts.biff <= 5 && opts.biff >= 2) break; /* TODO: BIFF5 */\n\t\t\t\t\tcc = options.dense ? (out[val[0].r]||[])[val[0].c] : out[encode_cell(val[0])];\n\t\t\t\t\tvar noteobj = objects[val[2]];\n\t\t\t\t\tif(!cc) {\n\t\t\t\t\t\tif(options.dense) {\n\t\t\t\t\t\t\tif(!out[val[0].r]) out[val[0].r] = [];\n\t\t\t\t\t\t\tcc = out[val[0].r][val[0].c] = ({t:\"z\"}/*:any*/);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcc = out[encode_cell(val[0])] = ({t:\"z\"}/*:any*/);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trange.e.r = Math.max(range.e.r, val[0].r);\n\t\t\t\t\t\trange.s.r = Math.min(range.s.r, val[0].r);\n\t\t\t\t\t\trange.e.c = Math.max(range.e.c, val[0].c);\n\t\t\t\t\t\trange.s.c = Math.min(range.s.c, val[0].c);\n\t\t\t\t\t}\n\t\t\t\t\tif(!cc.c) cc.c = [];\n\t\t\t\t\tcmnt = {a:val[1],t:noteobj.TxO.t};\n\t\t\t\t\tcc.c.push(cmnt);\n\t\t\t\t} break;\n\t\t\t\tcase 0x087d /* XFExt */: update_xfext(XFs[val.ixfe], val.ext); break;\n\t\t\t\tcase 0x007d /* ColInfo */: {\n\t\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, level: (val.level || 0), hidden: !!(val.flags & 1) };\n\t\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0208 /* Row */: {\n\t\t\t\t\tvar rowobj = {};\n\t\t\t\t\tif(val.level != null) { rowinfo[val.r] = rowobj; rowobj.level = val.level; }\n\t\t\t\t\tif(val.hidden) { rowinfo[val.r] = rowobj; rowobj.hidden = true; }\n\t\t\t\t\tif(val.hpt) {\n\t\t\t\t\t\trowinfo[val.r] = rowobj;\n\t\t\t\t\t\trowobj.hpt = val.hpt; rowobj.hpx = pt2px(val.hpt);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0026 /* LeftMargin */:\n\t\t\t\tcase 0x0027 /* RightMargin */:\n\t\t\t\tcase 0x0028 /* TopMargin */:\n\t\t\t\tcase 0x0029 /* BottomMargin */:\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'][({0x26: \"left\", 0x27:\"right\", 0x28:\"top\", 0x29:\"bottom\"})[RecordType]] = val;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x00a1 /* Setup */: // TODO\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'].header = val.header;\n\t\t\t\t\tout['!margins'].footer = val.footer;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x023e /* Window2 */: // TODO\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(val.RTL) Workbook.Views[0].RTL = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0092 /* Palette */: palette = val; break;\n\t\t\t\tcase 0x0896 /* Theme */: themes = val; break;\n\t\t\t\tcase 0x008c /* Country */: country = val; break;\n\t\t\t\tcase 0x01ba /* CodeName */: {\n\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\tif(!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";\n\t\t\t\t\telse wsprops.CodeName = val || wsprops.name;\n\t\t\t\t} break;\n\t\t\t}\n\t\t} else {\n\t\t\tif(!R) console.error(\"Missing Info for XLS Record 0x\" + RecordType.toString(16));\n\t\t\tblob.l += length;\n\t\t}\n\t}\n\twb.SheetNames=keys(Directory).sort(function(a,b) { return Number(a) - Number(b); }).map(function(x){return Directory[x].name;});\n\tif(!options.bookSheets) wb.Sheets=Sheets;\n\tif(!wb.SheetNames.length && Preamble[\"!ref\"]) {\n\t\twb.SheetNames.push(\"Sheet1\");\n\t\t/*jshint -W069 */\n\t\tif(wb.Sheets) wb.Sheets[\"Sheet1\"] = Preamble;\n\t\t/*jshint +W069 */\n\t} else wb.Preamble=Preamble;\n\tif(wb.Sheets) FilterDatabases.forEach(function(r,i) { wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r; });\n\twb.Strings = sst;\n\twb.SSF = dup(table_fmt);\n\tif(opts.enc) wb.Encryption = opts.enc;\n\tif(themes) wb.Themes = themes;\n\twb.Metadata = {};\n\tif(country !== undefined) wb.Metadata.Country = country;\n\tif(supbooks.names.length > 0) Workbook.Names = supbooks.names;\n\twb.Workbook = Workbook;\n\treturn wb;\n}\n\n/* TODO: split props*/\nvar PSCLSID = {\n\tSI: \"e0859ff2f94f6810ab9108002b27b3d9\",\n\tDSI: \"02d5cdd59c2e1b10939708002b2cf9ae\",\n\tUDI: \"05d5cdd59c2e1b10939708002b2cf9ae\"\n};\nfunction parse_xls_props(cfb/*:CFBContainer*/, props, o) {\n\t/* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\n\tvar DSI = CFB.find(cfb, '/!DocumentSummaryInformation');\n\tif(DSI && DSI.size > 0) try {\n\t\tvar DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);\n\t\tfor(var d in DocSummary) props[d] = DocSummary[d];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\t/* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\n\tvar SI = CFB.find(cfb, '/!SummaryInformation');\n\tif(SI && SI.size > 0) try {\n\t\tvar Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);\n\t\tfor(var s in Summary) if(props[s] == null) props[s] = Summary[s];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\tif(props.HeadingPairs && props.TitlesOfParts) {\n\t\tload_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);\n\t\tdelete props.HeadingPairs; delete props.TitlesOfParts;\n\t}\n}\nfunction write_xls_props(wb/*:Workbook*/, cfb/*:CFBContainer*/) {\n\tvar DSEntries = [], SEntries = [], CEntries = [];\n\tvar i = 0, Keys;\n\tvar DocSummaryRE/*:{[key:string]:string}*/ = evert_key(DocSummaryPIDDSI, \"n\");\n\tvar SummaryRE/*:{[key:string]:string}*/ = evert_key(SummaryPIDSI, \"n\");\n\tif(wb.Props) {\n\t\tKeys = keys(wb.Props);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Props[Keys[i]]]);\n\t}\n\tif(wb.Custprops) {\n\t\tKeys = keys(wb.Custprops);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) if(!Object.prototype.hasOwnProperty.call((wb.Props||{}), Keys[i])) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Custprops[Keys[i]]]);\n\t}\n\tvar CEntries2 = [];\n\tfor(i = 0; i < CEntries.length; ++i) {\n\t\tif(XLSPSSkip.indexOf(CEntries[i][0]) > -1 || PseudoPropsPairs.indexOf(CEntries[i][0]) > -1) continue;\n\t\tif(CEntries[i][1] == null) continue;\n\t\tCEntries2.push(CEntries[i]);\n\t}\n\tif(SEntries.length) CFB.utils.cfb_add(cfb, \"/\\u0005SummaryInformation\", write_PropertySetStream(SEntries, PSCLSID.SI, SummaryRE, SummaryPIDSI));\n\tif(DSEntries.length || CEntries2.length) CFB.utils.cfb_add(cfb, \"/\\u0005DocumentSummaryInformation\", write_PropertySetStream(DSEntries, PSCLSID.DSI, DocSummaryRE, DocSummaryPIDDSI, CEntries2.length ? CEntries2 : null, PSCLSID.UDI));\n}\n\nfunction parse_xlscfb(cfb/*:any*/, options/*:?ParseOpts*/)/*:Workbook*/ {\nif(!options) options = {};\nfix_read_opts(options);\nreset_cp();\nif(options.codepage) set_ansi(options.codepage);\nvar CompObj/*:?CFBEntry*/, WB/*:?any*/;\nif(cfb.FullPaths) {\n\tif(CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\n\tCompObj = CFB.find(cfb, '!CompObj');\n\tWB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\n} else {\n\tswitch(options.type) {\n\t\tcase 'base64': cfb = s2a(Base64_decode(cfb)); break;\n\t\tcase 'binary': cfb = s2a(cfb); break;\n\t\tcase 'buffer': break;\n\t\tcase 'array': if(!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb); break;\n\t}\n\tprep_blob(cfb, 0);\n\tWB = ({content: cfb}/*:any*/);\n}\nvar /*::CompObjP, */WorkbookP/*:: :Workbook = XLSX.utils.book_new(); */;\n\nvar _data/*:?any*/;\nif(CompObj) /*::CompObjP = */parse_compobj(CompObj);\nif(options.bookProps && !options.bookSheets) WorkbookP = ({}/*:any*/);\nelse/*:: if(cfb instanceof CFBContainer) */ {\n\tvar T = has_buf ? 'buffer' : 'array';\n\tif(WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\n\t/* Quattro Pro 7-8 */\n\telse if((_data=CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Quattro Pro 9 */\n\telse if((_data=CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Works 4 for Mac */\n\telse if((_data=CFB.find(cfb, 'MN0')) && _data.content) throw new Error(\"Unsupported Works 4 for Mac file\");\n\telse throw new Error(\"Cannot find Workbook stream\");\n\tif(options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\n}\n\nvar props = {};\nif(cfb.FullPaths) parse_xls_props(/*::((*/cfb/*:: :any):CFBContainer)*/, props, options);\n\nWorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\nif(options.bookFiles) WorkbookP.cfb = cfb;\n/*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\nreturn WorkbookP;\n}\n\n\nfunction write_xlscfb(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:CFBContainer*/ {\n\tvar o = opts || {};\n\tvar cfb = CFB.utils.cfb_new({root:\"R\"});\n\tvar wbpath = \"/Workbook\";\n\tswitch(o.bookType || \"xls\") {\n\t\tcase \"xls\": o.bookType = \"biff8\";\n\t\t/* falls through */\n\t\tcase \"xla\": if(!o.bookType) o.bookType = \"xla\";\n\t\t/* falls through */\n\t\tcase \"biff8\": wbpath = \"/Workbook\"; o.biff = 8; break;\n\t\tcase \"biff5\": wbpath = \"/Book\"; o.biff = 5; break;\n\t\tdefault: throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\n\t}\n\tCFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\n\tif(o.biff == 8 && (wb.Props || wb.Custprops)) write_xls_props(wb, cfb);\n\t// TODO: SI, DSI, CO\n\tif(o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"}));\n\treturn cfb;\n}\n/* [MS-XLSB] 2.3 Record Enumeration */\nvar XLSBRecordEnum = {\n\t/*::[*/0x0000/*::]*/: { /* n:\"BrtRowHdr\", */ f:parse_BrtRowHdr },\n\t/*::[*/0x0001/*::]*/: { /* n:\"BrtCellBlank\", */ f:parse_BrtCellBlank },\n\t/*::[*/0x0002/*::]*/: { /* n:\"BrtCellRk\", */ f:parse_BrtCellRk },\n\t/*::[*/0x0003/*::]*/: { /* n:\"BrtCellError\", */ f:parse_BrtCellError },\n\t/*::[*/0x0004/*::]*/: { /* n:\"BrtCellBool\", */ f:parse_BrtCellBool },\n\t/*::[*/0x0005/*::]*/: { /* n:\"BrtCellReal\", */ f:parse_BrtCellReal },\n\t/*::[*/0x0006/*::]*/: { /* n:\"BrtCellSt\", */ f:parse_BrtCellSt },\n\t/*::[*/0x0007/*::]*/: { /* n:\"BrtCellIsst\", */ f:parse_BrtCellIsst },\n\t/*::[*/0x0008/*::]*/: { /* n:\"BrtFmlaString\", */ f:parse_BrtFmlaString },\n\t/*::[*/0x0009/*::]*/: { /* n:\"BrtFmlaNum\", */ f:parse_BrtFmlaNum },\n\t/*::[*/0x000A/*::]*/: { /* n:\"BrtFmlaBool\", */ f:parse_BrtFmlaBool },\n\t/*::[*/0x000B/*::]*/: { /* n:\"BrtFmlaError\", */ f:parse_BrtFmlaError },\n\t/*::[*/0x000C/*::]*/: { /* n:\"BrtShortBlank\", */ f:parse_BrtShortBlank },\n\t/*::[*/0x000D/*::]*/: { /* n:\"BrtShortRk\", */ f:parse_BrtShortRk },\n\t/*::[*/0x000E/*::]*/: { /* n:\"BrtShortError\", */ f:parse_BrtShortError },\n\t/*::[*/0x000F/*::]*/: { /* n:\"BrtShortBool\", */ f:parse_BrtShortBool },\n\t/*::[*/0x0010/*::]*/: { /* n:\"BrtShortReal\", */ f:parse_BrtShortReal },\n\t/*::[*/0x0011/*::]*/: { /* n:\"BrtShortSt\", */ f:parse_BrtShortSt },\n\t/*::[*/0x0012/*::]*/: { /* n:\"BrtShortIsst\", */ f:parse_BrtShortIsst },\n\t/*::[*/0x0013/*::]*/: { /* n:\"BrtSSTItem\", */ f:parse_RichStr },\n\t/*::[*/0x0014/*::]*/: { /* n:\"BrtPCDIMissing\" */ },\n\t/*::[*/0x0015/*::]*/: { /* n:\"BrtPCDINumber\" */ },\n\t/*::[*/0x0016/*::]*/: { /* n:\"BrtPCDIBoolean\" */ },\n\t/*::[*/0x0017/*::]*/: { /* n:\"BrtPCDIError\" */ },\n\t/*::[*/0x0018/*::]*/: { /* n:\"BrtPCDIString\" */ },\n\t/*::[*/0x0019/*::]*/: { /* n:\"BrtPCDIDatetime\" */ },\n\t/*::[*/0x001A/*::]*/: { /* n:\"BrtPCDIIndex\" */ },\n\t/*::[*/0x001B/*::]*/: { /* n:\"BrtPCDIAMissing\" */ },\n\t/*::[*/0x001C/*::]*/: { /* n:\"BrtPCDIANumber\" */ },\n\t/*::[*/0x001D/*::]*/: { /* n:\"BrtPCDIABoolean\" */ },\n\t/*::[*/0x001E/*::]*/: { /* n:\"BrtPCDIAError\" */ },\n\t/*::[*/0x001F/*::]*/: { /* n:\"BrtPCDIAString\" */ },\n\t/*::[*/0x0020/*::]*/: { /* n:\"BrtPCDIADatetime\" */ },\n\t/*::[*/0x0021/*::]*/: { /* n:\"BrtPCRRecord\" */ },\n\t/*::[*/0x0022/*::]*/: { /* n:\"BrtPCRRecordDt\" */ },\n\t/*::[*/0x0023/*::]*/: { /* n:\"BrtFRTBegin\", */ T:1 },\n\t/*::[*/0x0024/*::]*/: { /* n:\"BrtFRTEnd\", */ T:-1 },\n\t/*::[*/0x0025/*::]*/: { /* n:\"BrtACBegin\", */ T:1 },\n\t/*::[*/0x0026/*::]*/: { /* n:\"BrtACEnd\", */ T:-1 },\n\t/*::[*/0x0027/*::]*/: { /* n:\"BrtName\", */ f:parse_BrtName },\n\t/*::[*/0x0028/*::]*/: { /* n:\"BrtIndexRowBlock\" */ },\n\t/*::[*/0x002A/*::]*/: { /* n:\"BrtIndexBlock\" */ },\n\t/*::[*/0x002B/*::]*/: { /* n:\"BrtFont\", */ f:parse_BrtFont },\n\t/*::[*/0x002C/*::]*/: { /* n:\"BrtFmt\", */ f:parse_BrtFmt },\n\t/*::[*/0x002D/*::]*/: { /* n:\"BrtFill\", */ f:parse_BrtFill },\n\t/*::[*/0x002E/*::]*/: { /* n:\"BrtBorder\", */ f:parse_BrtBorder },\n\t/*::[*/0x002F/*::]*/: { /* n:\"BrtXF\", */ f:parse_BrtXF },\n\t/*::[*/0x0030/*::]*/: { /* n:\"BrtStyle\" */ },\n\t/*::[*/0x0031/*::]*/: { /* n:\"BrtCellMeta\", */ f:parse_Int32LE },\n\t/*::[*/0x0032/*::]*/: { /* n:\"BrtValueMeta\" */ },\n\t/*::[*/0x0033/*::]*/: { /* n:\"BrtMdb\" */ f:parse_BrtMdb },\n\t/*::[*/0x0034/*::]*/: { /* n:\"BrtBeginFmd\", */ T:1 },\n\t/*::[*/0x0035/*::]*/: { /* n:\"BrtEndFmd\", */ T:-1 },\n\t/*::[*/0x0036/*::]*/: { /* n:\"BrtBeginMdx\", */ T:1 },\n\t/*::[*/0x0037/*::]*/: { /* n:\"BrtEndMdx\", */ T:-1 },\n\t/*::[*/0x0038/*::]*/: { /* n:\"BrtBeginMdxTuple\", */ T:1 },\n\t/*::[*/0x0039/*::]*/: { /* n:\"BrtEndMdxTuple\", */ T:-1 },\n\t/*::[*/0x003A/*::]*/: { /* n:\"BrtMdxMbrIstr\" */ },\n\t/*::[*/0x003B/*::]*/: { /* n:\"BrtStr\" */ },\n\t/*::[*/0x003C/*::]*/: { /* n:\"BrtColInfo\", */ f:parse_ColInfo },\n\t/*::[*/0x003E/*::]*/: { /* n:\"BrtCellRString\", */ f:parse_BrtCellRString },\n\t/*::[*/0x003F/*::]*/: { /* n:\"BrtCalcChainItem$\", */ f:parse_BrtCalcChainItem$ },\n\t/*::[*/0x0040/*::]*/: { /* n:\"BrtDVal\", */ f:parse_BrtDVal },\n\t/*::[*/0x0041/*::]*/: { /* n:\"BrtSxvcellNum\" */ },\n\t/*::[*/0x0042/*::]*/: { /* n:\"BrtSxvcellStr\" */ },\n\t/*::[*/0x0043/*::]*/: { /* n:\"BrtSxvcellBool\" */ },\n\t/*::[*/0x0044/*::]*/: { /* n:\"BrtSxvcellErr\" */ },\n\t/*::[*/0x0045/*::]*/: { /* n:\"BrtSxvcellDate\" */ },\n\t/*::[*/0x0046/*::]*/: { /* n:\"BrtSxvcellNil\" */ },\n\t/*::[*/0x0080/*::]*/: { /* n:\"BrtFileVersion\" */ },\n\t/*::[*/0x0081/*::]*/: { /* n:\"BrtBeginSheet\", */ T:1 },\n\t/*::[*/0x0082/*::]*/: { /* n:\"BrtEndSheet\", */ T:-1 },\n\t/*::[*/0x0083/*::]*/: { /* n:\"BrtBeginBook\", */ T:1, f:parsenoop, p:0 },\n\t/*::[*/0x0084/*::]*/: { /* n:\"BrtEndBook\", */ T:-1 },\n\t/*::[*/0x0085/*::]*/: { /* n:\"BrtBeginWsViews\", */ T:1 },\n\t/*::[*/0x0086/*::]*/: { /* n:\"BrtEndWsViews\", */ T:-1 },\n\t/*::[*/0x0087/*::]*/: { /* n:\"BrtBeginBookViews\", */ T:1 },\n\t/*::[*/0x0088/*::]*/: { /* n:\"BrtEndBookViews\", */ T:-1 },\n\t/*::[*/0x0089/*::]*/: { /* n:\"BrtBeginWsView\", */ T:1, f:parse_BrtBeginWsView },\n\t/*::[*/0x008A/*::]*/: { /* n:\"BrtEndWsView\", */ T:-1 },\n\t/*::[*/0x008B/*::]*/: { /* n:\"BrtBeginCsViews\", */ T:1 },\n\t/*::[*/0x008C/*::]*/: { /* n:\"BrtEndCsViews\", */ T:-1 },\n\t/*::[*/0x008D/*::]*/: { /* n:\"BrtBeginCsView\", */ T:1 },\n\t/*::[*/0x008E/*::]*/: { /* n:\"BrtEndCsView\", */ T:-1 },\n\t/*::[*/0x008F/*::]*/: { /* n:\"BrtBeginBundleShs\", */ T:1 },\n\t/*::[*/0x0090/*::]*/: { /* n:\"BrtEndBundleShs\", */ T:-1 },\n\t/*::[*/0x0091/*::]*/: { /* n:\"BrtBeginSheetData\", */ T:1 },\n\t/*::[*/0x0092/*::]*/: { /* n:\"BrtEndSheetData\", */ T:-1 },\n\t/*::[*/0x0093/*::]*/: { /* n:\"BrtWsProp\", */ f:parse_BrtWsProp },\n\t/*::[*/0x0094/*::]*/: { /* n:\"BrtWsDim\", */ f:parse_BrtWsDim, p:16 },\n\t/*::[*/0x0097/*::]*/: { /* n:\"BrtPane\", */ f:parse_BrtPane },\n\t/*::[*/0x0098/*::]*/: { /* n:\"BrtSel\" */ },\n\t/*::[*/0x0099/*::]*/: { /* n:\"BrtWbProp\", */ f:parse_BrtWbProp },\n\t/*::[*/0x009A/*::]*/: { /* n:\"BrtWbFactoid\" */ },\n\t/*::[*/0x009B/*::]*/: { /* n:\"BrtFileRecover\" */ },\n\t/*::[*/0x009C/*::]*/: { /* n:\"BrtBundleSh\", */ f:parse_BrtBundleSh },\n\t/*::[*/0x009D/*::]*/: { /* n:\"BrtCalcProp\" */ },\n\t/*::[*/0x009E/*::]*/: { /* n:\"BrtBookView\" */ },\n\t/*::[*/0x009F/*::]*/: { /* n:\"BrtBeginSst\", */ T:1, f:parse_BrtBeginSst },\n\t/*::[*/0x00A0/*::]*/: { /* n:\"BrtEndSst\", */ T:-1 },\n\t/*::[*/0x00A1/*::]*/: { /* n:\"BrtBeginAFilter\", */ T:1, f:parse_UncheckedRfX },\n\t/*::[*/0x00A2/*::]*/: { /* n:\"BrtEndAFilter\", */ T:-1 },\n\t/*::[*/0x00A3/*::]*/: { /* n:\"BrtBeginFilterColumn\", */ T:1 },\n\t/*::[*/0x00A4/*::]*/: { /* n:\"BrtEndFilterColumn\", */ T:-1 },\n\t/*::[*/0x00A5/*::]*/: { /* n:\"BrtBeginFilters\", */ T:1 },\n\t/*::[*/0x00A6/*::]*/: { /* n:\"BrtEndFilters\", */ T:-1 },\n\t/*::[*/0x00A7/*::]*/: { /* n:\"BrtFilter\" */ },\n\t/*::[*/0x00A8/*::]*/: { /* n:\"BrtColorFilter\" */ },\n\t/*::[*/0x00A9/*::]*/: { /* n:\"BrtIconFilter\" */ },\n\t/*::[*/0x00AA/*::]*/: { /* n:\"BrtTop10Filter\" */ },\n\t/*::[*/0x00AB/*::]*/: { /* n:\"BrtDynamicFilter\" */ },\n\t/*::[*/0x00AC/*::]*/: { /* n:\"BrtBeginCustomFilters\", */ T:1 },\n\t/*::[*/0x00AD/*::]*/: { /* n:\"BrtEndCustomFilters\", */ T:-1 },\n\t/*::[*/0x00AE/*::]*/: { /* n:\"BrtCustomFilter\" */ },\n\t/*::[*/0x00AF/*::]*/: { /* n:\"BrtAFilterDateGroupItem\" */ },\n\t/*::[*/0x00B0/*::]*/: { /* n:\"BrtMergeCell\", */ f:parse_BrtMergeCell },\n\t/*::[*/0x00B1/*::]*/: { /* n:\"BrtBeginMergeCells\", */ T:1 },\n\t/*::[*/0x00B2/*::]*/: { /* n:\"BrtEndMergeCells\", */ T:-1 },\n\t/*::[*/0x00B3/*::]*/: { /* n:\"BrtBeginPivotCacheDef\", */ T:1 },\n\t/*::[*/0x00B4/*::]*/: { /* n:\"BrtEndPivotCacheDef\", */ T:-1 },\n\t/*::[*/0x00B5/*::]*/: { /* n:\"BrtBeginPCDFields\", */ T:1 },\n\t/*::[*/0x00B6/*::]*/: { /* n:\"BrtEndPCDFields\", */ T:-1 },\n\t/*::[*/0x00B7/*::]*/: { /* n:\"BrtBeginPCDField\", */ T:1 },\n\t/*::[*/0x00B8/*::]*/: { /* n:\"BrtEndPCDField\", */ T:-1 },\n\t/*::[*/0x00B9/*::]*/: { /* n:\"BrtBeginPCDSource\", */ T:1 },\n\t/*::[*/0x00BA/*::]*/: { /* n:\"BrtEndPCDSource\", */ T:-1 },\n\t/*::[*/0x00BB/*::]*/: { /* n:\"BrtBeginPCDSRange\", */ T:1 },\n\t/*::[*/0x00BC/*::]*/: { /* n:\"BrtEndPCDSRange\", */ T:-1 },\n\t/*::[*/0x00BD/*::]*/: { /* n:\"BrtBeginPCDFAtbl\", */ T:1 },\n\t/*::[*/0x00BE/*::]*/: { /* n:\"BrtEndPCDFAtbl\", */ T:-1 },\n\t/*::[*/0x00BF/*::]*/: { /* n:\"BrtBeginPCDIRun\", */ T:1 },\n\t/*::[*/0x00C0/*::]*/: { /* n:\"BrtEndPCDIRun\", */ T:-1 },\n\t/*::[*/0x00C1/*::]*/: { /* n:\"BrtBeginPivotCacheRecords\", */ T:1 },\n\t/*::[*/0x00C2/*::]*/: { /* n:\"BrtEndPivotCacheRecords\", */ T:-1 },\n\t/*::[*/0x00C3/*::]*/: { /* n:\"BrtBeginPCDHierarchies\", */ T:1 },\n\t/*::[*/0x00C4/*::]*/: { /* n:\"BrtEndPCDHierarchies\", */ T:-1 },\n\t/*::[*/0x00C5/*::]*/: { /* n:\"BrtBeginPCDHierarchy\", */ T:1 },\n\t/*::[*/0x00C6/*::]*/: { /* n:\"BrtEndPCDHierarchy\", */ T:-1 },\n\t/*::[*/0x00C7/*::]*/: { /* n:\"BrtBeginPCDHFieldsUsage\", */ T:1 },\n\t/*::[*/0x00C8/*::]*/: { /* n:\"BrtEndPCDHFieldsUsage\", */ T:-1 },\n\t/*::[*/0x00C9/*::]*/: { /* n:\"BrtBeginExtConnection\", */ T:1 },\n\t/*::[*/0x00CA/*::]*/: { /* n:\"BrtEndExtConnection\", */ T:-1 },\n\t/*::[*/0x00CB/*::]*/: { /* n:\"BrtBeginECDbProps\", */ T:1 },\n\t/*::[*/0x00CC/*::]*/: { /* n:\"BrtEndECDbProps\", */ T:-1 },\n\t/*::[*/0x00CD/*::]*/: { /* n:\"BrtBeginECOlapProps\", */ T:1 },\n\t/*::[*/0x00CE/*::]*/: { /* n:\"BrtEndECOlapProps\", */ T:-1 },\n\t/*::[*/0x00CF/*::]*/: { /* n:\"BrtBeginPCDSConsol\", */ T:1 },\n\t/*::[*/0x00D0/*::]*/: { /* n:\"BrtEndPCDSConsol\", */ T:-1 },\n\t/*::[*/0x00D1/*::]*/: { /* n:\"BrtBeginPCDSCPages\", */ T:1 },\n\t/*::[*/0x00D2/*::]*/: { /* n:\"BrtEndPCDSCPages\", */ T:-1 },\n\t/*::[*/0x00D3/*::]*/: { /* n:\"BrtBeginPCDSCPage\", */ T:1 },\n\t/*::[*/0x00D4/*::]*/: { /* n:\"BrtEndPCDSCPage\", */ T:-1 },\n\t/*::[*/0x00D5/*::]*/: { /* n:\"BrtBeginPCDSCPItem\", */ T:1 },\n\t/*::[*/0x00D6/*::]*/: { /* n:\"BrtEndPCDSCPItem\", */ T:-1 },\n\t/*::[*/0x00D7/*::]*/: { /* n:\"BrtBeginPCDSCSets\", */ T:1 },\n\t/*::[*/0x00D8/*::]*/: { /* n:\"BrtEndPCDSCSets\", */ T:-1 },\n\t/*::[*/0x00D9/*::]*/: { /* n:\"BrtBeginPCDSCSet\", */ T:1 },\n\t/*::[*/0x00DA/*::]*/: { /* n:\"BrtEndPCDSCSet\", */ T:-1 },\n\t/*::[*/0x00DB/*::]*/: { /* n:\"BrtBeginPCDFGroup\", */ T:1 },\n\t/*::[*/0x00DC/*::]*/: { /* n:\"BrtEndPCDFGroup\", */ T:-1 },\n\t/*::[*/0x00DD/*::]*/: { /* n:\"BrtBeginPCDFGItems\", */ T:1 },\n\t/*::[*/0x00DE/*::]*/: { /* n:\"BrtEndPCDFGItems\", */ T:-1 },\n\t/*::[*/0x00DF/*::]*/: { /* n:\"BrtBeginPCDFGRange\", */ T:1 },\n\t/*::[*/0x00E0/*::]*/: { /* n:\"BrtEndPCDFGRange\", */ T:-1 },\n\t/*::[*/0x00E1/*::]*/: { /* n:\"BrtBeginPCDFGDiscrete\", */ T:1 },\n\t/*::[*/0x00E2/*::]*/: { /* n:\"BrtEndPCDFGDiscrete\", */ T:-1 },\n\t/*::[*/0x00E3/*::]*/: { /* n:\"BrtBeginPCDSDTupleCache\", */ T:1 },\n\t/*::[*/0x00E4/*::]*/: { /* n:\"BrtEndPCDSDTupleCache\", */ T:-1 },\n\t/*::[*/0x00E5/*::]*/: { /* n:\"BrtBeginPCDSDTCEntries\", */ T:1 },\n\t/*::[*/0x00E6/*::]*/: { /* n:\"BrtEndPCDSDTCEntries\", */ T:-1 },\n\t/*::[*/0x00E7/*::]*/: { /* n:\"BrtBeginPCDSDTCEMembers\", */ T:1 },\n\t/*::[*/0x00E8/*::]*/: { /* n:\"BrtEndPCDSDTCEMembers\", */ T:-1 },\n\t/*::[*/0x00E9/*::]*/: { /* n:\"BrtBeginPCDSDTCEMember\", */ T:1 },\n\t/*::[*/0x00EA/*::]*/: { /* n:\"BrtEndPCDSDTCEMember\", */ T:-1 },\n\t/*::[*/0x00EB/*::]*/: { /* n:\"BrtBeginPCDSDTCQueries\", */ T:1 },\n\t/*::[*/0x00EC/*::]*/: { /* n:\"BrtEndPCDSDTCQueries\", */ T:-1 },\n\t/*::[*/0x00ED/*::]*/: { /* n:\"BrtBeginPCDSDTCQuery\", */ T:1 },\n\t/*::[*/0x00EE/*::]*/: { /* n:\"BrtEndPCDSDTCQuery\", */ T:-1 },\n\t/*::[*/0x00EF/*::]*/: { /* n:\"BrtBeginPCDSDTCSets\", */ T:1 },\n\t/*::[*/0x00F0/*::]*/: { /* n:\"BrtEndPCDSDTCSets\", */ T:-1 },\n\t/*::[*/0x00F1/*::]*/: { /* n:\"BrtBeginPCDSDTCSet\", */ T:1 },\n\t/*::[*/0x00F2/*::]*/: { /* n:\"BrtEndPCDSDTCSet\", */ T:-1 },\n\t/*::[*/0x00F3/*::]*/: { /* n:\"BrtBeginPCDCalcItems\", */ T:1 },\n\t/*::[*/0x00F4/*::]*/: { /* n:\"BrtEndPCDCalcItems\", */ T:-1 },\n\t/*::[*/0x00F5/*::]*/: { /* n:\"BrtBeginPCDCalcItem\", */ T:1 },\n\t/*::[*/0x00F6/*::]*/: { /* n:\"BrtEndPCDCalcItem\", */ T:-1 },\n\t/*::[*/0x00F7/*::]*/: { /* n:\"BrtBeginPRule\", */ T:1 },\n\t/*::[*/0x00F8/*::]*/: { /* n:\"BrtEndPRule\", */ T:-1 },\n\t/*::[*/0x00F9/*::]*/: { /* n:\"BrtBeginPRFilters\", */ T:1 },\n\t/*::[*/0x00FA/*::]*/: { /* n:\"BrtEndPRFilters\", */ T:-1 },\n\t/*::[*/0x00FB/*::]*/: { /* n:\"BrtBeginPRFilter\", */ T:1 },\n\t/*::[*/0x00FC/*::]*/: { /* n:\"BrtEndPRFilter\", */ T:-1 },\n\t/*::[*/0x00FD/*::]*/: { /* n:\"BrtBeginPNames\", */ T:1 },\n\t/*::[*/0x00FE/*::]*/: { /* n:\"BrtEndPNames\", */ T:-1 },\n\t/*::[*/0x00FF/*::]*/: { /* n:\"BrtBeginPName\", */ T:1 },\n\t/*::[*/0x0100/*::]*/: { /* n:\"BrtEndPName\", */ T:-1 },\n\t/*::[*/0x0101/*::]*/: { /* n:\"BrtBeginPNPairs\", */ T:1 },\n\t/*::[*/0x0102/*::]*/: { /* n:\"BrtEndPNPairs\", */ T:-1 },\n\t/*::[*/0x0103/*::]*/: { /* n:\"BrtBeginPNPair\", */ T:1 },\n\t/*::[*/0x0104/*::]*/: { /* n:\"BrtEndPNPair\", */ T:-1 },\n\t/*::[*/0x0105/*::]*/: { /* n:\"BrtBeginECWebProps\", */ T:1 },\n\t/*::[*/0x0106/*::]*/: { /* n:\"BrtEndECWebProps\", */ T:-1 },\n\t/*::[*/0x0107/*::]*/: { /* n:\"BrtBeginEcWpTables\", */ T:1 },\n\t/*::[*/0x0108/*::]*/: { /* n:\"BrtEndECWPTables\", */ T:-1 },\n\t/*::[*/0x0109/*::]*/: { /* n:\"BrtBeginECParams\", */ T:1 },\n\t/*::[*/0x010A/*::]*/: { /* n:\"BrtEndECParams\", */ T:-1 },\n\t/*::[*/0x010B/*::]*/: { /* n:\"BrtBeginECParam\", */ T:1 },\n\t/*::[*/0x010C/*::]*/: { /* n:\"BrtEndECParam\", */ T:-1 },\n\t/*::[*/0x010D/*::]*/: { /* n:\"BrtBeginPCDKPIs\", */ T:1 },\n\t/*::[*/0x010E/*::]*/: { /* n:\"BrtEndPCDKPIs\", */ T:-1 },\n\t/*::[*/0x010F/*::]*/: { /* n:\"BrtBeginPCDKPI\", */ T:1 },\n\t/*::[*/0x0110/*::]*/: { /* n:\"BrtEndPCDKPI\", */ T:-1 },\n\t/*::[*/0x0111/*::]*/: { /* n:\"BrtBeginDims\", */ T:1 },\n\t/*::[*/0x0112/*::]*/: { /* n:\"BrtEndDims\", */ T:-1 },\n\t/*::[*/0x0113/*::]*/: { /* n:\"BrtBeginDim\", */ T:1 },\n\t/*::[*/0x0114/*::]*/: { /* n:\"BrtEndDim\", */ T:-1 },\n\t/*::[*/0x0115/*::]*/: { /* n:\"BrtIndexPartEnd\" */ },\n\t/*::[*/0x0116/*::]*/: { /* n:\"BrtBeginStyleSheet\", */ T:1 },\n\t/*::[*/0x0117/*::]*/: { /* n:\"BrtEndStyleSheet\", */ T:-1 },\n\t/*::[*/0x0118/*::]*/: { /* n:\"BrtBeginSXView\", */ T:1 },\n\t/*::[*/0x0119/*::]*/: { /* n:\"BrtEndSXVI\", */ T:-1 },\n\t/*::[*/0x011A/*::]*/: { /* n:\"BrtBeginSXVI\", */ T:1 },\n\t/*::[*/0x011B/*::]*/: { /* n:\"BrtBeginSXVIs\", */ T:1 },\n\t/*::[*/0x011C/*::]*/: { /* n:\"BrtEndSXVIs\", */ T:-1 },\n\t/*::[*/0x011D/*::]*/: { /* n:\"BrtBeginSXVD\", */ T:1 },\n\t/*::[*/0x011E/*::]*/: { /* n:\"BrtEndSXVD\", */ T:-1 },\n\t/*::[*/0x011F/*::]*/: { /* n:\"BrtBeginSXVDs\", */ T:1 },\n\t/*::[*/0x0120/*::]*/: { /* n:\"BrtEndSXVDs\", */ T:-1 },\n\t/*::[*/0x0121/*::]*/: { /* n:\"BrtBeginSXPI\", */ T:1 },\n\t/*::[*/0x0122/*::]*/: { /* n:\"BrtEndSXPI\", */ T:-1 },\n\t/*::[*/0x0123/*::]*/: { /* n:\"BrtBeginSXPIs\", */ T:1 },\n\t/*::[*/0x0124/*::]*/: { /* n:\"BrtEndSXPIs\", */ T:-1 },\n\t/*::[*/0x0125/*::]*/: { /* n:\"BrtBeginSXDI\", */ T:1 },\n\t/*::[*/0x0126/*::]*/: { /* n:\"BrtEndSXDI\", */ T:-1 },\n\t/*::[*/0x0127/*::]*/: { /* n:\"BrtBeginSXDIs\", */ T:1 },\n\t/*::[*/0x0128/*::]*/: { /* n:\"BrtEndSXDIs\", */ T:-1 },\n\t/*::[*/0x0129/*::]*/: { /* n:\"BrtBeginSXLI\", */ T:1 },\n\t/*::[*/0x012A/*::]*/: { /* n:\"BrtEndSXLI\", */ T:-1 },\n\t/*::[*/0x012B/*::]*/: { /* n:\"BrtBeginSXLIRws\", */ T:1 },\n\t/*::[*/0x012C/*::]*/: { /* n:\"BrtEndSXLIRws\", */ T:-1 },\n\t/*::[*/0x012D/*::]*/: { /* n:\"BrtBeginSXLICols\", */ T:1 },\n\t/*::[*/0x012E/*::]*/: { /* n:\"BrtEndSXLICols\", */ T:-1 },\n\t/*::[*/0x012F/*::]*/: { /* n:\"BrtBeginSXFormat\", */ T:1 },\n\t/*::[*/0x0130/*::]*/: { /* n:\"BrtEndSXFormat\", */ T:-1 },\n\t/*::[*/0x0131/*::]*/: { /* n:\"BrtBeginSXFormats\", */ T:1 },\n\t/*::[*/0x0132/*::]*/: { /* n:\"BrtEndSxFormats\", */ T:-1 },\n\t/*::[*/0x0133/*::]*/: { /* n:\"BrtBeginSxSelect\", */ T:1 },\n\t/*::[*/0x0134/*::]*/: { /* n:\"BrtEndSxSelect\", */ T:-1 },\n\t/*::[*/0x0135/*::]*/: { /* n:\"BrtBeginISXVDRws\", */ T:1 },\n\t/*::[*/0x0136/*::]*/: { /* n:\"BrtEndISXVDRws\", */ T:-1 },\n\t/*::[*/0x0137/*::]*/: { /* n:\"BrtBeginISXVDCols\", */ T:1 },\n\t/*::[*/0x0138/*::]*/: { /* n:\"BrtEndISXVDCols\", */ T:-1 },\n\t/*::[*/0x0139/*::]*/: { /* n:\"BrtEndSXLocation\", */ T:-1 },\n\t/*::[*/0x013A/*::]*/: { /* n:\"BrtBeginSXLocation\", */ T:1 },\n\t/*::[*/0x013B/*::]*/: { /* n:\"BrtEndSXView\", */ T:-1 },\n\t/*::[*/0x013C/*::]*/: { /* n:\"BrtBeginSXTHs\", */ T:1 },\n\t/*::[*/0x013D/*::]*/: { /* n:\"BrtEndSXTHs\", */ T:-1 },\n\t/*::[*/0x013E/*::]*/: { /* n:\"BrtBeginSXTH\", */ T:1 },\n\t/*::[*/0x013F/*::]*/: { /* n:\"BrtEndSXTH\", */ T:-1 },\n\t/*::[*/0x0140/*::]*/: { /* n:\"BrtBeginISXTHRws\", */ T:1 },\n\t/*::[*/0x0141/*::]*/: { /* n:\"BrtEndISXTHRws\", */ T:-1 },\n\t/*::[*/0x0142/*::]*/: { /* n:\"BrtBeginISXTHCols\", */ T:1 },\n\t/*::[*/0x0143/*::]*/: { /* n:\"BrtEndISXTHCols\", */ T:-1 },\n\t/*::[*/0x0144/*::]*/: { /* n:\"BrtBeginSXTDMPS\", */ T:1 },\n\t/*::[*/0x0145/*::]*/: { /* n:\"BrtEndSXTDMPs\", */ T:-1 },\n\t/*::[*/0x0146/*::]*/: { /* n:\"BrtBeginSXTDMP\", */ T:1 },\n\t/*::[*/0x0147/*::]*/: { /* n:\"BrtEndSXTDMP\", */ T:-1 },\n\t/*::[*/0x0148/*::]*/: { /* n:\"BrtBeginSXTHItems\", */ T:1 },\n\t/*::[*/0x0149/*::]*/: { /* n:\"BrtEndSXTHItems\", */ T:-1 },\n\t/*::[*/0x014A/*::]*/: { /* n:\"BrtBeginSXTHItem\", */ T:1 },\n\t/*::[*/0x014B/*::]*/: { /* n:\"BrtEndSXTHItem\", */ T:-1 },\n\t/*::[*/0x014C/*::]*/: { /* n:\"BrtBeginMetadata\", */ T:1 },\n\t/*::[*/0x014D/*::]*/: { /* n:\"BrtEndMetadata\", */ T:-1 },\n\t/*::[*/0x014E/*::]*/: { /* n:\"BrtBeginEsmdtinfo\", */ T:1 },\n\t/*::[*/0x014F/*::]*/: { /* n:\"BrtMdtinfo\", */ f:parse_BrtMdtinfo },\n\t/*::[*/0x0150/*::]*/: { /* n:\"BrtEndEsmdtinfo\", */ T:-1 },\n\t/*::[*/0x0151/*::]*/: { /* n:\"BrtBeginEsmdb\", */ f:parse_BrtBeginEsmdb, T:1 },\n\t/*::[*/0x0152/*::]*/: { /* n:\"BrtEndEsmdb\", */ T:-1 },\n\t/*::[*/0x0153/*::]*/: { /* n:\"BrtBeginEsfmd\", */ T:1 },\n\t/*::[*/0x0154/*::]*/: { /* n:\"BrtEndEsfmd\", */ T:-1 },\n\t/*::[*/0x0155/*::]*/: { /* n:\"BrtBeginSingleCells\", */ T:1 },\n\t/*::[*/0x0156/*::]*/: { /* n:\"BrtEndSingleCells\", */ T:-1 },\n\t/*::[*/0x0157/*::]*/: { /* n:\"BrtBeginList\", */ T:1 },\n\t/*::[*/0x0158/*::]*/: { /* n:\"BrtEndList\", */ T:-1 },\n\t/*::[*/0x0159/*::]*/: { /* n:\"BrtBeginListCols\", */ T:1 },\n\t/*::[*/0x015A/*::]*/: { /* n:\"BrtEndListCols\", */ T:-1 },\n\t/*::[*/0x015B/*::]*/: { /* n:\"BrtBeginListCol\", */ T:1 },\n\t/*::[*/0x015C/*::]*/: { /* n:\"BrtEndListCol\", */ T:-1 },\n\t/*::[*/0x015D/*::]*/: { /* n:\"BrtBeginListXmlCPr\", */ T:1 },\n\t/*::[*/0x015E/*::]*/: { /* n:\"BrtEndListXmlCPr\", */ T:-1 },\n\t/*::[*/0x015F/*::]*/: { /* n:\"BrtListCCFmla\" */ },\n\t/*::[*/0x0160/*::]*/: { /* n:\"BrtListTrFmla\" */ },\n\t/*::[*/0x0161/*::]*/: { /* n:\"BrtBeginExternals\", */ T:1 },\n\t/*::[*/0x0162/*::]*/: { /* n:\"BrtEndExternals\", */ T:-1 },\n\t/*::[*/0x0163/*::]*/: { /* n:\"BrtSupBookSrc\", */ f:parse_RelID},\n\t/*::[*/0x0165/*::]*/: { /* n:\"BrtSupSelf\" */ },\n\t/*::[*/0x0166/*::]*/: { /* n:\"BrtSupSame\" */ },\n\t/*::[*/0x0167/*::]*/: { /* n:\"BrtSupTabs\" */ },\n\t/*::[*/0x0168/*::]*/: { /* n:\"BrtBeginSupBook\", */ T:1 },\n\t/*::[*/0x0169/*::]*/: { /* n:\"BrtPlaceholderName\" */ },\n\t/*::[*/0x016A/*::]*/: { /* n:\"BrtExternSheet\", */ f:parse_ExternSheet },\n\t/*::[*/0x016B/*::]*/: { /* n:\"BrtExternTableStart\" */ },\n\t/*::[*/0x016C/*::]*/: { /* n:\"BrtExternTableEnd\" */ },\n\t/*::[*/0x016E/*::]*/: { /* n:\"BrtExternRowHdr\" */ },\n\t/*::[*/0x016F/*::]*/: { /* n:\"BrtExternCellBlank\" */ },\n\t/*::[*/0x0170/*::]*/: { /* n:\"BrtExternCellReal\" */ },\n\t/*::[*/0x0171/*::]*/: { /* n:\"BrtExternCellBool\" */ },\n\t/*::[*/0x0172/*::]*/: { /* n:\"BrtExternCellError\" */ },\n\t/*::[*/0x0173/*::]*/: { /* n:\"BrtExternCellString\" */ },\n\t/*::[*/0x0174/*::]*/: { /* n:\"BrtBeginEsmdx\", */ T:1 },\n\t/*::[*/0x0175/*::]*/: { /* n:\"BrtEndEsmdx\", */ T:-1 },\n\t/*::[*/0x0176/*::]*/: { /* n:\"BrtBeginMdxSet\", */ T:1 },\n\t/*::[*/0x0177/*::]*/: { /* n:\"BrtEndMdxSet\", */ T:-1 },\n\t/*::[*/0x0178/*::]*/: { /* n:\"BrtBeginMdxMbrProp\", */ T:1 },\n\t/*::[*/0x0179/*::]*/: { /* n:\"BrtEndMdxMbrProp\", */ T:-1 },\n\t/*::[*/0x017A/*::]*/: { /* n:\"BrtBeginMdxKPI\", */ T:1 },\n\t/*::[*/0x017B/*::]*/: { /* n:\"BrtEndMdxKPI\", */ T:-1 },\n\t/*::[*/0x017C/*::]*/: { /* n:\"BrtBeginEsstr\", */ T:1 },\n\t/*::[*/0x017D/*::]*/: { /* n:\"BrtEndEsstr\", */ T:-1 },\n\t/*::[*/0x017E/*::]*/: { /* n:\"BrtBeginPRFItem\", */ T:1 },\n\t/*::[*/0x017F/*::]*/: { /* n:\"BrtEndPRFItem\", */ T:-1 },\n\t/*::[*/0x0180/*::]*/: { /* n:\"BrtBeginPivotCacheIDs\", */ T:1 },\n\t/*::[*/0x0181/*::]*/: { /* n:\"BrtEndPivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x0182/*::]*/: { /* n:\"BrtBeginPivotCacheID\", */ T:1 },\n\t/*::[*/0x0183/*::]*/: { /* n:\"BrtEndPivotCacheID\", */ T:-1 },\n\t/*::[*/0x0184/*::]*/: { /* n:\"BrtBeginISXVIs\", */ T:1 },\n\t/*::[*/0x0185/*::]*/: { /* n:\"BrtEndISXVIs\", */ T:-1 },\n\t/*::[*/0x0186/*::]*/: { /* n:\"BrtBeginColInfos\", */ T:1 },\n\t/*::[*/0x0187/*::]*/: { /* n:\"BrtEndColInfos\", */ T:-1 },\n\t/*::[*/0x0188/*::]*/: { /* n:\"BrtBeginRwBrk\", */ T:1 },\n\t/*::[*/0x0189/*::]*/: { /* n:\"BrtEndRwBrk\", */ T:-1 },\n\t/*::[*/0x018A/*::]*/: { /* n:\"BrtBeginColBrk\", */ T:1 },\n\t/*::[*/0x018B/*::]*/: { /* n:\"BrtEndColBrk\", */ T:-1 },\n\t/*::[*/0x018C/*::]*/: { /* n:\"BrtBrk\" */ },\n\t/*::[*/0x018D/*::]*/: { /* n:\"BrtUserBookView\" */ },\n\t/*::[*/0x018E/*::]*/: { /* n:\"BrtInfo\" */ },\n\t/*::[*/0x018F/*::]*/: { /* n:\"BrtCUsr\" */ },\n\t/*::[*/0x0190/*::]*/: { /* n:\"BrtUsr\" */ },\n\t/*::[*/0x0191/*::]*/: { /* n:\"BrtBeginUsers\", */ T:1 },\n\t/*::[*/0x0193/*::]*/: { /* n:\"BrtEOF\" */ },\n\t/*::[*/0x0194/*::]*/: { /* n:\"BrtUCR\" */ },\n\t/*::[*/0x0195/*::]*/: { /* n:\"BrtRRInsDel\" */ },\n\t/*::[*/0x0196/*::]*/: { /* n:\"BrtRREndInsDel\" */ },\n\t/*::[*/0x0197/*::]*/: { /* n:\"BrtRRMove\" */ },\n\t/*::[*/0x0198/*::]*/: { /* n:\"BrtRREndMove\" */ },\n\t/*::[*/0x0199/*::]*/: { /* n:\"BrtRRChgCell\" */ },\n\t/*::[*/0x019A/*::]*/: { /* n:\"BrtRREndChgCell\" */ },\n\t/*::[*/0x019B/*::]*/: { /* n:\"BrtRRHeader\" */ },\n\t/*::[*/0x019C/*::]*/: { /* n:\"BrtRRUserView\" */ },\n\t/*::[*/0x019D/*::]*/: { /* n:\"BrtRRRenSheet\" */ },\n\t/*::[*/0x019E/*::]*/: { /* n:\"BrtRRInsertSh\" */ },\n\t/*::[*/0x019F/*::]*/: { /* n:\"BrtRRDefName\" */ },\n\t/*::[*/0x01A0/*::]*/: { /* n:\"BrtRRNote\" */ },\n\t/*::[*/0x01A1/*::]*/: { /* n:\"BrtRRConflict\" */ },\n\t/*::[*/0x01A2/*::]*/: { /* n:\"BrtRRTQSIF\" */ },\n\t/*::[*/0x01A3/*::]*/: { /* n:\"BrtRRFormat\" */ },\n\t/*::[*/0x01A4/*::]*/: { /* n:\"BrtRREndFormat\" */ },\n\t/*::[*/0x01A5/*::]*/: { /* n:\"BrtRRAutoFmt\" */ },\n\t/*::[*/0x01A6/*::]*/: { /* n:\"BrtBeginUserShViews\", */ T:1 },\n\t/*::[*/0x01A7/*::]*/: { /* n:\"BrtBeginUserShView\", */ T:1 },\n\t/*::[*/0x01A8/*::]*/: { /* n:\"BrtEndUserShView\", */ T:-1 },\n\t/*::[*/0x01A9/*::]*/: { /* n:\"BrtEndUserShViews\", */ T:-1 },\n\t/*::[*/0x01AA/*::]*/: { /* n:\"BrtArrFmla\", */ f:parse_BrtArrFmla },\n\t/*::[*/0x01AB/*::]*/: { /* n:\"BrtShrFmla\", */ f:parse_BrtShrFmla },\n\t/*::[*/0x01AC/*::]*/: { /* n:\"BrtTable\" */ },\n\t/*::[*/0x01AD/*::]*/: { /* n:\"BrtBeginExtConnections\", */ T:1 },\n\t/*::[*/0x01AE/*::]*/: { /* n:\"BrtEndExtConnections\", */ T:-1 },\n\t/*::[*/0x01AF/*::]*/: { /* n:\"BrtBeginPCDCalcMems\", */ T:1 },\n\t/*::[*/0x01B0/*::]*/: { /* n:\"BrtEndPCDCalcMems\", */ T:-1 },\n\t/*::[*/0x01B1/*::]*/: { /* n:\"BrtBeginPCDCalcMem\", */ T:1 },\n\t/*::[*/0x01B2/*::]*/: { /* n:\"BrtEndPCDCalcMem\", */ T:-1 },\n\t/*::[*/0x01B3/*::]*/: { /* n:\"BrtBeginPCDHGLevels\", */ T:1 },\n\t/*::[*/0x01B4/*::]*/: { /* n:\"BrtEndPCDHGLevels\", */ T:-1 },\n\t/*::[*/0x01B5/*::]*/: { /* n:\"BrtBeginPCDHGLevel\", */ T:1 },\n\t/*::[*/0x01B6/*::]*/: { /* n:\"BrtEndPCDHGLevel\", */ T:-1 },\n\t/*::[*/0x01B7/*::]*/: { /* n:\"BrtBeginPCDHGLGroups\", */ T:1 },\n\t/*::[*/0x01B8/*::]*/: { /* n:\"BrtEndPCDHGLGroups\", */ T:-1 },\n\t/*::[*/0x01B9/*::]*/: { /* n:\"BrtBeginPCDHGLGroup\", */ T:1 },\n\t/*::[*/0x01BA/*::]*/: { /* n:\"BrtEndPCDHGLGroup\", */ T:-1 },\n\t/*::[*/0x01BB/*::]*/: { /* n:\"BrtBeginPCDHGLGMembers\", */ T:1 },\n\t/*::[*/0x01BC/*::]*/: { /* n:\"BrtEndPCDHGLGMembers\", */ T:-1 },\n\t/*::[*/0x01BD/*::]*/: { /* n:\"BrtBeginPCDHGLGMember\", */ T:1 },\n\t/*::[*/0x01BE/*::]*/: { /* n:\"BrtEndPCDHGLGMember\", */ T:-1 },\n\t/*::[*/0x01BF/*::]*/: { /* n:\"BrtBeginQSI\", */ T:1 },\n\t/*::[*/0x01C0/*::]*/: { /* n:\"BrtEndQSI\", */ T:-1 },\n\t/*::[*/0x01C1/*::]*/: { /* n:\"BrtBeginQSIR\", */ T:1 },\n\t/*::[*/0x01C2/*::]*/: { /* n:\"BrtEndQSIR\", */ T:-1 },\n\t/*::[*/0x01C3/*::]*/: { /* n:\"BrtBeginDeletedNames\", */ T:1 },\n\t/*::[*/0x01C4/*::]*/: { /* n:\"BrtEndDeletedNames\", */ T:-1 },\n\t/*::[*/0x01C5/*::]*/: { /* n:\"BrtBeginDeletedName\", */ T:1 },\n\t/*::[*/0x01C6/*::]*/: { /* n:\"BrtEndDeletedName\", */ T:-1 },\n\t/*::[*/0x01C7/*::]*/: { /* n:\"BrtBeginQSIFs\", */ T:1 },\n\t/*::[*/0x01C8/*::]*/: { /* n:\"BrtEndQSIFs\", */ T:-1 },\n\t/*::[*/0x01C9/*::]*/: { /* n:\"BrtBeginQSIF\", */ T:1 },\n\t/*::[*/0x01CA/*::]*/: { /* n:\"BrtEndQSIF\", */ T:-1 },\n\t/*::[*/0x01CB/*::]*/: { /* n:\"BrtBeginAutoSortScope\", */ T:1 },\n\t/*::[*/0x01CC/*::]*/: { /* n:\"BrtEndAutoSortScope\", */ T:-1 },\n\t/*::[*/0x01CD/*::]*/: { /* n:\"BrtBeginConditionalFormatting\", */ T:1 },\n\t/*::[*/0x01CE/*::]*/: { /* n:\"BrtEndConditionalFormatting\", */ T:-1 },\n\t/*::[*/0x01CF/*::]*/: { /* n:\"BrtBeginCFRule\", */ T:1 },\n\t/*::[*/0x01D0/*::]*/: { /* n:\"BrtEndCFRule\", */ T:-1 },\n\t/*::[*/0x01D1/*::]*/: { /* n:\"BrtBeginIconSet\", */ T:1 },\n\t/*::[*/0x01D2/*::]*/: { /* n:\"BrtEndIconSet\", */ T:-1 },\n\t/*::[*/0x01D3/*::]*/: { /* n:\"BrtBeginDatabar\", */ T:1 },\n\t/*::[*/0x01D4/*::]*/: { /* n:\"BrtEndDatabar\", */ T:-1 },\n\t/*::[*/0x01D5/*::]*/: { /* n:\"BrtBeginColorScale\", */ T:1 },\n\t/*::[*/0x01D6/*::]*/: { /* n:\"BrtEndColorScale\", */ T:-1 },\n\t/*::[*/0x01D7/*::]*/: { /* n:\"BrtCFVO\" */ },\n\t/*::[*/0x01D8/*::]*/: { /* n:\"BrtExternValueMeta\" */ },\n\t/*::[*/0x01D9/*::]*/: { /* n:\"BrtBeginColorPalette\", */ T:1 },\n\t/*::[*/0x01DA/*::]*/: { /* n:\"BrtEndColorPalette\", */ T:-1 },\n\t/*::[*/0x01DB/*::]*/: { /* n:\"BrtIndexedColor\" */ },\n\t/*::[*/0x01DC/*::]*/: { /* n:\"BrtMargins\", */ f:parse_BrtMargins },\n\t/*::[*/0x01DD/*::]*/: { /* n:\"BrtPrintOptions\" */ },\n\t/*::[*/0x01DE/*::]*/: { /* n:\"BrtPageSetup\" */ },\n\t/*::[*/0x01DF/*::]*/: { /* n:\"BrtBeginHeaderFooter\", */ T:1 },\n\t/*::[*/0x01E0/*::]*/: { /* n:\"BrtEndHeaderFooter\", */ T:-1 },\n\t/*::[*/0x01E1/*::]*/: { /* n:\"BrtBeginSXCrtFormat\", */ T:1 },\n\t/*::[*/0x01E2/*::]*/: { /* n:\"BrtEndSXCrtFormat\", */ T:-1 },\n\t/*::[*/0x01E3/*::]*/: { /* n:\"BrtBeginSXCrtFormats\", */ T:1 },\n\t/*::[*/0x01E4/*::]*/: { /* n:\"BrtEndSXCrtFormats\", */ T:-1 },\n\t/*::[*/0x01E5/*::]*/: { /* n:\"BrtWsFmtInfo\", */ f:parse_BrtWsFmtInfo },\n\t/*::[*/0x01E6/*::]*/: { /* n:\"BrtBeginMgs\", */ T:1 },\n\t/*::[*/0x01E7/*::]*/: { /* n:\"BrtEndMGs\", */ T:-1 },\n\t/*::[*/0x01E8/*::]*/: { /* n:\"BrtBeginMGMaps\", */ T:1 },\n\t/*::[*/0x01E9/*::]*/: { /* n:\"BrtEndMGMaps\", */ T:-1 },\n\t/*::[*/0x01EA/*::]*/: { /* n:\"BrtBeginMG\", */ T:1 },\n\t/*::[*/0x01EB/*::]*/: { /* n:\"BrtEndMG\", */ T:-1 },\n\t/*::[*/0x01EC/*::]*/: { /* n:\"BrtBeginMap\", */ T:1 },\n\t/*::[*/0x01ED/*::]*/: { /* n:\"BrtEndMap\", */ T:-1 },\n\t/*::[*/0x01EE/*::]*/: { /* n:\"BrtHLink\", */ f:parse_BrtHLink },\n\t/*::[*/0x01EF/*::]*/: { /* n:\"BrtBeginDCon\", */ T:1 },\n\t/*::[*/0x01F0/*::]*/: { /* n:\"BrtEndDCon\", */ T:-1 },\n\t/*::[*/0x01F1/*::]*/: { /* n:\"BrtBeginDRefs\", */ T:1 },\n\t/*::[*/0x01F2/*::]*/: { /* n:\"BrtEndDRefs\", */ T:-1 },\n\t/*::[*/0x01F3/*::]*/: { /* n:\"BrtDRef\" */ },\n\t/*::[*/0x01F4/*::]*/: { /* n:\"BrtBeginScenMan\", */ T:1 },\n\t/*::[*/0x01F5/*::]*/: { /* n:\"BrtEndScenMan\", */ T:-1 },\n\t/*::[*/0x01F6/*::]*/: { /* n:\"BrtBeginSct\", */ T:1 },\n\t/*::[*/0x01F7/*::]*/: { /* n:\"BrtEndSct\", */ T:-1 },\n\t/*::[*/0x01F8/*::]*/: { /* n:\"BrtSlc\" */ },\n\t/*::[*/0x01F9/*::]*/: { /* n:\"BrtBeginDXFs\", */ T:1 },\n\t/*::[*/0x01FA/*::]*/: { /* n:\"BrtEndDXFs\", */ T:-1 },\n\t/*::[*/0x01FB/*::]*/: { /* n:\"BrtDXF\" */ },\n\t/*::[*/0x01FC/*::]*/: { /* n:\"BrtBeginTableStyles\", */ T:1 },\n\t/*::[*/0x01FD/*::]*/: { /* n:\"BrtEndTableStyles\", */ T:-1 },\n\t/*::[*/0x01FE/*::]*/: { /* n:\"BrtBeginTableStyle\", */ T:1 },\n\t/*::[*/0x01FF/*::]*/: { /* n:\"BrtEndTableStyle\", */ T:-1 },\n\t/*::[*/0x0200/*::]*/: { /* n:\"BrtTableStyleElement\" */ },\n\t/*::[*/0x0201/*::]*/: { /* n:\"BrtTableStyleClient\" */ },\n\t/*::[*/0x0202/*::]*/: { /* n:\"BrtBeginVolDeps\", */ T:1 },\n\t/*::[*/0x0203/*::]*/: { /* n:\"BrtEndVolDeps\", */ T:-1 },\n\t/*::[*/0x0204/*::]*/: { /* n:\"BrtBeginVolType\", */ T:1 },\n\t/*::[*/0x0205/*::]*/: { /* n:\"BrtEndVolType\", */ T:-1 },\n\t/*::[*/0x0206/*::]*/: { /* n:\"BrtBeginVolMain\", */ T:1 },\n\t/*::[*/0x0207/*::]*/: { /* n:\"BrtEndVolMain\", */ T:-1 },\n\t/*::[*/0x0208/*::]*/: { /* n:\"BrtBeginVolTopic\", */ T:1 },\n\t/*::[*/0x0209/*::]*/: { /* n:\"BrtEndVolTopic\", */ T:-1 },\n\t/*::[*/0x020A/*::]*/: { /* n:\"BrtVolSubtopic\" */ },\n\t/*::[*/0x020B/*::]*/: { /* n:\"BrtVolRef\" */ },\n\t/*::[*/0x020C/*::]*/: { /* n:\"BrtVolNum\" */ },\n\t/*::[*/0x020D/*::]*/: { /* n:\"BrtVolErr\" */ },\n\t/*::[*/0x020E/*::]*/: { /* n:\"BrtVolStr\" */ },\n\t/*::[*/0x020F/*::]*/: { /* n:\"BrtVolBool\" */ },\n\t/*::[*/0x0210/*::]*/: { /* n:\"BrtBeginCalcChain$\", */ T:1 },\n\t/*::[*/0x0211/*::]*/: { /* n:\"BrtEndCalcChain$\", */ T:-1 },\n\t/*::[*/0x0212/*::]*/: { /* n:\"BrtBeginSortState\", */ T:1 },\n\t/*::[*/0x0213/*::]*/: { /* n:\"BrtEndSortState\", */ T:-1 },\n\t/*::[*/0x0214/*::]*/: { /* n:\"BrtBeginSortCond\", */ T:1 },\n\t/*::[*/0x0215/*::]*/: { /* n:\"BrtEndSortCond\", */ T:-1 },\n\t/*::[*/0x0216/*::]*/: { /* n:\"BrtBookProtection\" */ },\n\t/*::[*/0x0217/*::]*/: { /* n:\"BrtSheetProtection\" */ },\n\t/*::[*/0x0218/*::]*/: { /* n:\"BrtRangeProtection\" */ },\n\t/*::[*/0x0219/*::]*/: { /* n:\"BrtPhoneticInfo\" */ },\n\t/*::[*/0x021A/*::]*/: { /* n:\"BrtBeginECTxtWiz\", */ T:1 },\n\t/*::[*/0x021B/*::]*/: { /* n:\"BrtEndECTxtWiz\", */ T:-1 },\n\t/*::[*/0x021C/*::]*/: { /* n:\"BrtBeginECTWFldInfoLst\", */ T:1 },\n\t/*::[*/0x021D/*::]*/: { /* n:\"BrtEndECTWFldInfoLst\", */ T:-1 },\n\t/*::[*/0x021E/*::]*/: { /* n:\"BrtBeginECTwFldInfo\", */ T:1 },\n\t/*::[*/0x0224/*::]*/: { /* n:\"BrtFileSharing\" */ },\n\t/*::[*/0x0225/*::]*/: { /* n:\"BrtOleSize\" */ },\n\t/*::[*/0x0226/*::]*/: { /* n:\"BrtDrawing\", */ f:parse_RelID },\n\t/*::[*/0x0227/*::]*/: { /* n:\"BrtLegacyDrawing\" */ },\n\t/*::[*/0x0228/*::]*/: { /* n:\"BrtLegacyDrawingHF\" */ },\n\t/*::[*/0x0229/*::]*/: { /* n:\"BrtWebOpt\" */ },\n\t/*::[*/0x022A/*::]*/: { /* n:\"BrtBeginWebPubItems\", */ T:1 },\n\t/*::[*/0x022B/*::]*/: { /* n:\"BrtEndWebPubItems\", */ T:-1 },\n\t/*::[*/0x022C/*::]*/: { /* n:\"BrtBeginWebPubItem\", */ T:1 },\n\t/*::[*/0x022D/*::]*/: { /* n:\"BrtEndWebPubItem\", */ T:-1 },\n\t/*::[*/0x022E/*::]*/: { /* n:\"BrtBeginSXCondFmt\", */ T:1 },\n\t/*::[*/0x022F/*::]*/: { /* n:\"BrtEndSXCondFmt\", */ T:-1 },\n\t/*::[*/0x0230/*::]*/: { /* n:\"BrtBeginSXCondFmts\", */ T:1 },\n\t/*::[*/0x0231/*::]*/: { /* n:\"BrtEndSXCondFmts\", */ T:-1 },\n\t/*::[*/0x0232/*::]*/: { /* n:\"BrtBkHim\" */ },\n\t/*::[*/0x0234/*::]*/: { /* n:\"BrtColor\" */ },\n\t/*::[*/0x0235/*::]*/: { /* n:\"BrtBeginIndexedColors\", */ T:1 },\n\t/*::[*/0x0236/*::]*/: { /* n:\"BrtEndIndexedColors\", */ T:-1 },\n\t/*::[*/0x0239/*::]*/: { /* n:\"BrtBeginMRUColors\", */ T:1 },\n\t/*::[*/0x023A/*::]*/: { /* n:\"BrtEndMRUColors\", */ T:-1 },\n\t/*::[*/0x023C/*::]*/: { /* n:\"BrtMRUColor\" */ },\n\t/*::[*/0x023D/*::]*/: { /* n:\"BrtBeginDVals\", */ T:1 },\n\t/*::[*/0x023E/*::]*/: { /* n:\"BrtEndDVals\", */ T:-1 },\n\t/*::[*/0x0241/*::]*/: { /* n:\"BrtSupNameStart\" */ },\n\t/*::[*/0x0242/*::]*/: { /* n:\"BrtSupNameValueStart\" */ },\n\t/*::[*/0x0243/*::]*/: { /* n:\"BrtSupNameValueEnd\" */ },\n\t/*::[*/0x0244/*::]*/: { /* n:\"BrtSupNameNum\" */ },\n\t/*::[*/0x0245/*::]*/: { /* n:\"BrtSupNameErr\" */ },\n\t/*::[*/0x0246/*::]*/: { /* n:\"BrtSupNameSt\" */ },\n\t/*::[*/0x0247/*::]*/: { /* n:\"BrtSupNameNil\" */ },\n\t/*::[*/0x0248/*::]*/: { /* n:\"BrtSupNameBool\" */ },\n\t/*::[*/0x0249/*::]*/: { /* n:\"BrtSupNameFmla\" */ },\n\t/*::[*/0x024A/*::]*/: { /* n:\"BrtSupNameBits\" */ },\n\t/*::[*/0x024B/*::]*/: { /* n:\"BrtSupNameEnd\" */ },\n\t/*::[*/0x024C/*::]*/: { /* n:\"BrtEndSupBook\", */ T:-1 },\n\t/*::[*/0x024D/*::]*/: { /* n:\"BrtCellSmartTagProperty\" */ },\n\t/*::[*/0x024E/*::]*/: { /* n:\"BrtBeginCellSmartTag\", */ T:1 },\n\t/*::[*/0x024F/*::]*/: { /* n:\"BrtEndCellSmartTag\", */ T:-1 },\n\t/*::[*/0x0250/*::]*/: { /* n:\"BrtBeginCellSmartTags\", */ T:1 },\n\t/*::[*/0x0251/*::]*/: { /* n:\"BrtEndCellSmartTags\", */ T:-1 },\n\t/*::[*/0x0252/*::]*/: { /* n:\"BrtBeginSmartTags\", */ T:1 },\n\t/*::[*/0x0253/*::]*/: { /* n:\"BrtEndSmartTags\", */ T:-1 },\n\t/*::[*/0x0254/*::]*/: { /* n:\"BrtSmartTagType\" */ },\n\t/*::[*/0x0255/*::]*/: { /* n:\"BrtBeginSmartTagTypes\", */ T:1 },\n\t/*::[*/0x0256/*::]*/: { /* n:\"BrtEndSmartTagTypes\", */ T:-1 },\n\t/*::[*/0x0257/*::]*/: { /* n:\"BrtBeginSXFilters\", */ T:1 },\n\t/*::[*/0x0258/*::]*/: { /* n:\"BrtEndSXFilters\", */ T:-1 },\n\t/*::[*/0x0259/*::]*/: { /* n:\"BrtBeginSXFILTER\", */ T:1 },\n\t/*::[*/0x025A/*::]*/: { /* n:\"BrtEndSXFilter\", */ T:-1 },\n\t/*::[*/0x025B/*::]*/: { /* n:\"BrtBeginFills\", */ T:1 },\n\t/*::[*/0x025C/*::]*/: { /* n:\"BrtEndFills\", */ T:-1 },\n\t/*::[*/0x025D/*::]*/: { /* n:\"BrtBeginCellWatches\", */ T:1 },\n\t/*::[*/0x025E/*::]*/: { /* n:\"BrtEndCellWatches\", */ T:-1 },\n\t/*::[*/0x025F/*::]*/: { /* n:\"BrtCellWatch\" */ },\n\t/*::[*/0x0260/*::]*/: { /* n:\"BrtBeginCRErrs\", */ T:1 },\n\t/*::[*/0x0261/*::]*/: { /* n:\"BrtEndCRErrs\", */ T:-1 },\n\t/*::[*/0x0262/*::]*/: { /* n:\"BrtCrashRecErr\" */ },\n\t/*::[*/0x0263/*::]*/: { /* n:\"BrtBeginFonts\", */ T:1 },\n\t/*::[*/0x0264/*::]*/: { /* n:\"BrtEndFonts\", */ T:-1 },\n\t/*::[*/0x0265/*::]*/: { /* n:\"BrtBeginBorders\", */ T:1 },\n\t/*::[*/0x0266/*::]*/: { /* n:\"BrtEndBorders\", */ T:-1 },\n\t/*::[*/0x0267/*::]*/: { /* n:\"BrtBeginFmts\", */ T:1 },\n\t/*::[*/0x0268/*::]*/: { /* n:\"BrtEndFmts\", */ T:-1 },\n\t/*::[*/0x0269/*::]*/: { /* n:\"BrtBeginCellXFs\", */ T:1 },\n\t/*::[*/0x026A/*::]*/: { /* n:\"BrtEndCellXFs\", */ T:-1 },\n\t/*::[*/0x026B/*::]*/: { /* n:\"BrtBeginStyles\", */ T:1 },\n\t/*::[*/0x026C/*::]*/: { /* n:\"BrtEndStyles\", */ T:-1 },\n\t/*::[*/0x0271/*::]*/: { /* n:\"BrtBigName\" */ },\n\t/*::[*/0x0272/*::]*/: { /* n:\"BrtBeginCellStyleXFs\", */ T:1 },\n\t/*::[*/0x0273/*::]*/: { /* n:\"BrtEndCellStyleXFs\", */ T:-1 },\n\t/*::[*/0x0274/*::]*/: { /* n:\"BrtBeginComments\", */ T:1 },\n\t/*::[*/0x0275/*::]*/: { /* n:\"BrtEndComments\", */ T:-1 },\n\t/*::[*/0x0276/*::]*/: { /* n:\"BrtBeginCommentAuthors\", */ T:1 },\n\t/*::[*/0x0277/*::]*/: { /* n:\"BrtEndCommentAuthors\", */ T:-1 },\n\t/*::[*/0x0278/*::]*/: { /* n:\"BrtCommentAuthor\", */ f:parse_BrtCommentAuthor },\n\t/*::[*/0x0279/*::]*/: { /* n:\"BrtBeginCommentList\", */ T:1 },\n\t/*::[*/0x027A/*::]*/: { /* n:\"BrtEndCommentList\", */ T:-1 },\n\t/*::[*/0x027B/*::]*/: { /* n:\"BrtBeginComment\", */ T:1, f:parse_BrtBeginComment},\n\t/*::[*/0x027C/*::]*/: { /* n:\"BrtEndComment\", */ T:-1 },\n\t/*::[*/0x027D/*::]*/: { /* n:\"BrtCommentText\", */ f:parse_BrtCommentText },\n\t/*::[*/0x027E/*::]*/: { /* n:\"BrtBeginOleObjects\", */ T:1 },\n\t/*::[*/0x027F/*::]*/: { /* n:\"BrtOleObject\" */ },\n\t/*::[*/0x0280/*::]*/: { /* n:\"BrtEndOleObjects\", */ T:-1 },\n\t/*::[*/0x0281/*::]*/: { /* n:\"BrtBeginSxrules\", */ T:1 },\n\t/*::[*/0x0282/*::]*/: { /* n:\"BrtEndSxRules\", */ T:-1 },\n\t/*::[*/0x0283/*::]*/: { /* n:\"BrtBeginActiveXControls\", */ T:1 },\n\t/*::[*/0x0284/*::]*/: { /* n:\"BrtActiveX\" */ },\n\t/*::[*/0x0285/*::]*/: { /* n:\"BrtEndActiveXControls\", */ T:-1 },\n\t/*::[*/0x0286/*::]*/: { /* n:\"BrtBeginPCDSDTCEMembersSortBy\", */ T:1 },\n\t/*::[*/0x0288/*::]*/: { /* n:\"BrtBeginCellIgnoreECs\", */ T:1 },\n\t/*::[*/0x0289/*::]*/: { /* n:\"BrtCellIgnoreEC\" */ },\n\t/*::[*/0x028A/*::]*/: { /* n:\"BrtEndCellIgnoreECs\", */ T:-1 },\n\t/*::[*/0x028B/*::]*/: { /* n:\"BrtCsProp\", */ f:parse_BrtCsProp },\n\t/*::[*/0x028C/*::]*/: { /* n:\"BrtCsPageSetup\" */ },\n\t/*::[*/0x028D/*::]*/: { /* n:\"BrtBeginUserCsViews\", */ T:1 },\n\t/*::[*/0x028E/*::]*/: { /* n:\"BrtEndUserCsViews\", */ T:-1 },\n\t/*::[*/0x028F/*::]*/: { /* n:\"BrtBeginUserCsView\", */ T:1 },\n\t/*::[*/0x0290/*::]*/: { /* n:\"BrtEndUserCsView\", */ T:-1 },\n\t/*::[*/0x0291/*::]*/: { /* n:\"BrtBeginPcdSFCIEntries\", */ T:1 },\n\t/*::[*/0x0292/*::]*/: { /* n:\"BrtEndPCDSFCIEntries\", */ T:-1 },\n\t/*::[*/0x0293/*::]*/: { /* n:\"BrtPCDSFCIEntry\" */ },\n\t/*::[*/0x0294/*::]*/: { /* n:\"BrtBeginListParts\", */ T:1 },\n\t/*::[*/0x0295/*::]*/: { /* n:\"BrtListPart\" */ },\n\t/*::[*/0x0296/*::]*/: { /* n:\"BrtEndListParts\", */ T:-1 },\n\t/*::[*/0x0297/*::]*/: { /* n:\"BrtSheetCalcProp\" */ },\n\t/*::[*/0x0298/*::]*/: { /* n:\"BrtBeginFnGroup\", */ T:1 },\n\t/*::[*/0x0299/*::]*/: { /* n:\"BrtFnGroup\" */ },\n\t/*::[*/0x029A/*::]*/: { /* n:\"BrtEndFnGroup\", */ T:-1 },\n\t/*::[*/0x029B/*::]*/: { /* n:\"BrtSupAddin\" */ },\n\t/*::[*/0x029C/*::]*/: { /* n:\"BrtSXTDMPOrder\" */ },\n\t/*::[*/0x029D/*::]*/: { /* n:\"BrtCsProtection\" */ },\n\t/*::[*/0x029F/*::]*/: { /* n:\"BrtBeginWsSortMap\", */ T:1 },\n\t/*::[*/0x02A0/*::]*/: { /* n:\"BrtEndWsSortMap\", */ T:-1 },\n\t/*::[*/0x02A1/*::]*/: { /* n:\"BrtBeginRRSort\", */ T:1 },\n\t/*::[*/0x02A2/*::]*/: { /* n:\"BrtEndRRSort\", */ T:-1 },\n\t/*::[*/0x02A3/*::]*/: { /* n:\"BrtRRSortItem\" */ },\n\t/*::[*/0x02A4/*::]*/: { /* n:\"BrtFileSharingIso\" */ },\n\t/*::[*/0x02A5/*::]*/: { /* n:\"BrtBookProtectionIso\" */ },\n\t/*::[*/0x02A6/*::]*/: { /* n:\"BrtSheetProtectionIso\" */ },\n\t/*::[*/0x02A7/*::]*/: { /* n:\"BrtCsProtectionIso\" */ },\n\t/*::[*/0x02A8/*::]*/: { /* n:\"BrtRangeProtectionIso\" */ },\n\t/*::[*/0x02A9/*::]*/: { /* n:\"BrtDValList\" */ },\n\t/*::[*/0x0400/*::]*/: { /* n:\"BrtRwDescent\" */ },\n\t/*::[*/0x0401/*::]*/: { /* n:\"BrtKnownFonts\" */ },\n\t/*::[*/0x0402/*::]*/: { /* n:\"BrtBeginSXTupleSet\", */ T:1 },\n\t/*::[*/0x0403/*::]*/: { /* n:\"BrtEndSXTupleSet\", */ T:-1 },\n\t/*::[*/0x0404/*::]*/: { /* n:\"BrtBeginSXTupleSetHeader\", */ T:1 },\n\t/*::[*/0x0405/*::]*/: { /* n:\"BrtEndSXTupleSetHeader\", */ T:-1 },\n\t/*::[*/0x0406/*::]*/: { /* n:\"BrtSXTupleSetHeaderItem\" */ },\n\t/*::[*/0x0407/*::]*/: { /* n:\"BrtBeginSXTupleSetData\", */ T:1 },\n\t/*::[*/0x0408/*::]*/: { /* n:\"BrtEndSXTupleSetData\", */ T:-1 },\n\t/*::[*/0x0409/*::]*/: { /* n:\"BrtBeginSXTupleSetRow\", */ T:1 },\n\t/*::[*/0x040A/*::]*/: { /* n:\"BrtEndSXTupleSetRow\", */ T:-1 },\n\t/*::[*/0x040B/*::]*/: { /* n:\"BrtSXTupleSetRowItem\" */ },\n\t/*::[*/0x040C/*::]*/: { /* n:\"BrtNameExt\" */ },\n\t/*::[*/0x040D/*::]*/: { /* n:\"BrtPCDH14\" */ },\n\t/*::[*/0x040E/*::]*/: { /* n:\"BrtBeginPCDCalcMem14\", */ T:1 },\n\t/*::[*/0x040F/*::]*/: { /* n:\"BrtEndPCDCalcMem14\", */ T:-1 },\n\t/*::[*/0x0410/*::]*/: { /* n:\"BrtSXTH14\" */ },\n\t/*::[*/0x0411/*::]*/: { /* n:\"BrtBeginSparklineGroup\", */ T:1 },\n\t/*::[*/0x0412/*::]*/: { /* n:\"BrtEndSparklineGroup\", */ T:-1 },\n\t/*::[*/0x0413/*::]*/: { /* n:\"BrtSparkline\" */ },\n\t/*::[*/0x0414/*::]*/: { /* n:\"BrtSXDI14\" */ },\n\t/*::[*/0x0415/*::]*/: { /* n:\"BrtWsFmtInfoEx14\" */ },\n\t/*::[*/0x0416/*::]*/: { /* n:\"BrtBeginConditionalFormatting14\", */ T:1 },\n\t/*::[*/0x0417/*::]*/: { /* n:\"BrtEndConditionalFormatting14\", */ T:-1 },\n\t/*::[*/0x0418/*::]*/: { /* n:\"BrtBeginCFRule14\", */ T:1 },\n\t/*::[*/0x0419/*::]*/: { /* n:\"BrtEndCFRule14\", */ T:-1 },\n\t/*::[*/0x041A/*::]*/: { /* n:\"BrtCFVO14\" */ },\n\t/*::[*/0x041B/*::]*/: { /* n:\"BrtBeginDatabar14\", */ T:1 },\n\t/*::[*/0x041C/*::]*/: { /* n:\"BrtBeginIconSet14\", */ T:1 },\n\t/*::[*/0x041D/*::]*/: { /* n:\"BrtDVal14\", */ f: parse_BrtDVal14 },\n\t/*::[*/0x041E/*::]*/: { /* n:\"BrtBeginDVals14\", */ T:1 },\n\t/*::[*/0x041F/*::]*/: { /* n:\"BrtColor14\" */ },\n\t/*::[*/0x0420/*::]*/: { /* n:\"BrtBeginSparklines\", */ T:1 },\n\t/*::[*/0x0421/*::]*/: { /* n:\"BrtEndSparklines\", */ T:-1 },\n\t/*::[*/0x0422/*::]*/: { /* n:\"BrtBeginSparklineGroups\", */ T:1 },\n\t/*::[*/0x0423/*::]*/: { /* n:\"BrtEndSparklineGroups\", */ T:-1 },\n\t/*::[*/0x0425/*::]*/: { /* n:\"BrtSXVD14\" */ },\n\t/*::[*/0x0426/*::]*/: { /* n:\"BrtBeginSXView14\", */ T:1 },\n\t/*::[*/0x0427/*::]*/: { /* n:\"BrtEndSXView14\", */ T:-1 },\n\t/*::[*/0x0428/*::]*/: { /* n:\"BrtBeginSXView16\", */ T:1 },\n\t/*::[*/0x0429/*::]*/: { /* n:\"BrtEndSXView16\", */ T:-1 },\n\t/*::[*/0x042A/*::]*/: { /* n:\"BrtBeginPCD14\", */ T:1 },\n\t/*::[*/0x042B/*::]*/: { /* n:\"BrtEndPCD14\", */ T:-1 },\n\t/*::[*/0x042C/*::]*/: { /* n:\"BrtBeginExtConn14\", */ T:1 },\n\t/*::[*/0x042D/*::]*/: { /* n:\"BrtEndExtConn14\", */ T:-1 },\n\t/*::[*/0x042E/*::]*/: { /* n:\"BrtBeginSlicerCacheIDs\", */ T:1 },\n\t/*::[*/0x042F/*::]*/: { /* n:\"BrtEndSlicerCacheIDs\", */ T:-1 },\n\t/*::[*/0x0430/*::]*/: { /* n:\"BrtBeginSlicerCacheID\", */ T:1 },\n\t/*::[*/0x0431/*::]*/: { /* n:\"BrtEndSlicerCacheID\", */ T:-1 },\n\t/*::[*/0x0433/*::]*/: { /* n:\"BrtBeginSlicerCache\", */ T:1 },\n\t/*::[*/0x0434/*::]*/: { /* n:\"BrtEndSlicerCache\", */ T:-1 },\n\t/*::[*/0x0435/*::]*/: { /* n:\"BrtBeginSlicerCacheDef\", */ T:1 },\n\t/*::[*/0x0436/*::]*/: { /* n:\"BrtEndSlicerCacheDef\", */ T:-1 },\n\t/*::[*/0x0437/*::]*/: { /* n:\"BrtBeginSlicersEx\", */ T:1 },\n\t/*::[*/0x0438/*::]*/: { /* n:\"BrtEndSlicersEx\", */ T:-1 },\n\t/*::[*/0x0439/*::]*/: { /* n:\"BrtBeginSlicerEx\", */ T:1 },\n\t/*::[*/0x043A/*::]*/: { /* n:\"BrtEndSlicerEx\", */ T:-1 },\n\t/*::[*/0x043B/*::]*/: { /* n:\"BrtBeginSlicer\", */ T:1 },\n\t/*::[*/0x043C/*::]*/: { /* n:\"BrtEndSlicer\", */ T:-1 },\n\t/*::[*/0x043D/*::]*/: { /* n:\"BrtSlicerCachePivotTables\" */ },\n\t/*::[*/0x043E/*::]*/: { /* n:\"BrtBeginSlicerCacheOlapImpl\", */ T:1 },\n\t/*::[*/0x043F/*::]*/: { /* n:\"BrtEndSlicerCacheOlapImpl\", */ T:-1 },\n\t/*::[*/0x0440/*::]*/: { /* n:\"BrtBeginSlicerCacheLevelsData\", */ T:1 },\n\t/*::[*/0x0441/*::]*/: { /* n:\"BrtEndSlicerCacheLevelsData\", */ T:-1 },\n\t/*::[*/0x0442/*::]*/: { /* n:\"BrtBeginSlicerCacheLevelData\", */ T:1 },\n\t/*::[*/0x0443/*::]*/: { /* n:\"BrtEndSlicerCacheLevelData\", */ T:-1 },\n\t/*::[*/0x0444/*::]*/: { /* n:\"BrtBeginSlicerCacheSiRanges\", */ T:1 },\n\t/*::[*/0x0445/*::]*/: { /* n:\"BrtEndSlicerCacheSiRanges\", */ T:-1 },\n\t/*::[*/0x0446/*::]*/: { /* n:\"BrtBeginSlicerCacheSiRange\", */ T:1 },\n\t/*::[*/0x0447/*::]*/: { /* n:\"BrtEndSlicerCacheSiRange\", */ T:-1 },\n\t/*::[*/0x0448/*::]*/: { /* n:\"BrtSlicerCacheOlapItem\" */ },\n\t/*::[*/0x0449/*::]*/: { /* n:\"BrtBeginSlicerCacheSelections\", */ T:1 },\n\t/*::[*/0x044A/*::]*/: { /* n:\"BrtSlicerCacheSelection\" */ },\n\t/*::[*/0x044B/*::]*/: { /* n:\"BrtEndSlicerCacheSelections\", */ T:-1 },\n\t/*::[*/0x044C/*::]*/: { /* n:\"BrtBeginSlicerCacheNative\", */ T:1 },\n\t/*::[*/0x044D/*::]*/: { /* n:\"BrtEndSlicerCacheNative\", */ T:-1 },\n\t/*::[*/0x044E/*::]*/: { /* n:\"BrtSlicerCacheNativeItem\" */ },\n\t/*::[*/0x044F/*::]*/: { /* n:\"BrtRangeProtection14\" */ },\n\t/*::[*/0x0450/*::]*/: { /* n:\"BrtRangeProtectionIso14\" */ },\n\t/*::[*/0x0451/*::]*/: { /* n:\"BrtCellIgnoreEC14\" */ },\n\t/*::[*/0x0457/*::]*/: { /* n:\"BrtList14\" */ },\n\t/*::[*/0x0458/*::]*/: { /* n:\"BrtCFIcon\" */ },\n\t/*::[*/0x0459/*::]*/: { /* n:\"BrtBeginSlicerCachesPivotCacheIDs\", */ T:1 },\n\t/*::[*/0x045A/*::]*/: { /* n:\"BrtEndSlicerCachesPivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x045B/*::]*/: { /* n:\"BrtBeginSlicers\", */ T:1 },\n\t/*::[*/0x045C/*::]*/: { /* n:\"BrtEndSlicers\", */ T:-1 },\n\t/*::[*/0x045D/*::]*/: { /* n:\"BrtWbProp14\" */ },\n\t/*::[*/0x045E/*::]*/: { /* n:\"BrtBeginSXEdit\", */ T:1 },\n\t/*::[*/0x045F/*::]*/: { /* n:\"BrtEndSXEdit\", */ T:-1 },\n\t/*::[*/0x0460/*::]*/: { /* n:\"BrtBeginSXEdits\", */ T:1 },\n\t/*::[*/0x0461/*::]*/: { /* n:\"BrtEndSXEdits\", */ T:-1 },\n\t/*::[*/0x0462/*::]*/: { /* n:\"BrtBeginSXChange\", */ T:1 },\n\t/*::[*/0x0463/*::]*/: { /* n:\"BrtEndSXChange\", */ T:-1 },\n\t/*::[*/0x0464/*::]*/: { /* n:\"BrtBeginSXChanges\", */ T:1 },\n\t/*::[*/0x0465/*::]*/: { /* n:\"BrtEndSXChanges\", */ T:-1 },\n\t/*::[*/0x0466/*::]*/: { /* n:\"BrtSXTupleItems\" */ },\n\t/*::[*/0x0468/*::]*/: { /* n:\"BrtBeginSlicerStyle\", */ T:1 },\n\t/*::[*/0x0469/*::]*/: { /* n:\"BrtEndSlicerStyle\", */ T:-1 },\n\t/*::[*/0x046A/*::]*/: { /* n:\"BrtSlicerStyleElement\" */ },\n\t/*::[*/0x046B/*::]*/: { /* n:\"BrtBeginStyleSheetExt14\", */ T:1 },\n\t/*::[*/0x046C/*::]*/: { /* n:\"BrtEndStyleSheetExt14\", */ T:-1 },\n\t/*::[*/0x046D/*::]*/: { /* n:\"BrtBeginSlicerCachesPivotCacheID\", */ T:1 },\n\t/*::[*/0x046E/*::]*/: { /* n:\"BrtEndSlicerCachesPivotCacheID\", */ T:-1 },\n\t/*::[*/0x046F/*::]*/: { /* n:\"BrtBeginConditionalFormattings\", */ T:1 },\n\t/*::[*/0x0470/*::]*/: { /* n:\"BrtEndConditionalFormattings\", */ T:-1 },\n\t/*::[*/0x0471/*::]*/: { /* n:\"BrtBeginPCDCalcMemExt\", */ T:1 },\n\t/*::[*/0x0472/*::]*/: { /* n:\"BrtEndPCDCalcMemExt\", */ T:-1 },\n\t/*::[*/0x0473/*::]*/: { /* n:\"BrtBeginPCDCalcMemsExt\", */ T:1 },\n\t/*::[*/0x0474/*::]*/: { /* n:\"BrtEndPCDCalcMemsExt\", */ T:-1 },\n\t/*::[*/0x0475/*::]*/: { /* n:\"BrtPCDField14\" */ },\n\t/*::[*/0x0476/*::]*/: { /* n:\"BrtBeginSlicerStyles\", */ T:1 },\n\t/*::[*/0x0477/*::]*/: { /* n:\"BrtEndSlicerStyles\", */ T:-1 },\n\t/*::[*/0x0478/*::]*/: { /* n:\"BrtBeginSlicerStyleElements\", */ T:1 },\n\t/*::[*/0x0479/*::]*/: { /* n:\"BrtEndSlicerStyleElements\", */ T:-1 },\n\t/*::[*/0x047A/*::]*/: { /* n:\"BrtCFRuleExt\" */ },\n\t/*::[*/0x047B/*::]*/: { /* n:\"BrtBeginSXCondFmt14\", */ T:1 },\n\t/*::[*/0x047C/*::]*/: { /* n:\"BrtEndSXCondFmt14\", */ T:-1 },\n\t/*::[*/0x047D/*::]*/: { /* n:\"BrtBeginSXCondFmts14\", */ T:1 },\n\t/*::[*/0x047E/*::]*/: { /* n:\"BrtEndSXCondFmts14\", */ T:-1 },\n\t/*::[*/0x0480/*::]*/: { /* n:\"BrtBeginSortCond14\", */ T:1 },\n\t/*::[*/0x0481/*::]*/: { /* n:\"BrtEndSortCond14\", */ T:-1 },\n\t/*::[*/0x0482/*::]*/: { /* n:\"BrtEndDVals14\", */ T:-1 },\n\t/*::[*/0x0483/*::]*/: { /* n:\"BrtEndIconSet14\", */ T:-1 },\n\t/*::[*/0x0484/*::]*/: { /* n:\"BrtEndDatabar14\", */ T:-1 },\n\t/*::[*/0x0485/*::]*/: { /* n:\"BrtBeginColorScale14\", */ T:1 },\n\t/*::[*/0x0486/*::]*/: { /* n:\"BrtEndColorScale14\", */ T:-1 },\n\t/*::[*/0x0487/*::]*/: { /* n:\"BrtBeginSxrules14\", */ T:1 },\n\t/*::[*/0x0488/*::]*/: { /* n:\"BrtEndSxrules14\", */ T:-1 },\n\t/*::[*/0x0489/*::]*/: { /* n:\"BrtBeginPRule14\", */ T:1 },\n\t/*::[*/0x048A/*::]*/: { /* n:\"BrtEndPRule14\", */ T:-1 },\n\t/*::[*/0x048B/*::]*/: { /* n:\"BrtBeginPRFilters14\", */ T:1 },\n\t/*::[*/0x048C/*::]*/: { /* n:\"BrtEndPRFilters14\", */ T:-1 },\n\t/*::[*/0x048D/*::]*/: { /* n:\"BrtBeginPRFilter14\", */ T:1 },\n\t/*::[*/0x048E/*::]*/: { /* n:\"BrtEndPRFilter14\", */ T:-1 },\n\t/*::[*/0x048F/*::]*/: { /* n:\"BrtBeginPRFItem14\", */ T:1 },\n\t/*::[*/0x0490/*::]*/: { /* n:\"BrtEndPRFItem14\", */ T:-1 },\n\t/*::[*/0x0491/*::]*/: { /* n:\"BrtBeginCellIgnoreECs14\", */ T:1 },\n\t/*::[*/0x0492/*::]*/: { /* n:\"BrtEndCellIgnoreECs14\", */ T:-1 },\n\t/*::[*/0x0493/*::]*/: { /* n:\"BrtDxf14\" */ },\n\t/*::[*/0x0494/*::]*/: { /* n:\"BrtBeginDxF14s\", */ T:1 },\n\t/*::[*/0x0495/*::]*/: { /* n:\"BrtEndDxf14s\", */ T:-1 },\n\t/*::[*/0x0499/*::]*/: { /* n:\"BrtFilter14\" */ },\n\t/*::[*/0x049A/*::]*/: { /* n:\"BrtBeginCustomFilters14\", */ T:1 },\n\t/*::[*/0x049C/*::]*/: { /* n:\"BrtCustomFilter14\" */ },\n\t/*::[*/0x049D/*::]*/: { /* n:\"BrtIconFilter14\" */ },\n\t/*::[*/0x049E/*::]*/: { /* n:\"BrtPivotCacheConnectionName\" */ },\n\t/*::[*/0x0800/*::]*/: { /* n:\"BrtBeginDecoupledPivotCacheIDs\", */ T:1 },\n\t/*::[*/0x0801/*::]*/: { /* n:\"BrtEndDecoupledPivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x0802/*::]*/: { /* n:\"BrtDecoupledPivotCacheID\" */ },\n\t/*::[*/0x0803/*::]*/: { /* n:\"BrtBeginPivotTableRefs\", */ T:1 },\n\t/*::[*/0x0804/*::]*/: { /* n:\"BrtEndPivotTableRefs\", */ T:-1 },\n\t/*::[*/0x0805/*::]*/: { /* n:\"BrtPivotTableRef\" */ },\n\t/*::[*/0x0806/*::]*/: { /* n:\"BrtSlicerCacheBookPivotTables\" */ },\n\t/*::[*/0x0807/*::]*/: { /* n:\"BrtBeginSxvcells\", */ T:1 },\n\t/*::[*/0x0808/*::]*/: { /* n:\"BrtEndSxvcells\", */ T:-1 },\n\t/*::[*/0x0809/*::]*/: { /* n:\"BrtBeginSxRow\", */ T:1 },\n\t/*::[*/0x080A/*::]*/: { /* n:\"BrtEndSxRow\", */ T:-1 },\n\t/*::[*/0x080C/*::]*/: { /* n:\"BrtPcdCalcMem15\" */ },\n\t/*::[*/0x0813/*::]*/: { /* n:\"BrtQsi15\" */ },\n\t/*::[*/0x0814/*::]*/: { /* n:\"BrtBeginWebExtensions\", */ T:1 },\n\t/*::[*/0x0815/*::]*/: { /* n:\"BrtEndWebExtensions\", */ T:-1 },\n\t/*::[*/0x0816/*::]*/: { /* n:\"BrtWebExtension\" */ },\n\t/*::[*/0x0817/*::]*/: { /* n:\"BrtAbsPath15\" */ },\n\t/*::[*/0x0818/*::]*/: { /* n:\"BrtBeginPivotTableUISettings\", */ T:1 },\n\t/*::[*/0x0819/*::]*/: { /* n:\"BrtEndPivotTableUISettings\", */ T:-1 },\n\t/*::[*/0x081B/*::]*/: { /* n:\"BrtTableSlicerCacheIDs\" */ },\n\t/*::[*/0x081C/*::]*/: { /* n:\"BrtTableSlicerCacheID\" */ },\n\t/*::[*/0x081D/*::]*/: { /* n:\"BrtBeginTableSlicerCache\", */ T:1 },\n\t/*::[*/0x081E/*::]*/: { /* n:\"BrtEndTableSlicerCache\", */ T:-1 },\n\t/*::[*/0x081F/*::]*/: { /* n:\"BrtSxFilter15\" */ },\n\t/*::[*/0x0820/*::]*/: { /* n:\"BrtBeginTimelineCachePivotCacheIDs\", */ T:1 },\n\t/*::[*/0x0821/*::]*/: { /* n:\"BrtEndTimelineCachePivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x0822/*::]*/: { /* n:\"BrtTimelineCachePivotCacheID\" */ },\n\t/*::[*/0x0823/*::]*/: { /* n:\"BrtBeginTimelineCacheIDs\", */ T:1 },\n\t/*::[*/0x0824/*::]*/: { /* n:\"BrtEndTimelineCacheIDs\", */ T:-1 },\n\t/*::[*/0x0825/*::]*/: { /* n:\"BrtBeginTimelineCacheID\", */ T:1 },\n\t/*::[*/0x0826/*::]*/: { /* n:\"BrtEndTimelineCacheID\", */ T:-1 },\n\t/*::[*/0x0827/*::]*/: { /* n:\"BrtBeginTimelinesEx\", */ T:1 },\n\t/*::[*/0x0828/*::]*/: { /* n:\"BrtEndTimelinesEx\", */ T:-1 },\n\t/*::[*/0x0829/*::]*/: { /* n:\"BrtBeginTimelineEx\", */ T:1 },\n\t/*::[*/0x082A/*::]*/: { /* n:\"BrtEndTimelineEx\", */ T:-1 },\n\t/*::[*/0x082B/*::]*/: { /* n:\"BrtWorkBookPr15\" */ },\n\t/*::[*/0x082C/*::]*/: { /* n:\"BrtPCDH15\" */ },\n\t/*::[*/0x082D/*::]*/: { /* n:\"BrtBeginTimelineStyle\", */ T:1 },\n\t/*::[*/0x082E/*::]*/: { /* n:\"BrtEndTimelineStyle\", */ T:-1 },\n\t/*::[*/0x082F/*::]*/: { /* n:\"BrtTimelineStyleElement\" */ },\n\t/*::[*/0x0830/*::]*/: { /* n:\"BrtBeginTimelineStylesheetExt15\", */ T:1 },\n\t/*::[*/0x0831/*::]*/: { /* n:\"BrtEndTimelineStylesheetExt15\", */ T:-1 },\n\t/*::[*/0x0832/*::]*/: { /* n:\"BrtBeginTimelineStyles\", */ T:1 },\n\t/*::[*/0x0833/*::]*/: { /* n:\"BrtEndTimelineStyles\", */ T:-1 },\n\t/*::[*/0x0834/*::]*/: { /* n:\"BrtBeginTimelineStyleElements\", */ T:1 },\n\t/*::[*/0x0835/*::]*/: { /* n:\"BrtEndTimelineStyleElements\", */ T:-1 },\n\t/*::[*/0x0836/*::]*/: { /* n:\"BrtDxf15\" */ },\n\t/*::[*/0x0837/*::]*/: { /* n:\"BrtBeginDxfs15\", */ T:1 },\n\t/*::[*/0x0838/*::]*/: { /* n:\"BrtEndDxfs15\", */ T:-1 },\n\t/*::[*/0x0839/*::]*/: { /* n:\"BrtSlicerCacheHideItemsWithNoData\" */ },\n\t/*::[*/0x083A/*::]*/: { /* n:\"BrtBeginItemUniqueNames\", */ T:1 },\n\t/*::[*/0x083B/*::]*/: { /* n:\"BrtEndItemUniqueNames\", */ T:-1 },\n\t/*::[*/0x083C/*::]*/: { /* n:\"BrtItemUniqueName\" */ },\n\t/*::[*/0x083D/*::]*/: { /* n:\"BrtBeginExtConn15\", */ T:1 },\n\t/*::[*/0x083E/*::]*/: { /* n:\"BrtEndExtConn15\", */ T:-1 },\n\t/*::[*/0x083F/*::]*/: { /* n:\"BrtBeginOledbPr15\", */ T:1 },\n\t/*::[*/0x0840/*::]*/: { /* n:\"BrtEndOledbPr15\", */ T:-1 },\n\t/*::[*/0x0841/*::]*/: { /* n:\"BrtBeginDataFeedPr15\", */ T:1 },\n\t/*::[*/0x0842/*::]*/: { /* n:\"BrtEndDataFeedPr15\", */ T:-1 },\n\t/*::[*/0x0843/*::]*/: { /* n:\"BrtTextPr15\" */ },\n\t/*::[*/0x0844/*::]*/: { /* n:\"BrtRangePr15\" */ },\n\t/*::[*/0x0845/*::]*/: { /* n:\"BrtDbCommand15\" */ },\n\t/*::[*/0x0846/*::]*/: { /* n:\"BrtBeginDbTables15\", */ T:1 },\n\t/*::[*/0x0847/*::]*/: { /* n:\"BrtEndDbTables15\", */ T:-1 },\n\t/*::[*/0x0848/*::]*/: { /* n:\"BrtDbTable15\" */ },\n\t/*::[*/0x0849/*::]*/: { /* n:\"BrtBeginDataModel\", */ T:1 },\n\t/*::[*/0x084A/*::]*/: { /* n:\"BrtEndDataModel\", */ T:-1 },\n\t/*::[*/0x084B/*::]*/: { /* n:\"BrtBeginModelTables\", */ T:1 },\n\t/*::[*/0x084C/*::]*/: { /* n:\"BrtEndModelTables\", */ T:-1 },\n\t/*::[*/0x084D/*::]*/: { /* n:\"BrtModelTable\" */ },\n\t/*::[*/0x084E/*::]*/: { /* n:\"BrtBeginModelRelationships\", */ T:1 },\n\t/*::[*/0x084F/*::]*/: { /* n:\"BrtEndModelRelationships\", */ T:-1 },\n\t/*::[*/0x0850/*::]*/: { /* n:\"BrtModelRelationship\" */ },\n\t/*::[*/0x0851/*::]*/: { /* n:\"BrtBeginECTxtWiz15\", */ T:1 },\n\t/*::[*/0x0852/*::]*/: { /* n:\"BrtEndECTxtWiz15\", */ T:-1 },\n\t/*::[*/0x0853/*::]*/: { /* n:\"BrtBeginECTWFldInfoLst15\", */ T:1 },\n\t/*::[*/0x0854/*::]*/: { /* n:\"BrtEndECTWFldInfoLst15\", */ T:-1 },\n\t/*::[*/0x0855/*::]*/: { /* n:\"BrtBeginECTWFldInfo15\", */ T:1 },\n\t/*::[*/0x0856/*::]*/: { /* n:\"BrtFieldListActiveItem\" */ },\n\t/*::[*/0x0857/*::]*/: { /* n:\"BrtPivotCacheIdVersion\" */ },\n\t/*::[*/0x0858/*::]*/: { /* n:\"BrtSXDI15\" */ },\n\t/*::[*/0x0859/*::]*/: { /* n:\"BrtBeginModelTimeGroupings\", */ T:1 },\n\t/*::[*/0x085A/*::]*/: { /* n:\"BrtEndModelTimeGroupings\", */ T:-1 },\n\t/*::[*/0x085B/*::]*/: { /* n:\"BrtBeginModelTimeGrouping\", */ T:1 },\n\t/*::[*/0x085C/*::]*/: { /* n:\"BrtEndModelTimeGrouping\", */ T:-1 },\n\t/*::[*/0x085D/*::]*/: { /* n:\"BrtModelTimeGroupingCalcCol\" */ },\n\t/*::[*/0x0C00/*::]*/: { /* n:\"BrtUid\" */ },\n\t/*::[*/0x0C01/*::]*/: { /* n:\"BrtRevisionPtr\" */ },\n\t/*::[*/0x1000/*::]*/: { /* n:\"BrtBeginDynamicArrayPr\", */ T:1 },\n\t/*::[*/0x1001/*::]*/: { /* n:\"BrtEndDynamicArrayPr\", */ T:-1 },\n\t/*::[*/0x138A/*::]*/: { /* n:\"BrtBeginRichValueBlock\", */ T:1 },\n\t/*::[*/0x138B/*::]*/: { /* n:\"BrtEndRichValueBlock\", */ T:-1 },\n\t/*::[*/0x13D9/*::]*/: { /* n:\"BrtBeginRichFilters\", */ T:1 },\n\t/*::[*/0x13DA/*::]*/: { /* n:\"BrtEndRichFilters\", */ T:-1 },\n\t/*::[*/0x13DB/*::]*/: { /* n:\"BrtRichFilter\" */ },\n\t/*::[*/0x13DC/*::]*/: { /* n:\"BrtBeginRichFilterColumn\", */ T:1 },\n\t/*::[*/0x13DD/*::]*/: { /* n:\"BrtEndRichFilterColumn\", */ T:-1 },\n\t/*::[*/0x13DE/*::]*/: { /* n:\"BrtBeginCustomRichFilters\", */ T:1 },\n\t/*::[*/0x13DF/*::]*/: { /* n:\"BrtEndCustomRichFilters\", */ T:-1 },\n\t/*::[*/0x13E0/*::]*/: { /* n:\"BrtCustomRichFilter\" */ },\n\t/*::[*/0x13E1/*::]*/: { /* n:\"BrtTop10RichFilter\" */ },\n\t/*::[*/0x13E2/*::]*/: { /* n:\"BrtDynamicRichFilter\" */ },\n\t/*::[*/0x13E4/*::]*/: { /* n:\"BrtBeginRichSortCondition\", */ T:1 },\n\t/*::[*/0x13E5/*::]*/: { /* n:\"BrtEndRichSortCondition\", */ T:-1 },\n\t/*::[*/0x13E6/*::]*/: { /* n:\"BrtRichFilterDateGroupItem\" */ },\n\t/*::[*/0x13E7/*::]*/: { /* n:\"BrtBeginCalcFeatures\", */ T:1 },\n\t/*::[*/0x13E8/*::]*/: { /* n:\"BrtEndCalcFeatures\", */ T:-1 },\n\t/*::[*/0x13E9/*::]*/: { /* n:\"BrtCalcFeature\" */ },\n\t/*::[*/0x13EB/*::]*/: { /* n:\"BrtExternalLinksPr\" */ },\n\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n};\n\n/* [MS-XLS] 2.3 Record Enumeration (and other sources) */\nvar XLSRecordEnum = {\n\t/* [MS-XLS] 2.3 Record Enumeration 2021-08-17 */\n\t/*::[*/0x0006/*::]*/: { /* n:\"Formula\", */ f:parse_Formula },\n\t/*::[*/0x000a/*::]*/: { /* n:\"EOF\", */ f:parsenoop2 },\n\t/*::[*/0x000c/*::]*/: { /* n:\"CalcCount\", */ f:parseuint16 }, //\n\t/*::[*/0x000d/*::]*/: { /* n:\"CalcMode\", */ f:parseuint16 }, //\n\t/*::[*/0x000e/*::]*/: { /* n:\"CalcPrecision\", */ f:parsebool }, //\n\t/*::[*/0x000f/*::]*/: { /* n:\"CalcRefMode\", */ f:parsebool }, //\n\t/*::[*/0x0010/*::]*/: { /* n:\"CalcDelta\", */ f:parse_Xnum }, //\n\t/*::[*/0x0011/*::]*/: { /* n:\"CalcIter\", */ f:parsebool }, //\n\t/*::[*/0x0012/*::]*/: { /* n:\"Protect\", */ f:parsebool },\n\t/*::[*/0x0013/*::]*/: { /* n:\"Password\", */ f:parseuint16 },\n\t/*::[*/0x0014/*::]*/: { /* n:\"Header\", */ f:parse_XLHeaderFooter },\n\t/*::[*/0x0015/*::]*/: { /* n:\"Footer\", */ f:parse_XLHeaderFooter },\n\t/*::[*/0x0017/*::]*/: { /* n:\"ExternSheet\", */ f:parse_ExternSheet },\n\t/*::[*/0x0018/*::]*/: { /* n:\"Lbl\", */ f:parse_Lbl },\n\t/*::[*/0x0019/*::]*/: { /* n:\"WinProtect\", */ f:parsebool },\n\t/*::[*/0x001a/*::]*/: { /* n:\"VerticalPageBreaks\", */ },\n\t/*::[*/0x001b/*::]*/: { /* n:\"HorizontalPageBreaks\", */ },\n\t/*::[*/0x001c/*::]*/: { /* n:\"Note\", */ f:parse_Note },\n\t/*::[*/0x001d/*::]*/: { /* n:\"Selection\", */ },\n\t/*::[*/0x0022/*::]*/: { /* n:\"Date1904\", */ f:parsebool },\n\t/*::[*/0x0023/*::]*/: { /* n:\"ExternName\", */ f:parse_ExternName },\n\t/*::[*/0x0026/*::]*/: { /* n:\"LeftMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x0027/*::]*/: { /* n:\"RightMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x0028/*::]*/: { /* n:\"TopMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x0029/*::]*/: { /* n:\"BottomMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x002a/*::]*/: { /* n:\"PrintRowCol\", */ f:parsebool },\n\t/*::[*/0x002b/*::]*/: { /* n:\"PrintGrid\", */ f:parsebool },\n\t/*::[*/0x002f/*::]*/: { /* n:\"FilePass\", */ f:parse_FilePass },\n\t/*::[*/0x0031/*::]*/: { /* n:\"Font\", */ f:parse_Font },\n\t/*::[*/0x0033/*::]*/: { /* n:\"PrintSize\", */ f:parseuint16 },\n\t/*::[*/0x003c/*::]*/: { /* n:\"Continue\", */ },\n\t/*::[*/0x003d/*::]*/: { /* n:\"Window1\", */ f:parse_Window1 },\n\t/*::[*/0x0040/*::]*/: { /* n:\"Backup\", */ f:parsebool },\n\t/*::[*/0x0041/*::]*/: { /* n:\"Pane\", */ f:parse_Pane },\n\t/*::[*/0x0042/*::]*/: { /* n:\"CodePage\", */ f:parseuint16 },\n\t/*::[*/0x004d/*::]*/: { /* n:\"Pls\", */ },\n\t/*::[*/0x0050/*::]*/: { /* n:\"DCon\", */ },\n\t/*::[*/0x0051/*::]*/: { /* n:\"DConRef\", */ },\n\t/*::[*/0x0052/*::]*/: { /* n:\"DConName\", */ },\n\t/*::[*/0x0055/*::]*/: { /* n:\"DefColWidth\", */ f:parseuint16 },\n\t/*::[*/0x0059/*::]*/: { /* n:\"XCT\", */ },\n\t/*::[*/0x005a/*::]*/: { /* n:\"CRN\", */ },\n\t/*::[*/0x005b/*::]*/: { /* n:\"FileSharing\", */ },\n\t/*::[*/0x005c/*::]*/: { /* n:\"WriteAccess\", */ f:parse_WriteAccess },\n\t/*::[*/0x005d/*::]*/: { /* n:\"Obj\", */ f:parse_Obj },\n\t/*::[*/0x005e/*::]*/: { /* n:\"Uncalced\", */ },\n\t/*::[*/0x005f/*::]*/: { /* n:\"CalcSaveRecalc\", */ f:parsebool }, //\n\t/*::[*/0x0060/*::]*/: { /* n:\"Template\", */ },\n\t/*::[*/0x0061/*::]*/: { /* n:\"Intl\", */ },\n\t/*::[*/0x0063/*::]*/: { /* n:\"ObjProtect\", */ f:parsebool },\n\t/*::[*/0x007d/*::]*/: { /* n:\"ColInfo\", */ f:parse_ColInfo },\n\t/*::[*/0x0080/*::]*/: { /* n:\"Guts\", */ f:parse_Guts },\n\t/*::[*/0x0081/*::]*/: { /* n:\"WsBool\", */ f:parse_WsBool },\n\t/*::[*/0x0082/*::]*/: { /* n:\"GridSet\", */ f:parseuint16 },\n\t/*::[*/0x0083/*::]*/: { /* n:\"HCenter\", */ f:parsebool },\n\t/*::[*/0x0084/*::]*/: { /* n:\"VCenter\", */ f:parsebool },\n\t/*::[*/0x0085/*::]*/: { /* n:\"BoundSheet8\", */ f:parse_BoundSheet8 },\n\t/*::[*/0x0086/*::]*/: { /* n:\"WriteProtect\", */ },\n\t/*::[*/0x008c/*::]*/: { /* n:\"Country\", */ f:parse_Country },\n\t/*::[*/0x008d/*::]*/: { /* n:\"HideObj\", */ f:parseuint16 },\n\t/*::[*/0x0090/*::]*/: { /* n:\"Sort\", */ },\n\t/*::[*/0x0092/*::]*/: { /* n:\"Palette\", */ f:parse_Palette },\n\t/*::[*/0x0097/*::]*/: { /* n:\"Sync\", */ },\n\t/*::[*/0x0098/*::]*/: { /* n:\"LPr\", */ },\n\t/*::[*/0x0099/*::]*/: { /* n:\"DxGCol\", */ },\n\t/*::[*/0x009a/*::]*/: { /* n:\"FnGroupName\", */ },\n\t/*::[*/0x009b/*::]*/: { /* n:\"FilterMode\", */ },\n\t/*::[*/0x009c/*::]*/: { /* n:\"BuiltInFnGroupCount\", */ f:parseuint16 },\n\t/*::[*/0x009d/*::]*/: { /* n:\"AutoFilterInfo\", */ },\n\t/*::[*/0x009e/*::]*/: { /* n:\"AutoFilter\", */ },\n\t/*::[*/0x00a0/*::]*/: { /* n:\"Scl\", */ f:parse_Scl },\n\t/*::[*/0x00a1/*::]*/: { /* n:\"Setup\", */ f:parse_Setup },\n\t/*::[*/0x00ae/*::]*/: { /* n:\"ScenMan\", */ },\n\t/*::[*/0x00af/*::]*/: { /* n:\"SCENARIO\", */ },\n\t/*::[*/0x00b0/*::]*/: { /* n:\"SxView\", */ },\n\t/*::[*/0x00b1/*::]*/: { /* n:\"Sxvd\", */ },\n\t/*::[*/0x00b2/*::]*/: { /* n:\"SXVI\", */ },\n\t/*::[*/0x00b4/*::]*/: { /* n:\"SxIvd\", */ },\n\t/*::[*/0x00b5/*::]*/: { /* n:\"SXLI\", */ },\n\t/*::[*/0x00b6/*::]*/: { /* n:\"SXPI\", */ },\n\t/*::[*/0x00b8/*::]*/: { /* n:\"DocRoute\", */ },\n\t/*::[*/0x00b9/*::]*/: { /* n:\"RecipName\", */ },\n\t/*::[*/0x00bd/*::]*/: { /* n:\"MulRk\", */ f:parse_MulRk },\n\t/*::[*/0x00be/*::]*/: { /* n:\"MulBlank\", */ f:parse_MulBlank },\n\t/*::[*/0x00c1/*::]*/: { /* n:\"Mms\", */ f:parsenoop2 },\n\t/*::[*/0x00c5/*::]*/: { /* n:\"SXDI\", */ },\n\t/*::[*/0x00c6/*::]*/: { /* n:\"SXDB\", */ },\n\t/*::[*/0x00c7/*::]*/: { /* n:\"SXFDB\", */ },\n\t/*::[*/0x00c8/*::]*/: { /* n:\"SXDBB\", */ },\n\t/*::[*/0x00c9/*::]*/: { /* n:\"SXNum\", */ },\n\t/*::[*/0x00ca/*::]*/: { /* n:\"SxBool\", */ f:parsebool },\n\t/*::[*/0x00cb/*::]*/: { /* n:\"SxErr\", */ },\n\t/*::[*/0x00cc/*::]*/: { /* n:\"SXInt\", */ },\n\t/*::[*/0x00cd/*::]*/: { /* n:\"SXString\", */ },\n\t/*::[*/0x00ce/*::]*/: { /* n:\"SXDtr\", */ },\n\t/*::[*/0x00cf/*::]*/: { /* n:\"SxNil\", */ },\n\t/*::[*/0x00d0/*::]*/: { /* n:\"SXTbl\", */ },\n\t/*::[*/0x00d1/*::]*/: { /* n:\"SXTBRGIITM\", */ },\n\t/*::[*/0x00d2/*::]*/: { /* n:\"SxTbpg\", */ },\n\t/*::[*/0x00d3/*::]*/: { /* n:\"ObProj\", */ },\n\t/*::[*/0x00d5/*::]*/: { /* n:\"SXStreamID\", */ },\n\t/*::[*/0x00d7/*::]*/: { /* n:\"DBCell\", */ },\n\t/*::[*/0x00d8/*::]*/: { /* n:\"SXRng\", */ },\n\t/*::[*/0x00d9/*::]*/: { /* n:\"SxIsxoper\", */ },\n\t/*::[*/0x00da/*::]*/: { /* n:\"BookBool\", */ f:parseuint16 },\n\t/*::[*/0x00dc/*::]*/: { /* n:\"DbOrParamQry\", */ },\n\t/*::[*/0x00dd/*::]*/: { /* n:\"ScenarioProtect\", */ f:parsebool },\n\t/*::[*/0x00de/*::]*/: { /* n:\"OleObjectSize\", */ },\n\t/*::[*/0x00e0/*::]*/: { /* n:\"XF\", */ f:parse_XF },\n\t/*::[*/0x00e1/*::]*/: { /* n:\"InterfaceHdr\", */ f:parse_InterfaceHdr },\n\t/*::[*/0x00e2/*::]*/: { /* n:\"InterfaceEnd\", */ f:parsenoop2 },\n\t/*::[*/0x00e3/*::]*/: { /* n:\"SXVS\", */ },\n\t/*::[*/0x00e5/*::]*/: { /* n:\"MergeCells\", */ f:parse_MergeCells },\n\t/*::[*/0x00e9/*::]*/: { /* n:\"BkHim\", */ },\n\t/*::[*/0x00eb/*::]*/: { /* n:\"MsoDrawingGroup\", */ },\n\t/*::[*/0x00ec/*::]*/: { /* n:\"MsoDrawing\", */ },\n\t/*::[*/0x00ed/*::]*/: { /* n:\"MsoDrawingSelection\", */ },\n\t/*::[*/0x00ef/*::]*/: { /* n:\"PhoneticInfo\", */ },\n\t/*::[*/0x00f0/*::]*/: { /* n:\"SxRule\", */ },\n\t/*::[*/0x00f1/*::]*/: { /* n:\"SXEx\", */ },\n\t/*::[*/0x00f2/*::]*/: { /* n:\"SxFilt\", */ },\n\t/*::[*/0x00f4/*::]*/: { /* n:\"SxDXF\", */ },\n\t/*::[*/0x00f5/*::]*/: { /* n:\"SxItm\", */ },\n\t/*::[*/0x00f6/*::]*/: { /* n:\"SxName\", */ },\n\t/*::[*/0x00f7/*::]*/: { /* n:\"SxSelect\", */ },\n\t/*::[*/0x00f8/*::]*/: { /* n:\"SXPair\", */ },\n\t/*::[*/0x00f9/*::]*/: { /* n:\"SxFmla\", */ },\n\t/*::[*/0x00fb/*::]*/: { /* n:\"SxFormat\", */ },\n\t/*::[*/0x00fc/*::]*/: { /* n:\"SST\", */ f:parse_SST },\n\t/*::[*/0x00fd/*::]*/: { /* n:\"LabelSst\", */ f:parse_LabelSst },\n\t/*::[*/0x00ff/*::]*/: { /* n:\"ExtSST\", */ f:parse_ExtSST },\n\t/*::[*/0x0100/*::]*/: { /* n:\"SXVDEx\", */ },\n\t/*::[*/0x0103/*::]*/: { /* n:\"SXFormula\", */ },\n\t/*::[*/0x0122/*::]*/: { /* n:\"SXDBEx\", */ },\n\t/*::[*/0x0137/*::]*/: { /* n:\"RRDInsDel\", */ },\n\t/*::[*/0x0138/*::]*/: { /* n:\"RRDHead\", */ },\n\t/*::[*/0x013b/*::]*/: { /* n:\"RRDChgCell\", */ },\n\t/*::[*/0x013d/*::]*/: { /* n:\"RRTabId\", */ f:parseuint16a },\n\t/*::[*/0x013e/*::]*/: { /* n:\"RRDRenSheet\", */ },\n\t/*::[*/0x013f/*::]*/: { /* n:\"RRSort\", */ },\n\t/*::[*/0x0140/*::]*/: { /* n:\"RRDMove\", */ },\n\t/*::[*/0x014a/*::]*/: { /* n:\"RRFormat\", */ },\n\t/*::[*/0x014b/*::]*/: { /* n:\"RRAutoFmt\", */ },\n\t/*::[*/0x014d/*::]*/: { /* n:\"RRInsertSh\", */ },\n\t/*::[*/0x014e/*::]*/: { /* n:\"RRDMoveBegin\", */ },\n\t/*::[*/0x014f/*::]*/: { /* n:\"RRDMoveEnd\", */ },\n\t/*::[*/0x0150/*::]*/: { /* n:\"RRDInsDelBegin\", */ },\n\t/*::[*/0x0151/*::]*/: { /* n:\"RRDInsDelEnd\", */ },\n\t/*::[*/0x0152/*::]*/: { /* n:\"RRDConflict\", */ },\n\t/*::[*/0x0153/*::]*/: { /* n:\"RRDDefName\", */ },\n\t/*::[*/0x0154/*::]*/: { /* n:\"RRDRstEtxp\", */ },\n\t/*::[*/0x015f/*::]*/: { /* n:\"LRng\", */ },\n\t/*::[*/0x0160/*::]*/: { /* n:\"UsesELFs\", */ f:parsebool },\n\t/*::[*/0x0161/*::]*/: { /* n:\"DSF\", */ f:parsenoop2 },\n\t/*::[*/0x0191/*::]*/: { /* n:\"CUsr\", */ },\n\t/*::[*/0x0192/*::]*/: { /* n:\"CbUsr\", */ },\n\t/*::[*/0x0193/*::]*/: { /* n:\"UsrInfo\", */ },\n\t/*::[*/0x0194/*::]*/: { /* n:\"UsrExcl\", */ },\n\t/*::[*/0x0195/*::]*/: { /* n:\"FileLock\", */ },\n\t/*::[*/0x0196/*::]*/: { /* n:\"RRDInfo\", */ },\n\t/*::[*/0x0197/*::]*/: { /* n:\"BCUsrs\", */ },\n\t/*::[*/0x0198/*::]*/: { /* n:\"UsrChk\", */ },\n\t/*::[*/0x01a9/*::]*/: { /* n:\"UserBView\", */ },\n\t/*::[*/0x01aa/*::]*/: { /* n:\"UserSViewBegin\", */ },\n\t/*::[*/0x01ab/*::]*/: { /* n:\"UserSViewEnd\", */ },\n\t/*::[*/0x01ac/*::]*/: { /* n:\"RRDUserView\", */ },\n\t/*::[*/0x01ad/*::]*/: { /* n:\"Qsi\", */ },\n\t/*::[*/0x01ae/*::]*/: { /* n:\"SupBook\", */ f:parse_SupBook },\n\t/*::[*/0x01af/*::]*/: { /* n:\"Prot4Rev\", */ f:parsebool },\n\t/*::[*/0x01b0/*::]*/: { /* n:\"CondFmt\", */ },\n\t/*::[*/0x01b1/*::]*/: { /* n:\"CF\", */ },\n\t/*::[*/0x01b2/*::]*/: { /* n:\"DVal\", */ },\n\t/*::[*/0x01b5/*::]*/: { /* n:\"DConBin\", */ },\n\t/*::[*/0x01b6/*::]*/: { /* n:\"TxO\", */ f:parse_TxO },\n\t/*::[*/0x01b7/*::]*/: { /* n:\"RefreshAll\", */ f:parsebool }, //\n\t/*::[*/0x01b8/*::]*/: { /* n:\"HLink\", */ f:parse_HLink },\n\t/*::[*/0x01b9/*::]*/: { /* n:\"Lel\", */ },\n\t/*::[*/0x01ba/*::]*/: { /* n:\"CodeName\", */ f:parse_XLUnicodeString },\n\t/*::[*/0x01bb/*::]*/: { /* n:\"SXFDBType\", */ },\n\t/*::[*/0x01bc/*::]*/: { /* n:\"Prot4RevPass\", */ f:parseuint16 },\n\t/*::[*/0x01bd/*::]*/: { /* n:\"ObNoMacros\", */ },\n\t/*::[*/0x01be/*::]*/: { /* n:\"Dv\", */ },\n\t/*::[*/0x01c0/*::]*/: { /* n:\"Excel9File\", */ f:parsenoop2 },\n\t/*::[*/0x01c1/*::]*/: { /* n:\"RecalcId\", */ f:parse_RecalcId, r:2},\n\t/*::[*/0x01c2/*::]*/: { /* n:\"EntExU2\", */ f:parsenoop2 },\n\t/*::[*/0x0200/*::]*/: { /* n:\"Dimensions\", */ f:parse_Dimensions },\n\t/*::[*/0x0201/*::]*/: { /* n:\"Blank\", */ f:parse_Blank },\n\t/*::[*/0x0203/*::]*/: { /* n:\"Number\", */ f:parse_Number },\n\t/*::[*/0x0204/*::]*/: { /* n:\"Label\", */ f:parse_Label },\n\t/*::[*/0x0205/*::]*/: { /* n:\"BoolErr\", */ f:parse_BoolErr },\n\t/*::[*/0x0207/*::]*/: { /* n:\"String\", */ f:parse_String },\n\t/*::[*/0x0208/*::]*/: { /* n:\"Row\", */ f:parse_Row },\n\t/*::[*/0x020b/*::]*/: { /* n:\"Index\", */ },\n\t/*::[*/0x0221/*::]*/: { /* n:\"Array\", */ f:parse_Array },\n\t/*::[*/0x0225/*::]*/: { /* n:\"DefaultRowHeight\", */ f:parse_DefaultRowHeight },\n\t/*::[*/0x0236/*::]*/: { /* n:\"Table\", */ },\n\t/*::[*/0x023e/*::]*/: { /* n:\"Window2\", */ f:parse_Window2 },\n\t/*::[*/0x027e/*::]*/: { /* n:\"RK\", */ f:parse_RK },\n\t/*::[*/0x0293/*::]*/: { /* n:\"Style\", */ },\n\t/*::[*/0x0418/*::]*/: { /* n:\"BigName\", */ },\n\t/*::[*/0x041e/*::]*/: { /* n:\"Format\", */ f:parse_Format },\n\t/*::[*/0x043c/*::]*/: { /* n:\"ContinueBigName\", */ },\n\t/*::[*/0x04bc/*::]*/: { /* n:\"ShrFmla\", */ f:parse_ShrFmla },\n\t/*::[*/0x0800/*::]*/: { /* n:\"HLinkTooltip\", */ f:parse_HLinkTooltip },\n\t/*::[*/0x0801/*::]*/: { /* n:\"WebPub\", */ },\n\t/*::[*/0x0802/*::]*/: { /* n:\"QsiSXTag\", */ },\n\t/*::[*/0x0803/*::]*/: { /* n:\"DBQueryExt\", */ },\n\t/*::[*/0x0804/*::]*/: { /* n:\"ExtString\", */ },\n\t/*::[*/0x0805/*::]*/: { /* n:\"TxtQry\", */ },\n\t/*::[*/0x0806/*::]*/: { /* n:\"Qsir\", */ },\n\t/*::[*/0x0807/*::]*/: { /* n:\"Qsif\", */ },\n\t/*::[*/0x0808/*::]*/: { /* n:\"RRDTQSIF\", */ },\n\t/*::[*/0x0809/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x080a/*::]*/: { /* n:\"OleDbConn\", */ },\n\t/*::[*/0x080b/*::]*/: { /* n:\"WOpt\", */ },\n\t/*::[*/0x080c/*::]*/: { /* n:\"SXViewEx\", */ },\n\t/*::[*/0x080d/*::]*/: { /* n:\"SXTH\", */ },\n\t/*::[*/0x080e/*::]*/: { /* n:\"SXPIEx\", */ },\n\t/*::[*/0x080f/*::]*/: { /* n:\"SXVDTEx\", */ },\n\t/*::[*/0x0810/*::]*/: { /* n:\"SXViewEx9\", */ },\n\t/*::[*/0x0812/*::]*/: { /* n:\"ContinueFrt\", */ },\n\t/*::[*/0x0813/*::]*/: { /* n:\"RealTimeData\", */ },\n\t/*::[*/0x0850/*::]*/: { /* n:\"ChartFrtInfo\", */ },\n\t/*::[*/0x0851/*::]*/: { /* n:\"FrtWrapper\", */ },\n\t/*::[*/0x0852/*::]*/: { /* n:\"StartBlock\", */ },\n\t/*::[*/0x0853/*::]*/: { /* n:\"EndBlock\", */ },\n\t/*::[*/0x0854/*::]*/: { /* n:\"StartObject\", */ },\n\t/*::[*/0x0855/*::]*/: { /* n:\"EndObject\", */ },\n\t/*::[*/0x0856/*::]*/: { /* n:\"CatLab\", */ },\n\t/*::[*/0x0857/*::]*/: { /* n:\"YMult\", */ },\n\t/*::[*/0x0858/*::]*/: { /* n:\"SXViewLink\", */ },\n\t/*::[*/0x0859/*::]*/: { /* n:\"PivotChartBits\", */ },\n\t/*::[*/0x085a/*::]*/: { /* n:\"FrtFontList\", */ },\n\t/*::[*/0x0862/*::]*/: { /* n:\"SheetExt\", */ },\n\t/*::[*/0x0863/*::]*/: { /* n:\"BookExt\", */ r:12},\n\t/*::[*/0x0864/*::]*/: { /* n:\"SXAddl\", */ },\n\t/*::[*/0x0865/*::]*/: { /* n:\"CrErr\", */ },\n\t/*::[*/0x0866/*::]*/: { /* n:\"HFPicture\", */ },\n\t/*::[*/0x0867/*::]*/: { /* n:\"FeatHdr\", */ f:parsenoop2 },\n\t/*::[*/0x0868/*::]*/: { /* n:\"Feat\", */ },\n\t/*::[*/0x086a/*::]*/: { /* n:\"DataLabExt\", */ },\n\t/*::[*/0x086b/*::]*/: { /* n:\"DataLabExtContents\", */ },\n\t/*::[*/0x086c/*::]*/: { /* n:\"CellWatch\", */ },\n\t/*::[*/0x0871/*::]*/: { /* n:\"FeatHdr11\", */ },\n\t/*::[*/0x0872/*::]*/: { /* n:\"Feature11\", */ },\n\t/*::[*/0x0874/*::]*/: { /* n:\"DropDownObjIds\", */ },\n\t/*::[*/0x0875/*::]*/: { /* n:\"ContinueFrt11\", */ },\n\t/*::[*/0x0876/*::]*/: { /* n:\"DConn\", */ },\n\t/*::[*/0x0877/*::]*/: { /* n:\"List12\", */ },\n\t/*::[*/0x0878/*::]*/: { /* n:\"Feature12\", */ },\n\t/*::[*/0x0879/*::]*/: { /* n:\"CondFmt12\", */ },\n\t/*::[*/0x087a/*::]*/: { /* n:\"CF12\", */ },\n\t/*::[*/0x087b/*::]*/: { /* n:\"CFEx\", */ },\n\t/*::[*/0x087c/*::]*/: { /* n:\"XFCRC\", */ f:parse_XFCRC, r:12 },\n\t/*::[*/0x087d/*::]*/: { /* n:\"XFExt\", */ f:parse_XFExt, r:12 },\n\t/*::[*/0x087e/*::]*/: { /* n:\"AutoFilter12\", */ },\n\t/*::[*/0x087f/*::]*/: { /* n:\"ContinueFrt12\", */ },\n\t/*::[*/0x0884/*::]*/: { /* n:\"MDTInfo\", */ },\n\t/*::[*/0x0885/*::]*/: { /* n:\"MDXStr\", */ },\n\t/*::[*/0x0886/*::]*/: { /* n:\"MDXTuple\", */ },\n\t/*::[*/0x0887/*::]*/: { /* n:\"MDXSet\", */ },\n\t/*::[*/0x0888/*::]*/: { /* n:\"MDXProp\", */ },\n\t/*::[*/0x0889/*::]*/: { /* n:\"MDXKPI\", */ },\n\t/*::[*/0x088a/*::]*/: { /* n:\"MDB\", */ },\n\t/*::[*/0x088b/*::]*/: { /* n:\"PLV\", */ },\n\t/*::[*/0x088c/*::]*/: { /* n:\"Compat12\", */ f:parsebool, r:12 },\n\t/*::[*/0x088d/*::]*/: { /* n:\"DXF\", */ },\n\t/*::[*/0x088e/*::]*/: { /* n:\"TableStyles\", */ r:12 },\n\t/*::[*/0x088f/*::]*/: { /* n:\"TableStyle\", */ },\n\t/*::[*/0x0890/*::]*/: { /* n:\"TableStyleElement\", */ },\n\t/*::[*/0x0892/*::]*/: { /* n:\"StyleExt\", */ },\n\t/*::[*/0x0893/*::]*/: { /* n:\"NamePublish\", */ },\n\t/*::[*/0x0894/*::]*/: { /* n:\"NameCmt\", */ f:parse_NameCmt, r:12 },\n\t/*::[*/0x0895/*::]*/: { /* n:\"SortData\", */ },\n\t/*::[*/0x0896/*::]*/: { /* n:\"Theme\", */ f:parse_Theme, r:12 },\n\t/*::[*/0x0897/*::]*/: { /* n:\"GUIDTypeLib\", */ },\n\t/*::[*/0x0898/*::]*/: { /* n:\"FnGrp12\", */ },\n\t/*::[*/0x0899/*::]*/: { /* n:\"NameFnGrp12\", */ },\n\t/*::[*/0x089a/*::]*/: { /* n:\"MTRSettings\", */ f:parse_MTRSettings, r:12 },\n\t/*::[*/0x089b/*::]*/: { /* n:\"CompressPictures\", */ f:parsenoop2 },\n\t/*::[*/0x089c/*::]*/: { /* n:\"HeaderFooter\", */ },\n\t/*::[*/0x089d/*::]*/: { /* n:\"CrtLayout12\", */ },\n\t/*::[*/0x089e/*::]*/: { /* n:\"CrtMlFrt\", */ },\n\t/*::[*/0x089f/*::]*/: { /* n:\"CrtMlFrtContinue\", */ },\n\t/*::[*/0x08a3/*::]*/: { /* n:\"ForceFullCalculation\", */ f:parse_ForceFullCalculation },\n\t/*::[*/0x08a4/*::]*/: { /* n:\"ShapePropsStream\", */ },\n\t/*::[*/0x08a5/*::]*/: { /* n:\"TextPropsStream\", */ },\n\t/*::[*/0x08a6/*::]*/: { /* n:\"RichTextStream\", */ },\n\t/*::[*/0x08a7/*::]*/: { /* n:\"CrtLayout12A\", */ },\n\t/*::[*/0x1001/*::]*/: { /* n:\"Units\", */ },\n\t/*::[*/0x1002/*::]*/: { /* n:\"Chart\", */ },\n\t/*::[*/0x1003/*::]*/: { /* n:\"Series\", */ },\n\t/*::[*/0x1006/*::]*/: { /* n:\"DataFormat\", */ },\n\t/*::[*/0x1007/*::]*/: { /* n:\"LineFormat\", */ },\n\t/*::[*/0x1009/*::]*/: { /* n:\"MarkerFormat\", */ },\n\t/*::[*/0x100a/*::]*/: { /* n:\"AreaFormat\", */ },\n\t/*::[*/0x100b/*::]*/: { /* n:\"PieFormat\", */ },\n\t/*::[*/0x100c/*::]*/: { /* n:\"AttachedLabel\", */ },\n\t/*::[*/0x100d/*::]*/: { /* n:\"SeriesText\", */ },\n\t/*::[*/0x1014/*::]*/: { /* n:\"ChartFormat\", */ },\n\t/*::[*/0x1015/*::]*/: { /* n:\"Legend\", */ },\n\t/*::[*/0x1016/*::]*/: { /* n:\"SeriesList\", */ },\n\t/*::[*/0x1017/*::]*/: { /* n:\"Bar\", */ },\n\t/*::[*/0x1018/*::]*/: { /* n:\"Line\", */ },\n\t/*::[*/0x1019/*::]*/: { /* n:\"Pie\", */ },\n\t/*::[*/0x101a/*::]*/: { /* n:\"Area\", */ },\n\t/*::[*/0x101b/*::]*/: { /* n:\"Scatter\", */ },\n\t/*::[*/0x101c/*::]*/: { /* n:\"CrtLine\", */ },\n\t/*::[*/0x101d/*::]*/: { /* n:\"Axis\", */ },\n\t/*::[*/0x101e/*::]*/: { /* n:\"Tick\", */ },\n\t/*::[*/0x101f/*::]*/: { /* n:\"ValueRange\", */ },\n\t/*::[*/0x1020/*::]*/: { /* n:\"CatSerRange\", */ },\n\t/*::[*/0x1021/*::]*/: { /* n:\"AxisLine\", */ },\n\t/*::[*/0x1022/*::]*/: { /* n:\"CrtLink\", */ },\n\t/*::[*/0x1024/*::]*/: { /* n:\"DefaultText\", */ },\n\t/*::[*/0x1025/*::]*/: { /* n:\"Text\", */ },\n\t/*::[*/0x1026/*::]*/: { /* n:\"FontX\", */ f:parseuint16 },\n\t/*::[*/0x1027/*::]*/: { /* n:\"ObjectLink\", */ },\n\t/*::[*/0x1032/*::]*/: { /* n:\"Frame\", */ },\n\t/*::[*/0x1033/*::]*/: { /* n:\"Begin\", */ },\n\t/*::[*/0x1034/*::]*/: { /* n:\"End\", */ },\n\t/*::[*/0x1035/*::]*/: { /* n:\"PlotArea\", */ },\n\t/*::[*/0x103a/*::]*/: { /* n:\"Chart3d\", */ },\n\t/*::[*/0x103c/*::]*/: { /* n:\"PicF\", */ },\n\t/*::[*/0x103d/*::]*/: { /* n:\"DropBar\", */ },\n\t/*::[*/0x103e/*::]*/: { /* n:\"Radar\", */ },\n\t/*::[*/0x103f/*::]*/: { /* n:\"Surf\", */ },\n\t/*::[*/0x1040/*::]*/: { /* n:\"RadarArea\", */ },\n\t/*::[*/0x1041/*::]*/: { /* n:\"AxisParent\", */ },\n\t/*::[*/0x1043/*::]*/: { /* n:\"LegendException\", */ },\n\t/*::[*/0x1044/*::]*/: { /* n:\"ShtProps\", */ f:parse_ShtProps },\n\t/*::[*/0x1045/*::]*/: { /* n:\"SerToCrt\", */ },\n\t/*::[*/0x1046/*::]*/: { /* n:\"AxesUsed\", */ },\n\t/*::[*/0x1048/*::]*/: { /* n:\"SBaseRef\", */ },\n\t/*::[*/0x104a/*::]*/: { /* n:\"SerParent\", */ },\n\t/*::[*/0x104b/*::]*/: { /* n:\"SerAuxTrend\", */ },\n\t/*::[*/0x104e/*::]*/: { /* n:\"IFmtRecord\", */ },\n\t/*::[*/0x104f/*::]*/: { /* n:\"Pos\", */ },\n\t/*::[*/0x1050/*::]*/: { /* n:\"AlRuns\", */ },\n\t/*::[*/0x1051/*::]*/: { /* n:\"BRAI\", */ },\n\t/*::[*/0x105b/*::]*/: { /* n:\"SerAuxErrBar\", */ },\n\t/*::[*/0x105c/*::]*/: { /* n:\"ClrtClient\", */ f:parse_ClrtClient },\n\t/*::[*/0x105d/*::]*/: { /* n:\"SerFmt\", */ },\n\t/*::[*/0x105f/*::]*/: { /* n:\"Chart3DBarShape\", */ },\n\t/*::[*/0x1060/*::]*/: { /* n:\"Fbi\", */ },\n\t/*::[*/0x1061/*::]*/: { /* n:\"BopPop\", */ },\n\t/*::[*/0x1062/*::]*/: { /* n:\"AxcExt\", */ },\n\t/*::[*/0x1063/*::]*/: { /* n:\"Dat\", */ },\n\t/*::[*/0x1064/*::]*/: { /* n:\"PlotGrowth\", */ },\n\t/*::[*/0x1065/*::]*/: { /* n:\"SIIndex\", */ },\n\t/*::[*/0x1066/*::]*/: { /* n:\"GelFrame\", */ },\n\t/*::[*/0x1067/*::]*/: { /* n:\"BopPopCustom\", */ },\n\t/*::[*/0x1068/*::]*/: { /* n:\"Fbi2\", */ },\n\n\t/*::[*/0x0000/*::]*/: { /* n:\"Dimensions\", */ f:parse_Dimensions },\n\t/*::[*/0x0001/*::]*/: { /* n:\"BIFF2BLANK\", */ },\n\t/*::[*/0x0002/*::]*/: { /* n:\"BIFF2INT\", */ f:parse_BIFF2INT },\n\t/*::[*/0x0003/*::]*/: { /* n:\"BIFF2NUM\", */ f:parse_BIFF2NUM },\n\t/*::[*/0x0004/*::]*/: { /* n:\"BIFF2STR\", */ f:parse_BIFF2STR },\n\t/*::[*/0x0005/*::]*/: { /* n:\"BoolErr\", */ f:parse_BoolErr },\n\t/*::[*/0x0007/*::]*/: { /* n:\"String\", */ f:parse_BIFF2STRING },\n\t/*::[*/0x0008/*::]*/: { /* n:\"BIFF2ROW\", */ },\n\t/*::[*/0x0009/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x000b/*::]*/: { /* n:\"Index\", */ },\n\t/*::[*/0x0016/*::]*/: { /* n:\"ExternCount\", */ f:parseuint16 },\n\t/*::[*/0x001e/*::]*/: { /* n:\"BIFF2FORMAT\", */ f:parse_BIFF2Format },\n\t/*::[*/0x001f/*::]*/: { /* n:\"BIFF2FMTCNT\", */ }, /* 16-bit cnt of BIFF2FORMAT records */\n\t/*::[*/0x0020/*::]*/: { /* n:\"BIFF2COLINFO\", */ },\n\t/*::[*/0x0021/*::]*/: { /* n:\"Array\", */ f:parse_Array },\n\t/*::[*/0x0024/*::]*/: { /* n:\"COLWIDTH\", */ },\n\t/*::[*/0x0025/*::]*/: { /* n:\"DefaultRowHeight\", */ f:parse_DefaultRowHeight },\n\t// 0x2c ??\n\t// 0x2d ??\n\t// 0x2e ??\n\t// 0x30 FONTCOUNT: number of fonts\n\t/*::[*/0x0032/*::]*/: { /* n:\"BIFF2FONTXTRA\", */ f:parse_BIFF2FONTXTRA },\n\t// 0x35: INFOOPTS\n\t// 0x36: TABLE (BIFF2 only)\n\t// 0x37: TABLE2 (BIFF2 only)\n\t// 0x38: WNDESK\n\t// 0x39 ??\n\t// 0x3a: BEGINPREF\n\t// 0x3b: ENDPREF\n\t/*::[*/0x003e/*::]*/: { /* n:\"BIFF2WINDOW2\", */ },\n\t// 0x3f ??\n\t// 0x46: SHOWSCROLL\n\t// 0x47: SHOWFORMULA\n\t// 0x48: STATUSBAR\n\t// 0x49: SHORTMENUS\n\t// 0x4A:\n\t// 0x4B:\n\t// 0x4C:\n\t// 0x4E:\n\t// 0x4F:\n\t// 0x58: TOOLBAR (BIFF3)\n\n\t/* - - - */\n\t/*::[*/0x0034/*::]*/: { /* n:\"DDEObjName\", */ },\n\t/*::[*/0x0043/*::]*/: { /* n:\"BIFF2XF\", */ },\n\t/*::[*/0x0044/*::]*/: { /* n:\"BIFF2XFINDEX\", */ f:parseuint16 },\n\t/*::[*/0x0045/*::]*/: { /* n:\"BIFF2FONTCLR\", */ },\n\t/*::[*/0x0056/*::]*/: { /* n:\"BIFF4FMTCNT\", */ }, /* 16-bit cnt, similar to BIFF2 */\n\t/*::[*/0x007e/*::]*/: { /* n:\"RK\", */ }, /* Not necessarily same as 0x027e */\n\t/*::[*/0x007f/*::]*/: { /* n:\"ImData\", */ f:parse_ImData },\n\t/*::[*/0x0087/*::]*/: { /* n:\"Addin\", */ },\n\t/*::[*/0x0088/*::]*/: { /* n:\"Edg\", */ },\n\t/*::[*/0x0089/*::]*/: { /* n:\"Pub\", */ },\n\t// 0x8A\n\t// 0x8B LH: alternate menu key flag (BIFF3/4)\n\t// 0x8E\n\t// 0x8F\n\t/*::[*/0x0091/*::]*/: { /* n:\"Sub\", */ },\n\t// 0x93 STYLE\n\t/*::[*/0x0094/*::]*/: { /* n:\"LHRecord\", */ },\n\t/*::[*/0x0095/*::]*/: { /* n:\"LHNGraph\", */ },\n\t/*::[*/0x0096/*::]*/: { /* n:\"Sound\", */ },\n\t// 0xA2 FNPROTO: function prototypes (BIFF4)\n\t// 0xA3\n\t// 0xA8\n\t/*::[*/0x00a9/*::]*/: { /* n:\"CoordList\", */ },\n\t/*::[*/0x00ab/*::]*/: { /* n:\"GCW\", */ },\n\t/*::[*/0x00bc/*::]*/: { /* n:\"ShrFmla\", */ }, /* Not necessarily same as 0x04bc */\n\t/*::[*/0x00bf/*::]*/: { /* n:\"ToolbarHdr\", */ },\n\t/*::[*/0x00c0/*::]*/: { /* n:\"ToolbarEnd\", */ },\n\t/*::[*/0x00c2/*::]*/: { /* n:\"AddMenu\", */ },\n\t/*::[*/0x00c3/*::]*/: { /* n:\"DelMenu\", */ },\n\t/*::[*/0x00d6/*::]*/: { /* n:\"RString\", */ f:parse_RString },\n\t/*::[*/0x00df/*::]*/: { /* n:\"UDDesc\", */ },\n\t/*::[*/0x00ea/*::]*/: { /* n:\"TabIdConf\", */ },\n\t/*::[*/0x0162/*::]*/: { /* n:\"XL5Modify\", */ },\n\t/*::[*/0x01a5/*::]*/: { /* n:\"FileSharing2\", */ },\n\t/*::[*/0x0206/*::]*/: { /* n:\"Formula\", */ f:parse_Formula },\n\t/*::[*/0x0209/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x0218/*::]*/: { /* n:\"Lbl\", */ f:parse_Lbl },\n\t/*::[*/0x0223/*::]*/: { /* n:\"ExternName\", */ f:parse_ExternName },\n\t/*::[*/0x0231/*::]*/: { /* n:\"Font\", */ },\n\t/*::[*/0x0243/*::]*/: { /* n:\"BIFF3XF\", */ },\n\t/*::[*/0x0406/*::]*/: { /* n:\"Formula\", */ f:parse_Formula },\n\t/*::[*/0x0409/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x0443/*::]*/: { /* n:\"BIFF4XF\", */ },\n\t/*::[*/0x086d/*::]*/: { /* n:\"FeatInfo\", */ },\n\t/*::[*/0x0873/*::]*/: { /* n:\"FeatInfo11\", */ },\n\t/*::[*/0x0881/*::]*/: { /* n:\"SXAddl12\", */ },\n\t/*::[*/0x08c0/*::]*/: { /* n:\"AutoWebPub\", */ },\n\t/*::[*/0x08c1/*::]*/: { /* n:\"ListObj\", */ },\n\t/*::[*/0x08c2/*::]*/: { /* n:\"ListField\", */ },\n\t/*::[*/0x08c3/*::]*/: { /* n:\"ListDV\", */ },\n\t/*::[*/0x08c4/*::]*/: { /* n:\"ListCondFmt\", */ },\n\t/*::[*/0x08c5/*::]*/: { /* n:\"ListCF\", */ },\n\t/*::[*/0x08c6/*::]*/: { /* n:\"FMQry\", */ },\n\t/*::[*/0x08c7/*::]*/: { /* n:\"FMSQry\", */ },\n\t/*::[*/0x08c8/*::]*/: { /* n:\"PLV\", */ },\n\t/*::[*/0x08c9/*::]*/: { /* n:\"LnExt\", */ },\n\t/*::[*/0x08ca/*::]*/: { /* n:\"MkrExt\", */ },\n\t/*::[*/0x08cb/*::]*/: { /* n:\"CrtCoopt\", */ },\n\t/*::[*/0x08d6/*::]*/: { /* n:\"FRTArchId$\", */ r:12 },\n\n\t/*::[*/0x7262/*::]*/: {}\n};\n\nfunction write_biff_rec(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/)/*:void*/ {\n\tvar t/*:number*/ = type;\n\tif(isNaN(t)) return;\n\tvar len = length || (payload||[]).length || 0;\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, len);\n\tif(/*:: len != null &&*/len > 0 && is_buf(payload)) ba.push(payload);\n}\n\nfunction write_biff_continue(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/)/*:void*/ {\n\tvar len = length || (payload||[]).length || 0;\n\tif(len <= 8224) return write_biff_rec(ba, type, payload, len);\n\tvar t = type;\n\tif(isNaN(t)) return;\n\tvar parts = payload.parts || [], sidx = 0;\n\tvar i = 0, w = 0;\n\twhile(w + (parts[sidx] || 8224) <= 8224) { w+= (parts[sidx] || 8224); sidx++; }\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, w);\n\tba.push(payload.slice(i, i + w));\n\ti += w;\n\twhile(i < len) {\n\t\to = ba.next(4);\n\t\to.write_shift(2, 0x3c); // TODO: figure out correct continue type\n\t\tw = 0;\n\t\twhile(w + (parts[sidx] || 8224) <= 8224) { w+= (parts[sidx] || 8224); sidx++; }\n\t\to.write_shift(2, w);\n\t\tba.push(payload.slice(i, i+w)); i+= w;\n\t}\n}\n\nfunction write_BIFF2Cell(out, r/*:number*/, c/*:number*/) {\n\tif(!out) out = new_buf(7);\n\tout.write_shift(2, r);\n\tout.write_shift(2, c);\n\tout.write_shift(2, 0);\n\tout.write_shift(1, 0);\n\treturn out;\n}\n\nfunction write_BIFF2BERR(r/*:number*/, c/*:number*/, val, t/*:?string*/) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\twrite_Bes(val, t || 'b', out);\n\treturn out;\n}\n\n/* TODO: codepage, large strings */\nfunction write_BIFF2LABEL(r/*:number*/, c/*:number*/, val) {\n\tvar out = new_buf(8 + 2*val.length);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(1, val.length);\n\tout.write_shift(val.length, val, 'sbcs');\n\treturn out.l < out.length ? out.slice(0, out.l) : out;\n}\n\nfunction write_ws_biff2_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*//*::, opts*/) {\n\tif(cell.v != null) switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n\t\t\tif((v == (v|0)) && (v >= 0) && (v < 65536))\n\t\t\t\twrite_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v));\n\t\t\telse\n\t\t\t\twrite_biff_rec(ba, 0x0003, write_BIFF2NUM(R,C, v));\n\t\t\treturn;\n\t\tcase 'b': case 'e': write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t)); return;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\twrite_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, (cell.v||\"\").slice(0,255)));\n\t\t\treturn;\n\t}\n\twrite_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\n}\n\nfunction write_ws_biff2(ba/*:BufArray*/, ws/*:Worksheet*/, idx/*:number*/, opts/*::, wb:Workbook*/) {\n\tvar dense = Array.isArray(ws);\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref/*:string*/, rr = \"\", cols/*:Array<string>*/ = [];\n\tif(range.e.c > 0xFF || range.e.r > 0x3FFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, 0x3FFF);\n\t\tref = encode_range(range);\n\t}\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff2_cell(ba, cell, R, C, opts);\n\t\t}\n\t}\n}\n\n/* Based on test files */\nfunction write_biff2_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\tvar ba = buf_array();\n\tvar idx = 0;\n\tfor(var i=0;i<wb.SheetNames.length;++i) if(wb.SheetNames[i] == o.sheet) idx=i;\n\tif(idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\n\twrite_biff_rec(ba, (o.biff == 4 ? 0x0409 : (o.biff == 3 ? 0x0209 : 0x0009)), write_BOF(wb, 0x10, o));\n\t/* ... */\n\twrite_ws_biff2(ba, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\n\t/* ... */\n\twrite_biff_rec(ba, 0x000A);\n\treturn ba.end();\n}\n\nfunction write_FONTS_biff8(ba, data, opts) {\n\twrite_biff_rec(ba, 0x0031 /* Font */, write_Font({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Arial\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}, opts));\n}\n\n\nfunction write_FMTS_biff8(ba, NF/*:?SSFTable*/, opts) {\n\tif(!NF) return;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_biff_rec(ba, 0x041E /* Format */, write_Format(i, NF[i], opts));\n\t});\n}\n\nfunction write_FEAT(ba, ws) {\n\t/* [MS-XLS] 2.4.112 */\n\tvar o = new_buf(19);\n\to.write_shift(4, 0x867); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 1); o.write_shift(4, 0);\n\twrite_biff_rec(ba, 0x0867 /* FeatHdr */, o);\n\t/* [MS-XLS] 2.4.111 */\n\to = new_buf(39);\n\to.write_shift(4, 0x868); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 0); o.write_shift(4, 0);\n\to.write_shift(2, 1); o.write_shift(4, 4); o.write_shift(2, 0);\n\twrite_Ref8U(safe_decode_range(ws['!ref']||\"A1\"), o);\n\to.write_shift(4, 4);\n\twrite_biff_rec(ba, 0x0868 /* Feat */, o);\n}\n\nfunction write_CELLXFS_biff8(ba, opts) {\n\tfor(var i = 0; i < 16; ++i) write_biff_rec(ba, 0x00e0 /* XF */, write_XF({numFmtId:0, style:true}, 0, opts));\n\topts.cellXfs.forEach(function(c) {\n\t\twrite_biff_rec(ba, 0x00e0 /* XF */, write_XF(c, 0, opts));\n\t});\n}\n\nfunction write_ws_biff8_hlinks(ba/*:BufArray*/, ws) {\n\tfor(var R=0; R<ws['!links'].length; ++R) {\n\t\tvar HL = ws['!links'][R];\n\t\twrite_biff_rec(ba, 0x01b8 /* HLink */, write_HLink(HL));\n\t\tif(HL[1].Tooltip) write_biff_rec(ba, 0x0800 /* HLinkTooltip */, write_HLinkTooltip(HL));\n\t}\n\tdelete ws['!links'];\n}\n\nfunction write_ws_cols_biff8(ba, cols) {\n\tif(!cols) return;\n\tvar cnt = 0;\n\tcols.forEach(function(col, idx) {\n\t\tif(++cnt <= 256 && col) {\n\t\t\twrite_biff_rec(ba, 0x007d /* ColInfo */, write_ColInfo(col_obj_w(idx, col), idx));\n\t\t}\n\t});\n}\n\nfunction write_ws_biff8_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts) {\n\tvar os = 16 + get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.v == null && !cell.bf) {\n\t\twrite_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n\t\treturn;\n\t}\n\tif(cell.bf) write_biff_rec(ba, 0x0006 /* Formula */, write_Formula(cell, R, C, opts, os));\n\telse switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n\t\t\t/* TODO: emit RK as appropriate */\n\t\t\twrite_biff_rec(ba, 0x0203 /* Number */, write_Number(R, C, v, os, opts));\n\t\t\tbreak;\n\t\tcase 'b': case 'e':\n\t\t\twrite_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, cell.v, os, opts, cell.t));\n\t\t\tbreak;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvar isst = get_sst_id(opts.Strings, cell.v, opts.revStrings);\n\t\t\t\twrite_biff_rec(ba, 0x00fd /* LabelSst */, write_LabelSst(R, C, isst, os, opts));\n\t\t\t} else write_biff_rec(ba, 0x0204 /* Label */, write_Label(R, C, (cell.v||\"\").slice(0,255), os, opts));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\twrite_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n\t}\n}\n\n/* [MS-XLS] 2.1.7.20.5 */\nfunction write_ws_biff8(idx/*:number*/, opts, wb/*:Workbook*/) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar _WB/*:WBWBProps*/ = ((wb||{}).Workbook||{}/*:any*/);\n\tvar _sheet/*:WBWSProp*/ = ((_WB.Sheets||[])[idx]||{}/*:any*/);\n\tvar dense = Array.isArray(ws);\n\tvar b8 = opts.biff == 8;\n\tvar ref/*:string*/, rr = \"\", cols/*:Array<string>*/ = [];\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\");\n\tvar MAX_ROWS = b8 ? 65536 : 16384;\n\tif(range.e.c > 0xFF || range.e.r >= MAX_ROWS) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, MAX_ROWS-1);\n\t}\n\n\twrite_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\n\t/* [Uncalced] Index */\n\twrite_biff_rec(ba, 0x000d /* CalcMode */, writeuint16(1));\n\twrite_biff_rec(ba, 0x000c /* CalcCount */, writeuint16(100));\n\twrite_biff_rec(ba, 0x000f /* CalcRefMode */, writebool(true));\n\twrite_biff_rec(ba, 0x0011 /* CalcIter */, writebool(false));\n\twrite_biff_rec(ba, 0x0010 /* CalcDelta */, write_Xnum(0.001));\n\twrite_biff_rec(ba, 0x005f /* CalcSaveRecalc */, writebool(true));\n\twrite_biff_rec(ba, 0x002a /* PrintRowCol */, writebool(false));\n\twrite_biff_rec(ba, 0x002b /* PrintGrid */, writebool(false));\n\twrite_biff_rec(ba, 0x0082 /* GridSet */, writeuint16(1));\n\twrite_biff_rec(ba, 0x0080 /* Guts */, write_Guts([0,0]));\n\t/* DefaultRowHeight WsBool [Sync] [LPr] [HorizontalPageBreaks] [VerticalPageBreaks] */\n\t/* Header (string) */\n\t/* Footer (string) */\n\twrite_biff_rec(ba, 0x0083 /* HCenter */, writebool(false));\n\twrite_biff_rec(ba, 0x0084 /* VCenter */, writebool(false));\n\t/* ... */\n\tif(b8) write_ws_cols_biff8(ba, ws[\"!cols\"]);\n\t/* ... */\n\twrite_biff_rec(ba, 0x200, write_Dimensions(range, opts));\n\t/* ... */\n\n\tif(b8) ws['!links'] = [];\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff8_cell(ba, cell, R, C, opts);\n\t\t\tif(b8 && cell.l) ws['!links'].push([ref, cell.l]);\n\t\t}\n\t}\n\tvar cname/*:string*/ = _sheet.CodeName || _sheet.name || s;\n\t/* ... */\n\tif(b8) write_biff_rec(ba, 0x023e /* Window2 */, write_Window2((_WB.Views||[])[0]));\n\t/* ... */\n\tif(b8 && (ws['!merges']||[]).length) write_biff_rec(ba, 0x00e5 /* MergeCells */, write_MergeCells(ws['!merges']));\n\t/* [LRng] *QUERYTABLE [PHONETICINFO] CONDFMTS */\n\tif(b8) write_ws_biff8_hlinks(ba, ws);\n\t/* [DVAL] */\n\twrite_biff_rec(ba, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n\t/* *WebPub *CellWatch [SheetExt] */\n\tif(b8) write_FEAT(ba, ws);\n\t/* *FEAT11 *RECORD12 */\n\twrite_biff_rec(ba, 0x000a /* EOF */);\n\treturn ba.end();\n}\n\n/* [MS-XLS] 2.1.7.20.3 */\nfunction write_biff8_global(wb/*:Workbook*/, bufs, opts/*:WriteOpts*/) {\n\tvar A = buf_array();\n\tvar _WB/*:WBWBProps*/ = ((wb||{}).Workbook||{}/*:any*/);\n\tvar _sheets/*:Array<WBWSProp>*/ = (_WB.Sheets||[]);\n\tvar _wb/*:WBProps*/ = /*::((*/_WB.WBProps||{/*::CodeName:\"ThisWorkbook\"*/}/*:: ):any)*/;\n\tvar b8 = opts.biff == 8, b5 = opts.biff == 5;\n\twrite_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\n\tif(opts.bookType == \"xla\") write_biff_rec(A, 0x0087 /* Addin */);\n\twrite_biff_rec(A, 0x00e1 /* InterfaceHdr */, b8 ? writeuint16(0x04b0) : null);\n\twrite_biff_rec(A, 0x00c1 /* Mms */, writezeroes(2));\n\tif(b5) write_biff_rec(A, 0x00bf /* ToolbarHdr */);\n\tif(b5) write_biff_rec(A, 0x00c0 /* ToolbarEnd */);\n\twrite_biff_rec(A, 0x00e2 /* InterfaceEnd */);\n\twrite_biff_rec(A, 0x005c /* WriteAccess */, write_WriteAccess(\"SheetJS\", opts));\n\t/* [FileSharing] */\n\twrite_biff_rec(A, 0x0042 /* CodePage */, writeuint16(b8 ? 0x04b0 : 0x04E4));\n\t/* *2047 Lel */\n\tif(b8) write_biff_rec(A, 0x0161 /* DSF */, writeuint16(0));\n\tif(b8) write_biff_rec(A, 0x01c0 /* Excel9File */);\n\twrite_biff_rec(A, 0x013d /* RRTabId */, write_RRTabId(wb.SheetNames.length));\n\tif(b8 && wb.vbaraw) write_biff_rec(A, 0x00d3 /* ObProj */);\n\t/* [ObNoMacros] */\n\tif(b8 && wb.vbaraw) {\n\t\tvar cname/*:string*/ = _wb.CodeName || \"ThisWorkbook\";\n\t\twrite_biff_rec(A, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n\t}\n\twrite_biff_rec(A, 0x009c /* BuiltInFnGroupCount */, writeuint16(0x11));\n\t/* *FnGroupName *FnGrp12 */\n\t/* *Lbl */\n\t/* [OleObjectSize] */\n\twrite_biff_rec(A, 0x0019 /* WinProtect */, writebool(false));\n\twrite_biff_rec(A, 0x0012 /* Protect */, writebool(false));\n\twrite_biff_rec(A, 0x0013 /* Password */, writeuint16(0));\n\tif(b8) write_biff_rec(A, 0x01af /* Prot4Rev */, writebool(false));\n\tif(b8) write_biff_rec(A, 0x01bc /* Prot4RevPass */, writeuint16(0));\n\twrite_biff_rec(A, 0x003d /* Window1 */, write_Window1(opts));\n\twrite_biff_rec(A, 0x0040 /* Backup */, writebool(false));\n\twrite_biff_rec(A, 0x008d /* HideObj */, writeuint16(0));\n\twrite_biff_rec(A, 0x0022 /* Date1904 */, writebool(safe1904(wb)==\"true\"));\n\twrite_biff_rec(A, 0x000e /* CalcPrecision */, writebool(true));\n\tif(b8) write_biff_rec(A, 0x01b7 /* RefreshAll */, writebool(false));\n\twrite_biff_rec(A, 0x00DA /* BookBool */, writeuint16(0));\n\t/* ... */\n\twrite_FONTS_biff8(A, wb, opts);\n\twrite_FMTS_biff8(A, wb.SSF, opts);\n\twrite_CELLXFS_biff8(A, opts);\n\t/* ... */\n\tif(b8) write_biff_rec(A, 0x0160 /* UsesELFs */, writebool(false));\n\tvar a = A.end();\n\n\tvar C = buf_array();\n\t/* METADATA [MTRSettings] [ForceFullCalculation] */\n\tif(b8) write_biff_rec(C, 0x008C, write_Country());\n\t/* *SUPBOOK *LBL *RTD [RecalcId] *HFPicture *MSODRAWINGGROUP */\n\n\t/* BIFF8: [SST *Continue] ExtSST */\n\tif(b8 && opts.Strings) write_biff_continue(C, 0x00FC, write_SST(opts.Strings, opts));\n\n\t/* *WebPub [WOpt] [CrErr] [BookExt] *FeatHdr *DConn [THEME] [CompressPictures] [Compat12] [GUIDTypeLib] */\n\twrite_biff_rec(C, 0x000A /* EOF */);\n\tvar c = C.end();\n\n\tvar B = buf_array();\n\tvar blen = 0, j = 0;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\n\tvar start = a.length + blen + c.length;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) {\n\t\tvar _sheet/*:WBWSProp*/ = _sheets[j] || ({}/*:any*/);\n\t\twrite_biff_rec(B, 0x0085 /* BoundSheet8 */, write_BoundSheet8({pos:start, hs:_sheet.Hidden||0, dt:0, name:wb.SheetNames[j]}, opts));\n\t\tstart += bufs[j].length;\n\t}\n\t/* 1*BoundSheet8 */\n\tvar b = B.end();\n\tif(blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\n\n\tvar out = [];\n\tif(a.length) out.push(a);\n\tif(b.length) out.push(b);\n\tif(c.length) out.push(c);\n\treturn bconcat(out);\n}\n\n/* [MS-XLS] 2.1.7.20 Workbook Stream */\nfunction write_biff8_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tvar bufs = [];\n\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\to.revssf = evert_num(wb.SSF); o.revssf[wb.SSF[65535]] = 0;\n\t\to.ssf = wb.SSF;\n\t}\n\n\to.Strings = /*::((*/[]/*:: :any):SST)*/; o.Strings.Count = 0; o.Strings.Unique = 0;\n\tfix_write_opts(o);\n\n\to.cellXfs = [];\n\tget_cell_style(o.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\n\tbufs.unshift(write_biff8_global(wb, bufs, o));\n\treturn bconcat(bufs);\n}\n\nfunction write_biff_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tfor(var i = 0; i <= wb.SheetNames.length; ++i) {\n\t\tvar ws = wb.Sheets[wb.SheetNames[i]];\n\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\tif(range.e.c > 255) { // note: 255 is IV\n\t\tif(typeof console != \"undefined\" && console.error) console.error(\"Worksheet '\" + wb.SheetNames[i] + \"' extends beyond column IV (255).  Data may be lost.\");\n\t\t}\n\t}\n\n\tvar o = opts || {};\n\tswitch(o.biff || 2) {\n\t\tcase 8: case 5: return write_biff8_buf(wb, opts);\n\t\tcase 4: case 3: case 2: return write_biff2_buf(wb, opts);\n\t}\n\tthrow new Error(\"invalid type \" + o.bookType + \" for BIFF\");\n}\n/* note: browser DOM element cannot see mso- style attrs, must parse */\nfunction html_to_sheet(str/*:string*/, _opts)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar ws/*:Worksheet*/ = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\tstr = str.replace(/<!--.*?-->/g, \"\");\n\tvar mtch/*:any*/ = str.match(/<table/i);\n\tif(!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\n\tvar mtch2/*:any*/ = str.match(/<\\/table/i);\n\tvar i/*:number*/ = mtch.index, j/*:number*/ = mtch2 && mtch2.index || str.length;\n\tvar rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, \"<tr>\");\n\tvar R = -1, C = 0, RS = 0, CS = 0;\n\tvar range/*:Range*/ = {s:{r:10000000, c:10000000},e:{r:0,c:0}};\n\tvar merges/*:Array<Range>*/ = [];\n\tfor(i = 0; i < rows.length; ++i) {\n\t\tvar row = rows[i].trim();\n\t\tvar hd = row.slice(0,3).toLowerCase();\n\t\tif(hd == \"<tr\") { ++R; if(opts.sheetRows && opts.sheetRows <= R) { --R; break; } C = 0; continue; }\n\t\tif(hd != \"<td\" && hd != \"<th\") continue;\n\t\tvar cells = row.split(/<\\/t[dh]>/i);\n\t\tfor(j = 0; j < cells.length; ++j) {\n\t\t\tvar cell = cells[j].trim();\n\t\t\tif(!cell.match(/<t[dh]/i)) continue;\n\t\t\tvar m = cell, cc = 0;\n\t\t\t/* TODO: parse styles etc */\n\t\t\twhile(m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc+1);\n\t\t\tfor(var midx = 0; midx < merges.length; ++midx) {\n\t\t\t\tvar _merge/*:Range*/ = merges[midx];\n\t\t\t\tif(_merge.s.c == C && _merge.s.r < R && R <= _merge.e.r) { C = _merge.e.c + 1; midx = -1; }\n\t\t\t}\n\t\t\tvar tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\n\t\t\tCS = tag.colspan ? +tag.colspan : 1;\n\t\t\tif((RS = +tag.rowspan)>1 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\n\t\t\tvar _t/*:string*/ = tag.t || tag[\"data-t\"] || \"\";\n\t\t\t/* TODO: generate stub cells */\n\t\t\tif(!m.length) { C += CS; continue; }\n\t\t\tm = htmldecode(m);\n\t\t\tif(range.s.r > R) range.s.r = R; if(range.e.r < R) range.e.r = R;\n\t\t\tif(range.s.c > C) range.s.c = C; if(range.e.c < C) range.e.c = C;\n\t\t\tif(!m.length) { C += CS; continue; }\n\t\t\tvar o/*:Cell*/ = {t:'s', v:m};\n\t\t\tif(opts.raw || !m.trim().length || _t == 's'){}\n\t\t\telse if(m === 'TRUE') o = {t:'b', v:true};\n\t\t\telse if(m === 'FALSE') o = {t:'b', v:false};\n\t\t\telse if(!isNaN(fuzzynum(m))) o = {t:'n', v:fuzzynum(m)};\n\t\t\telse if(!isNaN(fuzzydate(m).getDate())) {\n\t\t\t\to = ({t:'d', v:parseDate(m)}/*:any*/);\n\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);\n\t\t\t\to.z = opts.dateNF || table_fmt[14];\n\t\t\t}\n\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }\n\t\t\telse ws[encode_cell({r:R, c:C})] = o;\n\t\t\tC += CS;\n\t\t}\n\t}\n\tws['!ref'] = encode_range(range);\n\tif(merges.length) ws[\"!merges\"] = merges;\n\treturn ws;\n}\nfunction make_html_row(ws/*:Worksheet*/, r/*:Range*/, R/*:number*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {\n\tvar M/*:Array<Range>*/ = (ws['!merges'] ||[]);\n\tvar oo/*:Array<string>*/ = [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\tvar RS = 0, CS = 0;\n\t\tfor(var j = 0; j < M.length; ++j) {\n\t\t\tif(M[j].s.r > R || M[j].s.c > C) continue;\n\t\t\tif(M[j].e.r < R || M[j].e.c < C) continue;\n\t\t\tif(M[j].s.r < R || M[j].s.c < C) { RS = -1; break; }\n\t\t\tRS = M[j].e.r - M[j].s.r + 1; CS = M[j].e.c - M[j].s.c + 1; break;\n\t\t}\n\t\tif(RS < 0) continue;\n\t\tvar coord = encode_cell({r:R,c:C});\n\t\tvar cell = o.dense ? (ws[R]||[])[C] : ws[coord];\n\t\t/* TODO: html entities */\n\t\tvar w = (cell && cell.v != null) && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || \"\")) || \"\";\n\t\tvar sp = ({}/*:any*/);\n\t\tif(RS > 1) sp.rowspan = RS;\n\t\tif(CS > 1) sp.colspan = CS;\n\t\tif(o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';\n\t\telse if(cell) {\n\t\t\tsp[\"data-t\"] = cell && cell.t || 'z';\n\t\t\tif(cell.v != null) sp[\"data-v\"] = cell.v;\n\t\t\tif(cell.z != null) sp[\"data-z\"] = cell.z;\n\t\t\tif(cell.l && (cell.l.Target || \"#\").charAt(0) != \"#\") w = '<a href=\"' + cell.l.Target +'\">' + w + '</a>';\n\t\t}\n\t\tsp.id = (o.id || \"sjs\") + \"-\" + coord;\n\t\too.push(writextag('td', w, sp));\n\t}\n\tvar preamble = \"<tr>\";\n\treturn preamble + oo.join(\"\") + \"</tr>\";\n}\n\nvar HTML_BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\nvar HTML_END = '</body></html>';\n\nfunction html_to_workbook(str/*:string*/, opts)/*:Workbook*/ {\n\tvar mtch = str.match(/<table[\\s\\S]*?>[\\s\\S]*?<\\/table>/gi);\n\tif(!mtch || mtch.length == 0) throw new Error(\"Invalid HTML: could not find <table>\");\n\tif(mtch.length == 1) return sheet_to_workbook(html_to_sheet(mtch[0], opts), opts);\n\tvar wb = book_new();\n\tmtch.forEach(function(s, idx) { book_append_sheet(wb, html_to_sheet(s, opts), \"Sheet\" + (idx+1)); });\n\treturn wb;\n}\n\nfunction make_html_preamble(ws/*:Worksheet*/, R/*:Range*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [];\n\treturn out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\n}\n\nfunction sheet_to_html(ws/*:Worksheet*/, opts/*:?Sheet2HTMLOpts*//*, wb:?Workbook*/)/*:string*/ {\n\tvar o = opts || {};\n\tvar header = o.header != null ? o.header : HTML_BEGIN;\n\tvar footer = o.footer != null ? o.footer : HTML_END;\n\tvar out/*:Array<string>*/ = [header];\n\tvar r = decode_range(ws['!ref']);\n\to.dense = Array.isArray(ws);\n\tout.push(make_html_preamble(ws, r, o));\n\tfor(var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\n\tout.push(\"</table>\" + footer);\n\treturn out.join(\"\");\n}\n\nfunction sheet_add_dom(ws/*:Worksheet*/, table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {\n\tvar opts = _opts || {};\n\tif(DENSE != null) opts.dense = DENSE;\n\tvar or_R = 0, or_C = 0;\n\tif(opts.origin != null) {\n\t\tif(typeof opts.origin == 'number') or_R = opts.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof opts.origin == \"string\" ? decode_cell(opts.origin) : opts.origin;\n\t\t\tor_R = _origin.r; or_C = _origin.c;\n\t\t}\n\t}\n\n\tvar rows/*:HTMLCollection<HTMLTableRowElement>*/ = table.getElementsByTagName('tr');\n\tvar sheetRows = Math.min(opts.sheetRows||10000000, rows.length);\n\tvar range/*:Range*/ = {s:{r:0,c:0},e:{r:or_R,c:or_C}};\n\tif(ws[\"!ref\"]) {\n\t\tvar _range/*:Range*/ = decode_range(ws[\"!ref\"]);\n\t\trange.s.r = Math.min(range.s.r, _range.s.r);\n\t\trange.s.c = Math.min(range.s.c, _range.s.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\tif(or_R == -1) range.e.r = or_R = _range.e.r + 1;\n\t}\n\tvar merges/*:Array<Range>*/ = [], midx = 0;\n\tvar rowinfo/*:Array<RowInfo>*/ = ws[\"!rows\"] || (ws[\"!rows\"] = []);\n\tvar _R = 0, R = 0, _C = 0, C = 0, RS = 0, CS = 0;\n\tif(!ws[\"!cols\"]) ws['!cols'] = [];\n\tfor(; _R < rows.length && R < sheetRows; ++_R) {\n\t\tvar row/*:HTMLTableRowElement*/ = rows[_R];\n\t\tif (is_dom_element_hidden(row)) {\n\t\t\tif (opts.display) continue;\n\t\t\trowinfo[R] = {hidden: true};\n\t\t}\n\t\tvar elts/*:HTMLCollection<HTMLTableCellElement>*/ = (row.children/*:any*/);\n\t\tfor(_C = C = 0; _C < elts.length; ++_C) {\n\t\t\tvar elt/*:HTMLTableCellElement*/ = elts[_C];\n\t\t\tif (opts.display && is_dom_element_hidden(elt)) continue;\n\t\t\tvar v/*:?string*/ = elt.hasAttribute('data-v') ? elt.getAttribute('data-v') : elt.hasAttribute('v') ? elt.getAttribute('v') : htmldecode(elt.innerHTML);\n\t\t\tvar z/*:?string*/ = elt.getAttribute('data-z') || elt.getAttribute('z');\n\t\t\tfor(midx = 0; midx < merges.length; ++midx) {\n\t\t\t\tvar m/*:Range*/ = merges[midx];\n\t\t\t\tif(m.s.c == C + or_C && m.s.r < R + or_R && R + or_R <= m.e.r) { C = m.e.c+1 - or_C; midx = -1; }\n\t\t\t}\n\t\t\t/* TODO: figure out how to extract nonstandard mso- style */\n\t\t\tCS = +elt.getAttribute(\"colspan\") || 1;\n\t\t\tif( ((RS = (+elt.getAttribute(\"rowspan\") || 1)))>1 || CS>1) merges.push({s:{r:R + or_R,c:C + or_C},e:{r:R + or_R + (RS||1) - 1, c:C + or_C + (CS||1) - 1}});\n\t\t\tvar o/*:Cell*/ = {t:'s', v:v};\n\t\t\tvar _t/*:string*/ = elt.getAttribute(\"data-t\") || elt.getAttribute(\"t\") || \"\";\n\t\t\tif(v != null) {\n\t\t\t\tif(v.length == 0) o.t = _t || 'z';\n\t\t\t\telse if(opts.raw || v.trim().length == 0 || _t == \"s\"){}\n\t\t\t\telse if(v === 'TRUE') o = {t:'b', v:true};\n\t\t\t\telse if(v === 'FALSE') o = {t:'b', v:false};\n\t\t\t\telse if(!isNaN(fuzzynum(v))) o = {t:'n', v:fuzzynum(v)};\n\t\t\t\telse if(!isNaN(fuzzydate(v).getDate())) {\n\t\t\t\t\to = ({t:'d', v:parseDate(v)}/*:any*/);\n\t\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);\n\t\t\t\t\to.z = opts.dateNF || table_fmt[14];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(o.z === undefined && z != null) o.z = z;\n\t\t\t/* The first link is used.  Links are assumed to be fully specified.\n\t\t\t * TODO: The right way to process relative links is to make a new <a> */\n\t\t\tvar l = \"\", Aelts = elt.getElementsByTagName(\"A\");\n\t\t\tif(Aelts && Aelts.length) for(var Aelti = 0; Aelti < Aelts.length; ++Aelti)\tif(Aelts[Aelti].hasAttribute(\"href\")) {\n\t\t\t\tl = Aelts[Aelti].getAttribute(\"href\"); if(l.charAt(0) != \"#\") break;\n\t\t\t}\n\t\t\tif(l && l.charAt(0) != \"#\") o.l = ({ Target: l });\n\t\t\tif(opts.dense) { if(!ws[R + or_R]) ws[R + or_R] = []; ws[R + or_R][C + or_C] = o; }\n\t\t\telse ws[encode_cell({c:C + or_C, r:R + or_R})] = o;\n\t\t\tif(range.e.c < C + or_C) range.e.c = C + or_C;\n\t\t\tC += CS;\n\t\t}\n\t\t++R;\n\t}\n\tif(merges.length) ws['!merges'] = (ws[\"!merges\"] || []).concat(merges);\n\trange.e.r = Math.max(range.e.r, R - 1 + or_R);\n\tws['!ref'] = encode_range(range);\n\tif(R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length-_R+R-1 + or_R,range)); // We can count the real number of rows to parse but we don't to improve the performance\n\treturn ws;\n}\n\nfunction parse_dom_table(table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {\n\tvar opts = _opts || {};\n\tvar ws/*:Worksheet*/ = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\treturn sheet_add_dom(ws, table, _opts);\n}\n\nfunction table_to_book(table/*:HTMLElement*/, opts/*:?any*/)/*:Workbook*/ {\n\treturn sheet_to_workbook(parse_dom_table(table, opts), opts);\n}\n\nfunction is_dom_element_hidden(element/*:HTMLElement*/)/*:boolean*/ {\n\tvar display/*:string*/ = '';\n\tvar get_computed_style/*:?function*/ = get_get_computed_style_function(element);\n\tif(get_computed_style) display = get_computed_style(element).getPropertyValue('display');\n\tif(!display) display = element.style && element.style.display;\n\treturn display === 'none';\n}\n\n/* global getComputedStyle */\nfunction get_get_computed_style_function(element/*:HTMLElement*/)/*:?function*/ {\n\t// The proper getComputedStyle implementation is the one defined in the element window\n\tif(element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;\n\t// If it is not available, try to get one from the global namespace\n\tif(typeof getComputedStyle === 'function') return getComputedStyle;\n\treturn null;\n}\n/* OpenDocument */\nfunction parse_text_p(text/*:string*//*::, tag*/)/*:Array<any>*/ {\n\t/* 6.1.2 White Space Characters */\n\tvar fixed = text\n\t\t.replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \")\n\t\t.replace(/<text:s\\/>/g,\" \")\n\t\t.replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function($$,$1) { return Array(parseInt($1,10)+1).join(\" \"); })\n\t\t.replace(/<text:tab[^>]*\\/>/g,\"\\t\")\n\t\t.replace(/<text:line-break\\/>/g,\"\\n\");\n\tvar v = unescapexml(fixed.replace(/<[^>]*>/g,\"\"));\n\n\treturn [v];\n}\n\nvar number_formats_ods = {\n\t/* ods name: [short ssf fmt, long ssf fmt] */\n\tday:           [\"d\",   \"dd\"],\n\tmonth:         [\"m\",   \"mm\"],\n\tyear:          [\"y\",   \"yy\"],\n\thours:         [\"h\",   \"hh\"],\n\tminutes:       [\"m\",   \"mm\"],\n\tseconds:       [\"s\",   \"ss\"],\n\t\"am-pm\":       [\"A/P\", \"AM/PM\"],\n\t\"day-of-week\": [\"ddd\", \"dddd\"],\n\tera:           [\"e\",   \"ee\"],\n\t/* there is no native representation of LO \"Q\" format */\n\tquarter:       [\"\\\\Qm\", \"m\\\\\\\"th quarter\\\"\"]\n};\n\n\nfunction parse_content_xml(d/*:string*/, _opts)/*:Workbook*/ {\n\t\tvar opts = _opts || {};\n\t\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\t\tvar str = xlml_normalize(d);\n\t\tvar state/*:Array<any>*/ = [], tmp;\n\t\tvar tag/*:: = {}*/;\n\t\tvar NFtag = {name:\"\"}, NF = \"\", pidx = 0;\n\t\tvar sheetag/*:: = {name:\"\", '名称':\"\"}*/;\n\t\tvar rowtag/*:: = {'行号':\"\"}*/;\n\t\tvar Sheets = {}, SheetNames/*:Array<string>*/ = [];\n\t\tvar ws = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\t\tvar Rn, q/*:: :any = ({t:\"\", v:null, z:null, w:\"\",c:[],}:any)*/;\n\t\tvar ctag = ({value:\"\"}/*:any*/);\n\t\tvar textp = \"\", textpidx = 0, textptag/*:: = {}*/;\n\t\tvar textR = [];\n\t\tvar R = -1, C = -1, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};\n\t\tvar row_ol = 0;\n\t\tvar number_format_map = {};\n\t\tvar merges/*:Array<Range>*/ = [], mrange = {}, mR = 0, mC = 0;\n\t\tvar rowinfo/*:Array<RowInfo>*/ = [], rowpeat = 1, colpeat = 1;\n\t\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\t\tvar WB = {Names:[]};\n\t\tvar atag = ({}/*:any*/);\n\t\tvar _Ref/*:[string, string]*/ = [\"\", \"\"];\n\t\tvar comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);\n\t\tvar creator = \"\", creatoridx = 0;\n\t\tvar isstub = false, intable = false;\n\t\tvar i = 0;\n\t\txlmlregex.lastIndex = 0;\n\t\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\t\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3]=Rn[3].replace(/_.*$/,\"\"))) {\n\n\t\t\tcase 'table': case '工作表': // 9.1.2 <table:table>\n\t\t\t\tif(Rn[1]==='/') {\n\t\t\t\t\tif(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);\n\t\t\t\t\telse ws['!ref'] = \"A1:A1\";\n\t\t\t\t\tif(opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\n\t\t\t\t\t\tws['!fullref'] = ws['!ref'];\n\t\t\t\t\t\trange.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tws['!ref'] = encode_range(range);\n\t\t\t\t\t}\n\t\t\t\t\tif(merges.length) ws['!merges'] = merges;\n\t\t\t\t\tif(rowinfo.length) ws[\"!rows\"] = rowinfo;\n\t\t\t\t\tsheetag.name = sheetag['名称'] || sheetag.name;\n\t\t\t\t\tif(typeof JSON !== 'undefined') JSON.stringify(sheetag);\n\t\t\t\t\tSheetNames.push(sheetag.name);\n\t\t\t\t\tSheets[sheetag.name] = ws;\n\t\t\t\t\tintable = false;\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tsheetag = parsexmltag(Rn[0], false);\n\t\t\t\t\tR = C = -1;\n\t\t\t\t\trange.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;\n\t\t\t\t\tws = opts.dense ? ([]/*:any*/) : ({}/*:any*/); merges = [];\n\t\t\t\t\trowinfo = [];\n\t\t\t\t\tintable = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'table-row-group': // 9.1.9 <table:table-row-group>\n\t\t\t\tif(Rn[1] === \"/\") --row_ol; else ++row_ol;\n\t\t\t\tbreak;\n\t\t\tcase 'table-row': case '行': // 9.1.3 <table:table-row>\n\t\t\t\tif(Rn[1] === '/') { R+=rowpeat; rowpeat = 1; break; }\n\t\t\t\trowtag = parsexmltag(Rn[0], false);\n\t\t\t\tif(rowtag['行号']) R = rowtag['行号'] - 1; else if(R == -1) R = 0;\n\t\t\t\trowpeat = +rowtag['number-rows-repeated'] || 1;\n\t\t\t\t/* TODO: remove magic */\n\t\t\t\tif(rowpeat < 10) for(i = 0; i < rowpeat; ++i) if(row_ol > 0) rowinfo[R + i] = {level: row_ol};\n\t\t\t\tC = -1; break;\n\t\t\tcase 'covered-table-cell': // 9.1.5 <table:covered-table-cell>\n\t\t\t\tif(Rn[1] !== '/') ++C;\n\t\t\t\tif(opts.sheetStubs) {\n\t\t\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = {t:'z'}; }\n\t\t\t\t\telse ws[encode_cell({r:R,c:C})] = {t:'z'};\n\t\t\t\t}\n\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\tbreak; /* stub */\n\t\t\tcase 'table-cell': case '数据':\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) === '/') {\n\t\t\t\t\t++C;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tq = ({t:'z', v:null/*:: , z:null, w:\"\",c:[]*/}/*:any*/);\n\t\t\t\t\tif(ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\n\t\t\t\t\tif((ctag['数据类型'] || ctag['value-type']) == \"string\") {\n\t\t\t\t\t\tq.t = \"s\"; q.v = unescapexml(ctag['string-value'] || \"\");\n\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\tif(!ws[R]) ws[R] = [];\n\t\t\t\t\t\t\tws[R][C] = q;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tws[encode_cell({r:R,c:C})] = q;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tC+= colpeat-1;\n\t\t\t\t} else if(Rn[1]!=='/') {\n\t\t\t\t\t++C;\n\t\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\t\tcolpeat = 1;\n\t\t\t\t\tvar rptR = rowpeat ? R + rowpeat - 1 : R;\n\t\t\t\t\tif(C > range.e.c) range.e.c = C;\n\t\t\t\t\tif(C < range.s.c) range.s.c = C;\n\t\t\t\t\tif(R < range.s.r) range.s.r = R;\n\t\t\t\t\tif(rptR > range.e.r) range.e.r = rptR;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcomments = []; comment = ({}/*:any*/);\n\t\t\t\t\tq = ({t:ctag['数据类型'] || ctag['value-type'], v:null/*:: , z:null, w:\"\",c:[]*/}/*:any*/);\n\t\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\t\tif(ctag.formula) ctag.formula = unescapexml(ctag.formula);\n\t\t\t\t\t\tif(ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\n\t\t\t\t\t\t\tmR = parseInt(ctag['number-matrix-rows-spanned'],10) || 0;\n\t\t\t\t\t\t\tmC = parseInt(ctag['number-matrix-columns-spanned'],10) || 0;\n\t\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\t\tq.F = encode_range(mrange);\n\t\t\t\t\t\t\tarrayf.push([mrange, q.F]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ctag.formula) q.f = ods_to_csf_formula(ctag.formula);\n\t\t\t\t\t\telse for(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\t\t\tif(R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r)\n\t\t\t\t\t\t\t\tif(C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\t\t\tq.F = arrayf[i][1];\n\t\t\t\t\t}\n\t\t\t\t\tif(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n\t\t\t\t\t\tmR = parseInt(ctag['number-rows-spanned'],10) || 0;\n\t\t\t\t\t\tmC = parseInt(ctag['number-columns-spanned'],10) || 0;\n\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\tmerges.push(mrange);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* 19.675.2 table:number-columns-repeated */\n\t\t\t\t\tif(ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\n\n\t\t\t\t\t/* 19.385 office:value-type */\n\t\t\t\t\tswitch(q.t) {\n\t\t\t\t\t\tcase 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']); break;\n\t\t\t\t\t\tcase 'float': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'date': q.t = 'd'; q.v = parseDate(ctag['date-value']);\n\t\t\t\t\t\t\tif(!opts.cellDates) { q.t = 'n'; q.v = datenum(q.v); }\n\t\t\t\t\t\t\tq.z = 'm/d/yy'; break;\n\t\t\t\t\t\tcase 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400;\n\t\t\t\t\t\t\tif(opts.cellDates) { q.t = 'd'; q.v = numdate(q.v); }\n\t\t\t\t\t\t\tq.z = 'HH:MM:SS'; break;\n\t\t\t\t\t\tcase 'number': q.t = 'n'; q.v = parseFloat(ctag['数据数值']); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif(q.t === 'string' || q.t === 'text' || !q.t) {\n\t\t\t\t\t\t\t\tq.t = 's';\n\t\t\t\t\t\t\t\tif(ctag['string-value'] != null) { textp = unescapexml(ctag['string-value']); textR = []; }\n\t\t\t\t\t\t\t} else throw new Error('Unsupported value type ' + q.t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tisstub = false;\n\t\t\t\t\tif(q.t === 's') {\n\t\t\t\t\t\tq.v = textp || '';\n\t\t\t\t\t\tif(textR.length) q.R = textR;\n\t\t\t\t\t\tisstub = textpidx == 0;\n\t\t\t\t\t}\n\t\t\t\t\tif(atag.Target) q.l = atag;\n\t\t\t\t\tif(comments.length > 0) { q.c = comments; comments = []; }\n\t\t\t\t\tif(textp && opts.cellText !== false) q.w = textp;\n\t\t\t\t\tif(isstub) { q.t = \"z\"; delete q.v; }\n\t\t\t\t\tif(!isstub || opts.sheetStubs) {\n\t\t\t\t\t\tif(!(opts.sheetRows && opts.sheetRows <= R)) {\n\t\t\t\t\t\t\tfor(var rpt = 0; rpt < rowpeat; ++rpt) {\n\t\t\t\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!ws[R + rpt]) ws[R + rpt] = [];\n\t\t\t\t\t\t\t\t\tws[R + rpt][C] = rpt == 0 ? q : dup(q);\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[R + rpt][C + colpeat] = dup(q);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tws[encode_cell({r:R + rpt,c:C})] = q;\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[encode_cell({r:R + rpt,c:C + colpeat})] = dup(q);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(range.e.c <= C) range.e.c = C;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tC += colpeat-1; colpeat = 0;\n\t\t\t\t\tq = {/*:: t:\"\", v:null, z:null, w:\"\",c:[]*/};\n\t\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\t}\n\t\t\t\tatag = ({}/*:any*/);\n\t\t\t\tbreak; // 9.1.4 <table:table-cell>\n\n\t\t\t/* pure state */\n\t\t\tcase 'document': // TODO: <office:document> is the root for FODS\n\t\t\tcase 'document-content': case '电子表格文档': // 3.1.3.2 <office:document-content>\n\t\t\tcase 'spreadsheet': case '主体': // 3.7 <office:spreadsheet>\n\t\t\tcase 'scripts': // 3.12 <office:scripts>\n\t\t\tcase 'styles': // TODO <office:styles>\n\t\t\tcase 'font-face-decls': // 3.14 <office:font-face-decls>\n\t\t\tcase 'master-styles': // 3.15.4 <office:master-styles> -- relevant for FODS\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\n\t\t\tcase 'annotation': // 14.1 <office:annotation>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t\tcomment.t = textp;\n\t\t\t\t\tif(textR.length) /*::(*/comment/*:: :any)*/.R = textR;\n\t\t\t\t\tcomment.a = creator;\n\t\t\t\t\tcomments.push(comment);\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {state.push([Rn[3], false]);}\n\t\t\t\tcreator = \"\"; creatoridx = 0;\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'creator': // 4.3.2.7 <dc:creator>\n\t\t\t\tif(Rn[1]==='/') { creator = str.slice(creatoridx,Rn.index); }\n\t\t\t\telse creatoridx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\t/* ignore state */\n\t\t\tcase 'meta': case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\n\t\t\tcase 'settings': // TODO: <office:settings>\n\t\t\tcase 'config-item-set': // TODO: <office:config-item-set>\n\t\t\tcase 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\n\t\t\tcase 'config-item-map-entry': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'config-item-map-named': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'shapes': // 9.2.8 <table:shapes>\n\t\t\tcase 'frame': // 10.4.2 <draw:frame>\n\t\t\tcase 'text-box': // 10.4.3 <draw:text-box>\n\t\t\tcase 'image': // 10.4.4 <draw:image>\n\t\t\tcase 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\n\t\t\tcase 'list-style': // 16.30 <text:list-style>\n\t\t\tcase 'form': // 13.13 <form:form>\n\t\t\tcase 'dde-links': // 9.8 <table:dde-links>\n\t\t\tcase 'event-listeners': // TODO\n\t\t\tcase 'chart': // TODO\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'scientific-number': // TODO: <number:scientific-number>\n\t\t\t\tbreak;\n\t\t\tcase 'currency-symbol': // TODO: <number:currency-symbol>\n\t\t\t\tbreak;\n\t\t\tcase 'currency-style': // TODO: <number:currency-style>\n\t\t\t\tbreak;\n\t\t\tcase 'number-style': // 16.27.2 <number:number-style>\n\t\t\tcase 'percentage-style': // 16.27.9 <number:percentage-style>\n\t\t\tcase 'date-style': // 16.27.10 <number:date-style>\n\t\t\tcase 'time-style': // 16.27.18 <number:time-style>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tnumber_format_map[NFtag.name] = NF;\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tNF = \"\";\n\t\t\t\t\tNFtag = parsexmltag(Rn[0], false);\n\t\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t\t} break;\n\n\t\t\tcase 'script': break; // 3.13 <office:script>\n\t\t\tcase 'libraries': break; // TODO: <ooo:libraries>\n\t\t\tcase 'automatic-styles': break; // 3.15.3 <office:automatic-styles>\n\n\t\t\tcase 'default-style': // TODO: <style:default-style>\n\t\t\tcase 'page-layout': break; // TODO: <style:page-layout>\n\t\t\tcase 'style': // 16.2 <style:style>\n\t\t\t\tbreak;\n\t\t\tcase 'map': break; // 16.3 <style:map>\n\t\t\tcase 'font-face': break; // 16.21 <style:font-face>\n\n\t\t\tcase 'paragraph-properties': break; // 17.6 <style:paragraph-properties>\n\t\t\tcase 'table-properties': break; // 17.15 <style:table-properties>\n\t\t\tcase 'table-column-properties': break; // 17.16 <style:table-column-properties>\n\t\t\tcase 'table-row-properties': break; // 17.17 <style:table-row-properties>\n\t\t\tcase 'table-cell-properties': break; // 17.18 <style:table-cell-properties>\n\n\t\t\tcase 'number': // 16.27.3 <number:number>\n\t\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t\t\tNF += number_formats_ods[Rn[3]][tag.style==='long'?1:0]; break;\n\t\t\t\t} break;\n\n\t\t\tcase 'fraction': break; // TODO 16.27.6 <number:fraction>\n\n\t\t\tcase 'day': // 16.27.11 <number:day>\n\t\t\tcase 'month': // 16.27.12 <number:month>\n\t\t\tcase 'year': // 16.27.13 <number:year>\n\t\t\tcase 'era': // 16.27.14 <number:era>\n\t\t\tcase 'day-of-week': // 16.27.15 <number:day-of-week>\n\t\t\tcase 'week-of-year': // 16.27.16 <number:week-of-year>\n\t\t\tcase 'quarter': // 16.27.17 <number:quarter>\n\t\t\tcase 'hours': // 16.27.19 <number:hours>\n\t\t\tcase 'minutes': // 16.27.20 <number:minutes>\n\t\t\tcase 'seconds': // 16.27.21 <number:seconds>\n\t\t\tcase 'am-pm': // 16.27.22 <number:am-pm>\n\t\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t\t\tNF += number_formats_ods[Rn[3]][tag.style==='long'?1:0]; break;\n\t\t\t\t} break;\n\n\t\t\tcase 'boolean-style': break; // 16.27.23 <number:boolean-style>\n\t\t\tcase 'boolean': break; // 16.27.24 <number:boolean>\n\t\t\tcase 'text-style': break; // 16.27.25 <number:text-style>\n\t\t\tcase 'text': // 16.27.26 <number:text>\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") switch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'number-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\t\tNF += str.slice(pidx, Rn.index);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\tcase 'named-range': // 9.4.12 <table:named-range>\n\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t_Ref = ods_to_csf_3D(tag['cell-range-address']);\n\t\t\t\tvar nrange = ({Name:tag.name, Ref:_Ref[0] + '!' + _Ref[1]}/*:any*/);\n\t\t\t\tif(intable) nrange.Sheet = SheetNames.length;\n\t\t\t\tWB.Names.push(nrange);\n\t\t\t\tbreak;\n\n\t\t\tcase 'text-content': break; // 16.27.27 <number:text-content>\n\t\t\tcase 'text-properties': break; // 16.27.27 <style:text-properties>\n\t\t\tcase 'embedded-text': break; // 16.27.4 <number:embedded-text>\n\n\t\t\tcase 'body': case '电子表格': break; // 3.3 16.9.6 19.726.3\n\n\t\t\tcase 'forms': break; // 12.25.2 13.2\n\t\t\tcase 'table-column': break; // 9.1.6 <table:table-column>\n\t\t\tcase 'table-header-rows': break; // 9.1.7 <table:table-header-rows>\n\t\t\tcase 'table-rows': break; // 9.1.12 <table:table-rows>\n\t\t\t/* TODO: outline levels */\n\t\t\tcase 'table-column-group': break; // 9.1.10 <table:table-column-group>\n\t\t\tcase 'table-header-columns': break; // 9.1.11 <table:table-header-columns>\n\t\t\tcase 'table-columns': break; // 9.1.12 <table:table-columns>\n\n\t\t\tcase 'null-date': break; // 9.4.2 <table:null-date> TODO: date1904\n\n\t\t\tcase 'graphic-properties': break; // 17.21 <style:graphic-properties>\n\t\t\tcase 'calculation-settings': break; // 9.4.1 <table:calculation-settings>\n\t\t\tcase 'named-expressions': break; // 9.4.11 <table:named-expressions>\n\t\t\tcase 'label-range': break; // 9.4.9 <table:label-range>\n\t\t\tcase 'label-ranges': break; // 9.4.10 <table:label-ranges>\n\t\t\tcase 'named-expression': break; // 9.4.13 <table:named-expression>\n\t\t\tcase 'sort': break; // 9.4.19 <table:sort>\n\t\t\tcase 'sort-by': break; // 9.4.20 <table:sort-by>\n\t\t\tcase 'sort-groups': break; // 9.4.22 <table:sort-groups>\n\n\t\t\tcase 'tab': break; // 6.1.4 <text:tab>\n\t\t\tcase 'line-break': break; // 6.1.5 <text:line-break>\n\t\t\tcase 'span': break; // 6.1.7 <text:span>\n\t\t\tcase 'p': case '文本串': // 5.1.3 <text:p>\n\t\t\t\tif(['master-styles'].indexOf(state[state.length-1][0]) > -1) break;\n\t\t\t\tif(Rn[1]==='/' && (!ctag || !ctag['string-value'])) {\n\t\t\t\t\tvar ptp = parse_text_p(str.slice(textpidx,Rn.index), textptag);\n\t\t\t\t\ttextp = (textp.length > 0 ? textp + \"\\n\" : \"\") + ptp[0];\n\t\t\t\t} else { textptag = parsexmltag(Rn[0], false); textpidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak; // <text:p>\n\t\t\tcase 's': break; // <text:s>\n\n\t\t\tcase 'database-range': // 9.4.15 <table:database-range>\n\t\t\t\tif(Rn[1]==='/') break;\n\t\t\t\ttry {\n\t\t\t\t\t_Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\n\t\t\t\t\tSheets[_Ref[0]]['!autofilter'] = { ref:_Ref[1] };\n\t\t\t\t} catch(e) {/* empty */}\n\t\t\t\tbreak;\n\n\t\t\tcase 'date': break; // <*:date>\n\n\t\t\tcase 'object': break; // 10.4.6.2 <draw:object>\n\t\t\tcase 'title': case '标题': break; // <*:title> OR <uof:标题>\n\t\t\tcase 'desc': break; // <*:desc>\n\t\t\tcase 'binary-data': break; // 10.4.5 TODO: b64 blob\n\n\t\t\t/* 9.2 Advanced Tables */\n\t\t\tcase 'table-source': break; // 9.2.6\n\t\t\tcase 'scenario': break; // 9.2.6\n\n\t\t\tcase 'iteration': break; // 9.4.3 <table:iteration>\n\t\t\tcase 'content-validations': break; // 9.4.4 <table:\n\t\t\tcase 'content-validation': break; // 9.4.5 <table:\n\t\t\tcase 'help-message': break; // 9.4.6 <table:\n\t\t\tcase 'error-message': break; // 9.4.7 <table:\n\t\t\tcase 'database-ranges': break; // 9.4.14 <table:database-ranges>\n\t\t\tcase 'filter': break; // 9.5.2 <table:filter>\n\t\t\tcase 'filter-and': break; // 9.5.3 <table:filter-and>\n\t\t\tcase 'filter-or': break; // 9.5.4 <table:filter-or>\n\t\t\tcase 'filter-condition': break; // 9.5.5 <table:filter-condition>\n\n\t\t\tcase 'list-level-style-bullet': break; // 16.31 <text:\n\t\t\tcase 'list-level-style-number': break; // 16.32 <text:\n\t\t\tcase 'list-level-properties': break; // 17.19 <style:\n\n\t\t\t/* 7.3 Document Fields */\n\t\t\tcase 'sender-firstname': // 7.3.6.2\n\t\t\tcase 'sender-lastname': // 7.3.6.3\n\t\t\tcase 'sender-initials': // 7.3.6.4\n\t\t\tcase 'sender-title': // 7.3.6.5\n\t\t\tcase 'sender-position': // 7.3.6.6\n\t\t\tcase 'sender-email': // 7.3.6.7\n\t\t\tcase 'sender-phone-private': // 7.3.6.8\n\t\t\tcase 'sender-fax': // 7.3.6.9\n\t\t\tcase 'sender-company': // 7.3.6.10\n\t\t\tcase 'sender-phone-work': // 7.3.6.11\n\t\t\tcase 'sender-street': // 7.3.6.12\n\t\t\tcase 'sender-city': // 7.3.6.13\n\t\t\tcase 'sender-postal-code': // 7.3.6.14\n\t\t\tcase 'sender-country': // 7.3.6.15\n\t\t\tcase 'sender-state-or-province': // 7.3.6.16\n\t\t\tcase 'author-name': // 7.3.7.1\n\t\t\tcase 'author-initials': // 7.3.7.2\n\t\t\tcase 'chapter': // 7.3.8\n\t\t\tcase 'file-name': // 7.3.9\n\t\t\tcase 'template-name': // 7.3.9\n\t\t\tcase 'sheet-name': // 7.3.9\n\t\t\t\tbreak;\n\n\t\t\tcase 'event-listener':\n\t\t\t\tbreak;\n\t\t\t/* TODO: FODS Properties */\n\t\t\tcase 'initial-creator':\n\t\t\tcase 'creation-date':\n\t\t\tcase 'print-date':\n\t\t\tcase 'generator':\n\t\t\tcase 'document-statistic':\n\t\t\tcase 'user-defined':\n\t\t\tcase 'editing-duration':\n\t\t\tcase 'editing-cycles':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: FODS Config */\n\t\t\tcase 'config-item':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: style tokens */\n\t\t\tcase 'page-number': break; // TODO <text:page-number>\n\t\t\tcase 'page-count': break; // TODO <text:page-count>\n\t\t\tcase 'time': break; // TODO <text:time>\n\n\t\t\t/* 9.3 Advanced Table Cells */\n\t\t\tcase 'cell-range-source': break; // 9.3.1 <table:\n\t\t\tcase 'detective': break; // 9.3.2 <table:\n\t\t\tcase 'operation': break; // 9.3.3 <table:\n\t\t\tcase 'highlighted-range': break; // 9.3.4 <table:\n\n\t\t\t/* 9.6 Data Pilot Tables <table: */\n\t\t\tcase 'data-pilot-table': // 9.6.3\n\t\t\tcase 'source-cell-range': // 9.6.5\n\t\t\tcase 'source-service': // 9.6.6\n\t\t\tcase 'data-pilot-field': // 9.6.7\n\t\t\tcase 'data-pilot-level': // 9.6.8\n\t\t\tcase 'data-pilot-subtotals': // 9.6.9\n\t\t\tcase 'data-pilot-subtotal': // 9.6.10\n\t\t\tcase 'data-pilot-members': // 9.6.11\n\t\t\tcase 'data-pilot-member': // 9.6.12\n\t\t\tcase 'data-pilot-display-info': // 9.6.13\n\t\t\tcase 'data-pilot-sort-info': // 9.6.14\n\t\t\tcase 'data-pilot-layout-info': // 9.6.15\n\t\t\tcase 'data-pilot-field-reference': // 9.6.16\n\t\t\tcase 'data-pilot-groups': // 9.6.17\n\t\t\tcase 'data-pilot-group': // 9.6.18\n\t\t\tcase 'data-pilot-group-member': // 9.6.19\n\t\t\t\tbreak;\n\n\t\t\t/* 10.3 Drawing Shapes */\n\t\t\tcase 'rect': // 10.3.2\n\t\t\t\tbreak;\n\n\t\t\t/* 14.6 DDE Connections */\n\t\t\tcase 'dde-connection-decls': // 14.6.2 <text:\n\t\t\tcase 'dde-connection-decl': // 14.6.3 <text:\n\t\t\tcase 'dde-link': // 14.6.4 <table:\n\t\t\tcase 'dde-source': // 14.6.5 <office:\n\t\t\t\tbreak;\n\n\t\t\tcase 'properties': break; // 13.7 <form:properties>\n\t\t\tcase 'property': break; // 13.8 <form:property>\n\n\t\t\tcase 'a': // 6.1.8 hyperlink\n\t\t\t\tif(Rn[1]!== '/') {\n\t\t\t\t\tatag = parsexmltag(Rn[0], false);\n\t\t\t\t\tif(!atag.href) break;\n\t\t\t\t\tatag.Target = unescapexml(atag.href); delete atag.href;\n\t\t\t\t\tif(atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\n\t\t\t\t\t\t_Ref = ods_to_csf_3D(atag.Target.slice(1));\n\t\t\t\t\t\tatag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\n\t\t\t\t\t} else if(atag.Target.match(/^\\.\\.[\\\\\\/]/)) atag.Target = atag.Target.slice(3);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t/* non-standard */\n\t\t\tcase 'table-protection': break;\n\t\t\tcase 'data-pilot-grand-total': break; // <table:\n\t\t\tcase 'office-document-common-attrs': break; // bare\n\t\t\tdefault: switch(Rn[2]) {\n\t\t\t\tcase 'dc:':       // TODO: properties\n\t\t\t\tcase 'calcext:':  // ignore undocumented extensions\n\t\t\t\tcase 'loext:':    // ignore undocumented extensions\n\t\t\t\tcase 'ooo:':      // ignore undocumented extensions\n\t\t\t\tcase 'chartooo:': // ignore undocumented extensions\n\t\t\t\tcase 'draw:':     // TODO: drawing\n\t\t\t\tcase 'style:':    // TODO: styles\n\t\t\t\tcase 'chart:':    // TODO: charts\n\t\t\t\tcase 'form:':     // TODO: forms\n\t\t\t\tcase 'uof:':      // TODO: uof\n\t\t\t\tcase '表:':       // TODO: uof\n\t\t\t\tcase '字:':       // TODO: uof\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts.WTF) throw new Error(Rn);\n\t\t\t}\n\t\t}\n\t\tvar out/*:Workbook*/ = ({\n\t\t\tSheets: Sheets,\n\t\t\tSheetNames: SheetNames,\n\t\t\tWorkbook: WB\n\t\t}/*:any*/);\n\t\tif(opts.bookSheets) delete /*::(*/out/*:: :any)*/.Sheets;\n\t\treturn out;\n}\n\nfunction parse_ods(zip/*:ZIPFile*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\topts = opts || ({}/*:any*/);\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\n\tvar content = getzipstr(zip, 'content.xml');\n\tif(!content) throw new Error(\"Missing content.xml in ODS / UOF file\");\n\tvar wb = parse_content_xml(utf8read(content), opts);\n\tif(safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\n\treturn wb;\n}\nfunction parse_fods(data/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\treturn parse_content_xml(data, opts);\n}\n\n/* OpenDocument */\nvar write_styles_ods/*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */(function() {\n\tvar master_styles = [\n\t\t'<office:master-styles>',\n\t\t\t'<style:master-page style:name=\"mp1\" style:page-layout-name=\"mp1\">',\n\t\t\t\t'<style:header/>',\n\t\t\t\t'<style:header-left style:display=\"false\"/>',\n\t\t\t\t'<style:footer/>',\n\t\t\t\t'<style:footer-left style:display=\"false\"/>',\n\t\t\t'</style:master-page>',\n\t\t'</office:master-styles>'\n\t].join(\"\");\n\n\tvar payload = '<office:document-styles ' + wxt_helper({\n\t\t'xmlns:office':   \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t'xmlns:table':    \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t'xmlns:style':    \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t'xmlns:text':     \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t'xmlns:draw':     \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t'xmlns:fo':       \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t'xmlns:xlink':    \"http://www.w3.org/1999/xlink\",\n\t\t'xmlns:dc':       \"http://purl.org/dc/elements/1.1/\",\n\t\t'xmlns:number':   \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t'xmlns:svg':      \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t'xmlns:of':       \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t'office:version': \"1.2\"\n\t}) + '>' + master_styles + '</office:document-styles>';\n\n\treturn function wso(/*::wb, opts*/) {\n\t\treturn XML_HEADER + payload;\n\t};\n})();\nvar write_content_ods/*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */(function() {\n\t/* 6.1.2 White Space Characters */\n\tvar write_text_p = function(text/*:string*/)/*:string*/ {\n\t\treturn escapexml(text)\n\t\t\t.replace(/  +/g, function($$){return '<text:s text:c=\"'+$$.length+'\"/>';})\n\t\t\t.replace(/\\t/g, \"<text:tab/>\")\n\t\t\t.replace(/\\n/g, \"</text:p><text:p>\")\n\t\t\t.replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\n\t};\n\n\tvar null_cell_xml = '          <table:table-cell />\\n';\n\tvar covered_cell_xml = '          <table:covered-table-cell/>\\n';\n\tvar write_ws = function(ws, wb/*:Workbook*/, i/*:number*//*::, opts*/)/*:string*/ {\n\t\t/* Section 9 Tables */\n\t\tvar o/*:Array<string>*/ = [];\n\t\to.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\" table:style-name=\"ta1\">\\n');\n\t\tvar R=0,C=0, range = decode_range(ws['!ref']||\"A1\");\n\t\tvar marr/*:Array<Range>*/ = ws['!merges'] || [], mi = 0;\n\t\tvar dense = Array.isArray(ws);\n\t\tif(ws[\"!cols\"]) {\n\t\t\tfor(C = 0; C <= range.e.c; ++C) o.push('        <table:table-column' + (ws[\"!cols\"][C] ? ' table:style-name=\"co' + ws[\"!cols\"][C].ods + '\"' : '') + '></table:table-column>\\n');\n\t\t}\n\t\tvar H = \"\", ROWS = ws[\"!rows\"]||[];\n\t\tfor(R = 0; R < range.s.r; ++R) {\n\t\t\tH = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n\t\t\to.push('        <table:table-row' + H + '></table:table-row>\\n');\n\t\t}\n\t\tfor(; R <= range.e.r; ++R) {\n\t\t\tH = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n\t\t\to.push('        <table:table-row' + H + '>\\n');\n\t\t\tfor(C=0; C < range.s.c; ++C) o.push(null_cell_xml);\n\t\t\tfor(; C <= range.e.c; ++C) {\n\t\t\t\tvar skip = false, ct = {}, textp = \"\";\n\t\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\t\tct['table:number-columns-spanned'] = (marr[mi].e.c - marr[mi].s.c + 1);\n\t\t\t\t\tct['table:number-rows-spanned'] =    (marr[mi].e.r - marr[mi].s.r + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(skip) { o.push(covered_cell_xml); continue; }\n\t\t\t\tvar ref = encode_cell({r:R, c:C}), cell = dense ? (ws[R]||[])[C]: ws[ref];\n\t\t\t\tif(cell && cell.f) {\n\t\t\t\t\tct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\n\t\t\t\t\tif(cell.F) {\n\t\t\t\t\t\tif(cell.F.slice(0, ref.length) == ref) {\n\t\t\t\t\t\t\tvar _Fref = decode_range(cell.F);\n\t\t\t\t\t\t\tct['table:number-matrix-columns-spanned'] = (_Fref.e.c - _Fref.s.c + 1);\n\t\t\t\t\t\t\tct['table:number-matrix-rows-spanned'] =    (_Fref.e.r - _Fref.s.r + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!cell) { o.push(null_cell_xml); continue; }\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\ttextp = (cell.v ? 'TRUE' : 'FALSE');\n\t\t\t\t\t\tct['office:value-type'] = \"boolean\";\n\t\t\t\t\t\tct['office:boolean-value'] = (cell.v ? 'true' : 'false');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\ttextp = (cell.w||String(cell.v||0));\n\t\t\t\t\t\tct['office:value-type'] = \"float\";\n\t\t\t\t\t\tct['office:value'] = (cell.v||0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 's': case 'str':\n\t\t\t\t\t\ttextp = cell.v == null ? \"\" : cell.v;\n\t\t\t\t\t\tct['office:value-type'] = \"string\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\ttextp = (cell.w||(parseDate(cell.v).toISOString()));\n\t\t\t\t\t\tct['office:value-type'] = \"date\";\n\t\t\t\t\t\tct['office:date-value'] = (parseDate(cell.v).toISOString());\n\t\t\t\t\t\tct['table:style-name'] = \"ce1\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t//case 'e':\n\t\t\t\t\tdefault: o.push(null_cell_xml); continue;\n\t\t\t\t}\n\t\t\t\tvar text_p = write_text_p(textp);\n\t\t\t\tif(cell.l && cell.l.Target) {\n\t\t\t\t\tvar _tgt = cell.l.Target;\n\t\t\t\t\t_tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\n\t\t\t\t\t// TODO: choose correct parent path format based on link delimiters\n\t\t\t\t\tif(_tgt.charAt(0) != \"#\" && !_tgt.match(/^\\w+:/)) _tgt = '../' + _tgt;\n\t\t\t\t\ttext_p = writextag('text:a', text_p, {'xlink:href': _tgt.replace(/&/g, \"&amp;\")});\n\t\t\t\t}\n\t\t\t\to.push('          ' + writextag('table:table-cell', writextag('text:p', text_p, {}), ct) + '\\n');\n\t\t\t}\n\t\t\to.push('        </table:table-row>\\n');\n\t\t}\n\t\to.push('      </table:table>\\n');\n\t\treturn o.join(\"\");\n\t};\n\n\tvar write_automatic_styles_ods = function(o/*:Array<string>*/, wb) {\n\t\to.push(' <office:automatic-styles>\\n');\n\n\t\to.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\n\t\to.push('   <number:month number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:day number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:year/>\\n');\n\t\to.push('  </number:date-style>\\n');\n\n\t\t/* column styles */\n\t\tvar cidx = 0;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tif(ws[\"!cols\"]) {\n\t\t\t\tfor(var C = 0; C < ws[\"!cols\"].length; ++C) if(ws[\"!cols\"][C]) {\n\t\t\t\t\tvar colobj = ws[\"!cols\"][C];\n\t\t\t\t\tif(colobj.width == null && colobj.wpx == null && colobj.wch == null) continue;\n\t\t\t\t\tprocess_col(colobj);\n\t\t\t\t\tcolobj.ods = cidx;\n\t\t\t\t\tvar w = ws[\"!cols\"][C].wpx + \"px\";\n\t\t\t\t\to.push('  <style:style style:name=\"co' + cidx + '\" style:family=\"table-column\">\\n');\n\t\t\t\t\to.push('   <style:table-column-properties fo:break-before=\"auto\" style:column-width=\"' + w + '\"/>\\n');\n\t\t\t\t\to.push('  </style:style>\\n');\n\t\t\t\t\t++cidx;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/* row styles */\n\t\tvar ridx = 0;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tif(ws[\"!rows\"]) {\n\t\t\t\tfor(var R = 0; R < ws[\"!rows\"].length; ++R) if(ws[\"!rows\"][R]) {\n\t\t\t\t\tws[\"!rows\"][R].ods = ridx;\n\t\t\t\t\tvar h = ws[\"!rows\"][R].hpx + \"px\";\n\t\t\t\t\to.push('  <style:style style:name=\"ro' + ridx + '\" style:family=\"table-row\">\\n');\n\t\t\t\t\to.push('   <style:table-row-properties fo:break-before=\"auto\" style:row-height=\"' + h + '\"/>\\n');\n\t\t\t\t\to.push('  </style:style>\\n');\n\t\t\t\t\t++ridx;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/* table */\n\t\to.push('  <style:style style:name=\"ta1\" style:family=\"table\" style:master-page-name=\"mp1\">\\n');\n\t\to.push('   <style:table-properties table:display=\"true\" style:writing-mode=\"lr-tb\"/>\\n');\n\t\to.push('  </style:style>\\n');\n\n\t\t/* table cells, text */\n\t\to.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\n\n\t\t/* page-layout */\n\n\t\to.push(' </office:automatic-styles>\\n');\n\t};\n\n\treturn function wcx(wb, opts) {\n\t\tvar o = [XML_HEADER];\n\t\t/* 3.1.3.2 */\n\t\tvar attr = wxt_helper({\n\t\t\t'xmlns:office':       \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t\t'xmlns:table':        \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t\t'xmlns:style':        \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t\t'xmlns:text':         \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t\t'xmlns:draw':         \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t\t'xmlns:fo':           \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t\t'xmlns:xlink':        \"http://www.w3.org/1999/xlink\",\n\t\t\t'xmlns:dc':           \"http://purl.org/dc/elements/1.1/\",\n\t\t\t'xmlns:meta':         \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\n\t\t\t'xmlns:number':       \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t\t'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\n\t\t\t'xmlns:svg':          \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t\t'xmlns:chart':        \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\n\t\t\t'xmlns:dr3d':         \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\n\t\t\t'xmlns:math':         \"http://www.w3.org/1998/Math/MathML\",\n\t\t\t'xmlns:form':         \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\n\t\t\t'xmlns:script':       \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\n\t\t\t'xmlns:ooo':          \"http://openoffice.org/2004/office\",\n\t\t\t'xmlns:ooow':         \"http://openoffice.org/2004/writer\",\n\t\t\t'xmlns:oooc':         \"http://openoffice.org/2004/calc\",\n\t\t\t'xmlns:dom':          \"http://www.w3.org/2001/xml-events\",\n\t\t\t'xmlns:xforms':       \"http://www.w3.org/2002/xforms\",\n\t\t\t'xmlns:xsd':          \"http://www.w3.org/2001/XMLSchema\",\n\t\t\t'xmlns:xsi':          \"http://www.w3.org/2001/XMLSchema-instance\",\n\t\t\t'xmlns:sheet':        \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\n\t\t\t'xmlns:rpt':          \"http://openoffice.org/2005/report\",\n\t\t\t'xmlns:of':           \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t\t'xmlns:xhtml':        \"http://www.w3.org/1999/xhtml\",\n\t\t\t'xmlns:grddl':        \"http://www.w3.org/2003/g/data-view#\",\n\t\t\t'xmlns:tableooo':     \"http://openoffice.org/2009/table\",\n\t\t\t'xmlns:drawooo':      \"http://openoffice.org/2010/draw\",\n\t\t\t'xmlns:calcext':      \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\n\t\t\t'xmlns:loext':        \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\n\t\t\t'xmlns:field':        \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\n\t\t\t'xmlns:formx':        \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\n\t\t\t'xmlns:css3t':        \"http://www.w3.org/TR/css3-text/\",\n\t\t\t'office:version':     \"1.2\"\n\t\t});\n\n\t\tvar fods = wxt_helper({\n\t\t\t'xmlns:config':    \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\n\t\t\t'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\n\t\t});\n\n\t\tif(opts.bookType == \"fods\") {\n\t\t\to.push('<office:document' + attr + fods + '>\\n');\n\t\t\to.push(write_meta_ods().replace(/office:document-meta/g, \"office:meta\"));\n\t\t\t// TODO: settings (equiv of settings.xml for ODS)\n\t\t} else o.push('<office:document-content' + attr  + '>\\n');\n\t\t// o.push('  <office:scripts/>\\n');\n\t\twrite_automatic_styles_ods(o, wb);\n\t\to.push('  <office:body>\\n');\n\t\to.push('    <office:spreadsheet>\\n');\n\t\tfor(var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts));\n\t\to.push('    </office:spreadsheet>\\n');\n\t\to.push('  </office:body>\\n');\n\t\tif(opts.bookType == \"fods\") o.push('</office:document>');\n\t\telse o.push('</office:document-content>');\n\t\treturn o.join(\"\");\n\t};\n})();\n\nfunction write_ods(wb/*:any*/, opts/*:any*/) {\n\tif(opts.bookType == \"fods\") return write_content_ods(wb, opts);\n\n\tvar zip = zip_new();\n\tvar f = \"\";\n\n\tvar manifest/*:Array<Array<string> >*/ = [];\n\tvar rdf/*:Array<[string, string]>*/ = [];\n\n\t/* Part 3 Section 3.3 MIME Media Type */\n\tf = \"mimetype\";\n\tzip_add_file(zip, f, \"application/vnd.oasis.opendocument.spreadsheet\");\n\n\t/* Part 1 Section 2.2 Documents */\n\tf = \"content.xml\";\n\tzip_add_file(zip, f, write_content_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"ContentFile\"]);\n\n\t/* TODO: these are hard-coded styles to satiate excel */\n\tf = \"styles.xml\";\n\tzip_add_file(zip, f, write_styles_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"StylesFile\"]);\n\n\t/* TODO: this is hard-coded to satiate excel */\n\tf = \"meta.xml\";\n\tzip_add_file(zip, f, XML_HEADER + write_meta_ods(/*::wb, opts*/));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"MetadataFile\"]);\n\n\t/* Part 3 Section 6 Metadata Manifest File */\n\tf = \"manifest.rdf\";\n\tzip_add_file(zip, f, write_rdf(rdf/*, opts*/));\n\tmanifest.push([f, \"application/rdf+xml\"]);\n\n\t/* Part 3 Section 4 Manifest File */\n\tf = \"META-INF/manifest.xml\";\n\tzip_add_file(zip, f, write_manifest(manifest/*, opts*/));\n\n\treturn zip;\n}\n\n/*! sheetjs (C) 2013-present SheetJS -- http://sheetjs.com */\nfunction u8_to_dataview(array) {\n  return new DataView(array.buffer, array.byteOffset, array.byteLength);\n}\nfunction u8str(u8) {\n  return typeof TextDecoder != \"undefined\" ? new TextDecoder().decode(u8) : utf8read(a2s(u8));\n}\nfunction stru8(str) {\n  return typeof TextEncoder != \"undefined\" ? new TextEncoder().encode(str) : s2a(utf8write(str));\n}\nfunction u8contains(body, search) {\n  outer:\n    for (var L = 0; L <= body.length - search.length; ++L) {\n      for (var j = 0; j < search.length; ++j)\n        if (body[L + j] != search[j])\n          continue outer;\n      return true;\n    }\n  return false;\n}\nfunction u8concat(u8a) {\n  var len = u8a.reduce(function(acc, x) {\n    return acc + x.length;\n  }, 0);\n  var out = new Uint8Array(len);\n  var off = 0;\n  u8a.forEach(function(u8) {\n    out.set(u8, off);\n    off += u8.length;\n  });\n  return out;\n}\nfunction popcnt(x) {\n  x -= x >> 1 & 1431655765;\n  x = (x & 858993459) + (x >> 2 & 858993459);\n  return (x + (x >> 4) & 252645135) * 16843009 >>> 24;\n}\nfunction readDecimal128LE(buf, offset) {\n  var exp = (buf[offset + 15] & 127) << 7 | buf[offset + 14] >> 1;\n  var mantissa = buf[offset + 14] & 1;\n  for (var j = offset + 13; j >= offset; --j)\n    mantissa = mantissa * 256 + buf[j];\n  return (buf[offset + 15] & 128 ? -mantissa : mantissa) * Math.pow(10, exp - 6176);\n}\nfunction writeDecimal128LE(buf, offset, value) {\n  var exp = Math.floor(value == 0 ? 0 : Math.LOG10E * Math.log(Math.abs(value))) + 6176 - 20;\n  var mantissa = value / Math.pow(10, exp - 6176);\n  buf[offset + 15] |= exp >> 7;\n  buf[offset + 14] |= (exp & 127) << 1;\n  for (var i = 0; mantissa >= 1; ++i, mantissa /= 256)\n    buf[offset + i] = mantissa & 255;\n  buf[offset + 15] |= value >= 0 ? 0 : 128;\n}\nfunction parse_varint49(buf, ptr) {\n  var l = ptr ? ptr[0] : 0;\n  var usz = buf[l] & 127;\n  varint:\n    if (buf[l++] >= 128) {\n      usz |= (buf[l] & 127) << 7;\n      if (buf[l++] < 128)\n        break varint;\n      usz |= (buf[l] & 127) << 14;\n      if (buf[l++] < 128)\n        break varint;\n      usz |= (buf[l] & 127) << 21;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 28);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 35);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 42);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n    }\n  if (ptr)\n    ptr[0] = l;\n  return usz;\n}\nfunction write_varint49(v) {\n  var usz = new Uint8Array(7);\n  usz[0] = v & 127;\n  var L = 1;\n  sz:\n    if (v > 127) {\n      usz[L - 1] |= 128;\n      usz[L] = v >> 7 & 127;\n      ++L;\n      if (v <= 16383)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v >> 14 & 127;\n      ++L;\n      if (v <= 2097151)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v >> 21 & 127;\n      ++L;\n      if (v <= 268435455)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 256 >>> 21 & 127;\n      ++L;\n      if (v <= 34359738367)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 65536 >>> 21 & 127;\n      ++L;\n      if (v <= 4398046511103)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 16777216 >>> 21 & 127;\n      ++L;\n    }\n  return usz.slice(0, L);\n}\nfunction varint_to_i32(buf) {\n  var l = 0, i32 = buf[l] & 127;\n  varint:\n    if (buf[l++] >= 128) {\n      i32 |= (buf[l] & 127) << 7;\n      if (buf[l++] < 128)\n        break varint;\n      i32 |= (buf[l] & 127) << 14;\n      if (buf[l++] < 128)\n        break varint;\n      i32 |= (buf[l] & 127) << 21;\n      if (buf[l++] < 128)\n        break varint;\n      i32 |= (buf[l] & 127) << 28;\n    }\n  return i32;\n}\nfunction parse_shallow(buf) {\n  var out = [], ptr = [0];\n  while (ptr[0] < buf.length) {\n    var off = ptr[0];\n    var num = parse_varint49(buf, ptr);\n    var type = num & 7;\n    num = Math.floor(num / 8);\n    var len = 0;\n    var res;\n    if (num == 0)\n      break;\n    switch (type) {\n      case 0:\n        {\n          var l = ptr[0];\n          while (buf[ptr[0]++] >= 128)\n            ;\n          res = buf.slice(l, ptr[0]);\n        }\n        break;\n      case 5:\n        len = 4;\n        res = buf.slice(ptr[0], ptr[0] + len);\n        ptr[0] += len;\n        break;\n      case 1:\n        len = 8;\n        res = buf.slice(ptr[0], ptr[0] + len);\n        ptr[0] += len;\n        break;\n      case 2:\n        len = parse_varint49(buf, ptr);\n        res = buf.slice(ptr[0], ptr[0] + len);\n        ptr[0] += len;\n        break;\n      case 3:\n      case 4:\n      default:\n        throw new Error(\"PB Type \".concat(type, \" for Field \").concat(num, \" at offset \").concat(off));\n    }\n    var v = { data: res, type: type };\n    if (out[num] == null)\n      out[num] = [v];\n    else\n      out[num].push(v);\n  }\n  return out;\n}\nfunction write_shallow(proto) {\n  var out = [];\n  proto.forEach(function(field, idx) {\n    field.forEach(function(item) {\n      if (!item.data)\n        return;\n      out.push(write_varint49(idx * 8 + item.type));\n      if (item.type == 2)\n        out.push(write_varint49(item.data.length));\n      out.push(item.data);\n    });\n  });\n  return u8concat(out);\n}\nfunction mappa(data, cb) {\n  return (data == null ? void 0 : data.map(function(d) {\n    return cb(d.data);\n  })) || [];\n}\nfunction parse_iwa_file(buf) {\n  var _a;\n  var out = [], ptr = [0];\n  while (ptr[0] < buf.length) {\n    var len = parse_varint49(buf, ptr);\n    var ai = parse_shallow(buf.slice(ptr[0], ptr[0] + len));\n    ptr[0] += len;\n    var res = {\n      id: varint_to_i32(ai[1][0].data),\n      messages: []\n    };\n    ai[2].forEach(function(b) {\n      var mi = parse_shallow(b.data);\n      var fl = varint_to_i32(mi[3][0].data);\n      res.messages.push({\n        meta: mi,\n        data: buf.slice(ptr[0], ptr[0] + fl)\n      });\n      ptr[0] += fl;\n    });\n    if ((_a = ai[3]) == null ? void 0 : _a[0])\n      res.merge = varint_to_i32(ai[3][0].data) >>> 0 > 0;\n    out.push(res);\n  }\n  return out;\n}\nfunction write_iwa_file(ias) {\n  var bufs = [];\n  ias.forEach(function(ia) {\n    var ai = [];\n    ai[1] = [{ data: write_varint49(ia.id), type: 0 }];\n    ai[2] = [];\n    if (ia.merge != null)\n      ai[3] = [{ data: write_varint49(+!!ia.merge), type: 0 }];\n    var midata = [];\n    ia.messages.forEach(function(mi) {\n      midata.push(mi.data);\n      mi.meta[3] = [{ type: 0, data: write_varint49(mi.data.length) }];\n      ai[2].push({ data: write_shallow(mi.meta), type: 2 });\n    });\n    var aipayload = write_shallow(ai);\n    bufs.push(write_varint49(aipayload.length));\n    bufs.push(aipayload);\n    midata.forEach(function(mid) {\n      return bufs.push(mid);\n    });\n  });\n  return u8concat(bufs);\n}\nfunction parse_snappy_chunk(type, buf) {\n  if (type != 0)\n    throw new Error(\"Unexpected Snappy chunk type \".concat(type));\n  var ptr = [0];\n  var usz = parse_varint49(buf, ptr);\n  var chunks = [];\n  while (ptr[0] < buf.length) {\n    var tag = buf[ptr[0]] & 3;\n    if (tag == 0) {\n      var len = buf[ptr[0]++] >> 2;\n      if (len < 60)\n        ++len;\n      else {\n        var c = len - 59;\n        len = buf[ptr[0]];\n        if (c > 1)\n          len |= buf[ptr[0] + 1] << 8;\n        if (c > 2)\n          len |= buf[ptr[0] + 2] << 16;\n        if (c > 3)\n          len |= buf[ptr[0] + 3] << 24;\n        len >>>= 0;\n        len++;\n        ptr[0] += c;\n      }\n      chunks.push(buf.slice(ptr[0], ptr[0] + len));\n      ptr[0] += len;\n      continue;\n    } else {\n      var offset = 0, length = 0;\n      if (tag == 1) {\n        length = (buf[ptr[0]] >> 2 & 7) + 4;\n        offset = (buf[ptr[0]++] & 224) << 3;\n        offset |= buf[ptr[0]++];\n      } else {\n        length = (buf[ptr[0]++] >> 2) + 1;\n        if (tag == 2) {\n          offset = buf[ptr[0]] | buf[ptr[0] + 1] << 8;\n          ptr[0] += 2;\n        } else {\n          offset = (buf[ptr[0]] | buf[ptr[0] + 1] << 8 | buf[ptr[0] + 2] << 16 | buf[ptr[0] + 3] << 24) >>> 0;\n          ptr[0] += 4;\n        }\n      }\n      chunks = [u8concat(chunks)];\n      if (offset == 0)\n        throw new Error(\"Invalid offset 0\");\n      if (offset > chunks[0].length)\n        throw new Error(\"Invalid offset beyond length\");\n      if (length >= offset) {\n        chunks.push(chunks[0].slice(-offset));\n        length -= offset;\n        while (length >= chunks[chunks.length - 1].length) {\n          chunks.push(chunks[chunks.length - 1]);\n          length -= chunks[chunks.length - 1].length;\n        }\n      }\n      chunks.push(chunks[0].slice(-offset, -offset + length));\n    }\n  }\n  var o = u8concat(chunks);\n  if (o.length != usz)\n    throw new Error(\"Unexpected length: \".concat(o.length, \" != \").concat(usz));\n  return o;\n}\nfunction decompress_iwa_file(buf) {\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var t = buf[l++];\n    var len = buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16;\n    l += 3;\n    out.push(parse_snappy_chunk(t, buf.slice(l, l + len)));\n    l += len;\n  }\n  if (l !== buf.length)\n    throw new Error(\"data is not a valid framed stream!\");\n  return u8concat(out);\n}\nfunction compress_iwa_file(buf) {\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var c = Math.min(buf.length - l, 268435455);\n    var frame = new Uint8Array(4);\n    out.push(frame);\n    var usz = write_varint49(c);\n    var L = usz.length;\n    out.push(usz);\n    if (c <= 60) {\n      L++;\n      out.push(new Uint8Array([c - 1 << 2]));\n    } else if (c <= 256) {\n      L += 2;\n      out.push(new Uint8Array([240, c - 1 & 255]));\n    } else if (c <= 65536) {\n      L += 3;\n      out.push(new Uint8Array([244, c - 1 & 255, c - 1 >> 8 & 255]));\n    } else if (c <= 16777216) {\n      L += 4;\n      out.push(new Uint8Array([248, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255]));\n    } else if (c <= 4294967296) {\n      L += 5;\n      out.push(new Uint8Array([252, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255, c - 1 >>> 24 & 255]));\n    }\n    out.push(buf.slice(l, l + c));\n    L += c;\n    frame[0] = 0;\n    frame[1] = L & 255;\n    frame[2] = L >> 8 & 255;\n    frame[3] = L >> 16 & 255;\n    l += c;\n  }\n  return u8concat(out);\n}\nfunction parse_old_storage(buf, sst, rsst, v) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(4, true);\n  var data_offset = (v > 1 ? 12 : 8) + popcnt(flags & (v > 1 ? 3470 : 398)) * 4;\n  var ridx = -1, sidx = -1, ieee = NaN, dt = new Date(2001, 0, 1);\n  if (flags & 512) {\n    ridx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  data_offset += popcnt(flags & (v > 1 ? 12288 : 4096)) * 4;\n  if (flags & 16) {\n    sidx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  if (flags & 32) {\n    ieee = dv.getFloat64(data_offset, true);\n    data_offset += 8;\n  }\n  if (flags & 64) {\n    dt.setTime(dt.getTime() + dv.getFloat64(data_offset, true) * 1e3);\n    data_offset += 8;\n  }\n  var ret;\n  switch (buf[2]) {\n    case 0:\n      break;\n    case 2:\n      ret = { t: \"n\", v: ieee };\n      break;\n    case 3:\n      ret = { t: \"s\", v: sst[sidx] };\n      break;\n    case 5:\n      ret = { t: \"d\", v: dt };\n      break;\n    case 6:\n      ret = { t: \"b\", v: ieee > 0 };\n      break;\n    case 7:\n      ret = { t: \"n\", v: ieee / 86400 };\n      break;\n    case 8:\n      ret = { t: \"e\", v: 0 };\n      break;\n    case 9:\n      {\n        if (ridx > -1)\n          ret = { t: \"s\", v: rsst[ridx] };\n        else if (sidx > -1)\n          ret = { t: \"s\", v: sst[sidx] };\n        else if (!isNaN(ieee))\n          ret = { t: \"n\", v: ieee };\n        else\n          throw new Error(\"Unsupported cell type \".concat(buf.slice(0, 4)));\n      }\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf.slice(0, 4)));\n  }\n  return ret;\n}\nfunction parse_new_storage(buf, sst, rsst) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(8, true);\n  var data_offset = 12;\n  var ridx = -1, sidx = -1, d128 = NaN, ieee = NaN, dt = new Date(2001, 0, 1);\n  if (flags & 1) {\n    d128 = readDecimal128LE(buf, data_offset);\n    data_offset += 16;\n  }\n  if (flags & 2) {\n    ieee = dv.getFloat64(data_offset, true);\n    data_offset += 8;\n  }\n  if (flags & 4) {\n    dt.setTime(dt.getTime() + dv.getFloat64(data_offset, true) * 1e3);\n    data_offset += 8;\n  }\n  if (flags & 8) {\n    sidx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  if (flags & 16) {\n    ridx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  var ret;\n  switch (buf[1]) {\n    case 0:\n      break;\n    case 2:\n      ret = { t: \"n\", v: d128 };\n      break;\n    case 3:\n      ret = { t: \"s\", v: sst[sidx] };\n      break;\n    case 5:\n      ret = { t: \"d\", v: dt };\n      break;\n    case 6:\n      ret = { t: \"b\", v: ieee > 0 };\n      break;\n    case 7:\n      ret = { t: \"n\", v: ieee / 86400 };\n      break;\n    case 8:\n      ret = { t: \"e\", v: 0 };\n      break;\n    case 9:\n      {\n        if (ridx > -1)\n          ret = { t: \"s\", v: rsst[ridx] };\n        else\n          throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(flags & 31, \" : \").concat(buf.slice(0, 4)));\n      }\n      break;\n    case 10:\n      ret = { t: \"n\", v: d128 };\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(flags & 31, \" : \").concat(buf.slice(0, 4)));\n  }\n  return ret;\n}\nfunction write_new_storage(cell, sst) {\n  var out = new Uint8Array(32), dv = u8_to_dataview(out), l = 12, flags = 0;\n  out[0] = 5;\n  switch (cell.t) {\n    case \"n\":\n      out[1] = 2;\n      writeDecimal128LE(out, l, cell.v);\n      flags |= 1;\n      l += 16;\n      break;\n    case \"b\":\n      out[1] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      flags |= 2;\n      l += 8;\n      break;\n    case \"s\":\n      if (sst.indexOf(cell.v) == -1)\n        throw new Error(\"Value \".concat(cell.v, \" missing from SST!\"));\n      out[1] = 3;\n      dv.setUint32(l, sst.indexOf(cell.v), true);\n      flags |= 8;\n      l += 4;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(8, flags, true);\n  return out.slice(0, l);\n}\nfunction write_old_storage(cell, sst) {\n  var out = new Uint8Array(32), dv = u8_to_dataview(out), l = 12, flags = 0;\n  out[0] = 3;\n  switch (cell.t) {\n    case \"n\":\n      out[2] = 2;\n      dv.setFloat64(l, cell.v, true);\n      flags |= 32;\n      l += 8;\n      break;\n    case \"b\":\n      out[2] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      flags |= 32;\n      l += 8;\n      break;\n    case \"s\":\n      if (sst.indexOf(cell.v) == -1)\n        throw new Error(\"Value \".concat(cell.v, \" missing from SST!\"));\n      out[2] = 3;\n      dv.setUint32(l, sst.indexOf(cell.v), true);\n      flags |= 16;\n      l += 4;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(4, flags, true);\n  return out.slice(0, l);\n}\nfunction parse_cell_storage(buf, sst, rsst) {\n  switch (buf[0]) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n      return parse_old_storage(buf, sst, rsst, buf[0]);\n    case 5:\n      return parse_new_storage(buf, sst, rsst);\n    default:\n      throw new Error(\"Unsupported payload version \".concat(buf[0]));\n  }\n}\nfunction parse_TSP_Reference(buf) {\n  var pb = parse_shallow(buf);\n  return parse_varint49(pb[1][0].data);\n}\nfunction write_TSP_Reference(idx) {\n  var out = [];\n  out[1] = [{ type: 0, data: write_varint49(idx) }];\n  return write_shallow(out);\n}\nfunction parse_TST_TableDataList(M, root) {\n  var pb = parse_shallow(root.data);\n  var type = varint_to_i32(pb[1][0].data);\n  var entries = pb[3];\n  var data = [];\n  (entries || []).forEach(function(entry) {\n    var le = parse_shallow(entry.data);\n    var key = varint_to_i32(le[1][0].data) >>> 0;\n    switch (type) {\n      case 1:\n        data[key] = u8str(le[3][0].data);\n        break;\n      case 8:\n        {\n          var rt = M[parse_TSP_Reference(le[9][0].data)][0];\n          var rtp = parse_shallow(rt.data);\n          var rtpref = M[parse_TSP_Reference(rtp[1][0].data)][0];\n          var mtype = varint_to_i32(rtpref.meta[1][0].data);\n          if (mtype != 2001)\n            throw new Error(\"2000 unexpected reference to \".concat(mtype));\n          var tswpsa = parse_shallow(rtpref.data);\n          data[key] = tswpsa[3].map(function(x) {\n            return u8str(x.data);\n          }).join(\"\");\n        }\n        break;\n    }\n  });\n  return data;\n}\nfunction parse_TST_TileRowInfo(u8, type) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;\n  var pb = parse_shallow(u8);\n  var R = varint_to_i32(pb[1][0].data) >>> 0;\n  var cnt = varint_to_i32(pb[2][0].data) >>> 0;\n  var wide_offsets = ((_b = (_a = pb[8]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data) && varint_to_i32(pb[8][0].data) > 0 || false;\n  var used_storage_u8, used_storage;\n  if (((_d = (_c = pb[7]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && type != 0) {\n    used_storage_u8 = (_f = (_e = pb[7]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data;\n    used_storage = (_h = (_g = pb[6]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data;\n  } else if (((_j = (_i = pb[4]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) && type != 1) {\n    used_storage_u8 = (_l = (_k = pb[4]) == null ? void 0 : _k[0]) == null ? void 0 : _l.data;\n    used_storage = (_n = (_m = pb[3]) == null ? void 0 : _m[0]) == null ? void 0 : _n.data;\n  } else\n    throw \"NUMBERS Tile missing \".concat(type, \" cell storage\");\n  var width = wide_offsets ? 4 : 1;\n  var used_storage_offsets = u8_to_dataview(used_storage_u8);\n  var offsets = [];\n  for (var C = 0; C < used_storage_u8.length / 2; ++C) {\n    var off = used_storage_offsets.getUint16(C * 2, true);\n    if (off < 65535)\n      offsets.push([C, off]);\n  }\n  if (offsets.length != cnt)\n    throw \"Expected \".concat(cnt, \" cells, found \").concat(offsets.length);\n  var cells = [];\n  for (C = 0; C < offsets.length - 1; ++C)\n    cells[offsets[C][0]] = used_storage.subarray(offsets[C][1] * width, offsets[C + 1][1] * width);\n  if (offsets.length >= 1)\n    cells[offsets[offsets.length - 1][0]] = used_storage.subarray(offsets[offsets.length - 1][1] * width);\n  return { R: R, cells: cells };\n}\nfunction parse_TST_Tile(M, root) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var storage = ((_a = pb == null ? void 0 : pb[7]) == null ? void 0 : _a[0]) ? varint_to_i32(pb[7][0].data) >>> 0 > 0 ? 1 : 0 : -1;\n  var ri = mappa(pb[5], function(u8) {\n    return parse_TST_TileRowInfo(u8, storage);\n  });\n  return {\n    nrows: varint_to_i32(pb[4][0].data) >>> 0,\n    data: ri.reduce(function(acc, x) {\n      if (!acc[x.R])\n        acc[x.R] = [];\n      x.cells.forEach(function(cell, C) {\n        if (acc[x.R][C])\n          throw new Error(\"Duplicate cell r=\".concat(x.R, \" c=\").concat(C));\n        acc[x.R][C] = cell;\n      });\n      return acc;\n    }, [])\n  };\n}\nfunction parse_TST_TableModelArchive(M, root, ws) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var range = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };\n  range.e.r = (varint_to_i32(pb[6][0].data) >>> 0) - 1;\n  if (range.e.r < 0)\n    throw new Error(\"Invalid row varint \".concat(pb[6][0].data));\n  range.e.c = (varint_to_i32(pb[7][0].data) >>> 0) - 1;\n  if (range.e.c < 0)\n    throw new Error(\"Invalid col varint \".concat(pb[7][0].data));\n  ws[\"!ref\"] = encode_range(range);\n  var store = parse_shallow(pb[4][0].data);\n  var sst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[4][0].data)][0]);\n  var rsst = ((_a = store[17]) == null ? void 0 : _a[0]) ? parse_TST_TableDataList(M, M[parse_TSP_Reference(store[17][0].data)][0]) : [];\n  var tile = parse_shallow(store[3][0].data);\n  var _R = 0;\n  tile[1].forEach(function(t) {\n    var tl = parse_shallow(t.data);\n    var ref = M[parse_TSP_Reference(tl[2][0].data)][0];\n    var mtype = varint_to_i32(ref.meta[1][0].data);\n    if (mtype != 6002)\n      throw new Error(\"6001 unexpected reference to \".concat(mtype));\n    var _tile = parse_TST_Tile(M, ref);\n    _tile.data.forEach(function(row, R) {\n      row.forEach(function(buf, C) {\n        var addr = encode_cell({ r: _R + R, c: C });\n        var res = parse_cell_storage(buf, sst, rsst);\n        if (res)\n          ws[addr] = res;\n      });\n    });\n    _R += _tile.nrows;\n  });\n}\nfunction parse_TST_TableInfoArchive(M, root) {\n  var pb = parse_shallow(root.data);\n  var out = { \"!ref\": \"A1\" };\n  var tableref = M[parse_TSP_Reference(pb[2][0].data)];\n  var mtype = varint_to_i32(tableref[0].meta[1][0].data);\n  if (mtype != 6001)\n    throw new Error(\"6000 unexpected reference to \".concat(mtype));\n  parse_TST_TableModelArchive(M, tableref[0], out);\n  return out;\n}\nfunction parse_TN_SheetArchive(M, root) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var out = {\n    name: ((_a = pb[1]) == null ? void 0 : _a[0]) ? u8str(pb[1][0].data) : \"\",\n    sheets: []\n  };\n  var shapeoffs = mappa(pb[2], parse_TSP_Reference);\n  shapeoffs.forEach(function(off) {\n    M[off].forEach(function(m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 6e3)\n        out.sheets.push(parse_TST_TableInfoArchive(M, m));\n    });\n  });\n  return out;\n}\nfunction parse_TN_DocumentArchive(M, root) {\n  var out = book_new();\n  var pb = parse_shallow(root.data);\n  var sheetoffs = mappa(pb[1], parse_TSP_Reference);\n  sheetoffs.forEach(function(off) {\n    M[off].forEach(function(m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 2) {\n        var root2 = parse_TN_SheetArchive(M, m);\n        root2.sheets.forEach(function(sheet, idx) {\n          book_append_sheet(out, sheet, idx == 0 ? root2.name : root2.name + \"_\" + idx, true);\n        });\n      }\n    });\n  });\n  if (out.SheetNames.length == 0)\n    throw new Error(\"Empty NUMBERS file\");\n  return out;\n}\nfunction parse_numbers_iwa(cfb) {\n  var _a, _b, _c, _d;\n  var M = {}, indices = [];\n  cfb.FullPaths.forEach(function(p) {\n    if (p.match(/\\.iwpv2/))\n      throw new Error(\"Unsupported password protection\");\n  });\n  cfb.FileIndex.forEach(function(s) {\n    if (!s.name.match(/\\.iwa$/))\n      return;\n    var o;\n    try {\n      o = decompress_iwa_file(s.content);\n    } catch (e) {\n      return console.log(\"?? \" + s.content.length + \" \" + (e.message || e));\n    }\n    var packets;\n    try {\n      packets = parse_iwa_file(o);\n    } catch (e) {\n      return console.log(\"## \" + (e.message || e));\n    }\n    packets.forEach(function(packet) {\n      M[packet.id] = packet.messages;\n      indices.push(packet.id);\n    });\n  });\n  if (!indices.length)\n    throw new Error(\"File has no messages\");\n  var docroot = ((_d = (_c = (_b = (_a = M == null ? void 0 : M[1]) == null ? void 0 : _a[0]) == null ? void 0 : _b.meta) == null ? void 0 : _c[1]) == null ? void 0 : _d[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1 && M[1][0];\n  if (!docroot)\n    indices.forEach(function(idx) {\n      M[idx].forEach(function(iwam) {\n        var mtype = varint_to_i32(iwam.meta[1][0].data) >>> 0;\n        if (mtype == 1) {\n          if (!docroot)\n            docroot = iwam;\n          else\n            throw new Error(\"Document has multiple roots\");\n        }\n      });\n    });\n  if (!docroot)\n    throw new Error(\"Cannot find Document root\");\n  return parse_TN_DocumentArchive(M, docroot);\n}\nfunction write_tile_row(tri, data, SST) {\n  var _a, _b, _c, _d;\n  if (!((_a = tri[6]) == null ? void 0 : _a[0]) || !((_b = tri[7]) == null ? void 0 : _b[0]))\n    throw \"Mutation only works on post-BNC storages!\";\n  var wide_offsets = ((_d = (_c = tri[8]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && varint_to_i32(tri[8][0].data) > 0 || false;\n  if (wide_offsets)\n    throw \"Math only works with normal offsets\";\n  var cnt = 0;\n  var dv = u8_to_dataview(tri[7][0].data), last_offset = 0, cell_storage = [];\n  var _dv = u8_to_dataview(tri[4][0].data), _last_offset = 0, _cell_storage = [];\n  for (var C = 0; C < data.length; ++C) {\n    if (data[C] == null) {\n      dv.setUint16(C * 2, 65535, true);\n      _dv.setUint16(C * 2, 65535);\n      continue;\n    }\n    dv.setUint16(C * 2, last_offset, true);\n    _dv.setUint16(C * 2, _last_offset, true);\n    var celload, _celload;\n    switch (typeof data[C]) {\n      case \"string\":\n        celload = write_new_storage({ t: \"s\", v: data[C] }, SST);\n        _celload = write_old_storage({ t: \"s\", v: data[C] }, SST);\n        break;\n      case \"number\":\n        celload = write_new_storage({ t: \"n\", v: data[C] }, SST);\n        _celload = write_old_storage({ t: \"n\", v: data[C] }, SST);\n        break;\n      case \"boolean\":\n        celload = write_new_storage({ t: \"b\", v: data[C] }, SST);\n        _celload = write_old_storage({ t: \"b\", v: data[C] }, SST);\n        break;\n      default:\n        throw new Error(\"Unsupported value \" + data[C]);\n    }\n    cell_storage.push(celload);\n    last_offset += celload.length;\n    _cell_storage.push(_celload);\n    _last_offset += _celload.length;\n    ++cnt;\n  }\n  tri[2][0].data = write_varint49(cnt);\n  for (; C < tri[7][0].data.length / 2; ++C) {\n    dv.setUint16(C * 2, 65535, true);\n    _dv.setUint16(C * 2, 65535, true);\n  }\n  tri[6][0].data = u8concat(cell_storage);\n  tri[3][0].data = u8concat(_cell_storage);\n  return cnt;\n}\nfunction write_numbers_iwa(wb, opts) {\n  if (!opts || !opts.numbers)\n    throw new Error(\"Must pass a `numbers` option -- check the README\");\n  var ws = wb.Sheets[wb.SheetNames[0]];\n  if (wb.SheetNames.length > 1)\n    console.error(\"The Numbers writer currently writes only the first table\");\n  var range = decode_range(ws[\"!ref\"]);\n  range.s.r = range.s.c = 0;\n  var trunc = false;\n  if (range.e.c > 9) {\n    trunc = true;\n    range.e.c = 9;\n  }\n  if (range.e.r > 49) {\n    trunc = true;\n    range.e.r = 49;\n  }\n  if (trunc)\n    console.error(\"The Numbers writer is currently limited to \".concat(encode_range(range)));\n  var data = sheet_to_json(ws, { range: range, header: 1 });\n  var SST = [\"~Sh33tJ5~\"];\n  data.forEach(function(row) {\n    return row.forEach(function(cell) {\n      if (typeof cell == \"string\")\n        SST.push(cell);\n    });\n  });\n  var dependents = {};\n  var indices = [];\n  var cfb = CFB.read(opts.numbers, { type: \"base64\" });\n  cfb.FileIndex.map(function(fi, idx) {\n    return [fi, cfb.FullPaths[idx]];\n  }).forEach(function(row) {\n    var fi = row[0], fp = row[1];\n    if (fi.type != 2)\n      return;\n    if (!fi.name.match(/\\.iwa/))\n      return;\n    var old_content = fi.content;\n    var raw1 = decompress_iwa_file(old_content);\n    var x2 = parse_iwa_file(raw1);\n    x2.forEach(function(packet2) {\n      indices.push(packet2.id);\n      dependents[packet2.id] = { deps: [], location: fp, type: varint_to_i32(packet2.messages[0].meta[1][0].data) };\n    });\n  });\n  indices.sort(function(x2, y2) {\n    return x2 - y2;\n  });\n  var indices_varint = indices.filter(function(x2) {\n    return x2 > 1;\n  }).map(function(x2) {\n    return [x2, write_varint49(x2)];\n  });\n  cfb.FileIndex.map(function(fi, idx) {\n    return [fi, cfb.FullPaths[idx]];\n  }).forEach(function(row) {\n    var fi = row[0], fp = row[1];\n    if (!fi.name.match(/\\.iwa/))\n      return;\n    var x2 = parse_iwa_file(decompress_iwa_file(fi.content));\n    x2.forEach(function(ia) {\n      ia.messages.forEach(function(m) {\n        indices_varint.forEach(function(ivi) {\n          if (ia.messages.some(function(mess) {\n            return varint_to_i32(mess.meta[1][0].data) != 11006 && u8contains(mess.data, ivi[1]);\n          })) {\n            dependents[ivi[0]].deps.push(ia.id);\n          }\n        });\n      });\n    });\n  });\n  function get_unique_msgid() {\n    for (var i = 927262; i < 2e6; ++i)\n      if (!dependents[i])\n        return i;\n    throw new Error(\"Too many messages\");\n  }\n  var entry = CFB.find(cfb, dependents[1].location);\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var docroot;\n  for (var xi = 0; xi < x.length; ++xi) {\n    var packet = x[xi];\n    if (packet.id == 1)\n      docroot = packet;\n  }\n  var sheetrootref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[1][0].data);\n  entry = CFB.find(cfb, dependents[sheetrootref].location);\n  x = parse_iwa_file(decompress_iwa_file(entry.content));\n  for (xi = 0; xi < x.length; ++xi) {\n    packet = x[xi];\n    if (packet.id == sheetrootref)\n      docroot = packet;\n  }\n  sheetrootref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[2][0].data);\n  entry = CFB.find(cfb, dependents[sheetrootref].location);\n  x = parse_iwa_file(decompress_iwa_file(entry.content));\n  for (xi = 0; xi < x.length; ++xi) {\n    packet = x[xi];\n    if (packet.id == sheetrootref)\n      docroot = packet;\n  }\n  sheetrootref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[2][0].data);\n  entry = CFB.find(cfb, dependents[sheetrootref].location);\n  x = parse_iwa_file(decompress_iwa_file(entry.content));\n  for (xi = 0; xi < x.length; ++xi) {\n    packet = x[xi];\n    if (packet.id == sheetrootref)\n      docroot = packet;\n  }\n  var pb = parse_shallow(docroot.messages[0].data);\n  {\n    pb[6][0].data = write_varint49(range.e.r + 1);\n    pb[7][0].data = write_varint49(range.e.c + 1);\n    var cruidsref = parse_TSP_Reference(pb[46][0].data);\n    var oldbucket = CFB.find(cfb, dependents[cruidsref].location);\n    var _x = parse_iwa_file(decompress_iwa_file(oldbucket.content));\n    {\n      for (var j = 0; j < _x.length; ++j) {\n        if (_x[j].id == cruidsref)\n          break;\n      }\n      if (_x[j].id != cruidsref)\n        throw \"Bad ColumnRowUIDMapArchive\";\n      var cruids = parse_shallow(_x[j].messages[0].data);\n      cruids[1] = [];\n      cruids[2] = [], cruids[3] = [];\n      for (var C = 0; C <= range.e.c; ++C) {\n        var uuid = [];\n        uuid[1] = uuid[2] = [{ type: 0, data: write_varint49(C + 420690) }];\n        cruids[1].push({ type: 2, data: write_shallow(uuid) });\n        cruids[2].push({ type: 0, data: write_varint49(C) });\n        cruids[3].push({ type: 0, data: write_varint49(C) });\n      }\n      cruids[4] = [];\n      cruids[5] = [], cruids[6] = [];\n      for (var R = 0; R <= range.e.r; ++R) {\n        uuid = [];\n        uuid[1] = uuid[2] = [{ type: 0, data: write_varint49(R + 726270) }];\n        cruids[4].push({ type: 2, data: write_shallow(uuid) });\n        cruids[5].push({ type: 0, data: write_varint49(R) });\n        cruids[6].push({ type: 0, data: write_varint49(R) });\n      }\n      _x[j].messages[0].data = write_shallow(cruids);\n    }\n    oldbucket.content = compress_iwa_file(write_iwa_file(_x));\n    oldbucket.size = oldbucket.content.length;\n    delete pb[46];\n    var store = parse_shallow(pb[4][0].data);\n    {\n      store[7][0].data = write_varint49(range.e.r + 1);\n      var row_headers = parse_shallow(store[1][0].data);\n      var row_header_ref = parse_TSP_Reference(row_headers[2][0].data);\n      oldbucket = CFB.find(cfb, dependents[row_header_ref].location);\n      _x = parse_iwa_file(decompress_iwa_file(oldbucket.content));\n      {\n        if (_x[0].id != row_header_ref)\n          throw \"Bad HeaderStorageBucket\";\n        var base_bucket = parse_shallow(_x[0].messages[0].data);\n        for (R = 0; R < data.length; ++R) {\n          var _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(R);\n          _bucket[4][0].data = write_varint49(data[R].length);\n          base_bucket[2][R] = { type: base_bucket[2][0].type, data: write_shallow(_bucket) };\n        }\n        _x[0].messages[0].data = write_shallow(base_bucket);\n      }\n      oldbucket.content = compress_iwa_file(write_iwa_file(_x));\n      oldbucket.size = oldbucket.content.length;\n      var col_header_ref = parse_TSP_Reference(store[2][0].data);\n      oldbucket = CFB.find(cfb, dependents[col_header_ref].location);\n      _x = parse_iwa_file(decompress_iwa_file(oldbucket.content));\n      {\n        if (_x[0].id != col_header_ref)\n          throw \"Bad HeaderStorageBucket\";\n        base_bucket = parse_shallow(_x[0].messages[0].data);\n        for (C = 0; C <= range.e.c; ++C) {\n          _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(C);\n          _bucket[4][0].data = write_varint49(range.e.r + 1);\n          base_bucket[2][C] = { type: base_bucket[2][0].type, data: write_shallow(_bucket) };\n        }\n        _x[0].messages[0].data = write_shallow(base_bucket);\n      }\n      oldbucket.content = compress_iwa_file(write_iwa_file(_x));\n      oldbucket.size = oldbucket.content.length;\n      var sstref = parse_TSP_Reference(store[4][0].data);\n      (function() {\n        var sentry = CFB.find(cfb, dependents[sstref].location);\n        var sx = parse_iwa_file(decompress_iwa_file(sentry.content));\n        var sstroot;\n        for (var sxi = 0; sxi < sx.length; ++sxi) {\n          var packet2 = sx[sxi];\n          if (packet2.id == sstref)\n            sstroot = packet2;\n        }\n        var sstdata = parse_shallow(sstroot.messages[0].data);\n        {\n          sstdata[3] = [];\n          var newsst = [];\n          SST.forEach(function(str, i) {\n            newsst[1] = [{ type: 0, data: write_varint49(i) }];\n            newsst[2] = [{ type: 0, data: write_varint49(1) }];\n            newsst[3] = [{ type: 2, data: stru8(str) }];\n            sstdata[3].push({ type: 2, data: write_shallow(newsst) });\n          });\n        }\n        sstroot.messages[0].data = write_shallow(sstdata);\n        var sy = write_iwa_file(sx);\n        var raw32 = compress_iwa_file(sy);\n        sentry.content = raw32;\n        sentry.size = sentry.content.length;\n      })();\n      var tile = parse_shallow(store[3][0].data);\n      {\n        var t = tile[1][0];\n        delete tile[2];\n        var tl = parse_shallow(t.data);\n        {\n          var tileref = parse_TSP_Reference(tl[2][0].data);\n          (function() {\n            var tentry = CFB.find(cfb, dependents[tileref].location);\n            var tx = parse_iwa_file(decompress_iwa_file(tentry.content));\n            var tileroot;\n            for (var sxi = 0; sxi < tx.length; ++sxi) {\n              var packet2 = tx[sxi];\n              if (packet2.id == tileref)\n                tileroot = packet2;\n            }\n            var tiledata = parse_shallow(tileroot.messages[0].data);\n            {\n              delete tiledata[6];\n              delete tile[7];\n              var rowload = new Uint8Array(tiledata[5][0].data);\n              tiledata[5] = [];\n              var cnt = 0;\n              for (var R2 = 0; R2 <= range.e.r; ++R2) {\n                var tilerow = parse_shallow(rowload);\n                cnt += write_tile_row(tilerow, data[R2], SST);\n                tilerow[1][0].data = write_varint49(R2);\n                tiledata[5].push({ data: write_shallow(tilerow), type: 2 });\n              }\n              tiledata[1] = [{ type: 0, data: write_varint49(range.e.c + 1) }];\n              tiledata[2] = [{ type: 0, data: write_varint49(range.e.r + 1) }];\n              tiledata[3] = [{ type: 0, data: write_varint49(cnt) }];\n              tiledata[4] = [{ type: 0, data: write_varint49(range.e.r + 1) }];\n            }\n            tileroot.messages[0].data = write_shallow(tiledata);\n            var ty = write_iwa_file(tx);\n            var raw32 = compress_iwa_file(ty);\n            tentry.content = raw32;\n            tentry.size = tentry.content.length;\n          })();\n        }\n        t.data = write_shallow(tl);\n      }\n      store[3][0].data = write_shallow(tile);\n    }\n    pb[4][0].data = write_shallow(store);\n  }\n  docroot.messages[0].data = write_shallow(pb);\n  var y = write_iwa_file(x);\n  var raw3 = compress_iwa_file(y);\n  entry.content = raw3;\n  entry.size = entry.content.length;\n  return cfb;\n}\nfunction fix_opts_func(defaults/*:Array<Array<any> >*/)/*:{(o:any):void}*/ {\n\treturn function fix_opts(opts) {\n\t\tfor(var i = 0; i != defaults.length; ++i) {\n\t\t\tvar d = defaults[i];\n\t\t\tif(opts[d[0]] === undefined) opts[d[0]] = d[1];\n\t\t\tif(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n\t\t}\n\t};\n}\n\nfunction fix_read_opts(opts) {\nfix_opts_func([\n\t['cellNF', false], /* emit cell number format string as .z */\n\t['cellHTML', true], /* emit html string as .h */\n\t['cellFormula', true], /* emit formulae as .f */\n\t['cellStyles', false], /* emits style/theme as .s */\n\t['cellText', true], /* emit formatted text as .w */\n\t['cellDates', false], /* emit date cells with type `d` */\n\n\t['sheetStubs', false], /* emit empty cells */\n\t['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\n\n\t['bookDeps', false], /* parse calculation chains */\n\t['bookSheets', false], /* only try to get sheet names (no Sheets) */\n\t['bookProps', false], /* only try to get properties (no Sheets) */\n\t['bookFiles', false], /* include raw file structure (keys, files, cfb) */\n\t['bookVBA', false], /* include vba raw data (vbaraw) */\n\n\t['password',''], /* password */\n\t['WTF', false] /* WTF mode (throws errors) */\n])(opts);\n}\n\nfunction fix_write_opts(opts) {\nfix_opts_func([\n\t['cellDates', false], /* write date cells with type `d` */\n\n\t['bookSST', false], /* Generate Shared String Table */\n\n\t['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\n\n\t['compression', false], /* Use file compression */\n\n\t['WTF', false] /* WTF mode (throws errors) */\n])(opts);\n}\nfunction get_sheet_type(n/*:string*/)/*:string*/ {\n\tif(RELS.WS.indexOf(n) > -1) return \"sheet\";\n\tif(RELS.CS && n == RELS.CS) return \"chart\";\n\tif(RELS.DS && n == RELS.DS) return \"dialog\";\n\tif(RELS.MS && n == RELS.MS) return \"macro\";\n\treturn (n && n.length) ? n : \"sheet\";\n}\nfunction safe_parse_wbrels(wbrels, sheets) {\n\tif(!wbrels) return 0;\n\ttry {\n\t\twbrels = sheets.map(function pwbr(w) { if(!w.id) w.id = w.strRelID; return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)]; });\n\t} catch(e) { return null; }\n\treturn !wbrels || wbrels.length === 0 ? null : wbrels;\n}\n\nfunction safe_parse_sheet(zip, path/*:string*/, relsPath/*:string*/, sheet, idx/*:number*/, sheetRels, sheets, stype/*:string*/, opts, wb, themes, styles) {\n\ttry {\n\t\tsheetRels[sheet]=parse_rels(getzipstr(zip, relsPath, true), path);\n\t\tvar data = getzipdata(zip, path);\n\t\tvar _ws;\n\t\tswitch(stype) {\n\t\t\tcase 'sheet':  _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'chart':  _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n\t\t\t\tif(!_ws || !_ws['!drawel']) break;\n\t\t\t\tvar dfile = resolve_path(_ws['!drawel'].Target, path);\n\t\t\t\tvar drelsp = get_rels_path(dfile);\n\t\t\t\tvar draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\n\t\t\t\tvar chartp = resolve_path(draw, dfile);\n\t\t\t\tvar crelsp = get_rels_path(chartp);\n\t\t\t\t_ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);\n\t\t\t\tbreak;\n\t\t\tcase 'macro':  _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'dialog': _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tdefault: throw new Error(\"Unrecognized sheet type \" + stype);\n\t\t}\n\t\tsheets[sheet] = _ws;\n\n\t\t/* scan rels for comments and threaded comments */\n\t\tvar tcomments = [];\n\t\tif(sheetRels && sheetRels[sheet]) keys(sheetRels[sheet]).forEach(function(n) {\n\t\t\tvar dfile = \"\";\n\t\t\tif(sheetRels[sheet][n].Type == RELS.CMNT) {\n\t\t\t\tdfile = resolve_path(sheetRels[sheet][n].Target, path);\n\t\t\t\tvar comments = parse_cmnt(getzipdata(zip, dfile, true), dfile, opts);\n\t\t\t\tif(!comments || !comments.length) return;\n\t\t\t\tsheet_insert_comments(_ws, comments, false);\n\t\t\t}\n\t\t\tif(sheetRels[sheet][n].Type == RELS.TCMNT) {\n\t\t\t\tdfile = resolve_path(sheetRels[sheet][n].Target, path);\n\t\t\t\ttcomments = tcomments.concat(parse_tcmnt_xml(getzipdata(zip, dfile, true), opts));\n\t\t\t}\n\t\t});\n\t\tif(tcomments && tcomments.length) sheet_insert_comments(_ws, tcomments, true, opts.people || []);\n\t} catch(e) { if(opts.WTF) throw e; }\n}\n\nfunction strip_front_slash(x/*:string*/)/*:string*/ { return x.charAt(0) == '/' ? x.slice(1) : x; }\n\nfunction parse_zip(zip/*:ZIP*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tmake_ssf();\n\topts = opts || {};\n\tfix_read_opts(opts);\n\n\t/* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\n\t/* UOC */\n\tif(safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\n\t/* Numbers */\n\tif(safegetzipfile(zip, 'Index/Document.iwa')) {\n\t\tif(typeof Uint8Array == \"undefined\") throw new Error('NUMBERS file parsing requires Uint8Array support');\n\t\tif(typeof parse_numbers_iwa != \"undefined\") {\n\t\t\tif(zip.FileIndex) return parse_numbers_iwa(zip);\n\t\t\tvar _zip = CFB.utils.cfb_new();\n\t\t\tzipentries(zip).forEach(function(e) { zip_add_file(_zip, e, getzipbin(zip, e)); });\n\t\t\treturn parse_numbers_iwa(_zip);\n\t\t}\n\t\tthrow new Error('Unsupported NUMBERS file');\n\t}\n\tif(!safegetzipfile(zip, '[Content_Types].xml')) {\n\t\tif(safegetzipfile(zip, 'index.xml.gz')) throw new Error('Unsupported NUMBERS 08 file');\n\t\tif(safegetzipfile(zip, 'index.xml')) throw new Error('Unsupported NUMBERS 09 file');\n\t\tthrow new Error('Unsupported ZIP file');\n\t}\n\n\tvar entries = zipentries(zip);\n\tvar dir = parse_ct((getzipstr(zip, '[Content_Types].xml')/*:?any*/));\n\tvar xlsb = false;\n\tvar sheets, binname;\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.xml\";\n\t\tif(getzipdata(zip,binname, true)) dir.workbooks.push(binname);\n\t}\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.bin\";\n\t\tif(!getzipdata(zip,binname,true)) throw new Error(\"Could not find workbook\");\n\t\tdir.workbooks.push(binname);\n\t\txlsb = true;\n\t}\n\tif(dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\n\n\tvar themes = ({}/*:any*/);\n\tvar styles = ({}/*:any*/);\n\tif(!opts.bookSheets && !opts.bookProps) {\n\t\tstrs = [];\n\t\tif(dir.sst) try { strs=parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts); } catch(e) { if(opts.WTF) throw e; }\n\n\t\tif(opts.cellStyles && dir.themes.length) themes = parse_theme(getzipstr(zip, dir.themes[0].replace(/^\\//,''), true)||\"\",dir.themes[0], opts);\n\n\t\tif(dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\n\t}\n\n\t/*var externbooks = */dir.links.map(function(link) {\n\t\ttry {\n\t\t\tvar rels = parse_rels(getzipstr(zip, get_rels_path(strip_front_slash(link))), link);\n\t\t\treturn parse_xlink(getzipdata(zip, strip_front_slash(link)), rels, link, opts);\n\t\t} catch(e) {}\n\t});\n\n\tvar wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\n\n\tvar props = {}, propdata = \"\";\n\n\tif(dir.coreprops.length) {\n\t\tpropdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\n\t\tif(propdata) props = parse_core_props(propdata);\n\t\tif(dir.extprops.length !== 0) {\n\t\t\tpropdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\n\t\t\tif(propdata) parse_ext_props(propdata, props, opts);\n\t\t}\n\t}\n\n\tvar custprops = {};\n\tif(!opts.bookSheets || opts.bookProps) {\n\t\tif (dir.custprops.length !== 0) {\n\t\t\tpropdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\n\t\t\tif(propdata) custprops = parse_cust_props(propdata, opts);\n\t\t}\n\t}\n\n\tvar out = ({}/*:any*/);\n\tif(opts.bookSheets || opts.bookProps) {\n\t\tif(wb.Sheets) sheets = wb.Sheets.map(function pluck(x){ return x.name; });\n\t\telse if(props.Worksheets && props.SheetNames.length > 0) sheets=props.SheetNames;\n\t\tif(opts.bookProps) { out.Props = props; out.Custprops = custprops; }\n\t\tif(opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\n\t\tif(opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\n\t}\n\tsheets = {};\n\n\tvar deps = {};\n\tif(opts.bookDeps && dir.calcchain) deps=parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)),dir.calcchain,opts);\n\n\tvar i=0;\n\tvar sheetRels = ({}/*:any*/);\n\tvar path, relsPath;\n\n\t{\n\t\tvar wbsheets = wb.Sheets;\n\t\tprops.Worksheets = wbsheets.length;\n\t\tprops.SheetNames = [];\n\t\tfor(var j = 0; j != wbsheets.length; ++j) {\n\t\t\tprops.SheetNames[j] = wbsheets[j].name;\n\t\t}\n\t}\n\n\tvar wbext = xlsb ? \"bin\" : \"xml\";\n\tvar wbrelsi = dir.workbooks[0].lastIndexOf(\"/\");\n\tvar wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi+1) + \"_rels/\" + dir.workbooks[0].slice(wbrelsi+1) + \".rels\").replace(/^\\//,\"\");\n\tif(!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\n\tvar wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile.replace(/_rels.*/, \"s5s\"));\n\n\tif((dir.metadata || []).length >= 1) {\n\t\t/* TODO: MDX and other types of metadata */\n\t\topts.xlmeta = parse_xlmeta(getzipdata(zip, strip_front_slash(dir.metadata[0])),dir.metadata[0],opts);\n\t}\n\n\tif((dir.people || []).length >= 1) {\n\t\topts.people = parse_people_xml(getzipdata(zip, strip_front_slash(dir.people[0])),opts);\n\t}\n\n\tif(wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\n\n\t/* Numbers iOS hack */\n\tvar nmode = (getzipdata(zip,\"xl/worksheets/sheet.xml\",true))?1:0;\n\twsloop: for(i = 0; i != props.Worksheets; ++i) {\n\t\tvar stype = \"sheet\";\n\t\tif(wbrels && wbrels[i]) {\n\t\t\tpath = 'xl/' + (wbrels[i][1]).replace(/[\\/]?xl\\//, \"\");\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrels[i][1];\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\\/.*$/,\"\") + wbrels[i][1];\n\t\t\tstype = wbrels[i][2];\n\t\t} else {\n\t\t\tpath = 'xl/worksheets/sheet'+(i+1-nmode)+\".\" + wbext;\n\t\t\tpath = path.replace(/sheet0\\./,\"sheet.\");\n\t\t}\n\t\trelsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\n\t\tif(opts && opts.sheets != null) switch(typeof opts.sheets) {\n\t\t\tcase \"number\": if(i != opts.sheets) continue wsloop; break;\n\t\t\tcase \"string\": if(props.SheetNames[i].toLowerCase() != opts.sheets.toLowerCase()) continue wsloop; break;\n\t\t\tdefault: if(Array.isArray && Array.isArray(opts.sheets)) {\n\t\t\t\tvar snjseen = false;\n\t\t\t\tfor(var snj = 0; snj != opts.sheets.length; ++snj) {\n\t\t\t\t\tif(typeof opts.sheets[snj] == \"number\" && opts.sheets[snj] == i) snjseen=1;\n\t\t\t\t\tif(typeof opts.sheets[snj] == \"string\" && opts.sheets[snj].toLowerCase() == props.SheetNames[i].toLowerCase()) snjseen = 1;\n\t\t\t\t}\n\t\t\t\tif(!snjseen) continue wsloop;\n\t\t\t}\n\t\t}\n\t\tsafe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\n\t}\n\n\tout = ({\n\t\tDirectory: dir,\n\t\tWorkbook: wb,\n\t\tProps: props,\n\t\tCustprops: custprops,\n\t\tDeps: deps,\n\t\tSheets: sheets,\n\t\tSheetNames: props.SheetNames,\n\t\tStrings: strs,\n\t\tStyles: styles,\n\t\tThemes: themes,\n\t\tSSF: dup(table_fmt)\n\t}/*:any*/);\n\tif(opts && opts.bookFiles) {\n\t\tif(zip.files) {\n\t\t\tout.keys = entries;\n\t\t\tout.files = zip.files;\n\t\t} else {\n\t\t\tout.keys = [];\n\t\t\tout.files = {};\n\t\t\tzip.FullPaths.forEach(function(p, idx) {\n\t\t\t\tp = p.replace(/^Root Entry[\\/]/, \"\");\n\t\t\t\tout.keys.push(p);\n\t\t\t\tout.files[p] = zip.FileIndex[idx];\n\t\t\t});\n\t\t}\n\t}\n\tif(opts && opts.bookVBA) {\n\t\tif(dir.vba.length > 0) out.vbaraw = getzipdata(zip,strip_front_slash(dir.vba[0]),true);\n\t\telse if(dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin',true);\n\t}\n\treturn out;\n}\n\n/* [MS-OFFCRYPTO] 2.1.1 */\nfunction parse_xlsxcfb(cfb, _opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tvar f = 'Workbook', data = CFB.find(cfb, f);\n\ttry {\n\tf = '/!DataSpaces/Version';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var version = */parse_DataSpaceVersionInfo(data.content);\n\n\t/* 2.3.4.1 */\n\tf = '/!DataSpaces/DataSpaceMap';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar dsm = parse_DataSpaceMap(data.content);\n\tif(dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.2 */\n\tf = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar seds = parse_DataSpaceDefinition(data.content);\n\tif(seds.length != 1 || seds[0] != \"StrongEncryptionTransform\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.3 */\n\tf = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var hdr = */parse_Primary(data.content);\n\t} catch(e) {}\n\n\tf = '/EncryptionInfo';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar einfo = parse_EncryptionInfo(data.content);\n\n\t/* 2.3.4.4 */\n\tf = '/EncryptedPackage';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\n/*global decrypt_agile */\n/*:: declare var decrypt_agile:any; */\n\tif(einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\n/*global decrypt_std76 */\n/*:: declare var decrypt_std76:any; */\n\tif(einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\n\tthrow new Error(\"File is password-protected\");\n}\n\nfunction write_zip(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\tif(opts.bookType == \"ods\") return write_ods(wb, opts);\n\tif(opts.bookType == \"numbers\") return write_numbers_iwa(wb, opts);\n\tif(opts.bookType == \"xlsb\") return write_zip_xlsxb(wb, opts);\n\treturn write_zip_xlsx(wb, opts);\n}\n\n/* XLSX and XLSB writing are very similar.  Originally they were unified in one\n   export function.  This is horrible for tree shaking in the common case (most\n   applications need to export files in one format) so this function supports\n   both formats while write_zip_xlsx only handles XLSX */\nfunction write_zip_xlsxb(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\t_shapeid = 1024;\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = /*::((*/[]/*:: :any):SST)*/; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = opts.bookType == \"xlsb\" ? \"bin\" : \"xml\";\n\tvar vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\n\tvar zip = zip_new();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip_add_file(zip, f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n\t/*::if(!wb.Props) throw \"unreachable\"; */\n\tf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip_add_file(zip, f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\":\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip_add_file(zip, f, write_ws(rId-1, f, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tvar cf = \"\";\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tcf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip_add_file(zip, cf, write_cmnt(comments, cf, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_comments_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip_add_file(zip, f, write_sst(opts.Strings, f, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip_add_file(zip, f, write_wb(wb, f, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tzip_add_file(zip, f, write_theme(wb.Themes, opts));\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip_add_file(zip, f, write_sty(wb, f, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip_add_file(zip, f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tf = \"xl/metadata.\" + wbext;\n\tzip_add_file(zip, f, write_xlmeta(f));\n\tct.metadata.push(f);\n\tadd_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n\n\tzip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n\tzip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n\tzip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\n\nfunction write_zip_xlsx(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\t_shapeid = 1024;\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = /*::((*/[]/*:: :any):SST)*/; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = \"xml\";\n\tvar vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\n\tvar zip = zip_new();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip_add_file(zip, f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n\t/*::if(!wb.Props) throw \"unreachable\"; */\n\tf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip_add_file(zip, f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tvar people = [\"SheetJ5\"];\n\topts.tcid = 0;\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\":\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip_add_file(zip, f, write_ws_xml(rId-1, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tvar cf = \"\";\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tvar needtc = false;\n\t\t\t\tcomments.forEach(function(carr) {\n\t\t\t\t\tcarr[1].forEach(function(c) { if(c.T == true) needtc = true; });\n\t\t\t\t});\n\t\t\t\tif(needtc) {\n\t\t\t\t\tcf = \"xl/threadedComments/threadedComment\" + rId + \".\" + wbext;\n\t\t\t\t\tzip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));\n\t\t\t\t\tct.threadedcomments.push(cf);\n\t\t\t\t\tadd_rels(wsrels, -1, \"../threadedComments/threadedComment\" + rId + \".\" + wbext, RELS.TCMNT);\n\t\t\t\t}\n\n\t\t\t\tcf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip_add_file(zip, cf, write_comments_xml(comments, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_comments_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip_add_file(zip, f, write_sst_xml(opts.Strings, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip_add_file(zip, f, write_wb_xml(wb, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tzip_add_file(zip, f, write_theme(wb.Themes, opts));\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip_add_file(zip, f, write_sty_xml(wb, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip_add_file(zip, f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tf = \"xl/metadata.\" + wbext;\n\tzip_add_file(zip, f, write_xlmeta_xml());\n\tct.metadata.push(f);\n\tadd_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n\n\tif(people.length > 1) {\n\t\tf = \"xl/persons/person.xml\";\n\t\tzip_add_file(zip, f, write_people_xml(people, opts));\n\t\tct.people.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"persons/person.xml\", RELS.PEOPLE);\n\t}\n\n\tzip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n\tzip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n\tzip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\n\nfunction firstbyte(f/*:RawData*/,o/*:?TypeOpts*/)/*:Array<number>*/ {\n\tvar x = \"\";\n\tswitch((o||{}).type || \"base64\") {\n\t\tcase 'buffer': return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n\t\tcase 'base64': x = Base64_decode(f.slice(0,12)); break;\n\t\tcase 'binary': x = f; break;\n\t\tcase 'array':  return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n\t\tdefault: throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\n\t}\n\treturn [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3), x.charCodeAt(4), x.charCodeAt(5), x.charCodeAt(6), x.charCodeAt(7)];\n}\n\nfunction read_cfb(cfb/*:CFBContainer*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tif(CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\n\treturn parse_xlscfb(cfb, opts);\n}\n\nfunction read_zip(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar zip, d = data;\n\tvar o = opts||{};\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tzip = zip_read(d, o);\n\treturn parse_zip(zip, o);\n}\n\nfunction read_plaintext(data/*:string*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar i = 0;\n\tmain: while(i < data.length) switch(data.charCodeAt(i)) {\n\t\tcase 0x0A: case 0x0D: case 0x20: ++i; break;\n\t\tcase 0x3C: return parse_xlml(data.slice(i),o);\n\t\tdefault: break main;\n\t}\n\treturn PRN.to_workbook(data, o);\n}\n\nfunction read_plaintext_raw(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar str = \"\", bytes = firstbyte(data, o);\n\tswitch(o.type) {\n\t\tcase 'base64': str = Base64_decode(data); break;\n\t\tcase 'binary': str = data; break;\n\t\tcase 'buffer': str = data.toString('binary'); break;\n\t\tcase 'array': str = cc2str(data); break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\n\to.type = \"binary\";\n\treturn read_plaintext(str, o);\n}\n\nfunction read_utf16(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar d = data;\n\tif(o.type == 'base64') d = Base64_decode(d);\n\td = $cptable.utils.decode(1200, d.slice(2), 'str');\n\to.type = \"binary\";\n\treturn read_plaintext(d, o);\n}\n\nfunction bstrify(data/*:string*/)/*:string*/ {\n\treturn !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\n}\n\nfunction read_prn(data, d, o, str) {\n\tif(str) { o.type = \"string\"; return PRN.to_workbook(data, o); }\n\treturn PRN.to_workbook(d, o);\n}\n\nfunction readSync(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\treset_cp();\n\tvar o = opts||{};\n\tif(typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), (o = dup(o), o.type = \"array\", o));\n\tif(typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && !o.type) o.type = typeof Deno !== \"undefined\" ? \"buffer\" : \"array\";\n\tvar d = data, n = [0,0,0,0], str = false;\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\t_ssfopts = {};\n\tif(o.dateNF) _ssfopts.dateNF = o.dateNF;\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tif(o.type == \"file\") { o.type = has_buf ? \"buffer\" : \"binary\"; d = read_binary(data); if(typeof Uint8Array !== 'undefined' && !has_buf) o.type = \"array\"; }\n\tif(o.type == \"string\") { str = true; o.type = \"binary\"; o.codepage = 65001; d = bstrify(data); }\n\tif(o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\n\t\t// $FlowIgnore\n\t\tvar ab=new ArrayBuffer(3), vu=new Uint8Array(ab); vu.foo=\"bar\";\n\t\t// $FlowIgnore\n\t\tif(!vu.foo) {o=dup(o); o.type='array'; return readSync(ab2a(d), o);}\n\t}\n\tswitch((n = firstbyte(d, o))[0]) {\n\t\tcase 0xD0: if(n[1] === 0xCF && n[2] === 0x11 && n[3] === 0xE0 && n[4] === 0xA1 && n[5] === 0xB1 && n[6] === 0x1A && n[7] === 0xE1) return read_cfb(CFB.read(d, o), o); break;\n\t\tcase 0x09: if(n[1] <= 0x08) return parse_xlscfb(d, o); break;\n\t\tcase 0x3C: return parse_xlml(d, o);\n\t\tcase 0x49:\n\t\t\tif(n[1] === 0x49 && n[2] === 0x2a && n[3] === 0x00) throw new Error(\"TIFF Image File is not a spreadsheet\");\n\t\t\tif(n[1] === 0x44) return read_wb_ID(d, o);\n\t\t\tbreak;\n\t\tcase 0x54: if(n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o); break;\n\t\tcase 0x50: return (n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09) ? read_zip(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xEF: return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xFF:\n\t\t\tif(n[1] === 0xFE) { return read_utf16(d, o); }\n\t\t\telse if(n[1] === 0x00 && n[2] === 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n\t\t\tbreak;\n\t\tcase 0x00:\n\t\t\tif(n[1] === 0x00) {\n\t\t\t\tif(n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n\t\t\t\tif(n[2] === 0x00 && (n[3] === 0x08 || n[3] === 0x09)) return WK_.to_workbook(d, o);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 0x03: case 0x83: case 0x8B: case 0x8C: return DBF.to_workbook(d, o);\n\t\tcase 0x7B: if(n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return RTF.to_workbook(d, o); break;\n\t\tcase 0x0A: case 0x0D: case 0x20: return read_plaintext_raw(d, o);\n\t\tcase 0x89: if(n[1] === 0x50 && n[2] === 0x4E && n[3] === 0x47) throw new Error(\"PNG Image File is not a spreadsheet\"); break;\n\t}\n\tif(DBF_SUPPORTED_VERSIONS.indexOf(n[0]) > -1 && n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\n\treturn read_prn(data, d, o, str);\n}\n\nfunction readFileSync(filename/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar o = opts||{}; o.type = 'file';\n\treturn readSync(filename, o);\n}\nfunction write_cfb_ctr(cfb/*:CFBContainer*/, o/*:WriteOpts*/)/*:any*/ {\n\tswitch(o.type) {\n\t\tcase \"base64\": case \"binary\": break;\n\t\tcase \"buffer\": case \"array\": o.type = \"\"; break;\n\t\tcase \"file\": return write_dl(o.file, CFB.write(cfb, {type:has_buf ? 'buffer' : \"\"}));\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\treturn CFB.write(cfb, o);\n}\n\n/*:: declare var encrypt_agile:any; */\nfunction write_zip_type(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = dup(opts||{});\n\tvar z = write_zip(wb, o);\n\treturn write_zip_denouement(z, o);\n}\nfunction write_zip_typeXLSX(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = dup(opts||{});\n\tvar z = write_zip_xlsx(wb, o);\n\treturn write_zip_denouement(z, o);\n}\nfunction write_zip_denouement(z/*:any*/, o/*:?WriteOpts*/)/*:any*/ {\n\tvar oopts = {};\n\tvar ftype = has_buf ? \"nodebuffer\" : (typeof Uint8Array !== \"undefined\" ? \"array\" : \"string\");\n\tif(o.compression) oopts.compression = 'DEFLATE';\n\tif(o.password) oopts.type = ftype;\n\telse switch(o.type) {\n\t\tcase \"base64\": oopts.type = \"base64\"; break;\n\t\tcase \"binary\": oopts.type = \"string\"; break;\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tcase \"buffer\":\n\t\tcase \"file\": oopts.type = ftype; break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tvar out = z.FullPaths ? CFB.write(z, {fileType:\"zip\", type: /*::(*/{\"nodebuffer\": \"buffer\", \"string\": \"binary\"}/*:: :any)*/[oopts.type] || oopts.type, compression: !!o.compression}) : z.generate(oopts);\n\tif(typeof Deno !== \"undefined\") {\n\t\tif(typeof out == \"string\") {\n\t\t\tif(o.type == \"binary\" || o.type == \"base64\") return out;\n\t\t\tout = new Uint8Array(s2ab(out));\n\t\t}\n\t}\n/*jshint -W083 */\n\tif(o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o); // eslint-disable-line no-undef\n/*jshint +W083 */\n\tif(o.type === \"file\") return write_dl(o.file, out);\n\treturn o.type == \"string\" ? utf8read(/*::(*/out/*:: :any)*/) : out;\n}\n\nfunction write_cfb_type(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = opts||{};\n\tvar cfb/*:CFBContainer*/ = write_xlscfb(wb, o);\n\treturn write_cfb_ctr(cfb, o);\n}\n\nfunction write_string_type(out/*:string*/, opts/*:WriteOpts*/, bom/*:?string*/)/*:any*/ {\n\tif(!bom) bom = \"\";\n\tvar o = bom + out;\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64_encode(utf8write(o));\n\t\tcase \"binary\": return utf8write(o);\n\t\tcase \"string\": return out;\n\t\tcase \"file\": return write_dl(opts.file, o, 'utf8');\n\t\tcase \"buffer\": {\n\t\t\tif(has_buf) return Buffer_from(o, 'utf8');\n\t\t\telse if(typeof TextEncoder !== \"undefined\") return new TextEncoder().encode(o);\n\t\t\telse return write_string_type(o, {type:'binary'}).split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\nfunction write_stxt_type(out/*:string*/, opts/*:WriteOpts*/)/*:any*/ {\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64_encode(out);\n\t\tcase \"binary\": return out;\n\t\tcase \"string\": return out; /* override in sheet_to_txt */\n\t\tcase \"file\": return write_dl(opts.file, out, 'binary');\n\t\tcase \"buffer\": {\n\t\t\tif(has_buf) return Buffer_from(out, 'binary');\n\t\t\telse return out.split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\n/* TODO: test consistency */\nfunction write_binary_type(out, opts/*:WriteOpts*/)/*:any*/ {\n\tswitch(opts.type) {\n\t\tcase \"string\":\n\t\tcase \"base64\":\n\t\tcase \"binary\":\n\t\t\tvar bstr = \"\";\n\t\t\t// $FlowIgnore\n\t\t\tfor(var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\n\t\t\treturn opts.type == 'base64' ? Base64_encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\n\t\tcase \"file\": return write_dl(opts.file, out);\n\t\tcase \"buffer\": return out;\n\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t}\n}\n\nfunction writeSyncXLSX(wb/*:Workbook*/, opts/*:?WriteOpts*/) {\n\treset_cp();\n\tcheck_wb(wb);\n\tvar o = dup(opts||{});\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\tif(o.type == \"array\") { o.type = \"binary\"; var out/*:string*/ = (writeSyncXLSX(wb, o)/*:any*/); o.type = \"array\"; return s2ab(out); }\n\treturn write_zip_typeXLSX(wb, o);\n}\n\nfunction writeSync(wb/*:Workbook*/, opts/*:?WriteOpts*/) {\n\treset_cp();\n\tcheck_wb(wb);\n\tvar o = dup(opts||{});\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\tif(o.type == \"array\") { o.type = \"binary\"; var out/*:string*/ = (writeSync(wb, o)/*:any*/); o.type = \"array\"; return s2ab(out); }\n\tvar idx = 0;\n\tif(o.sheet) {\n\t\tif(typeof o.sheet == \"number\") idx = o.sheet;\n\t\telse idx = wb.SheetNames.indexOf(o.sheet);\n\t\tif(!wb.SheetNames[idx]) throw new Error(\"Sheet not found: \" + o.sheet + \" : \" + (typeof o.sheet));\n\t}\n\tswitch(o.bookType || 'xlsb') {\n\t\tcase 'xml':\n\t\tcase 'xlml': return write_string_type(write_xlml(wb, o), o);\n\t\tcase 'slk':\n\t\tcase 'sylk': return write_string_type(SYLK.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'htm':\n\t\tcase 'html': return write_string_type(sheet_to_html(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'txt': return write_stxt_type(sheet_to_txt(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'csv': return write_string_type(sheet_to_csv(wb.Sheets[wb.SheetNames[idx]], o), o, \"\\ufeff\");\n\t\tcase 'dif': return write_string_type(DIF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'dbf': return write_binary_type(DBF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'prn': return write_string_type(PRN.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'rtf': return write_string_type(RTF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'eth': return write_string_type(ETH.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'fods': return write_string_type(write_ods(wb, o), o);\n\t\tcase 'wk1': return write_binary_type(WK_.sheet_to_wk1(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'wk3': return write_binary_type(WK_.book_to_wk3(wb, o), o);\n\t\tcase 'biff2': if(!o.biff) o.biff = 2; /* falls through */\n\t\tcase 'biff3': if(!o.biff) o.biff = 3; /* falls through */\n\t\tcase 'biff4': if(!o.biff) o.biff = 4; return write_binary_type(write_biff_buf(wb, o), o);\n\t\tcase 'biff5': if(!o.biff) o.biff = 5; /* falls through */\n\t\tcase 'biff8':\n\t\tcase 'xla':\n\t\tcase 'xls': if(!o.biff) o.biff = 8; return write_cfb_type(wb, o);\n\t\tcase 'xlsx':\n\t\tcase 'xlsm':\n\t\tcase 'xlam':\n\t\tcase 'xlsb':\n\t\tcase 'numbers':\n\t\tcase 'ods': return write_zip_type(wb, o);\n\t\tdefault: throw new Error (\"Unrecognized bookType |\" + o.bookType + \"|\");\n\t}\n}\n\nfunction resolve_book_type(o/*:WriteFileOpts*/) {\n\tif(o.bookType) return;\n\tvar _BT = {\n\t\t\"xls\": \"biff8\",\n\t\t\"htm\": \"html\",\n\t\t\"slk\": \"sylk\",\n\t\t\"socialcalc\": \"eth\",\n\t\t\"Sh33tJS\": \"WTF\"\n\t};\n\tvar ext = o.file.slice(o.file.lastIndexOf(\".\")).toLowerCase();\n\tif(ext.match(/^\\.[a-z]+$/)) o.bookType = ext.slice(1);\n\to.bookType = _BT[o.bookType] || o.bookType;\n}\n\nfunction writeFileSync(wb/*:Workbook*/, filename/*:string*/, opts/*:?WriteFileOpts*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSync(wb, o);\n}\n\nfunction writeFileSyncXLSX(wb/*:Workbook*/, filename/*:string*/, opts/*:?WriteFileOpts*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSyncXLSX(wb, o);\n}\n\n\nfunction writeFileAsync(filename/*:string*/, wb/*:Workbook*/, opts/*:?WriteFileOpts*/, cb/*:?(e?:ErrnoError)=>void*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\to.type = 'buffer';\n\tvar _cb = cb; if(!(_cb instanceof Function)) _cb = (opts/*:any*/);\n\treturn _fs.writeFile(filename, writeSync(wb, o), _cb);\n}\n/*::\ntype MJRObject = {\n\trow: any;\n\tisempty: boolean;\n};\n*/\nfunction make_json_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, header/*:number*/, hdr/*:Array<any>*/, dense/*:boolean*/, o/*:Sheet2JSONOpts*/)/*:MJRObject*/ {\n\tvar rr = encode_row(R);\n\tvar defval = o.defval, raw = o.raw || !Object.prototype.hasOwnProperty.call(o, \"raw\");\n\tvar isempty = true;\n\tvar row/*:any*/ = (header === 1) ? [] : {};\n\tif(header !== 1) {\n\t\tif(Object.defineProperty) try { Object.defineProperty(row, '__rowNum__', {value:R, enumerable:false}); } catch(e) { row.__rowNum__ = R; }\n\t\telse row.__rowNum__ = R;\n\t}\n\tif(!dense || sheet[R]) for (var C = r.s.c; C <= r.e.c; ++C) {\n\t\tvar val = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\tif(val === undefined || val.t === undefined) {\n\t\t\tif(defval === undefined) continue;\n\t\t\tif(hdr[C] != null) { row[hdr[C]] = defval; }\n\t\t\tcontinue;\n\t\t}\n\t\tvar v = val.v;\n\t\tswitch(val.t){\n\t\t\tcase 'z': if(v == null) break; continue;\n\t\t\tcase 'e': v = (v == 0 ? null : void 0); break;\n\t\t\tcase 's': case 'd': case 'b': case 'n': break;\n\t\t\tdefault: throw new Error('unrecognized type ' + val.t);\n\t\t}\n\t\tif(hdr[C] != null) {\n\t\t\tif(v == null) {\n\t\t\t\tif(val.t == \"e\" && v === null) row[hdr[C]] = null;\n\t\t\t\telse if(defval !== undefined) row[hdr[C]] = defval;\n\t\t\t\telse if(raw && v === null) row[hdr[C]] = null;\n\t\t\t\telse continue;\n\t\t\t} else {\n\t\t\t\trow[hdr[C]] = raw && (val.t !== \"n\" || (val.t === \"n\" && o.rawNumbers !== false)) ? v : format_cell(val,v,o);\n\t\t\t}\n\t\t\tif(v != null) isempty = false;\n\t\t}\n\t}\n\treturn { row: row, isempty: isempty };\n}\n\n\nfunction sheet_to_json(sheet/*:Worksheet*/, opts/*:?Sheet2JSONOpts*/) {\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr/*:Array<any>*/ = [], v=0, vv=\"\";\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar o = opts || {};\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\tif(o.header === 1) header = 1;\n\telse if(o.header === \"A\") header = 2;\n\telse if(Array.isArray(o.header)) header = 3;\n\telse if(o.header == null) header = 0;\n\tswitch(typeof range) {\n\t\tcase 'string': r = safe_decode_range(range); break;\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\tdefault: r = range;\n\t}\n\tif(header > 0) offset = 0;\n\tvar rr = encode_row(r.s.r);\n\tvar cols/*:Array<string>*/ = [];\n\tvar out/*:Array<any>*/ = [];\n\tvar outi = 0, counter = 0;\n\tvar dense = Array.isArray(sheet);\n\tvar R = r.s.r, C = 0;\n\tvar header_cnt = {};\n\tif(dense && !sheet[R]) sheet[R] = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\tif(((colinfo[C]||{}).hidden)) continue;\n\t\tcols[C] = encode_col(C);\n\t\tval = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\tswitch(header) {\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\tdefault:\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\tcounter = header_cnt[v] || 0;\n\t\t\t\tif(!counter) header_cnt[v] = 1;\n\t\t\t\telse {\n\t\t\t\t\tdo { vv = v + \"_\" + (counter++); } while(header_cnt[vv]); header_cnt[v] = counter;\n\t\t\t\t\theader_cnt[vv] = 1;\n\t\t\t\t}\n\t\t\t\thdr[C] = vv;\n\t\t}\n\t}\n\tfor (R = r.s.r + offset; R <= r.e.r; ++R) {\n\t\tif ((rowinfo[R]||{}).hidden) continue;\n\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;\n\t}\n\tout.length = outi;\n\treturn out;\n}\n\nvar qreg = /\"/g;\nfunction make_csv_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, fs/*:number*/, rs/*:number*/, FS/*:string*/, o/*:Sheet2CSVOpts*/)/*:?string*/ {\n\tvar isempty = true;\n\tvar row/*:Array<string>*/ = [], txt = \"\", rr = encode_row(R);\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\tif (!cols[C]) continue;\n\t\tvar val = o.dense ? (sheet[R]||[])[C]: sheet[cols[C] + rr];\n\t\tif(val == null) txt = \"\";\n\t\telse if(val.v != null) {\n\t\t\tisempty = false;\n\t\t\ttxt = ''+(o.rawNumbers && val.t == \"n\" ? val.v : format_cell(val, null, o));\n\t\t\tfor(var i = 0, cc = 0; i !== txt.length; ++i) if((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34 || o.forceQuotes) {txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\"; break; }\n\t\t\tif(txt == \"ID\") txt = '\"ID\"';\n\t\t} else if(val.f != null && !val.F) {\n\t\t\tisempty = false;\n\t\t\ttxt = '=' + val.f; if(txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\n\t\t} else txt = \"\";\n\t\t/* NOTE: Excel CSV does not support array formulae */\n\t\trow.push(txt);\n\t}\n\tif(o.blankrows === false && isempty) return null;\n\treturn row.join(FS);\n}\n\nfunction sheet_to_csv(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [];\n\tvar o = opts == null ? {} : opts;\n\tif(sheet == null || sheet[\"!ref\"] == null) return \"\";\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n\tvar row = \"\", cols/*:Array<string>*/ = [];\n\to.dense = Array.isArray(sheet);\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\tvar w = 0;\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\tif ((rowinfo[R]||{}).hidden) continue;\n\t\trow = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\n\t\tif(row == null) { continue; }\n\t\tif(o.strip) row = row.replace(endregex,\"\");\n\t\tif(row || (o.blankrows !== false)) out.push((w++ ? RS : \"\") + row);\n\t}\n\tdelete o.dense;\n\treturn out.join(\"\");\n}\n\nfunction sheet_to_txt(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tif(!opts) opts = {}; opts.FS = \"\\t\"; opts.RS = \"\\n\";\n\tvar s = sheet_to_csv(sheet, opts);\n\tif(typeof $cptable == 'undefined' || opts.type == 'string') return s;\n\tvar o = $cptable.utils.encode(1200, s, 'str');\n\treturn String.fromCharCode(255) + String.fromCharCode(254) + o;\n}\n\nfunction sheet_to_formulae(sheet/*:Worksheet*/)/*:Array<string>*/ {\n\tvar y = \"\", x, val=\"\";\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar r = safe_decode_range(sheet['!ref']), rr = \"\", cols/*:Array<string>*/ = [], C;\n\tvar cmds/*:Array<string>*/ = [];\n\tvar dense = Array.isArray(sheet);\n\tfor(C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\ty = cols[C] + rr;\n\t\t\tx = dense ? (sheet[R]||[])[C] : sheet[y];\n\t\t\tval = \"\";\n\t\t\tif(x === undefined) continue;\n\t\t\telse if(x.F != null) {\n\t\t\t\ty = x.F;\n\t\t\t\tif(!x.f) continue;\n\t\t\t\tval = x.f;\n\t\t\t\tif(y.indexOf(\":\") == -1) y = y + \":\" + y;\n\t\t\t}\n\t\t\tif(x.f != null) val = x.f;\n\t\t\telse if(x.t == 'z') continue;\n\t\t\telse if(x.t == 'n' && x.v != null) val = \"\" + x.v;\n\t\t\telse if(x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";\n\t\t\telse if(x.w !== undefined) val = \"'\" + x.w;\n\t\t\telse if(x.v === undefined) continue;\n\t\t\telse if(x.t == 's') val = \"'\" + x.v;\n\t\t\telse val = \"\"+x.v;\n\t\t\tcmds[cmds.length] = y + \"=\" + val;\n\t\t}\n\t}\n\treturn cmds;\n}\n\nfunction sheet_add_json(_ws/*:?Worksheet*/, js/*:Array<any>*/, opts)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tvar offset = +!o.skipHeader;\n\tvar ws/*:Worksheet*/ = _ws || ({}/*:any*/);\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t}\n\tvar cell/*:Cell*/;\n\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:_C, r:_R + js.length - 1 + offset}}/*:any*/);\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) { _R = _range.e.r + 1; range.e.r = _R + js.length - 1 + offset; }\n\t} else {\n\t\tif(_R == -1) { _R = 0; range.e.r = js.length - 1 + offset; }\n\t}\n\tvar hdr/*:Array<string>*/ = o.header || [], C = 0;\n\n\tjs.forEach(function (JS, R/*:number*/) {\n\t\tkeys(JS).forEach(function(k) {\n\t\t\tif((C=hdr.indexOf(k)) == -1) hdr[C=hdr.length] = k;\n\t\t\tvar v = JS[k];\n\t\t\tvar t = 'z';\n\t\t\tvar z = \"\";\n\t\t\tvar ref = encode_cell({c:_C + C,r:_R + R + offset});\n\t\t\tcell = ws_get_cell_stub(ws, ref);\n\t\t\tif(v && typeof v === 'object' && !(v instanceof Date)){\n\t\t\t\tws[ref] = v;\n\t\t\t} else {\n\t\t\t\tif(typeof v == 'number') t = 'n';\n\t\t\t\telse if(typeof v == 'boolean') t = 'b';\n\t\t\t\telse if(typeof v == 'string') t = 's';\n\t\t\t\telse if(v instanceof Date) {\n\t\t\t\t\tt = 'd';\n\t\t\t\t\tif(!o.cellDates) { t = 'n'; v = datenum(v); }\n\t\t\t\t\tz = (o.dateNF || table_fmt[14]);\n\t\t\t\t}\n\t\t\t\telse if(v === null && o.nullError) { t = 'e'; v = 0; }\n\t\t\t\tif(!cell) ws[ref] = cell = ({t:t, v:v}/*:any*/);\n\t\t\t\telse {\n\t\t\t\t\tcell.t = t; cell.v = v;\n\t\t\t\t\tdelete cell.w; delete cell.R;\n\t\t\t\t\tif(z) cell.z = z;\n\t\t\t\t}\n\t\t\t\tif(z) cell.z = z;\n\t\t\t}\n\t\t});\n\t});\n\trange.e.c = Math.max(range.e.c, _C + hdr.length - 1);\n\tvar __R = encode_row(_R);\n\tif(offset) for(C = 0; C < hdr.length; ++C) ws[encode_col(C + _C) + __R] = {t:'s', v:hdr[C]};\n\tws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction json_to_sheet(js/*:Array<any>*/, opts)/*:Worksheet*/ { return sheet_add_json(null, js, opts); }\n\n/* get cell, creating a stub if necessary */\nfunction ws_get_cell_stub(ws/*:Worksheet*/, R, C/*:?number*/)/*:Cell*/ {\n\t/* A1 cell address */\n\tif(typeof R == \"string\") {\n\t\t/* dense */\n\t\tif(Array.isArray(ws)) {\n\t\t\tvar RC = decode_cell(R);\n\t\t\tif(!ws[RC.r]) ws[RC.r] = [];\n\t\t\treturn ws[RC.r][RC.c] || (ws[RC.r][RC.c] = {t:'z'});\n\t\t}\n\t\treturn ws[R] || (ws[R] = {t:'z'});\n\t}\n\t/* cell address object */\n\tif(typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\n\t/* R and C are 0-based indices */\n\treturn ws_get_cell_stub(ws, encode_cell({r:R,c:C||0}));\n}\n\n/* find sheet index for given name / validate index */\nfunction wb_sheet_idx(wb/*:Workbook*/, sh/*:number|string*/) {\n\tif(typeof sh == \"number\") {\n\t\tif(sh >= 0 && wb.SheetNames.length > sh) return sh;\n\t\tthrow new Error(\"Cannot find sheet # \" + sh);\n\t} else if(typeof sh == \"string\") {\n\t\tvar idx = wb.SheetNames.indexOf(sh);\n\t\tif(idx > -1) return idx;\n\t\tthrow new Error(\"Cannot find sheet name |\" + sh + \"|\");\n\t} else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\n}\n\n/* simple blank workbook object */\nfunction book_new()/*:Workbook*/ {\n\treturn { SheetNames: [], Sheets: {} };\n}\n\n/* add a worksheet to the end of a given workbook */\nfunction book_append_sheet(wb/*:Workbook*/, ws/*:Worksheet*/, name/*:?string*/, roll/*:?boolean*/)/*:string*/ {\n\tvar i = 1;\n\tif(!name) for(; i <= 0xFFFF; ++i, name = undefined) if(wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\n\tif(!name || wb.SheetNames.length >= 0xFFFF) throw new Error(\"Too many worksheets\");\n\tif(roll && wb.SheetNames.indexOf(name) >= 0) {\n\t\tvar m = name.match(/(^.*?)(\\d+)$/);\n\t\ti = m && +m[2] || 0;\n\t\tvar root = m && m[1] || name;\n\t\tfor(++i; i <= 0xFFFF; ++i) if(wb.SheetNames.indexOf(name = root + i) == -1) break;\n\t}\n\tcheck_ws_name(name);\n\tif(wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\n\n\twb.SheetNames.push(name);\n\twb.Sheets[name] = ws;\n\treturn name;\n}\n\n/* set sheet visibility (visible/hidden/very hidden) */\nfunction book_set_sheet_visibility(wb/*:Workbook*/, sh/*:number|string*/, vis/*:number*/) {\n\tif(!wb.Workbook) wb.Workbook = {};\n\tif(!wb.Workbook.Sheets) wb.Workbook.Sheets = [];\n\n\tvar idx = wb_sheet_idx(wb, sh);\n\t// $FlowIgnore\n\tif(!wb.Workbook.Sheets[idx]) wb.Workbook.Sheets[idx] = {};\n\n\tswitch(vis) {\n\t\tcase 0: case 1: case 2: break;\n\t\tdefault: throw new Error(\"Bad sheet visibility setting \" + vis);\n\t}\n\t// $FlowIgnore\n\twb.Workbook.Sheets[idx].Hidden = vis;\n}\n\n/* set number format */\nfunction cell_set_number_format(cell/*:Cell*/, fmt/*:string|number*/) {\n\tcell.z = fmt;\n\treturn cell;\n}\n\n/* set cell hyperlink */\nfunction cell_set_hyperlink(cell/*:Cell*/, target/*:string*/, tooltip/*:?string*/) {\n\tif(!target) {\n\t\tdelete cell.l;\n\t} else {\n\t\tcell.l = ({ Target: target }/*:Hyperlink*/);\n\t\tif(tooltip) cell.l.Tooltip = tooltip;\n\t}\n\treturn cell;\n}\nfunction cell_set_internal_link(cell/*:Cell*/, range/*:string*/, tooltip/*:?string*/) { return cell_set_hyperlink(cell, \"#\" + range, tooltip); }\n\n/* add to cell comments */\nfunction cell_add_comment(cell/*:Cell*/, text/*:string*/, author/*:?string*/) {\n\tif(!cell.c) cell.c = [];\n\tcell.c.push({t:text, a:author||\"SheetJS\"});\n}\n\n/* set array formula and flush related cells */\nfunction sheet_set_array_formula(ws/*:Worksheet*/, range, formula/*:string*/, dynamic/*:boolean*/) {\n\tvar rng = typeof range != \"string\" ? range : safe_decode_range(range);\n\tvar rngstr = typeof range == \"string\" ? range : encode_range(range);\n\tfor(var R = rng.s.r; R <= rng.e.r; ++R) for(var C = rng.s.c; C <= rng.e.c; ++C) {\n\t\tvar cell = ws_get_cell_stub(ws, R, C);\n\t\tcell.t = 'n';\n\t\tcell.F = rngstr;\n\t\tdelete cell.v;\n\t\tif(R == rng.s.r && C == rng.s.c) {\n\t\t\tcell.f = formula;\n\t\t\tif(dynamic) cell.D = true;\n\t\t}\n\t}\n\treturn ws;\n}\n\nvar utils/*:any*/ = {\n\tencode_col: encode_col,\n\tencode_row: encode_row,\n\tencode_cell: encode_cell,\n\tencode_range: encode_range,\n\tdecode_col: decode_col,\n\tdecode_row: decode_row,\n\tsplit_cell: split_cell,\n\tdecode_cell: decode_cell,\n\tdecode_range: decode_range,\n\tformat_cell: format_cell,\n\tsheet_add_aoa: sheet_add_aoa,\n\tsheet_add_json: sheet_add_json,\n\tsheet_add_dom: sheet_add_dom,\n\taoa_to_sheet: aoa_to_sheet,\n\tjson_to_sheet: json_to_sheet,\n\ttable_to_sheet: parse_dom_table,\n\ttable_to_book: table_to_book,\n\tsheet_to_csv: sheet_to_csv,\n\tsheet_to_txt: sheet_to_txt,\n\tsheet_to_json: sheet_to_json,\n\tsheet_to_html: sheet_to_html,\n\tsheet_to_formulae: sheet_to_formulae,\n\tsheet_to_row_object_array: sheet_to_json,\n\tsheet_get_cell: ws_get_cell_stub,\n\tbook_new: book_new,\n\tbook_append_sheet: book_append_sheet,\n\tbook_set_sheet_visibility: book_set_sheet_visibility,\n\tcell_set_number_format: cell_set_number_format,\n\tcell_set_hyperlink: cell_set_hyperlink,\n\tcell_set_internal_link: cell_set_internal_link,\n\tcell_add_comment: cell_add_comment,\n\tsheet_set_array_formula: sheet_set_array_formula,\n\tconsts: {\n\t\tSHEET_VISIBLE: 0,\n\t\tSHEET_HIDDEN: 1,\n\t\tSHEET_VERY_HIDDEN: 2\n\t}\n};\n\nvar _Readable;\nfunction set_readable(R) { _Readable = R; }\n\nfunction write_csv_stream(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tvar stream = _Readable();\n\tvar o = opts == null ? {} : opts;\n\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n\tvar row/*:?string*/ = \"\", cols/*:Array<string>*/ = [];\n\to.dense = Array.isArray(sheet);\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\tvar R = r.s.r;\n\tvar BOM = false, w = 0;\n\tstream._read = function() {\n\t\tif(!BOM) { BOM = true; return stream.push(\"\\uFEFF\"); }\n\t\twhile(R <= r.e.r) {\n\t\t\t++R;\n\t\t\tif ((rowinfo[R-1]||{}).hidden) continue;\n\t\t\trow = make_csv_row(sheet, r, R-1, cols, fs, rs, FS, o);\n\t\t\tif(row != null) {\n\t\t\t\tif(o.strip) row = row.replace(endregex,\"\");\n\t\t\t\tif(row || (o.blankrows !== false)) return stream.push((w++ ? RS : \"\") + row);\n\t\t\t}\n\t\t}\n\t\treturn stream.push(null);\n\t};\n\treturn stream;\n}\n\nfunction write_html_stream(ws/*:Worksheet*/, opts/*:?Sheet2HTMLOpts*/) {\n\tvar stream = _Readable();\n\n\tvar o = opts || {};\n\tvar header = o.header != null ? o.header : HTML_BEGIN;\n\tvar footer = o.footer != null ? o.footer : HTML_END;\n\tstream.push(header);\n\tvar r = decode_range(ws['!ref']);\n\to.dense = Array.isArray(ws);\n\tstream.push(make_html_preamble(ws, r, o));\n\tvar R = r.s.r;\n\tvar end = false;\n\tstream._read = function() {\n\t\tif(R > r.e.r) {\n\t\t\tif(!end) { end = true; stream.push(\"</table>\" + footer); }\n\t\t\treturn stream.push(null);\n\t\t}\n\t\twhile(R <= r.e.r) {\n\t\t\tstream.push(make_html_row(ws, r, R, o));\n\t\t\t++R;\n\t\t\tbreak;\n\t\t}\n\t};\n\treturn stream;\n}\n\nfunction write_json_stream(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tvar stream = _Readable({objectMode:true});\n\n\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr/*:Array<any>*/ = [], v=0, vv=\"\";\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar o = opts || {};\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\tif(o.header === 1) header = 1;\n\telse if(o.header === \"A\") header = 2;\n\telse if(Array.isArray(o.header)) header = 3;\n\tswitch(typeof range) {\n\t\tcase 'string': r = safe_decode_range(range); break;\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\tdefault: r = range;\n\t}\n\tif(header > 0) offset = 0;\n\tvar rr = encode_row(r.s.r);\n\tvar cols/*:Array<string>*/ = [];\n\tvar counter = 0;\n\tvar dense = Array.isArray(sheet);\n\tvar R = r.s.r, C = 0;\n\tvar header_cnt = {};\n\tif(dense && !sheet[R]) sheet[R] = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\tif(((colinfo[C]||{}).hidden)) continue;\n\t\tcols[C] = encode_col(C);\n\t\tval = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\tswitch(header) {\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\tdefault:\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\tcounter = header_cnt[v] || 0;\n\t\t\t\tif(!counter) header_cnt[v] = 1;\n\t\t\t\telse {\n\t\t\t\t\tdo { vv = v + \"_\" + (counter++); } while(header_cnt[vv]); header_cnt[v] = counter;\n\t\t\t\t\theader_cnt[vv] = 1;\n\t\t\t\t}\n\t\t\t\thdr[C] = vv;\n\t\t}\n\t}\n\tR = r.s.r + offset;\n\tstream._read = function() {\n\t\twhile(R <= r.e.r) {\n\t\t\tif ((rowinfo[R-1]||{}).hidden) continue;\n\t\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n\t\t\t++R;\n\t\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) {\n\t\t\t\tstream.push(row.row);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\treturn stream.push(null);\n\t};\n\treturn stream;\n}\n\nvar __stream = {\n\tto_json: write_json_stream,\n\tto_html: write_html_stream,\n\tto_csv: write_csv_stream,\n  set_readable: set_readable\n};\nexport const version = XLSX.version;\nexport {\n\tparse_xlscfb,\n\tparse_zip,\n\treadSync as read,\n\treadFileSync as readFile,\n\treadFileSync,\n\twriteSync as write,\n\twriteFileSync as writeFile,\n\twriteFileSync,\n\twriteFileAsync,\n\twriteSyncXLSX as writeXLSX,\n\twriteFileSyncXLSX as writeFileXLSX,\n\tutils,\n\t__stream as stream,\n\tSSF,\n\tCFB\n};\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[2251],{\n\n/***/ 84105:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NC\": function() { return /* binding */ writeFileSync; },\n/* harmony export */   \"P6\": function() { return /* binding */ utils; },\n/* harmony export */   \"ij\": function() { return /* binding */ readSync; }\n/* harmony export */ });\n/* unused harmony exports set_cptable, set_fs, version, parse_xlscfb, parse_zip, readFile, readFileSync, write, writeFileSync, writeFileAsync, writeXLSX, writeFileXLSX, stream, SSF, CFB */\n/* provided dependency */ var Buffer = __webpack_require__(20067)[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(72061);\n/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported XLSX */\n/*global process:false, Buffer:false, ArrayBuffer:false, DataView:false, Deno:false */\nvar XLSX = {};\nXLSX.version = '0.18.5';\nvar current_codepage = 1200, current_ansi = 1252;\n\nvar VALID_ANSI = [ 874, 932, 936, 949, 950, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 10000 ];\n/* ECMA-376 Part I 18.4.1 charset to codepage mapping */\nvar CS2CP = ({\n\t/*::[*/0/*::]*/:    1252, /* ANSI */\n\t/*::[*/1/*::]*/:   65001, /* DEFAULT */\n\t/*::[*/2/*::]*/:   65001, /* SYMBOL */\n\t/*::[*/77/*::]*/:  10000, /* MAC */\n\t/*::[*/128/*::]*/:   932, /* SHIFTJIS */\n\t/*::[*/129/*::]*/:   949, /* HANGUL */\n\t/*::[*/130/*::]*/:  1361, /* JOHAB */\n\t/*::[*/134/*::]*/:   936, /* GB2312 */\n\t/*::[*/136/*::]*/:   950, /* CHINESEBIG5 */\n\t/*::[*/161/*::]*/:  1253, /* GREEK */\n\t/*::[*/162/*::]*/:  1254, /* TURKISH */\n\t/*::[*/163/*::]*/:  1258, /* VIETNAMESE */\n\t/*::[*/177/*::]*/:  1255, /* HEBREW */\n\t/*::[*/178/*::]*/:  1256, /* ARABIC */\n\t/*::[*/186/*::]*/:  1257, /* BALTIC */\n\t/*::[*/204/*::]*/:  1251, /* RUSSIAN */\n\t/*::[*/222/*::]*/:   874, /* THAI */\n\t/*::[*/238/*::]*/:  1250, /* EASTEUROPE */\n\t/*::[*/255/*::]*/:  1252, /* OEM */\n\t/*::[*/69/*::]*/:   6969  /* MISC */\n}/*:any*/);\n\nvar set_ansi = function(cp/*:number*/) { if(VALID_ANSI.indexOf(cp) == -1) return; current_ansi = CS2CP[0] = cp; };\nfunction reset_ansi() { set_ansi(1252); }\n\nvar set_cp = function(cp/*:number*/) { current_codepage = cp; set_ansi(cp); };\nfunction reset_cp() { set_cp(1200); reset_ansi(); }\n\nfunction char_codes(data/*:string*/)/*:Array<number>*/ { var o/*:Array<number>*/ = []; for(var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i); return o; }\n\nfunction utf16leread(data/*:string*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i) + (data.charCodeAt(2*i+1)<<8));\n\treturn o.join(\"\");\n}\nfunction utf16beread(data/*:string*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i+1) + (data.charCodeAt(2*i)<<8));\n\treturn o.join(\"\");\n}\n\nvar debom = function(data/*:string*/)/*:string*/ {\n\tvar c1 = data.charCodeAt(0), c2 = data.charCodeAt(1);\n\tif(c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\n\tif(c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\n\tif(c1 == 0xFEFF) return data.slice(1);\n\treturn data;\n};\n\nvar _getchar = function _gc1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };\nvar _getansi = function _ga1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };\n\nvar $cptable;\nfunction set_cptable(cptable) {\n\t$cptable = cptable;\n\tset_cp = function(cp/*:number*/) { current_codepage = cp; set_ansi(cp); };\n\tdebom = function(data/*:string*/) {\n\t\tif(data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) { return $cptable.utils.decode(1200, char_codes(data.slice(2))); }\n\t\treturn data;\n\t};\n\t_getchar = function _gc2(x/*:number*/)/*:string*/ {\n\t\tif(current_codepage === 1200) return String.fromCharCode(x);\n\t\treturn $cptable.utils.decode(current_codepage, [x&255,x>>8])[0];\n\t};\n\t_getansi = function _ga2(x/*:number*/)/*:string*/ {\n\t\treturn $cptable.utils.decode(current_ansi, [x])[0];\n\t};\n\tcpdoit();\n}\n\nvar DENSE = null;\nvar DIF_XL = true;\nvar Base64_map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nfunction Base64_encode(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  for (var i = 0; i < input.length; ) {\n    c1 = input.charCodeAt(i++);\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_decode(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  input = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n  for (var i = 0; i < input.length; ) {\n    e1 = Base64_map.indexOf(input.charAt(i++));\n    e2 = Base64_map.indexOf(input.charAt(i++));\n    c1 = e1 << 2 | e2 >> 4;\n    o += String.fromCharCode(c1);\n    e3 = Base64_map.indexOf(input.charAt(i++));\n    c2 = (e2 & 15) << 4 | e3 >> 2;\n    if (e3 !== 64) {\n      o += String.fromCharCode(c2);\n    }\n    e4 = Base64_map.indexOf(input.charAt(i++));\n    c3 = (e3 & 3) << 6 | e4;\n    if (e4 !== 64) {\n      o += String.fromCharCode(c3);\n    }\n  }\n  return o;\n}\nvar has_buf = /*#__PURE__*/(function() { return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node; })();\n\nvar Buffer_from = /*#__PURE__*/(function() {\n\tif(typeof Buffer !== 'undefined') {\n\t\tvar nbfs = !Buffer.from;\n\t\tif(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n\t\treturn nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n\t}\n\treturn function() {};\n})();\n\n\nfunction new_raw_buf(len/*:number*/) {\n\t/* jshint -W056 */\n\tif(has_buf) return Buffer.alloc ? Buffer.alloc(len) : new Buffer(len);\n\treturn typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nfunction new_unsafe_buf(len/*:number*/) {\n\t/* jshint -W056 */\n\tif(has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);\n\treturn typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nvar s2a = function s2a(s/*:string*/)/*:any*/ {\n\tif(has_buf) return Buffer_from(s, \"binary\");\n\treturn s.split(\"\").map(function(x/*:string*/)/*:number*/{ return x.charCodeAt(0) & 0xff; });\n};\n\nfunction s2ab(s/*:string*/)/*:any*/ {\n\tif(typeof ArrayBuffer === 'undefined') return s2a(s);\n\tvar buf = new ArrayBuffer(s.length), view = new Uint8Array(buf);\n\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\treturn buf;\n}\n\nfunction a2s(data/*:any*/)/*:string*/ {\n\tif(Array.isArray(data)) return data.map(function(c) { return String.fromCharCode(c); }).join(\"\");\n\tvar o/*:Array<string>*/ = []; for(var i = 0; i < data.length; ++i) o[i] = String.fromCharCode(data[i]); return o.join(\"\");\n}\n\nfunction a2u(data/*:Array<number>*/)/*:Uint8Array*/ {\n\tif(typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\n\treturn new Uint8Array(data);\n}\n\nfunction ab2a(data/*:ArrayBuffer|Uint8Array*/)/*:Array<number>*/ {\n\tif(typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\n\tif(data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\n\t/*:: if(data instanceof ArrayBuffer) throw new Error(\"unreachable\"); */\n\tvar o = new Array(data.length);\n\tfor(var i = 0; i < data.length; ++i) o[i] = data[i];\n\treturn o;\n}\n\nvar bconcat = has_buf ? function(bufs) { return Buffer.concat(bufs.map(function(buf) { return Buffer.isBuffer(buf) ? buf : Buffer_from(buf); })); } : function(bufs) {\n\tif(typeof Uint8Array !== \"undefined\") {\n\t\tvar i = 0, maxlen = 0;\n\t\tfor(i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n\t\tvar o = new Uint8Array(maxlen);\n\t\tvar len = 0;\n\t\tfor(i = 0, maxlen = 0; i < bufs.length; maxlen += len, ++i) {\n\t\t\tlen = bufs[i].length;\n\t\t\tif(bufs[i] instanceof Uint8Array) o.set(bufs[i], maxlen);\n\t\t\telse if(typeof bufs[i] == \"string\") { throw \"wtf\"; }\n\t\t\telse o.set(new Uint8Array(bufs[i]), maxlen);\n\t\t}\n\t\treturn o;\n\t}\n\treturn [].concat.apply([], bufs.map(function(buf) { return Array.isArray(buf) ? buf : [].slice.call(buf); }));\n};\n\nfunction utf8decode(content/*:string*/) {\n\tvar out = [], widx = 0, L = content.length + 250;\n\tvar o = new_raw_buf(content.length + 255);\n\tfor(var ridx = 0; ridx < content.length; ++ridx) {\n\t\tvar c = content.charCodeAt(ridx);\n\t\tif(c < 0x80) o[widx++] = c;\n\t\telse if(c < 0x800) {\n\t\t\to[widx++] = (192|((c>>6)&31));\n\t\t\to[widx++] = (128|(c&63));\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64;\n\t\t\tvar d = content.charCodeAt(++ridx)&1023;\n\t\t\to[widx++] = (240|((c>>8)&7));\n\t\t\to[widx++] = (128|((c>>2)&63));\n\t\t\to[widx++] = (128|((d>>6)&15)|((c&3)<<4));\n\t\t\to[widx++] = (128|(d&63));\n\t\t} else {\n\t\t\to[widx++] = (224|((c>>12)&15));\n\t\t\to[widx++] = (128|((c>>6)&63));\n\t\t\to[widx++] = (128|(c&63));\n\t\t}\n\t\tif(widx > L) {\n\t\t\tout.push(o.slice(0, widx));\n\t\t\twidx = 0;\n\t\t\to = new_raw_buf(65535);\n\t\t\tL = 65530;\n\t\t}\n\t}\n\tout.push(o.slice(0, widx));\n\treturn bconcat(out);\n}\n\nvar chr0 = /\\u0000/g, chr1 = /[\\u0001-\\u0006]/g;\n/*::\ndeclare type Block = any;\ndeclare type BufArray = {\n\tnewblk(sz:number):Block;\n\tnext(sz:number):Block;\n\tend():any;\n\tpush(buf:Block):void;\n};\n\ntype RecordHopperCB = {(d:any, Rn:string, RT:number):?boolean;};\n\ntype EvertType = {[string]:string};\ntype EvertNumType = {[string]:number};\ntype EvertArrType = {[string]:Array<string>};\n\ntype StringConv = {(string):string};\n\n*/\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/*jshint -W041 */\nfunction _strrev(x/*:string*/)/*:string*/ { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction pad0(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = /*#__PURE__*/Math.pow(2,32);\nfunction pad0r(v/*:any*/,d/*:number*/)/*:string*/{if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\n/* yes, in 2022 this is still faster than string compare */\nfunction SSF_isgeneral(s/*:string*/, i/*:?number*/)/*:boolean*/ { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days/*:Array<Array<string> >*/ = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months/*:Array<Array<string> >*/ = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction SSF_init_table(t/*:any*/) {\n\tif(!t) t = {};\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\treturn t;\n}\n/* repeated to satiate webpack */\nvar table_fmt = {\n\t0:  'General',\n\t1:  '0',\n\t2:  '0.00',\n\t3:  '#,##0',\n\t4:  '#,##0.00',\n\t9:  '0%',\n\t10: '0.00%',\n\t11: '0.00E+00',\n\t12: '# ?/?',\n\t13: '# ??/??',\n\t14: 'm/d/yy',\n\t15: 'd-mmm-yy',\n\t16: 'd-mmm',\n\t17: 'mmm-yy',\n\t18: 'h:mm AM/PM',\n\t19: 'h:mm:ss AM/PM',\n\t20: 'h:mm',\n\t21: 'h:mm:ss',\n\t22: 'm/d/yy h:mm',\n\t37: '#,##0 ;(#,##0)',\n\t38: '#,##0 ;[Red](#,##0)',\n\t39: '#,##0.00;(#,##0.00)',\n\t40: '#,##0.00;[Red](#,##0.00)',\n\t45: 'mm:ss',\n\t46: '[h]:mm:ss',\n\t47: 'mmss.0',\n\t48: '##0.0E+0',\n\t49: '@',\n\t56: '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"'\n};\n\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar SSF_default_map = {\n\t5:  37, 6:  38, 7:  39, 8:  40,         //  5 -> 37 ...  8 -> 40\n\n\t23:  0, 24:  0, 25:  0, 26:  0,         // 23 ->  0 ... 26 ->  0\n\n\t27: 14, 28: 14, 29: 14, 30: 14, 31: 14, // 27 -> 14 ... 31 -> 14\n\n\t50: 14, 51: 14, 52: 14, 53: 14, 54: 14, // 50 -> 14 ... 58 -> 14\n\t55: 14, 56: 14, 57: 14, 58: 14,\n\t59:  1, 60:  2, 61:  3, 62:  4,         // 59 ->  1 ... 62 ->  4\n\n\t67:  9, 68: 10,                         // 67 ->  9 ... 68 -> 10\n\t69: 12, 70: 13, 71: 14,                 // 69 -> 12 ... 71 -> 14\n\t72: 14, 73: 15, 74: 16, 75: 17,         // 72 -> 14 ... 75 -> 17\n\t76: 20, 77: 21, 78: 22,                 // 76 -> 20 ... 78 -> 22\n\t79: 45, 80: 46, 81: 47,                 // 79 -> 45 ... 81 -> 47\n\t82: 0                                   // 82 ->  0 ... 65536 -> 0 (omitted)\n};\n\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar SSF_default_str = {\n\t//  5 -- Currency,   0 decimal, black negative\n\t5:  '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t63: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\n\t//  6 -- Currency,   0 decimal, red   negative\n\t6:  '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t64: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\n\t//  7 -- Currency,   2 decimal, black negative\n\t7:  '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t65: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\n\t//  8 -- Currency,   2 decimal, red   negative\n\t8:  '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t66: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\n\t// 41 -- Accounting, 0 decimal, No Symbol\n\t41: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n\n\t// 42 -- Accounting, 0 decimal, $  Symbol\n\t42: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n\n\t// 43 -- Accounting, 2 decimal, No Symbol\n\t43: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n\n\t// 44 -- Accounting, 2 decimal, $  Symbol\n\t44: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)'\n};\n\nfunction SSF_frac(x/*:number*/, D/*:number*/, mixed/*:?boolean*/)/*:Array<number>*/ {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction SSF_parse_date_code(v/*:number*/,opts/*:?any*/,b2/*:?boolean*/) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = SSF_fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nvar SSFbasedate = /*#__PURE__*/new Date(1899, 11, 31, 0, 0, 0);\nvar SSFdnthresh = /*#__PURE__*/SSFbasedate.getTime();\nvar SSFbase1904 = /*#__PURE__*/new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {\n\tvar epoch = /*#__PURE__*/v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= SSFbase1904) epoch += 24*60*60*1000;\n\treturn (epoch - (SSFdnthresh + (/*#__PURE__*/v.getTimezoneOffset() - /*#__PURE__*/SSFbasedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\n/* exponent >= -9 and <= 9 */\nfunction SSF_strip_decimal(o/*:string*/)/*:string*/ {\n\treturn (o.indexOf(\".\") == -1) ? o : o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)$/, \"$1\");\n}\n\n/* General Exponential always shows 2 digits exp and trims the mantissa */\nfunction SSF_normalize_exp(o/*:string*/)/*:string*/ {\n\tif(o.indexOf(\"E\") == -1) return o;\n\treturn o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/,\"$1E\").replace(/(E[+-])(\\d)$/,\"$10$2\");\n}\n\n/* exponent >= -9 and <= 9 */\nfunction SSF_small_exp(v/*:number*/)/*:string*/ {\n\tvar w = (v<0?12:11);\n\tvar o = SSF_strip_decimal(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\n\n/* exponent >= 11 or <= -10 likely exponential */\nfunction SSF_large_exp(v/*:number*/)/*:string*/ {\n\tvar o = SSF_strip_decimal(v.toFixed(11));\n\treturn (o.length > (v<0?12:11) || o === \"0\" || o === \"-0\") ? v.toPrecision(6) : o;\n}\n\nfunction SSF_general_num(v/*:number*/)/*:string*/ {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = SSF_small_exp(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = SSF_large_exp(v);\n\n\treturn SSF_strip_decimal(SSF_normalize_exp(o.toUpperCase()));\n}\n\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tThe longest 32-bit integer text is \"-2147483648\", exactly 11 chars\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction SSF_general(v/*:any*/, opts/*:any*/) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : SSF_general_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return SSF_format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\n\nfunction SSF_fix_hijri(date/*:Date*/, o/*:[number, number, number]*/) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if(date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\n//var THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\nfunction SSF_write_date(type/*:number*/, fmt/*:string*/, val, ss0/*:?number*/)/*:string*/ {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\n\t\t\t/*::if(!ss0) ss0 = 0; */\n\t\t\tif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1; break;\n\t}\n\tvar outstr = outl > 0 ? pad0(out, outl) : \"\";\n\treturn outstr;\n}\n\n\n/*jshint -W086 */\n/*jshint +W086 */\nfunction commaify(s/*:string*/)/*:string*/ {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar pct1 = /%/g;\nfunction write_num_pct(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\n\nfunction write_num_cm(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\n\nfunction write_num_exp(fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar o/*:string*/;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str/*:string*/)/*:string*/ {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val/*:number*/, d/*:number*/)/*:string*/ { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val/*:number*/, d/*:number*/)/*:number*/ {\n\tvar _frac = val - Math.floor(val), dd = Math.pow(10,d);\n\tif (d < ('' + Math.round(_frac * dd)).length) return 0;\n\treturn Math.round(_frac * dd);\n}\nfunction carry(val/*:number*/, d/*:number*/)/*:number*/ {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val/*:number*/)/*:string*/ {\n\tif(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0));\n\treturn \"\"+Math.floor(val);\n}\nfunction write_num_flt(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(/*::(*/r/*::||[\"\"])*/[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(/*::String(*/r[4]/*::)*/.length,7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", /*::String(*/r[1]/*::)*/, ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + /*::String(*/r[2]/*::)*/ + \"/\" + /*::String(*/r[3]/*::)*/;\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar o/*:string*/;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\t/*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n\t\to = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\n\t\t/*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n\t\t\treturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(/*::String(*/r[4]/*::)*/.length,7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", /*::String(*/r[1]/*::)*/, ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + /*::String(*/r[2]/*::)*/ + \"/\" + /*::String(*/r[3]/*::)*/;\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n}\nfunction SSF_split_fmt(fmt/*:string*/)/*:Array<string>*/ {\n\tvar out/*:Array<string>*/ = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\n\nvar SSF_abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt/*:string*/)/*:boolean*/ {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(SSF_isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"上午/下午\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(SSF_abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction eval_fmt(fmt/*:string*/, v/*:any*/, opts/*:any*/, flen/*:number*/) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!SSF_isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=SSF_parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"上午/下午\") { if(dt!=null) q.v = dt.H >= 12 ? \"下午\" : \"上午\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(SSF_abstime)) {\n\t\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase '$': out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\n\t/* Scan for date/time parts */\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\t/* time rounding depends on presence of minute / second / usec fields */\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\n\t\t\t/*::if(!dt) break;*/\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/*::if(!dt) break;*/\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\n\t\t\t\t/*::if(!dt) throw \"unreachable\"; */\n\t\t\t\tout[i].v = SSF_write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = SSF_general(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\n\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f/*:string*/, v/*:any*/) {\n\tvar fmt = SSF_split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(/\\[[=<>]/) != null || fmt[1].match(/\\[[=<>]/) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction SSF_format(fmt/*:string|number*/,v/*:any*/,o/*:?any*/) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table/*:any*/) : table_fmt)[fmt];\n\t\t\tif(sfmt == null) sfmt = (o.table && o.table[SSF_default_map[fmt]]) || table_fmt[SSF_default_map[fmt]];\n\t\t\tif(sfmt == null) sfmt = SSF_default_str[fmt] || \"General\";\n\t\t\tbreak;\n\t}\n\tif(SSF_isgeneral(sfmt,0)) return SSF_general(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(SSF_isgeneral(f[1])) return SSF_general(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction SSF_load(fmt/*:string*/, idx/*:?number*/)/*:number*/ {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\n/*::if(typeof idx != 'number') return 0x188; */\n\t\tfor(var i = 0; i < 0x0188; ++i) {\n/*::if(typeof idx != 'number') return 0x188; */\n\t\t\tif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\n/*::if(typeof idx != 'number') return 0x188; */\n\t\tif(idx < 0) idx = 0x187;\n\t}\n/*::if(typeof idx != 'number') return 0x188; */\n\ttable_fmt[idx] = fmt;\n\treturn idx;\n}\nfunction SSF_load_table(tbl/*:SSFTable*/)/*:void*/ {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) SSF_load(tbl[i], i);\n}\n\nfunction make_ssf() {\n\ttable_fmt = SSF_init_table();\n}\n\nvar SSF = {\n\tformat: SSF_format,\n\tload: SSF_load,\n\t_table: table_fmt,\n\tload_table: SSF_load_table,\n\tparse_date_code: SSF_parse_date_code,\n\tis_date: fmt_is_date,\n\tget_table: function get_table() { return SSF._table = table_fmt; }\n};\n\nvar SSFImplicit/*{[number]:string}*/ = ({\n\t\"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"23\": 'General', \"24\": 'General', \"25\": 'General', \"26\": 'General',\n\t\"27\": 'm/d/yy', \"28\": 'm/d/yy', \"29\": 'm/d/yy', \"30\": 'm/d/yy', \"31\": 'm/d/yy',\n\t\"32\": 'h:mm:ss', \"33\": 'h:mm:ss', \"34\": 'h:mm:ss', \"35\": 'h:mm:ss',\n\t\"36\": 'm/d/yy',\n\t\"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\n\t\"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\n\t\"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\n\t\"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\n\t\"50\": 'm/d/yy', \"51\": 'm/d/yy', \"52\": 'm/d/yy', \"53\": 'm/d/yy', \"54\": 'm/d/yy',\n\t\"55\": 'm/d/yy', \"56\": 'm/d/yy', \"57\": 'm/d/yy', \"58\": 'm/d/yy',\n\t\"59\": '0',\n\t\"60\": '0.00',\n\t\"61\": '#,##0',\n\t\"62\": '#,##0.00',\n\t\"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"67\": '0%',\n\t\"68\": '0.00%',\n\t\"69\": '# ?/?',\n\t\"70\": '# ??/??',\n\t\"71\": 'm/d/yy',\n\t\"72\": 'm/d/yy',\n\t\"73\": 'd-mmm-yy',\n\t\"74\": 'd-mmm',\n\t\"75\": 'mmm-yy',\n\t\"76\": 'h:mm',\n\t\"77\": 'h:mm:ss',\n\t\"78\": 'm/d/yy h:mm',\n\t\"79\": 'mm:ss',\n\t\"80\": '[h]:mm:ss',\n\t\"81\": 'mmss.0'\n}/*:any*/);\n\n/* dateNF parse TODO: move to SSF */\nvar dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\nfunction dateNF_regex(dateNF/*:string|number*/)/*:RegExp*/ {\n\tvar fmt = typeof dateNF == \"number\" ? table_fmt[dateNF] : dateNF;\n\tfmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\n\treturn new RegExp(\"^\" + fmt + \"$\");\n}\nfunction dateNF_fix(str/*:string*/, dateNF/*:string*/, match/*:Array<string>*/)/*:string*/ {\n\tvar Y = -1, m = -1, d = -1, H = -1, M = -1, S = -1;\n\t(dateNF.match(dateNFregex)||[]).forEach(function(n, i) {\n\t\tvar v = parseInt(match[i+1], 10);\n\t\tswitch(n.toLowerCase().charAt(0)) {\n\t\t\tcase 'y': Y = v; break; case 'd': d = v; break;\n\t\t\tcase 'h': H = v; break; case 's': S = v; break;\n\t\t\tcase 'm': if(H >= 0) M = v; else m = v; break;\n\t\t}\n\t});\n\tif(S >= 0 && M == -1 && m >= 0) { M = m; m = -1; }\n\tvar datestr = ((\"\" + (Y>=0?Y: new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m>=1?m:1)).slice(-2) + \"-\" + (\"00\" + (d>=1?d:1)).slice(-2));\n\tif(datestr.length == 7) datestr = \"0\" + datestr;\n\tif(datestr.length == 8) datestr = \"20\" + datestr;\n\tvar timestr = ((\"00\" + (H>=0?H:0)).slice(-2) + \":\" + (\"00\" + (M>=0?M:0)).slice(-2) + \":\" + (\"00\" + (S>=0?S:0)).slice(-2));\n\tif(H == -1 && M == -1 && S == -1) return datestr;\n\tif(Y == -1 && m == -1 && d == -1) return timestr;\n\treturn datestr + \"T\" + timestr;\n}\n\n/*::\ndeclare var ReadShift:any;\ndeclare var CheckField:any;\ndeclare var prep_blob:any;\ndeclare var __readUInt32LE:any;\ndeclare var __readInt32LE:any;\ndeclare var __toBuffer:any;\ndeclare var __utf16le:any;\ndeclare var bconcat:any;\ndeclare var s2a:any;\ndeclare var chr0:any;\ndeclare var chr1:any;\ndeclare var has_buf:boolean;\ndeclare var new_buf:any;\ndeclare var new_raw_buf:any;\ndeclare var new_unsafe_buf:any;\ndeclare var Buffer_from:any;\n*/\n/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global Uint8Array:false, Uint16Array:false */\n\n/*::\ntype SectorEntry = {\n\tname?:string;\n\tnodes?:Array<number>;\n\tdata:RawBytes;\n};\ntype SectorList = {\n\t[k:string|number]:SectorEntry;\n\tname:?string;\n\tfat_addrs:Array<number>;\n\tssz:number;\n}\ntype CFBFiles = {[n:string]:CFBEntry};\n*/\n/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32 = /*#__PURE__*/(function() {\nvar CRC32 = {};\nCRC32.version = '1.2.0';\n/* see perf/crc32table.js */\n/*global Int32Array */\nfunction signed_crc_table()/*:any*/ {\n\tvar c = 0, table/*:Array<number>*/ = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table/*:Array<number>*/ = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr/*:string*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed/*:: ? 0 : 0 */ ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B/*:Uint8Array|Array<number>*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed/*:: ? 0 : 0 */ ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str/*:string*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\nreturn CRC32;\n})();\n/* [MS-CFB] v20171201 */\nvar CFB = /*#__PURE__*/(function _CFB(){\nvar exports = {};\nexports.version = '1.2.1';\n/* [MS-CFB] 2.6.4 */\nfunction namecmp(l/*:string*/, r/*:string*/)/*:number*/ {\n\tvar L = l.split(\"/\"), R = r.split(\"/\");\n\tfor(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n\t\tif((c = L[i].length - R[i].length)) return c;\n\t\tif(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n\t}\n\treturn L.length - R.length;\n}\nfunction dirname(p/*:string*/)/*:string*/ {\n\tif(p.charAt(p.length - 1) == \"/\") return (p.slice(0,-1).indexOf(\"/\") === -1) ? p : dirname(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(0, c+1);\n}\n\nfunction filename(p/*:string*/)/*:string*/ {\n\tif(p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(c+1);\n}\n/* -------------------------------------------------------------------------- */\n/* DOS Date format:\n   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n   add 1980 to stored year\n   stored second should be doubled\n*/\n\n/* write JS date to buf as a DOS date */\nfunction write_dos_date(buf/*:CFBlob*/, date/*:Date|string*/) {\n\tif(typeof date === \"string\") date = new Date(date);\n\tvar hms/*:number*/ = date.getHours();\n\thms = hms << 6 | date.getMinutes();\n\thms = hms << 5 | (date.getSeconds()>>>1);\n\tbuf.write_shift(2, hms);\n\tvar ymd/*:number*/ = (date.getFullYear() - 1980);\n\tymd = ymd << 4 | (date.getMonth()+1);\n\tymd = ymd << 5 | date.getDate();\n\tbuf.write_shift(2, ymd);\n}\n\n/* read four bytes from buf and interpret as a DOS date */\nfunction parse_dos_date(buf/*:CFBlob*/)/*:Date*/ {\n\tvar hms = buf.read_shift(2) & 0xFFFF;\n\tvar ymd = buf.read_shift(2) & 0xFFFF;\n\tvar val = new Date();\n\tvar d = ymd & 0x1F; ymd >>>= 5;\n\tvar m = ymd & 0x0F; ymd >>>= 4;\n\tval.setMilliseconds(0);\n\tval.setFullYear(ymd + 1980);\n\tval.setMonth(m-1);\n\tval.setDate(d);\n\tvar S = hms & 0x1F; hms >>>= 5;\n\tvar M = hms & 0x3F; hms >>>= 6;\n\tval.setHours(hms);\n\tval.setMinutes(M);\n\tval.setSeconds(S<<1);\n\treturn val;\n}\nfunction parse_extra_field(blob/*:CFBlob*/)/*:any*/ {\n\tprep_blob(blob, 0);\n\tvar o = /*::(*/{}/*:: :any)*/;\n\tvar flags = 0;\n\twhile(blob.l <= blob.length - 4) {\n\t\tvar type = blob.read_shift(2);\n\t\tvar sz = blob.read_shift(2), tgt = blob.l + sz;\n\t\tvar p = {};\n\t\tswitch(type) {\n\t\t\t/* UNIX-style Timestamps */\n\t\t\tcase 0x5455: {\n\t\t\t\tflags = blob.read_shift(1);\n\t\t\t\tif(flags & 1) p.mtime = blob.read_shift(4);\n\t\t\t\t/* for some reason, CD flag corresponds to LFH */\n\t\t\t\tif(sz > 5) {\n\t\t\t\t\tif(flags & 2) p.atime = blob.read_shift(4);\n\t\t\t\t\tif(flags & 4) p.ctime = blob.read_shift(4);\n\t\t\t\t}\n\t\t\t\tif(p.mtime) p.mt = new Date(p.mtime*1000);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tblob.l = tgt;\n\t\to[type] = p;\n\t}\n\treturn o;\n}\nvar fs/*:: = require('fs'); */;\nfunction get_fs() { return fs || (fs = {}); }\nfunction parse(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\nif(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\nif((file[0] | 0x20) == 0x6d && (file[1]|0x20) == 0x69) return parse_mad(file, options);\nif(file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\nvar mver = 3;\nvar ssz = 512;\nvar nmfs = 0; // number of mini FAT sectors\nvar difat_sec_cnt = 0;\nvar dir_start = 0;\nvar minifat_start = 0;\nvar difat_start = 0;\n\nvar fat_addrs/*:Array<number>*/ = []; // locations of FAT sectors\n\n/* [MS-CFB] 2.2 Compound File Header */\nvar blob/*:CFBlob*/ = /*::(*/file.slice(0,512)/*:: :any)*/;\nprep_blob(blob, 0);\n\n/* major version */\nvar mv = check_get_mver(blob);\nmver = mv[0];\nswitch(mver) {\n\tcase 3: ssz = 512; break; case 4: ssz = 4096; break;\n\tcase 0: if(mv[1] == 0) return parse_zip(file, options);\n\t/* falls through */\n\tdefault: throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n}\n\n/* reprocess header */\nif(ssz !== 512) { blob = /*::(*/file.slice(0,ssz)/*:: :any)*/; prep_blob(blob, 28 /* blob.l */); }\n/* Save header for final object */\nvar header/*:RawBytes*/ = file.slice(0,ssz);\n\ncheck_shifts(blob, mver);\n\n// Number of Directory Sectors\nvar dir_cnt/*:number*/ = blob.read_shift(4, 'i');\nif(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n// Number of FAT Sectors\nblob.l += 4;\n\n// First Directory Sector Location\ndir_start = blob.read_shift(4, 'i');\n\n// Transaction Signature\nblob.l += 4;\n\n// Mini Stream Cutoff Size\nblob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n// First Mini FAT Sector Location\nminifat_start = blob.read_shift(4, 'i');\n\n// Number of Mini FAT Sectors\nnmfs = blob.read_shift(4, 'i');\n\n// First DIFAT sector location\ndifat_start = blob.read_shift(4, 'i');\n\n// Number of DIFAT Sectors\ndifat_sec_cnt = blob.read_shift(4, 'i');\n\n// Grab FAT Sector Locations\nfor(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */\n\tq = blob.read_shift(4, 'i');\n\tif(q<0) break;\n\tfat_addrs[j] = q;\n}\n\n/** Break the file up into sectors */\nvar sectors/*:Array<RawBytes>*/ = sectorify(file, ssz);\n\nsleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n/** Chains */\nvar sector_list/*:SectorList*/ = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n\nsector_list[dir_start].name = \"!Directory\";\nif(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\nsector_list[fat_addrs[0]].name = \"!FAT\";\nsector_list.fat_addrs = fat_addrs;\nsector_list.ssz = ssz;\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nvar files/*:CFBFiles*/ = {}, Paths/*:Array<string>*/ = [], FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\nread_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n\nbuild_full_paths(FileIndex, FullPaths, Paths);\nPaths.shift();\n\nvar o = {\n\tFileIndex: FileIndex,\n\tFullPaths: FullPaths\n};\n\n// $FlowIgnore\nif(options && options.raw) o.raw = {header: header, sectors: sectors};\nreturn o;\n} // parse\n\n/* [MS-CFB] 2.2 Compound File Header -- read up to major version */\nfunction check_get_mver(blob/*:CFBlob*/)/*:[number, number]*/ {\n\tif(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n\t// header signature 8\n\tblob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n\t// clsid 16\n\t//blob.chk(HEADER_CLSID, 'CLSID: ');\n\tblob.l += 16;\n\n\t// minor version 2\n\tvar mver/*:number*/ = blob.read_shift(2, 'u');\n\n\treturn [blob.read_shift(2,'u'), mver];\n}\nfunction check_shifts(blob/*:CFBlob*/, mver/*:number*/)/*:void*/ {\n\tvar shift = 0x09;\n\n\t// Byte Order\n\t//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n\tblob.l += 2;\n\n\t// Sector Shift\n\tswitch((shift = blob.read_shift(2))) {\n\t\tcase 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;\n\t\tcase 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;\n\t\tdefault: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n\t}\n\n\t// Mini Sector Shift\n\tblob.chk('0600', 'Mini Sector Shift: ');\n\n\t// Reserved\n\tblob.chk('000000000000', 'Reserved: ');\n}\n\n/** Break the file up into sectors */\nfunction sectorify(file/*:RawBytes*/, ssz/*:number*/)/*:Array<RawBytes>*/ {\n\tvar nsectors = Math.ceil(file.length/ssz)-1;\n\tvar sectors/*:Array<RawBytes>*/ = [];\n\tfor(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);\n\tsectors[nsectors-1] = file.slice(nsectors*ssz);\n\treturn sectors;\n}\n\n/* [MS-CFB] 2.6.4 Red-Black Tree */\nfunction build_full_paths(FI/*:CFBFileIndex*/, FP/*:Array<string>*/, Paths/*:Array<string>*/)/*:void*/ {\n\tvar i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;\n\tvar dad/*:Array<number>*/ = [], q/*:Array<number>*/ = [];\n\n\tfor(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }\n\n\tfor(; j < q.length; ++j) {\n\t\ti = q[j];\n\t\tL = FI[i].L; R = FI[i].R; C = FI[i].C;\n\t\tif(dad[i] === i) {\n\t\t\tif(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n\t\t\tif(R !== -1 && dad[R] !== R) dad[i] = dad[R];\n\t\t}\n\t\tif(C !== -1 /*NOSTREAM*/) dad[C] = i;\n\t\tif(L !== -1 && i != dad[i]) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }\n\t\tif(R !== -1 && i != dad[i]) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }\n\t}\n\tfor(i=1; i < pl; ++i) if(dad[i] === i) {\n\t\tif(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];\n\t\telse if(L !== -1 && dad[L] !== L) dad[i] = dad[L];\n\t}\n\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type === 0 /* unknown */) continue;\n\t\tj = i;\n\t\tif(j != dad[j]) do {\n\t\t\tj = dad[j];\n\t\t\tFP[i] = FP[j] + \"/\" + FP[i];\n\t\t} while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n\t\tdad[i] = -1;\n\t}\n\n\tFP[0] += \"/\";\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n\t}\n}\n\nfunction get_mfat_entry(entry/*:CFBEntry*/, payload/*:RawBytes*/, mini/*:?RawBytes*/)/*:CFBlob*/ {\n\tvar start = entry.start, size = entry.size;\n\t//return (payload.slice(start*MSSZ, start*MSSZ + size)/*:any*/);\n\tvar o = [];\n\tvar idx = start;\n\twhile(mini && size > 0 && idx >= 0) {\n\t\to.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n\t\tsize -= MSSZ;\n\t\tidx = __readInt32LE(mini, idx * 4);\n\t}\n\tif(o.length === 0) return (new_buf(0)/*:any*/);\n\treturn (bconcat(o).slice(0, entry.size)/*:any*/);\n}\n\n/** Chase down the rest of the DIFAT chain to build a comprehensive list\n    DIFAT chains by storing the next sector number as the last 32 bits */\nfunction sleuth_fat(idx/*:number*/, cnt/*:number*/, sectors/*:Array<RawBytes>*/, ssz/*:number*/, fat_addrs)/*:void*/ {\n\tvar q/*:number*/ = ENDOFCHAIN;\n\tif(idx === ENDOFCHAIN) {\n\t\tif(cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n\t} else if(idx !== -1 /*FREESECT*/) {\n\t\tvar sector = sectors[idx], m = (ssz>>>2)-1;\n\t\tif(!sector) return;\n\t\tfor(var i = 0; i < m; ++i) {\n\t\t\tif((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;\n\t\t\tfat_addrs.push(q);\n\t\t}\n\t\tsleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);\n\t}\n}\n\n/** Follow the linked list of sectors for a given starting point */\nfunction get_sector_list(sectors/*:Array<RawBytes>*/, start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/, chkd/*:?Array<boolean>*/)/*:SectorEntry*/ {\n\tvar buf/*:Array<number>*/ = [], buf_chain/*:Array<any>*/ = [];\n\tif(!chkd) chkd = [];\n\tvar modulus = ssz - 1, j = 0, jj = 0;\n\tfor(j=start; j>=0;) {\n\t\tchkd[j] = true;\n\t\tbuf[buf.length] = j;\n\t\tbuf_chain.push(sectors[j]);\n\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\tjj = ((j*4) & modulus);\n\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\tif(!sectors[addr]) break;\n\t\tj = __readInt32LE(sectors[addr], jj);\n\t}\n\treturn {nodes: buf, data:__toBuffer([buf_chain])};\n}\n\n/** Chase down the sector linked lists */\nfunction make_sector_list(sectors/*:Array<RawBytes>*/, dir_start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/)/*:SectorList*/ {\n\tvar sl = sectors.length, sector_list/*:SectorList*/ = ([]/*:any*/);\n\tvar chkd/*:Array<boolean>*/ = [], buf/*:Array<number>*/ = [], buf_chain/*:Array<RawBytes>*/ = [];\n\tvar modulus = ssz - 1, i=0, j=0, k=0, jj=0;\n\tfor(i=0; i < sl; ++i) {\n\t\tbuf = ([]/*:Array<number>*/);\n\t\tk = (i + dir_start); if(k >= sl) k-=sl;\n\t\tif(chkd[k]) continue;\n\t\tbuf_chain = [];\n\t\tvar seen = [];\n\t\tfor(j=k; j>=0;) {\n\t\t\tseen[j] = true;\n\t\t\tchkd[j] = true;\n\t\t\tbuf[buf.length] = j;\n\t\t\tbuf_chain.push(sectors[j]);\n\t\t\tvar addr/*:number*/ = fat_addrs[Math.floor(j*4/ssz)];\n\t\t\tjj = ((j*4) & modulus);\n\t\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\t\tif(!sectors[addr]) break;\n\t\t\tj = __readInt32LE(sectors[addr], jj);\n\t\t\tif(seen[j]) break;\n\t\t}\n\t\tsector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])}/*:SectorEntry*/);\n\t}\n\treturn sector_list;\n}\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nfunction read_directory(dir_start/*:number*/, sector_list/*:SectorList*/, sectors/*:Array<RawBytes>*/, Paths/*:Array<string>*/, nmfs, files, FileIndex, mini) {\n\tvar minifat_store = 0, pl = (Paths.length?2:0);\n\tvar sector = sector_list[dir_start].data;\n\tvar i = 0, namelen = 0, name;\n\tfor(; i < sector.length; i+= 128) {\n\t\tvar blob/*:CFBlob*/ = /*::(*/sector.slice(i, i+128)/*:: :any)*/;\n\t\tprep_blob(blob, 64);\n\t\tnamelen = blob.read_shift(2);\n\t\tname = __utf16le(blob,0,namelen-pl);\n\t\tPaths.push(name);\n\t\tvar o/*:CFBEntry*/ = ({\n\t\t\tname:  name,\n\t\t\ttype:  blob.read_shift(1),\n\t\t\tcolor: blob.read_shift(1),\n\t\t\tL:     blob.read_shift(4, 'i'),\n\t\t\tR:     blob.read_shift(4, 'i'),\n\t\t\tC:     blob.read_shift(4, 'i'),\n\t\t\tclsid: blob.read_shift(16),\n\t\t\tstate: blob.read_shift(4, 'i'),\n\t\t\tstart: 0,\n\t\t\tsize: 0\n\t\t});\n\t\tvar ctime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(ctime !== 0) o.ct = read_date(blob, blob.l-8);\n\t\tvar mtime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(mtime !== 0) o.mt = read_date(blob, blob.l-8);\n\t\to.start = blob.read_shift(4, 'i');\n\t\to.size = blob.read_shift(4, 'i');\n\t\tif(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = \"\"; }\n\t\tif(o.type === 5) { /* root */\n\t\t\tminifat_store = o.start;\n\t\t\tif(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n\t\t\t/*minifat_size = o.size;*/\n\t\t} else if(o.size >= 4096 /* MSCSZ */) {\n\t\t\to.storage = 'fat';\n\t\t\tif(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n\t\t\tsector_list[o.start].name = o.name;\n\t\t\to.content = (sector_list[o.start].data.slice(0,o.size)/*:any*/);\n\t\t} else {\n\t\t\to.storage = 'minifat';\n\t\t\tif(o.size < 0) o.size = 0;\n\t\t\telse if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n\t\t\t\to.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);\n\t\t\t}\n\t\t}\n\t\tif(o.content) prep_blob(o.content, 0);\n\t\tfiles[name] = o;\n\t\tFileIndex.push(o);\n\t}\n}\n\nfunction read_date(blob/*:RawBytes|CFBlob*/, offset/*:number*/)/*:Date*/ {\n\treturn new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);\n}\n\nfunction read_file(filename/*:string*/, options/*:CFBReadOpts*/) {\n\tget_fs();\n\treturn parse(fs.readFileSync(filename), options);\n}\n\nfunction read(blob/*:RawBytes|string*/, options/*:CFBReadOpts*/) {\n\tvar type = options && options.type;\n\tif(!type) {\n\t\tif(has_buf && Buffer.isBuffer(blob)) type = \"buffer\";\n\t}\n\tswitch(type || \"base64\") {\n\t\tcase \"file\": /*:: if(typeof blob !== 'string') throw \"Must pass a filename when type='file'\"; */return read_file(blob, options);\n\t\tcase \"base64\": /*:: if(typeof blob !== 'string') throw \"Must pass a base64-encoded binary string when type='file'\"; */return parse(s2a(Base64_decode(blob)), options);\n\t\tcase \"binary\": /*:: if(typeof blob !== 'string') throw \"Must pass a binary string when type='file'\"; */return parse(s2a(blob), options);\n\t}\n\treturn parse(/*::typeof blob == 'string' ? new Buffer(blob, 'utf-8') : */blob, options);\n}\n\nfunction init_cfb(cfb/*:CFBContainer*/, opts/*:?any*/)/*:void*/ {\n\tvar o = opts || {}, root = o.root || \"Root Entry\";\n\tif(!cfb.FullPaths) cfb.FullPaths = [];\n\tif(!cfb.FileIndex) cfb.FileIndex = [];\n\tif(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n\tif(cfb.FullPaths.length === 0) {\n\t\tcfb.FullPaths[0] = root + \"/\";\n\t\tcfb.FileIndex[0] = ({ name: root, type: 5 }/*:any*/);\n\t}\n\tif(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n\tseed_cfb(cfb);\n}\nfunction seed_cfb(cfb/*:CFBContainer*/)/*:void*/ {\n\tvar nm = \"\\u0001Sh33tJ5\";\n\tif(CFB.find(cfb, \"/\" + nm)) return;\n\tvar p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;\n\tcfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }/*:any*/));\n\tcfb.FullPaths.push(cfb.FullPaths[0] + nm);\n\trebuild_cfb(cfb);\n}\nfunction rebuild_cfb(cfb/*:CFBContainer*/, f/*:?boolean*/)/*:void*/ {\n\tinit_cfb(cfb);\n\tvar gc = false, s = false;\n\tfor(var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n\t\tvar _file = cfb.FileIndex[i];\n\t\tswitch(_file.type) {\n\t\t\tcase 0:\n\t\t\t\tif(s) gc = true;\n\t\t\t\telse { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }\n\t\t\t\tbreak;\n\t\t\tcase 1: case 2: case 5:\n\t\t\t\ts = true;\n\t\t\t\tif(isNaN(_file.R * _file.L * _file.C)) gc = true;\n\t\t\t\tif(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n\t\t\t\tbreak;\n\t\t\tdefault: gc = true; break;\n\t\t}\n\t}\n\tif(!gc && !f) return;\n\n\tvar now = new Date(1987, 1, 19), j = 0;\n\t// Track which names exist\n\tvar fullPaths = Object.create ? Object.create(null) : {};\n\tvar data/*:Array<[string, CFBEntry]>*/ = [];\n\tfor(i = 0; i < cfb.FullPaths.length; ++i) {\n\t\tfullPaths[cfb.FullPaths[i]] = true;\n\t\tif(cfb.FileIndex[i].type === 0) continue;\n\t\tdata.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n\t}\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar dad = dirname(data[i][0]);\n\t\ts = fullPaths[dad];\n\t\tif(!s) {\n\t\t\tdata.push([dad, ({\n\t\t\t\tname: filename(dad).replace(\"/\",\"\"),\n\t\t\t\ttype: 1,\n\t\t\t\tclsid: HEADER_CLSID,\n\t\t\t\tct: now, mt: now,\n\t\t\t\tcontent: null\n\t\t\t}/*:any*/)]);\n\t\t\t// Add name to set\n\t\t\tfullPaths[dad] = true;\n\t\t}\n\t}\n\n\tdata.sort(function(x,y) { return namecmp(x[0], y[0]); });\n\tcfb.FullPaths = []; cfb.FileIndex = [];\n\tfor(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar elt = cfb.FileIndex[i];\n\t\tvar nm = cfb.FullPaths[i];\n\n\t\telt.name =  filename(nm).replace(\"/\",\"\");\n\t\telt.L = elt.R = elt.C = -(elt.color = 1);\n\t\telt.size = elt.content ? elt.content.length : 0;\n\t\telt.start = 0;\n\t\telt.clsid = (elt.clsid || HEADER_CLSID);\n\t\tif(i === 0) {\n\t\t\telt.C = data.length > 1 ? 1 : -1;\n\t\t\telt.size = 0;\n\t\t\telt.type = 5;\n\t\t} else if(nm.slice(-1) == \"/\") {\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;\n\t\t\telt.C = j >= data.length ? -1 : j;\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;\n\t\t\telt.R = j >= data.length ? -1 : j;\n\t\t\telt.type = 1;\n\t\t} else {\n\t\t\tif(dirname(cfb.FullPaths[i+1]||\"\") == dirname(nm)) elt.R = i + 1;\n\t\t\telt.type = 2;\n\t\t}\n\t}\n\n}\n\nfunction _write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {\n\tvar _opts = options || {};\n\t/* MAD is order-sensitive, skip rebuild and sort */\n\tif(_opts.fileType == 'mad') return write_mad(cfb, _opts);\n\trebuild_cfb(cfb);\n\tswitch(_opts.fileType) {\n\t\tcase 'zip': return write_zip(cfb, _opts);\n\t\t//case 'mad': return write_mad(cfb, _opts);\n\t}\n\tvar L = (function(cfb/*:CFBContainer*/)/*:Array<number>*/{\n\t\tvar mini_size = 0, fat_size = 0;\n\t\tfor(var i = 0; i < cfb.FileIndex.length; ++i) {\n\t\t\tvar file = cfb.FileIndex[i];\n\t\t\tif(!file.content) continue;\n\t\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\t\tvar flen = file.content.length;\n\t\t\tif(flen > 0){\n\t\t\t\tif(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;\n\t\t\t\telse fat_size += (flen + 0x01FF) >> 9;\n\t\t\t}\n\t\t}\n\t\tvar dir_cnt = (cfb.FullPaths.length +3) >> 2;\n\t\tvar mini_cnt = (mini_size + 7) >> 3;\n\t\tvar mfat_cnt = (mini_size + 0x7F) >> 7;\n\t\tvar fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n\t\tvar fat_cnt = (fat_base + 0x7F) >> 7;\n\t\tvar difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\twhile(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\tvar L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n\t\tcfb.FileIndex[0].size = mini_size << 6;\n\t\tL[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);\n\t\treturn L;\n\t})(cfb);\n\tvar o = new_buf(L[7] << 9);\n\tvar i = 0, T = 0;\n\t{\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(2, 0);\n\t\to.write_shift(2, 0x003E);\n\t\to.write_shift(2, 0x0003);\n\t\to.write_shift(2, 0xFFFE);\n\t\to.write_shift(2, 0x0009);\n\t\to.write_shift(2, 0x0006);\n\t\tfor(i = 0; i < 3; ++i) o.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, L[2]);\n\t\to.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, 1<<12);\n\t\to.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[3]);\n\t\to.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[1]);\n\t\tfor(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t}\n\tif(L[1]) {\n\t\tfor(T = 0; T < L[1]; ++T) {\n\t\t\tfor(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t\t\to.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n\t\t}\n\t}\n\tvar chainit = function(w/*:number*/)/*:void*/ {\n\t\tfor(T += w; i<T-1; ++i) o.write_shift(-4, i+1);\n\t\tif(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }\n\t};\n\tT = i = 0;\n\tfor(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);\n\tfor(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);\n\tchainit(L[3]);\n\tchainit(L[4]);\n\tvar j/*:number*/ = 0, flen/*:number*/ = 0;\n\tvar file/*:CFBEntry*/ = cfb.FileIndex[0];\n\tfor(; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\n\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\tflen = file.content.length;\n\t\tif(flen < 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x01FF) >> 9);\n\t}\n\tchainit((L[6] + 7) >> 3);\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tT = i = 0;\n\tfor(j = 0; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\n\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\tflen = file.content.length;\n\t\tif(!flen || flen >= 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x3F) >> 6);\n\t}\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tfor(i = 0; i < L[4]<<2; ++i) {\n\t\tvar nm = cfb.FullPaths[i];\n\t\tif(!nm || nm.length === 0) {\n\t\t\tfor(j = 0; j < 17; ++j) o.write_shift(4, 0);\n\t\t\tfor(j = 0; j < 3; ++j) o.write_shift(4, -1);\n\t\t\tfor(j = 0; j < 12; ++j) o.write_shift(4, 0);\n\t\t\tcontinue;\n\t\t}\n\t\tfile = cfb.FileIndex[i];\n\t\tif(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n\t\tvar _nm/*:string*/ = (i === 0 && _opts.root) || file.name;\n\t\tflen = 2*(_nm.length+1);\n\t\to.write_shift(64, _nm, \"utf16le\");\n\t\to.write_shift(2, flen);\n\t\to.write_shift(1, file.type);\n\t\to.write_shift(1, file.color);\n\t\to.write_shift(-4, file.L);\n\t\to.write_shift(-4, file.R);\n\t\to.write_shift(-4, file.C);\n\t\tif(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);\n\t\telse o.write_shift(16, file.clsid, \"hex\");\n\t\to.write_shift(4, file.state || 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, file.start);\n\t\to.write_shift(4, file.size); o.write_shift(4, 0);\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\n\t\t/*:: if(!file.content) throw new Error(\"unreachable\"); */\n\t\tif(file.size >= 0x1000) {\n\t\t\to.l = (file.start+1) << 9;\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 511) & -512;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x1FF; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\n\t\t/*:: if(!file.content) throw new Error(\"unreachable\"); */\n\t\tif(file.size > 0 && file.size < 0x1000) {\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 63) & -64;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x3F; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tif (has_buf) {\n\t\to.l = o.length;\n\t} else {\n\t\t// When using Buffer, already 0-filled\n\t\twhile(o.l < o.length) o.write_shift(1, 0);\n\t}\n\treturn o;\n}\n/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\nfunction find(cfb/*:CFBContainer*/, path/*:string*/)/*:?CFBEntry*/ {\n\tvar UCFullPaths/*:Array<string>*/ = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });\n\tvar UCPaths/*:Array<string>*/ = UCFullPaths.map(function(x) { var y = x.split(\"/\"); return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)]; });\n\tvar k/*:boolean*/ = false;\n\tif(path.charCodeAt(0) === 47 /* \"/\" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }\n\telse k = path.indexOf(\"/\") !== -1;\n\tvar UCPath/*:string*/ = path.toUpperCase();\n\tvar w/*:number*/ = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n\tif(w !== -1) return cfb.FileIndex[w];\n\n\tvar m = !UCPath.match(chr1);\n\tUCPath = UCPath.replace(chr0,'');\n\tif(m) UCPath = UCPath.replace(chr1,'!');\n\tfor(w = 0; w < UCFullPaths.length; ++w) {\n\t\tif((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t\tif((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t}\n\treturn null;\n}\n/** CFB Constants */\nvar MSSZ = 64; /* Mini Sector Size = 1<<6 */\n//var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n/* 2.1 Compound File Sector Numbers and Types */\nvar ENDOFCHAIN = -2;\n/* 2.2 Compound File Header */\nvar HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\nvar HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\nvar HEADER_CLSID = '00000000000000000000000000000000';\nvar consts = {\n\t/* 2.1 Compund File Sector Numbers and Types */\n\tMAXREGSECT: -6,\n\tDIFSECT: -4,\n\tFATSECT: -3,\n\tENDOFCHAIN: ENDOFCHAIN,\n\tFREESECT: -1,\n\t/* 2.2 Compound File Header */\n\tHEADER_SIGNATURE: HEADER_SIGNATURE,\n\tHEADER_MINOR_VERSION: '3e00',\n\tMAXREGSID: -6,\n\tNOSTREAM: -1,\n\tHEADER_CLSID: HEADER_CLSID,\n\t/* 2.6.1 Compound File Directory Entry */\n\tEntryTypes: ['unknown','storage','stream','lockbytes','property','root']\n};\n\nfunction write_file(cfb/*:CFBContainer*/, filename/*:string*/, options/*:CFBWriteOpts*/)/*:void*/ {\n\tget_fs();\n\tvar o = _write(cfb, options);\n\t/*:: if(typeof Buffer == 'undefined' || !Buffer.isBuffer(o) || !(o instanceof Buffer)) throw new Error(\"unreachable\"); */\n\tfs.writeFileSync(filename, o);\n}\n\nfunction a2s(o/*:RawBytes*/)/*:string*/ {\n\tvar out = new Array(o.length);\n\tfor(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n\treturn out.join(\"\");\n}\n\nfunction write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {\n\tvar o = _write(cfb, options);\n\tswitch(options && options.type || \"buffer\") {\n\t\tcase \"file\": get_fs(); fs.writeFileSync(options.filename, (o/*:any*/)); return o;\n\t\tcase \"binary\": return typeof o == \"string\" ? o : a2s(o);\n\t\tcase \"base64\": return Base64_encode(typeof o == \"string\" ? o : a2s(o));\n\t\tcase \"buffer\": if(has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n\t\t\t/* falls through */\n\t\tcase \"array\": return typeof o == \"string\" ? s2a(o) : o;\n\t}\n\treturn o;\n}\n/* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\nvar _zlib;\nfunction use_zlib(zlib) { try {\n\tvar InflateRaw = zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tInflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n\tif(InflRaw.bytesRead) _zlib = zlib;\n\telse throw new Error(\"zlib does not expose bytesRead\");\n} catch(e) {console.error(\"cannot use native zlib: \" + (e.message || e)); } }\n\nfunction _inflateRawSync(payload, usz) {\n\tif(!_zlib) return _inflate(payload, usz);\n\tvar InflateRaw = _zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tvar out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n\tpayload.l += InflRaw.bytesRead;\n\treturn out;\n}\n\nfunction _deflateRawSync(payload) {\n\treturn _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n}\nvar CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n/*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\nvar LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];\n\n/*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\nvar DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];\n\nfunction bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }\n\nvar use_typed_arrays = typeof Uint8Array !== 'undefined';\n\nvar bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];\nfor(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);\n\nfunction bit_swap_n(n, b) {\n\tvar rev = bitswap8[n & 0xFF];\n\tif(b <= 8) return rev >>> (8-b);\n\trev = (rev << 8) | bitswap8[(n>>8)&0xFF];\n\tif(b <= 16) return rev >>> (16-b);\n\trev = (rev << 8) | bitswap8[(n>>16)&0xFF];\n\treturn rev >>> (24-b);\n}\n\n/* helpers for unaligned bit reads */\nfunction read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }\nfunction read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }\nfunction read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }\nfunction read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }\nfunction read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }\n\n/* works up to n = 3 * 8 + 1 = 25 */\nfunction read_bits_n(buf, bl, n) {\n\tvar w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);\n\tvar v = buf[h] >>> w;\n\tif(n < 8 - w) return v & f;\n\tv |= buf[h+1]<<(8-w);\n\tif(n < 16 - w) return v & f;\n\tv |= buf[h+2]<<(16-w);\n\tif(n < 24 - w) return v & f;\n\tv |= buf[h+3]<<(24-w);\n\treturn v & f;\n}\n\n/* helpers for unaligned bit writes */\nfunction write_bits_3(buf, bl, v) { var w = bl & 7, h = bl >>> 3;\n\tif(w <= 5) buf[h] |= (v & 7) << w;\n\telse {\n\t\tbuf[h] |= (v << w) & 0xFF;\n\t\tbuf[h+1] = (v&7) >> (8-w);\n\t}\n\treturn bl + 3;\n}\n\nfunction write_bits_1(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv = (v&1) << w;\n\tbuf[h] |= v;\n\treturn bl + 1;\n}\nfunction write_bits_8(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v;\n\treturn bl + 8;\n}\nfunction write_bits_16(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v & 0xFF;\n\tbuf[h+2] = v >>> 8;\n\treturn bl + 16;\n}\n\n/* until ArrayBuffer#realloc is a thing, fake a realloc */\nfunction realloc(b, sz/*:number*/) {\n\tvar L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;\n\tif(L >= sz) return b;\n\tif(has_buf) {\n\t\tvar o = new_unsafe_buf(M);\n\t\t// $FlowIgnore\n\t\tif(b.copy) b.copy(o);\n\t\telse for(; i < b.length; ++i) o[i] = b[i];\n\t\treturn o;\n\t} else if(use_typed_arrays) {\n\t\tvar a = new Uint8Array(M);\n\t\tif(a.set) a.set(b);\n\t\telse for(; i < L; ++i) a[i] = b[i];\n\t\treturn a;\n\t}\n\tb.length = M;\n\treturn b;\n}\n\n/* zero-filled arrays for older browsers */\nfunction zero_fill_array(n) {\n\tvar o = new Array(n);\n\tfor(var i = 0; i < n; ++i) o[i] = 0;\n\treturn o;\n}\n\n/* build tree (used for literals and lengths) */\nfunction build_tree(clens, cmap, MAX/*:number*/)/*:number*/ {\n\tvar maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;\n\n\tvar bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n\tfor(i = 0; i < 32; ++i) bl_count[i] = 0;\n\n\tfor(i = L; i < MAX; ++i) clens[i] = 0;\n\tL = clens.length;\n\n\tvar ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n\t/* build code tree */\n\tfor(i = 0; i < L; ++i) {\n\t\tbl_count[(w = clens[i])]++;\n\t\tif(maxlen < w) maxlen = w;\n\t\tctree[i] = 0;\n\t}\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);\n\tfor(i = 0; i < L; ++i) {\n\t\tccode = clens[i];\n\t\tif(ccode != 0) ctree[i] = bl_count[ccode+16]++;\n\t}\n\n\t/* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);\n\t\t\tfor(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)\n\t\t\t\tcmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);\n\t\t}\n\t}\n\treturn maxlen;\n}\n\n/* Fixed Huffman */\nvar fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\nvar fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);\nif(!use_typed_arrays) {\n\tfor(var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n\tfor(i = 0; i < 32; ++i) fix_dmap[i] = 0;\n}\n(function() {\n\tvar dlens/*:Array<number>*/ = [];\n\tvar i = 0;\n\tfor(;i<32; i++) dlens.push(5);\n\tbuild_tree(dlens, fix_dmap, 32);\n\n\tvar clens/*:Array<number>*/ = [];\n\ti = 0;\n\tfor(; i<=143; i++) clens.push(8);\n\tfor(; i<=255; i++) clens.push(9);\n\tfor(; i<=279; i++) clens.push(7);\n\tfor(; i<=287; i++) clens.push(8);\n\tbuild_tree(clens, fix_lmap, 288);\n})();var _deflateRaw = /*#__PURE__*/(function _deflateRawIIFE() {\n\tvar DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];\n\tvar j = 0, k = 0;\n\tfor(; j < DST_LN.length - 1; ++j) {\n\t\tfor(; k < DST_LN[j+1]; ++k) DST_LN_RE[k] = j;\n\t}\n\tfor(;k < 32768; ++k) DST_LN_RE[k] = 29;\n\n\tvar LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];\n\tfor(j = 0, k = 0; j < LEN_LN.length - 1; ++j) {\n\t\tfor(; k < LEN_LN[j+1]; ++k) LEN_LN_RE[k] = j;\n\t}\n\n\tfunction write_stored(data, out) {\n\t\tvar boff = 0;\n\t\twhile(boff < data.length) {\n\t\t\tvar L = Math.min(0xFFFF, data.length - boff);\n\t\t\tvar h = boff + L == data.length;\n\t\t\tout.write_shift(1, +h);\n\t\t\tout.write_shift(2, L);\n\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t}\n\t\treturn out.l;\n\t}\n\n\t/* Fixed Huffman */\n\tfunction write_huff_fixed(data, out) {\n\t\tvar bl = 0;\n\t\tvar boff = 0;\n\t\tvar addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];\n\t\twhile(boff < data.length) {\n\t\t\tvar L = /* data.length - boff; */ Math.min(0xFFFF, data.length - boff);\n\n\t\t\t/* write a stored block for short data */\n\t\t\tif(L < 10) {\n\t\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line\n\t\t\t\tif(bl & 7) bl += 8 - (bl & 7);\n\t\t\t\tout.l = (bl / 8) | 0;\n\t\t\t\tout.write_shift(2, L);\n\t\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t\t\tbl = out.l * 8;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line\n\t\t\tvar hash = 0;\n\t\t\twhile(L-- > 0) {\n\t\t\t\tvar d = data[boff];\n\t\t\t\thash = ((hash << 5) ^ d) & 0x7FFF;\n\n\t\t\t\tvar match = -1, mlen = 0;\n\n\t\t\t\tif((match = addrs[hash])) {\n\t\t\t\t\tmatch |= boff & ~0x7FFF;\n\t\t\t\t\tif(match > boff) match -= 0x8000;\n\t\t\t\t\tif(match < boff) while(data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;\n\t\t\t\t}\n\n\t\t\t\tif(mlen > 2) {\n\t\t\t\t\t/* Copy Token  */\n\t\t\t\t\td = LEN_LN_RE[mlen];\n\t\t\t\t\tif(d <= 22) bl = write_bits_8(out, bl, bitswap8[d+1]>>1) - 1;\n\t\t\t\t\telse {\n\t\t\t\t\t\twrite_bits_8(out, bl, 3);\n\t\t\t\t\t\tbl += 5;\n\t\t\t\t\t\twrite_bits_8(out, bl, bitswap8[d-23]>>5);\n\t\t\t\t\t\tbl += 3;\n\t\t\t\t\t}\n\t\t\t\t\tvar len_eb = (d < 8) ? 0 : ((d - 4)>>2);\n\t\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, mlen - LEN_LN[d]);\n\t\t\t\t\t\tbl += len_eb;\n\t\t\t\t\t}\n\n\t\t\t\t\td = DST_LN_RE[boff - match];\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]>>3);\n\t\t\t\t\tbl -= 3;\n\n\t\t\t\t\tvar dst_eb = d < 4 ? 0 : (d-2)>>1;\n\t\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, boff - match - DST_LN[d]);\n\t\t\t\t\t\tbl += dst_eb;\n\t\t\t\t\t}\n\t\t\t\t\tfor(var q = 0; q < mlen; ++q) {\n\t\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t\thash = ((hash << 5) ^ data[boff]) & 0x7FFF;\n\t\t\t\t\t\t++boff;\n\t\t\t\t\t}\n\t\t\t\t\tL-= mlen - 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* Literal Token */\n\t\t\t\t\tif(d <= 143) d = d + 48;\n\t\t\t\t\telse bl = write_bits_1(out, bl, 1);\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]);\n\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t++boff;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbl = write_bits_8(out, bl, 0) - 1;\n\t\t}\n\t\tout.l = ((bl + 7)/8)|0;\n\t\treturn out.l;\n\t}\n\treturn function _deflateRaw(data, out) {\n\t\tif(data.length < 8) return write_stored(data, out);\n\t\treturn write_huff_fixed(data, out);\n\t};\n})();\n\nfunction _deflate(data) {\n\tvar buf = new_buf(50+Math.floor(data.length*1.1));\n\tvar off = _deflateRaw(data, buf);\n\treturn buf.slice(0, off);\n}\n/* modified inflate function also moves original read head */\n\nvar dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);\nvar dyn_len_1 = 1, dyn_len_2 = 1;\n\n/* 5.5.3 Expanding Huffman Codes */\nfunction dyn(data, boff/*:number*/) {\n\t/* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n\tvar _HLIT = read_bits_5(data, boff) + 257; boff += 5;\n\tvar _HDIST = read_bits_5(data, boff) + 1; boff += 5;\n\tvar _HCLEN = read_bits_4(data, boff) + 4; boff += 4;\n\tvar w = 0;\n\n\t/* grab and store code lengths */\n\tvar clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n\tvar ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\tvar maxlen = 1;\n\tvar bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar L = clens.length; /* 19 */\n\tfor(var i = 0; i < _HCLEN; ++i) {\n\t\tclens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n\t\tif(maxlen < w) maxlen = w;\n\t\tbl_count[w]++;\n\t\tboff += 3;\n\t}\n\n\t/* build code tree */\n\tvar ccode = 0;\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;\n\tfor(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n\t/* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bitswap8[ctree[i]]>>(8-cleni);\n\t\t\tfor(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);\n\t\t}\n\t}\n\n\t/* read literal and dist codes at once */\n\tvar hcodes/*:Array<number>*/ = [];\n\tmaxlen = 1;\n\tfor(; hcodes.length < _HLIT + _HDIST;) {\n\t\tccode = dyn_cmap[read_bits_7(data, boff)];\n\t\tboff += ccode & 7;\n\t\tswitch((ccode >>>= 3)) {\n\t\t\tcase 16:\n\t\t\t\tw = 3 + read_bits_2(data, boff); boff += 2;\n\t\t\t\tccode = hcodes[hcodes.length - 1];\n\t\t\t\twhile(w-- > 0) hcodes.push(ccode);\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tw = 3 + read_bits_3(data, boff); boff += 3;\n\t\t\t\twhile(w-- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tcase 18:\n\t\t\t\tw = 11 + read_bits_7(data, boff); boff += 7;\n\t\t\t\twhile(w -- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thcodes.push(ccode);\n\t\t\t\tif(maxlen < ccode) maxlen = ccode;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* build literal / length trees */\n\tvar h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);\n\tfor(i = _HLIT; i < 286; ++i) h1[i] = 0;\n\tfor(i = _HDIST; i < 30; ++i) h2[i] = 0;\n\tdyn_len_1 = build_tree(h1, dyn_lmap, 286);\n\tdyn_len_2 = build_tree(h2, dyn_dmap, 30);\n\treturn boff;\n}\n\n/* return [ data, bytesRead ] */\nfunction inflate(data, usz/*:number*/) {\n\t/* shortcircuit for empty buffer [0x03, 0x00] */\n\tif(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }\n\n\t/* bit offset */\n\tvar boff = 0;\n\n\t/* header includes final bit and type bits */\n\tvar header = 0;\n\n\tvar outbuf = new_unsafe_buf(usz ? usz : (1<<18));\n\tvar woff = 0;\n\tvar OL = outbuf.length>>>0;\n\tvar max_len_1 = 0, max_len_2 = 0;\n\n\twhile((header&1) == 0) {\n\t\theader = read_bits_3(data, boff); boff += 3;\n\t\tif((header >>> 1) == 0) {\n\t\t\t/* Stored block */\n\t\t\tif(boff & 7) boff += 8 - (boff&7);\n\t\t\t/* 2 bytes sz, 2 bytes bit inverse */\n\t\t\tvar sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;\n\t\t\tboff += 32;\n\t\t\t/* push sz bytes */\n\t\t\tif(sz > 0) {\n\t\t\t\tif(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }\n\t\t\t\twhile(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }\n\t\t\t}\n\t\t\tcontinue;\n\t\t} else if((header >> 1) == 1) {\n\t\t\t/* Fixed Huffman */\n\t\t\tmax_len_1 = 9; max_len_2 = 5;\n\t\t} else {\n\t\t\t/* Dynamic Huffman */\n\t\t\tboff = dyn(data, boff);\n\t\t\tmax_len_1 = dyn_len_1; max_len_2 = dyn_len_2;\n\t\t}\n\t\tfor(;;) { // while(true) is apparently out of vogue in modern JS circles\n\t\t\tif(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }\n\t\t\t/* ingest code and move read head */\n\t\t\tvar bits = read_bits_n(data, boff, max_len_1);\n\t\t\tvar code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t/* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n\t\t\tif(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;\n\t\t\telse if(code == 256) break;\n\t\t\telse {\n\t\t\t\tcode -= 257;\n\t\t\t\tvar len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;\n\t\t\t\tvar tgt = woff + LEN_LN[code];\n\t\t\t\t/* length extra bits */\n\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\ttgt += read_bits_n(data, boff, len_eb);\n\t\t\t\t\tboff += len_eb;\n\t\t\t\t}\n\n\t\t\t\t/* dist code */\n\t\t\t\tbits = read_bits_n(data, boff, max_len_2);\n\t\t\t\tcode = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n\t\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t\tvar dst_eb = (code < 4 ? 0 : (code-2)>>1);\n\t\t\t\tvar dst = DST_LN[code];\n\t\t\t\t/* dist extra bits */\n\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\tdst += read_bits_n(data, boff, dst_eb);\n\t\t\t\t\tboff += dst_eb;\n\t\t\t\t}\n\n\t\t\t\t/* in the common case, manual byte copy is faster than TA set / Buffer copy */\n\t\t\t\tif(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt + 100); OL = outbuf.length; }\n\t\t\t\twhile(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }\n\t\t\t}\n\t\t}\n\t}\n\tif(usz) return [outbuf, (boff+7)>>>3];\n\treturn [outbuf.slice(0, woff), (boff+7)>>>3];\n}\n\nfunction _inflate(payload, usz) {\n\tvar data = payload.slice(payload.l||0);\n\tvar out = inflate(data, usz);\n\tpayload.l += out[1];\n\treturn out[0];\n}\n\nfunction warn_or_throw(wrn, msg) {\n\tif(wrn) { if(typeof console !== 'undefined') console.error(msg); }\n\telse throw new Error(msg);\n}\n\nfunction parse_zip(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\n\tvar blob/*:CFBlob*/ = /*::(*/file/*:: :any)*/;\n\tprep_blob(blob, 0);\n\n\tvar FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o, { root: options.root });\n\n\t/* find end of central directory, start just after signature */\n\tvar i = blob.length - 4;\n\twhile((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;\n\tblob.l = i + 4;\n\n\t/* parse end of central directory */\n\tblob.l += 4;\n\tvar fcnt = blob.read_shift(2);\n\tblob.l += 6;\n\tvar start_cd = blob.read_shift(4);\n\n\t/* parse central directory */\n\tblob.l = start_cd;\n\n\tfor(i = 0; i < fcnt; ++i) {\n\t\t/* trust local file header instead of CD entry */\n\t\tblob.l += 20;\n\t\tvar csz = blob.read_shift(4);\n\t\tvar usz = blob.read_shift(4);\n\t\tvar namelen = blob.read_shift(2);\n\t\tvar efsz = blob.read_shift(2);\n\t\tvar fcsz = blob.read_shift(2);\n\t\tblob.l += 8;\n\t\tvar offset = blob.read_shift(4);\n\t\tvar EF = parse_extra_field(/*::(*/blob.slice(blob.l+namelen, blob.l+namelen+efsz)/*:: :any)*/);\n\t\tblob.l += namelen + efsz + fcsz;\n\n\t\tvar L = blob.l;\n\t\tblob.l = offset + 4;\n\t\tparse_local_file(blob, csz, usz, o, EF);\n\t\tblob.l = L;\n\t}\n\treturn o;\n}\n\n\n/* head starts just after local file header signature */\nfunction parse_local_file(blob/*:CFBlob*/, csz/*:number*/, usz/*:number*/, o/*:CFBContainer*/, EF) {\n\t/* [local file header] */\n\tblob.l += 2;\n\tvar flags = blob.read_shift(2);\n\tvar meth = blob.read_shift(2);\n\tvar date = parse_dos_date(blob);\n\n\tif(flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n\tvar crc32 = blob.read_shift(4);\n\tvar _csz = blob.read_shift(4);\n\tvar _usz = blob.read_shift(4);\n\n\tvar namelen = blob.read_shift(2);\n\tvar efsz = blob.read_shift(2);\n\n\t// TODO: flags & (1<<11) // UTF8\n\tvar name = \"\"; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n\tif(efsz) {\n\t\tvar ef = parse_extra_field(/*::(*/blob.slice(blob.l, blob.l + efsz)/*:: :any)*/);\n\t\tif((ef[0x5455]||{}).mt) date = ef[0x5455].mt;\n\t\tif(((EF||{})[0x5455]||{}).mt) date = EF[0x5455].mt;\n\t}\n\tblob.l += efsz;\n\n\t/* [encryption header] */\n\n\t/* [file data] */\n\tvar data = blob.slice(blob.l, blob.l + _csz);\n\tswitch(meth) {\n\t\tcase 8: data = _inflateRawSync(blob, _usz); break;\n\t\tcase 0: break; // TODO: scan for magic number\n\t\tdefault: throw new Error(\"Unsupported ZIP Compression method \" + meth);\n\t}\n\n\t/* [data descriptor] */\n\tvar wrn = false;\n\tif(flags & 8) {\n\t\tcrc32 = blob.read_shift(4);\n\t\tif(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }\n\t\t_csz = blob.read_shift(4);\n\t\t_usz = blob.read_shift(4);\n\t}\n\n\tif(_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n\tif(_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n\t//var _crc32 = CRC32.buf(data, 0);\n\t//if((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n\tcfb_add(o, name, data, {unsafe: true, mt: date});\n}\nfunction write_zip(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes*/ {\n\tvar _opts = options || {};\n\tvar out = [], cdirs = [];\n\tvar o/*:CFBlob*/ = new_buf(1);\n\tvar method = (_opts.compression ? 8 : 0), flags = 0;\n\tvar desc = false;\n\tif(desc) flags |= 8;\n\tvar i = 0, j = 0;\n\n\tvar start_cd = 0, fcnt = 0;\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tvar crcs = [];\n\tvar sz_cd = 0;\n\n\tfor(i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\t\tvar start = start_cd;\n\n\t\t/* TODO: CP437 filename */\n\t\tvar namebuf = new_buf(fp.length);\n\t\tfor(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n\t\tnamebuf = namebuf.slice(0, namebuf.l);\n\t\tcrcs[fcnt] = CRC32.buf(/*::((*/fi.content/*::||[]):any)*/, 0);\n\n\t\tvar outbuf = fi.content/*::||[]*/;\n\t\tif(method == 8) outbuf = _deflateRawSync(outbuf);\n\n\t\t/* local file header */\n\t\to = new_buf(30);\n\t\to.write_shift(4, 0x04034b50);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\t/* TODO: last mod file time/date */\n\t\tif(fi.mt) write_dos_date(o, fi.mt);\n\t\telse o.write_shift(4, 0);\n\t\to.write_shift(-4, (flags & 8) ? 0 : crcs[fcnt]);\n\t\to.write_shift(4,  (flags & 8) ? 0 : outbuf.length);\n\t\to.write_shift(4,  (flags & 8) ? 0 : /*::(*/fi.content/*::||[])*/.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\n\t\tstart_cd += o.length;\n\t\tout.push(o);\n\t\tstart_cd += namebuf.length;\n\t\tout.push(namebuf);\n\n\t\t/* TODO: extra fields? */\n\n\t\t/* TODO: encryption header ? */\n\n\t\tstart_cd += outbuf.length;\n\t\tout.push(outbuf);\n\n\t\t/* data descriptor */\n\t\tif(flags & 8) {\n\t\t\to = new_buf(12);\n\t\t\to.write_shift(-4, crcs[fcnt]);\n\t\t\to.write_shift(4, outbuf.length);\n\t\t\to.write_shift(4, /*::(*/fi.content/*::||[])*/.length);\n\t\t\tstart_cd += o.l;\n\t\t\tout.push(o);\n\t\t}\n\n\t\t/* central directory */\n\t\to = new_buf(46);\n\t\to.write_shift(4, 0x02014b50);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\to.write_shift(4, 0); /* TODO: last mod file time/date */\n\t\to.write_shift(-4, crcs[fcnt]);\n\n\t\to.write_shift(4, outbuf.length);\n\t\to.write_shift(4, /*::(*/fi.content/*::||[])*/.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, start);\n\n\t\tsz_cd += o.l;\n\t\tcdirs.push(o);\n\t\tsz_cd += namebuf.length;\n\t\tcdirs.push(namebuf);\n\t\t++fcnt;\n\t}\n\n\t/* end of central directory */\n\to = new_buf(22);\n\to.write_shift(4, 0x06054b50);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, fcnt);\n\to.write_shift(2, fcnt);\n\to.write_shift(4, sz_cd);\n\to.write_shift(4, start_cd);\n\to.write_shift(2, 0);\n\n\treturn bconcat(([bconcat((out/*:any*/)), bconcat(cdirs), o]/*:any*/));\n}\nvar ContentTypeMap = ({\n\t\"htm\": \"text/html\",\n\t\"xml\": \"text/xml\",\n\n\t\"gif\": \"image/gif\",\n\t\"jpg\": \"image/jpeg\",\n\t\"png\": \"image/png\",\n\n\t\"mso\": \"application/x-mso\",\n\t\"thmx\": \"application/vnd.ms-officetheme\",\n\t\"sh33tj5\": \"application/octet-stream\"\n}/*:any*/);\n\nfunction get_content_type(fi/*:CFBEntry*/, fp/*:string*/)/*:string*/ {\n\tif(fi.ctype) return fi.ctype;\n\n\tvar ext = fi.name || \"\", m = ext.match(/\\.([^\\.]+)$/);\n\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\n\tif(fp) {\n\t\tm = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n\t\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\t}\n\n\treturn \"application/octet-stream\";\n}\n\n/* 76 character chunks TODO: intertwine encoding */\nfunction write_base64_76(bstr/*:string*/)/*:string*/ {\n\tvar data = Base64_encode(bstr);\n\tvar o = [];\n\tfor(var i = 0; i < data.length; i+= 76) o.push(data.slice(i, i+76));\n\treturn o.join(\"\\r\\n\") + \"\\r\\n\";\n}\n\n/*\nRules for QP:\n\t- escape =## applies for all non-display characters and literal \"=\"\n\t- space or tab at end of line must be encoded\n\t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n\t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n\nTODO: Some files from word appear to write line extensions with bare equals:\n\n```\n<table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n=\"70%\"\n```\n*/\nfunction write_quoted_printable(text/*:string*/)/*:string*/ {\n\tvar encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function(c) {\n\t\tvar w = c.charCodeAt(0).toString(16).toUpperCase();\n\t\treturn \"=\" + (w.length == 1 ? \"0\" + w : w);\n\t});\n\n\tencoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n\n\tif(encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n\tencoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n\n\tvar o/*:Array<string>*/ = [], split = encoded.split(\"\\r\\n\");\n\tfor(var si = 0; si < split.length; ++si) {\n\t\tvar str = split[si];\n\t\tif(str.length == 0) { o.push(\"\"); continue; }\n\t\tfor(var i = 0; i < str.length;) {\n\t\t\tvar end = 76;\n\t\t\tvar tmp = str.slice(i, i + end);\n\t\t\tif(tmp.charAt(end - 1) == \"=\") end --;\n\t\t\telse if(tmp.charAt(end - 2) == \"=\") end -= 2;\n\t\t\telse if(tmp.charAt(end - 3) == \"=\") end -= 3;\n\t\t\ttmp = str.slice(i, i + end);\n\t\t\ti += end;\n\t\t\tif(i < str.length) tmp += \"=\";\n\t\t\to.push(tmp);\n\t\t}\n\t}\n\n\treturn o.join(\"\\r\\n\");\n}\nfunction parse_quoted_printable(data/*:Array<string>*/)/*:RawBytes*/ {\n\tvar o = [];\n\n\t/* unify long lines */\n\tfor(var di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\twhile(di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n\t\to.push(line);\n\t}\n\n\t/* decode */\n\tfor(var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function($$) { return String.fromCharCode(parseInt($$.slice(1), 16)); });\n\treturn s2a(o.join(\"\\r\\n\"));\n}\n\n\nfunction parse_mime(cfb/*:CFBContainer*/, data/*:Array<string>*/, root/*:string*/)/*:void*/ {\n\tvar fname = \"\", cte = \"\", ctype = \"\", fdata;\n\tvar di = 0;\n\tfor(;di < 10; ++di) {\n\t\tvar line = data[di];\n\t\tif(!line || line.match(/^\\s*$/)) break;\n\t\tvar m = line.match(/^(.*?):\\s*([^\\s].*)$/);\n\t\tif(m) switch(m[1].toLowerCase()) {\n\t\t\tcase \"content-location\": fname = m[2].trim(); break;\n\t\t\tcase \"content-type\": ctype = m[2].trim(); break;\n\t\t\tcase \"content-transfer-encoding\": cte = m[2].trim(); break;\n\t\t}\n\t}\n\t++di;\n\tswitch(cte.toLowerCase()) {\n\t\tcase 'base64': fdata = s2a(Base64_decode(data.slice(di).join(\"\"))); break;\n\t\tcase 'quoted-printable': fdata = parse_quoted_printable(data.slice(di)); break;\n\t\tdefault: throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n\t}\n\tvar file = cfb_add(cfb, fname.slice(root.length), fdata, {unsafe: true});\n\tif(ctype) file.ctype = ctype;\n}\n\nfunction parse_mad(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\n\tif(a2s(file.slice(0,13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n\tvar root = (options && options.root || \"\");\n\t// $FlowIgnore\n\tvar data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n\tvar di = 0, row = \"\";\n\n\t/* if root is not specified, scan for the common prefix */\n\tfor(di = 0; di < data.length; ++di) {\n\t\trow = data[di];\n\t\tif(!/^Content-Location:/i.test(row)) continue;\n\t\trow = row.slice(row.indexOf(\"file\"));\n\t\tif(!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n\t\tif(row.slice(0, root.length) == root) continue;\n\t\twhile(root.length > 0) {\n\t\t\troot = root.slice(0, root.length - 1);\n\t\t\troot = root.slice(0, root.lastIndexOf(\"/\") + 1);\n\t\t\tif(row.slice(0,root.length) == root) break;\n\t\t}\n\t}\n\n\tvar mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n\tif(!mboundary) throw new Error(\"MAD cannot find boundary\");\n\tvar boundary = \"--\" + (mboundary[1] || \"\");\n\n\tvar FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o);\n\tvar start_di, fcnt = 0;\n\tfor(di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\tif(line !== boundary && line !== boundary + \"--\") continue;\n\t\tif(fcnt++) parse_mime(o, data.slice(start_di, di), root);\n\t\tstart_di = di;\n\t}\n\treturn o;\n}\n\nfunction write_mad(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:string*/ {\n\tvar opts = options || {};\n\tvar boundary = opts.boundary || \"SheetJS\";\n\tboundary = '------=' + boundary;\n\n\tvar out = [\n\t\t'MIME-Version: 1.0',\n\t\t'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"',\n\t\t'',\n\t\t'',\n\t\t''\n\t];\n\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tfor(var i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length);\n\t\tfi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\n\t\t/* Normalize filename */\n\t\tfp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function(c) {\n\t\t\treturn \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n\t\t}).replace(/[\\u0080-\\uFFFF]/g, function(u) {\n\t\t\treturn \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n\t\t});\n\n\t\t/* Extract content as binary string */\n\t\tvar ca = fi.content;\n\t\t// $FlowIgnore\n\t\tvar cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n\n\t\t/* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n\t\tvar dispcnt = 0, L = Math.min(1024, cstr.length), cc = 0;\n\t\tfor(var csl = 0; csl <= L; ++csl) if((cc=cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n\t\tvar qp = dispcnt >= L * 4 / 5;\n\n\t\tout.push(boundary);\n\t\tout.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n\t\tout.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n\t\tout.push('Content-Type: ' + get_content_type(fi, fp));\n\t\tout.push('');\n\n\t\tout.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n\t}\n\tout.push(boundary + '--\\r\\n');\n\treturn out.join(\"\\r\\n\");\n}\nfunction cfb_new(opts/*:?any*/)/*:CFBContainer*/ {\n\tvar o/*:CFBContainer*/ = ({}/*:any*/);\n\tinit_cfb(o, opts);\n\treturn o;\n}\n\nfunction cfb_add(cfb/*:CFBContainer*/, name/*:string*/, content/*:?RawBytes*/, opts/*:?any*/)/*:CFBEntry*/ {\n\tvar unsafe = opts && opts.unsafe;\n\tif(!unsafe) init_cfb(cfb);\n\tvar file = !unsafe && CFB.find(cfb, name);\n\tif(!file) {\n\t\tvar fpath/*:string*/ = cfb.FullPaths[0];\n\t\tif(name.slice(0, fpath.length) == fpath) fpath = name;\n\t\telse {\n\t\t\tif(fpath.slice(-1) != \"/\") fpath += \"/\";\n\t\t\tfpath = (fpath + name).replace(\"//\",\"/\");\n\t\t}\n\t\tfile = ({name: filename(name), type: 2}/*:any*/);\n\t\tcfb.FileIndex.push(file);\n\t\tcfb.FullPaths.push(fpath);\n\t\tif(!unsafe) CFB.utils.cfb_gc(cfb);\n\t}\n\t/*:: if(!file) throw new Error(\"unreachable\"); */\n\tfile.content = (content/*:any*/);\n\tfile.size = content ? content.length : 0;\n\tif(opts) {\n\t\tif(opts.CLSID) file.clsid = opts.CLSID;\n\t\tif(opts.mt) file.mt = opts.mt;\n\t\tif(opts.ct) file.ct = opts.ct;\n\t}\n\treturn file;\n}\n\nfunction cfb_del(cfb/*:CFBContainer*/, name/*:string*/)/*:boolean*/ {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex.splice(j, 1);\n\t\tcfb.FullPaths.splice(j, 1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_mov(cfb/*:CFBContainer*/, old_name/*:string*/, new_name/*:string*/)/*:boolean*/ {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, old_name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex[j].name = filename(new_name);\n\t\tcfb.FullPaths[j] = new_name;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_gc(cfb/*:CFBContainer*/)/*:void*/ { rebuild_cfb(cfb, true); }\n\nexports.find = find;\nexports.read = read;\nexports.parse = parse;\nexports.write = write;\nexports.writeFile = write_file;\nexports.utils = {\n\tcfb_new: cfb_new,\n\tcfb_add: cfb_add,\n\tcfb_del: cfb_del,\n\tcfb_mov: cfb_mov,\n\tcfb_gc: cfb_gc,\n\tReadShift: ReadShift,\n\tCheckField: CheckField,\n\tprep_blob: prep_blob,\n\tbconcat: bconcat,\n\tuse_zlib: use_zlib,\n\t_deflateRaw: _deflate,\n\t_inflateRaw: _inflate,\n\tconsts: consts\n};\n\nreturn exports;\n})();\n\nlet _fs = void 0;\nfunction set_fs(fs) { _fs = fs; }\n\n\n/* normalize data for blob ctor */\nfunction blobify(data) {\n\tif(typeof data === \"string\") return s2ab(data);\n\tif(Array.isArray(data)) return a2u(data);\n\treturn data;\n}\n/* write or download file */\nfunction write_dl(fname/*:string*/, payload/*:any*/, enc/*:?string*/) {\n\t/*global IE_SaveFile, Blob, navigator, saveAs, document, File, chrome */\n\tif(typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);\n\tif(typeof Deno !== 'undefined') {\n\t\t/* in this spot, it's safe to assume typed arrays and TextEncoder/TextDecoder exist */\n\t\tif(enc && typeof payload == \"string\") switch(enc) {\n\t\t\tcase \"utf8\": payload = new TextEncoder(enc).encode(payload); break;\n\t\t\tcase \"binary\": payload = s2ab(payload); break;\n\t\t\t/* TODO: binary equivalent */\n\t\t\tdefault: throw new Error(\"Unsupported encoding \" + enc);\n\t\t}\n\t\treturn Deno.writeFileSync(fname, payload);\n\t}\n\tvar data = (enc == \"utf8\") ? utf8write(payload) : payload;\n\t/*:: declare var IE_SaveFile: any; */\n\tif(typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\n\tif(typeof Blob !== 'undefined') {\n\t\tvar blob = new Blob([blobify(data)], {type:\"application/octet-stream\"});\n\t\t/*:: declare var navigator: any; */\n\t\tif(typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\n\t\t/*:: declare var saveAs: any; */\n\t\tif(typeof saveAs !== 'undefined') return saveAs(blob, fname);\n\t\tif(typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\n\t\t\tvar url = URL.createObjectURL(blob);\n\t\t\t/*:: declare var chrome: any; */\n\t\t\tif(typeof chrome === 'object' && typeof (chrome.downloads||{}).download == \"function\") {\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn chrome.downloads.download({ url: url, filename: fname, saveAs: true});\n\t\t\t}\n\t\t\tvar a = document.createElement(\"a\");\n\t\t\tif(a.download != null) {\n\t\t\t\t/*:: if(document.body == null) throw new Error(\"unreachable\"); */\n\t\t\t\ta.download = fname; a.href = url; document.body.appendChild(a); a.click();\n\t\t\t\t/*:: if(document.body == null) throw new Error(\"unreachable\"); */ document.body.removeChild(a);\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\t}\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar out = File(fname); out.open(\"w\"); out.encoding = \"binary\";\n\t\tif(Array.isArray(payload)) payload = a2s(payload);\n\t\tout.write(payload); out.close(); return payload;\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n\tthrow new Error(\"cannot save file \" + fname);\n}\n\n/* read binary data from file */\nfunction read_binary(path/*:string*/) {\n\tif(typeof _fs !== 'undefined') return _fs.readFileSync(path);\n\tif(typeof Deno !== 'undefined') return Deno.readFileSync(path);\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar infile = File(path); infile.open(\"r\"); infile.encoding = \"binary\";\n\t\tvar data = infile.read(); infile.close();\n\t\treturn data;\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n\tthrow new Error(\"Cannot access file \" + path);\n}\nfunction keys(o/*:any*/)/*:Array<any>*/ {\n\tvar ks = Object.keys(o), o2 = [];\n\tfor(var i = 0; i < ks.length; ++i) if(Object.prototype.hasOwnProperty.call(o, ks[i])) o2.push(ks[i]);\n\treturn o2;\n}\n\nfunction evert_key(obj/*:any*/, key/*:string*/)/*:EvertType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) if(o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\n\treturn o;\n}\n\nfunction evert(obj/*:any*/)/*:EvertType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\n\treturn o;\n}\n\nfunction evert_num(obj/*:any*/)/*:EvertNumType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i],10);\n\treturn o;\n}\n\nfunction evert_arr(obj/*:any*/)/*:EvertArrType*/ {\n\tvar o/*:EvertArrType*/ = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) {\n\t\tif(o[obj[K[i]]] == null) o[obj[K[i]]] = [];\n\t\to[obj[K[i]]].push(K[i]);\n\t}\n\treturn o;\n}\n\nvar basedate = /*#__PURE__*/new Date(1899, 11, 30, 0, 0, 0); // 2209161600000\nfunction datenum(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {\n\tvar epoch = /*#__PURE__*/v.getTime();\n\tif(date1904) epoch -= 1462*24*60*60*1000;\n\tvar dnthresh = /*#__PURE__*/basedate.getTime() + (/*#__PURE__*/v.getTimezoneOffset() - /*#__PURE__*/basedate.getTimezoneOffset()) * 60000;\n\treturn (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n}\nvar refdate = /*#__PURE__*/new Date();\nvar dnthresh = /*#__PURE__*/basedate.getTime() + (/*#__PURE__*/refdate.getTimezoneOffset() - /*#__PURE__*/basedate.getTimezoneOffset()) * 60000;\nvar refoffset = /*#__PURE__*/refdate.getTimezoneOffset();\nfunction numdate(v/*:number*/)/*:Date*/ {\n\tvar out = new Date();\n\tout.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);\n\tif (out.getTimezoneOffset() !== refoffset) {\n\t\tout.setTime(out.getTime() + (out.getTimezoneOffset() - refoffset) * 60000);\n\t}\n\treturn out;\n}\n\n/* ISO 8601 Duration */\nfunction parse_isodur(s) {\n\tvar sec = 0, mt = 0, time = false;\n\tvar m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n\tif(!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n\tfor(var i = 1; i != m.length; ++i) {\n\t\tif(!m[i]) continue;\n\t\tmt = 1;\n\t\tif(i > 3) time = true;\n\t\tswitch(m[i].slice(m[i].length-1)) {\n\t\t\tcase 'Y':\n\t\t\t\tthrow new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length-1));\n\t\t\tcase 'D': mt *= 24;\n\t\t\t\t/* falls through */\n\t\t\tcase 'H': mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M':\n\t\t\t\tif(!time) throw new Error(\"Unsupported ISO Duration Field: M\");\n\t\t\t\telse mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'S': break;\n\t\t}\n\t\tsec += mt * parseInt(m[i], 10);\n\t}\n\treturn sec;\n}\n\nvar good_pd_date_1 = /*#__PURE__*/new Date('2017-02-19T19:06:09.000Z');\nvar good_pd_date = /*#__PURE__*/isNaN(/*#__PURE__*/good_pd_date_1.getFullYear()) ? /*#__PURE__*/new Date('2/19/17') : good_pd_date_1;\nvar good_pd = /*#__PURE__*/good_pd_date.getFullYear() == 2017;\n/* parses a date as a local date */\nfunction parseDate(str/*:string|Date*/, fixdate/*:?number*/)/*:Date*/ {\n\tvar d = new Date(str);\n\tif(good_pd) {\n\t\t/*:: if(fixdate == null) fixdate = 0; */\n\t\tif(fixdate > 0) d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);\n\t\telse if(fixdate < 0) d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\n\t\treturn d;\n\t}\n\tif(str instanceof Date) return str;\n\tif(good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {\n\t\tvar s = d.getFullYear();\n\t\tif(str.indexOf(\"\" + s) > -1) return d;\n\t\td.setFullYear(d.getFullYear() + 100); return d;\n\t}\n\tvar n = str.match(/\\d+/g)||[\"2017\",\"2\",\"19\",\"0\",\"0\",\"0\"];\n\tvar out = new Date(+n[0], +n[1] - 1, +n[2], (+n[3]||0), (+n[4]||0), (+n[5]||0));\n\tif(str.indexOf(\"Z\") > -1) out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);\n\treturn out;\n}\n\nfunction cc2str(arr/*:Array<number>*/, debomit)/*:string*/ {\n\tif(has_buf && Buffer.isBuffer(arr)) {\n\t\tif(debomit) {\n\t\t\tif(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(arr.slice(2).toString(\"utf16le\"));\n\t\t\tif(arr[1] == 0xFE && arr[2] == 0xFF) return utf8write(utf16beread(arr.slice(2).toString(\"binary\")));\n\t\t}\n\t\treturn arr.toString(\"binary\");\n\t}\n\n\tif(typeof TextDecoder !== \"undefined\") try {\n\t\tif(debomit) {\n\t\t\tif(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(new TextDecoder(\"utf-16le\").decode(arr.slice(2)));\n\t\t\tif(arr[0] == 0xFE && arr[1] == 0xFF) return utf8write(new TextDecoder(\"utf-16be\").decode(arr.slice(2)));\n\t\t}\n\t\tvar rev = {\n\t\t\t\"\\u20ac\": \"\\x80\", \"\\u201a\": \"\\x82\", \"\\u0192\": \"\\x83\", \"\\u201e\": \"\\x84\",\n\t\t\t\"\\u2026\": \"\\x85\", \"\\u2020\": \"\\x86\", \"\\u2021\": \"\\x87\", \"\\u02c6\": \"\\x88\",\n\t\t\t\"\\u2030\": \"\\x89\", \"\\u0160\": \"\\x8a\", \"\\u2039\": \"\\x8b\", \"\\u0152\": \"\\x8c\",\n\t\t\t\"\\u017d\": \"\\x8e\", \"\\u2018\": \"\\x91\", \"\\u2019\": \"\\x92\", \"\\u201c\": \"\\x93\",\n\t\t\t\"\\u201d\": \"\\x94\", \"\\u2022\": \"\\x95\", \"\\u2013\": \"\\x96\", \"\\u2014\": \"\\x97\",\n\t\t\t\"\\u02dc\": \"\\x98\", \"\\u2122\": \"\\x99\", \"\\u0161\": \"\\x9a\", \"\\u203a\": \"\\x9b\",\n\t\t\t\"\\u0153\": \"\\x9c\", \"\\u017e\": \"\\x9e\", \"\\u0178\": \"\\x9f\"\n\t\t};\n\t\tif(Array.isArray(arr)) arr = new Uint8Array(arr);\n\t\treturn new TextDecoder(\"latin1\").decode(arr).replace(/[€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ]/g, function(c) { return rev[c] || c; });\n\t} catch(e) {}\n\n\tvar o = [];\n\tfor(var i = 0; i != arr.length; ++i) o.push(String.fromCharCode(arr[i]));\n\treturn o.join(\"\");\n}\n\nfunction dup(o/*:any*/)/*:any*/ {\n\tif(typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\n\tif(typeof o != 'object' || o == null) return o;\n\tif(o instanceof Date) return new Date(o.getTime());\n\tvar out = {};\n\tfor(var k in o) if(Object.prototype.hasOwnProperty.call(o, k)) out[k] = dup(o[k]);\n\treturn out;\n}\n\nfunction fill(c/*:string*/,l/*:number*/)/*:string*/ { var o = \"\"; while(o.length < l) o+=c; return o; }\n\n/* TODO: stress test */\nfunction fuzzynum(s/*:string*/)/*:number*/ {\n\tvar v/*:number*/ = Number(s);\n\tif(!isNaN(v)) return isFinite(v) ? v : NaN;\n\tif(!/\\d/.test(s)) return v;\n\tvar wt = 1;\n\tvar ss = s.replace(/([\\d]),([\\d])/g,\"$1$2\").replace(/[$]/g,\"\").replace(/[%]/g, function() { wt *= 100; return \"\";});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\tss = ss.replace(/[(](.*)[)]/,function($$, $1) { wt = -wt; return $1;});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\treturn v;\n}\nvar lower_months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nfunction fuzzydate(s/*:string*/)/*:Date*/ {\n\tvar o = new Date(s), n = new Date(NaN);\n\tvar y = o.getYear(), m = o.getMonth(), d = o.getDate();\n\tif(isNaN(d)) return n;\n\tvar lower = s.toLowerCase();\n\tif(lower.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) {\n\t\tlower = lower.replace(/[^a-z]/g,\"\").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/,\"\");\n\t\tif(lower.length > 3 && lower_months.indexOf(lower) == -1) return n;\n\t} else if(lower.match(/[a-z]/)) return n;\n\tif(y < 0 || y > 8099) return n;\n\tif((m > 0 || d > 1) && y != 101) return o;\n\tif(s.match(/[^-0-9:,\\/\\\\]/)) return n;\n\treturn o;\n}\n\nvar split_regex = /*#__PURE__*/(function() {\n\tvar safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\n\treturn function split_regex(str/*:string*/, re, def/*:string*/)/*:Array<string>*/ {\n\t\tif(safe_split_regex || typeof re == \"string\") return str.split(re);\n\t\tvar p = str.split(re), o = [p[0]];\n\t\tfor(var i = 1; i < p.length; ++i) { o.push(def); o.push(p[i]); }\n\t\treturn o;\n\t};\n})();\nfunction getdatastr(data)/*:?string*/ {\n\tif(!data) return null;\n\tif(data.content && data.type) return cc2str(data.content, true);\n\tif(data.data) return debom(data.data);\n\tif(data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\n\tif(data.asBinary) return debom(data.asBinary());\n\tif(data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(),0)));\n\treturn null;\n}\n\nfunction getdatabin(data) {\n\tif(!data) return null;\n\tif(data.data) return char_codes(data.data);\n\tif(data.asNodeBuffer && has_buf) return data.asNodeBuffer();\n\tif(data._data && data._data.getContent) {\n\t\tvar o = data._data.getContent();\n\t\tif(typeof o == \"string\") return char_codes(o);\n\t\treturn Array.prototype.slice.call(o);\n\t}\n\tif(data.content && data.type) return data.content;\n\treturn null;\n}\n\nfunction getdata(data) { return (data && data.name.slice(-4) === \".bin\") ? getdatabin(data) : getdatastr(data); }\n\n/* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\n/* OASIS does not comment on filename case sensitivity */\nfunction safegetzipfile(zip, file/*:string*/) {\n\tvar k = zip.FullPaths || keys(zip.files);\n\tvar f = file.toLowerCase().replace(/[\\/]/g, '\\\\'), g = f.replace(/\\\\/g,'\\/');\n\tfor(var i=0; i<k.length; ++i) {\n\t\tvar n = k[i].replace(/^Root Entry[\\/]/,\"\").toLowerCase();\n\t\tif(f == n || g == n) return zip.files ? zip.files[k[i]] : zip.FileIndex[i];\n\t}\n\treturn null;\n}\n\nfunction getzipfile(zip, file/*:string*/) {\n\tvar o = safegetzipfile(zip, file);\n\tif(o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n\treturn o;\n}\n\nfunction getzipdata(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {\n\tif(!safe) return getdata(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipdata(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipstr(zip, file/*:string*/, safe/*:?boolean*/)/*:?string*/ {\n\tif(!safe) return getdatastr(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipstr(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipbin(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {\n\tif(!safe) return getdatabin(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipbin(zip, file); } catch(e) { return null; }\n}\n\nfunction zipentries(zip) {\n\tvar k = zip.FullPaths || keys(zip.files), o = [];\n\tfor(var i = 0; i < k.length; ++i) if(k[i].slice(-1) != '/') o.push(k[i].replace(/^Root Entry[\\/]/, \"\"));\n\treturn o.sort();\n}\n\nfunction zip_add_file(zip, path, content) {\n\tif(zip.FullPaths) {\n\t\tif(typeof content == \"string\") {\n\t\t\tvar res;\n\t\t\tif(has_buf) res = Buffer_from(content);\n\t\t\t/* TODO: investigate performance in Edge 13 */\n\t\t\t//else if(typeof TextEncoder !== \"undefined\") res = new TextEncoder().encode(content);\n\t\t\telse res = utf8decode(content);\n\t\t\treturn CFB.utils.cfb_add(zip, path, res);\n\t\t}\n\t\tCFB.utils.cfb_add(zip, path, content);\n\t}\n\telse zip.file(path, content);\n}\n\nfunction zip_new() { return CFB.utils.cfb_new(); }\n\nfunction zip_read(d, o) {\n\tswitch(o.type) {\n\t\tcase \"base64\": return CFB.read(d, { type: \"base64\" });\n\t\tcase \"binary\": return CFB.read(d, { type: \"binary\" });\n\t\tcase \"buffer\": case \"array\": return CFB.read(d, { type: \"buffer\" });\n\t}\n\tthrow new Error(\"Unrecognized type \" + o.type);\n}\n\nfunction resolve_path(path/*:string*/, base/*:string*/)/*:string*/ {\n\tif(path.charAt(0) == \"/\") return path.slice(1);\n\tvar result = base.split('/');\n\tif(base.slice(-1) != \"/\") result.pop(); // folder path\n\tvar target = path.split('/');\n\twhile (target.length !== 0) {\n\t\tvar step = target.shift();\n\t\tif (step === '..') result.pop();\n\t\telse if (step !== '.') result.push(step);\n\t}\n\treturn result.join('/');\n}\nvar XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\nvar attregexg=/([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\nvar tagregex1=/<[\\/\\?]?[a-zA-Z0-9:_-]+(?:\\s+[^\"\\s?>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s=]+))*\\s*[\\/\\?]?>/mg, tagregex2 = /<[^>]*>/g;\nvar tagregex = /*#__PURE__*/XML_HEADER.match(tagregex1) ? tagregex1 : tagregex2;\nvar nsregex=/<\\w*:/, nsregex2 = /<(\\/?)\\w+:/;\nfunction parsexmltag(tag/*:string*/, skip_root/*:?boolean*/, skip_LC/*:?boolean*/)/*:any*/ {\n\tvar z = ({}/*:any*/);\n\tvar eq = 0, c = 0;\n\tfor(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n\tif(!skip_root) z[0] = tag.slice(0, eq);\n\tif(eq === tag.length) return z;\n\tvar m = tag.match(attregexg), j=0, v=\"\", i=0, q=\"\", cc=\"\", quot = 1;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\tcc = m[i];\n\t\tfor(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;\n\t\tq = cc.slice(0,c).trim();\n\t\twhile(cc.charCodeAt(c+1) == 32) ++c;\n\t\tquot = ((eq=cc.charCodeAt(c+1)) == 34 || eq == 39) ? 1 : 0;\n\t\tv = cc.slice(c+1+quot, cc.length-quot);\n\t\tfor(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;\n\t\tif(j===q.length) {\n\t\t\tif(q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\n\t\t\tz[q] = v;\n\t\t\tif(!skip_LC) z[q.toLowerCase()] = v;\n\t\t}\n\t\telse {\n\t\t\tvar k = (j===5 && q.slice(0,5)===\"xmlns\"?\"xmlns\":\"\")+q.slice(j+1);\n\t\t\tif(z[k] && q.slice(j-3,j) == \"ext\") continue; // from ods\n\t\t\tz[k] = v;\n\t\t\tif(!skip_LC) z[k.toLowerCase()] = v;\n\t\t}\n\t}\n\treturn z;\n}\nfunction strip_ns(x/*:string*/)/*:string*/ { return x.replace(nsregex2, \"<$1\"); }\n\nvar encodings = {\n\t'&quot;': '\"',\n\t'&apos;': \"'\",\n\t'&gt;': '>',\n\t'&lt;': '<',\n\t'&amp;': '&'\n};\nvar rencoding = /*#__PURE__*/evert(encodings);\n//var rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\nvar unescapexml/*:StringConv*/ = /*#__PURE__*/(function() {\n\t/* 22.4.2.4 bstr (Basic String) */\n\tvar encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/ig, coderegex = /_x([\\da-fA-F]{4})_/ig;\n\treturn function unescapexml(text/*:string*/)/*:string*/ {\n\t\tvar s = text + '', i = s.indexOf(\"<![CDATA[\");\n\t\tif(i == -1) return s.replace(encregex, function($$, $1) { return encodings[$$]||String.fromCharCode(parseInt($1,$$.indexOf(\"x\")>-1?16:10))||$$; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});\n\t\tvar j = s.indexOf(\"]]>\");\n\t\treturn unescapexml(s.slice(0, i)) + s.slice(i+9,j) + unescapexml(s.slice(j+3));\n\t};\n})();\n\nvar decregex=/[&<>'\"]/g, charegex = /[\\u0000-\\u0008\\u000b-\\u001f]/g;\nfunction escapexml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(charegex,function(s) { return \"_x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \"_\";});\n}\nfunction escapexmltag(text/*:string*/)/*:string*/{ return escapexml(text).replace(/ /g,\"_x0020_\"); }\n\nvar htmlcharegex = /[\\u0000-\\u001f]/g;\nfunction escapehtml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(/\\n/g, \"<br/>\").replace(htmlcharegex,function(s) { return \"&#x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \";\"; });\n}\n\nfunction escapexlml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(htmlcharegex,function(s) { return \"&#x\" + (s.charCodeAt(0).toString(16)).toUpperCase() + \";\"; });\n}\n\n/* TODO: handle codepages */\nvar xlml_fixstr/*:StringConv*/ = /*#__PURE__*/(function() {\n\tvar entregex = /&#(\\d+);/g;\n\tfunction entrepl($$/*:string*/,$1/*:string*/)/*:string*/ { return String.fromCharCode(parseInt($1,10)); }\n\treturn function xlml_fixstr(str/*:string*/)/*:string*/ { return str.replace(entregex,entrepl); };\n})();\nfunction xlml_unfixstr(str/*:string*/)/*:string*/ { return str.replace(/(\\r\\n|[\\r\\n])/g,\"\\&#10;\"); }\n\nfunction parsexmlbool(value/*:any*/)/*:boolean*/ {\n\tswitch(value) {\n\t\tcase 1: case true: case '1': case 'true': case 'TRUE': return true;\n\t\t/* case '0': case 'false': case 'FALSE':*/\n\t\tdefault: return false;\n\t}\n}\n\nfunction utf8reada(orig/*:string*/)/*:string*/ {\n\tvar out = \"\", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;\n\twhile (i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tif (c < 128) { out += String.fromCharCode(c); continue; }\n\t\td = orig.charCodeAt(i++);\n\t\tif (c>191 && c<224) { f = ((c & 31) << 6); f |= (d & 63); out += String.fromCharCode(f); continue; }\n\t\te = orig.charCodeAt(i++);\n\t\tif (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }\n\t\tf = orig.charCodeAt(i++);\n\t\tw = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;\n\t\tout += String.fromCharCode(0xD800 + ((w>>>10)&1023));\n\t\tout += String.fromCharCode(0xDC00 + (w&1023));\n\t}\n\treturn out;\n}\n\nfunction utf8readb(data) {\n\tvar out = new_raw_buf(2*data.length), w, i, j = 1, k = 0, ww=0, c;\n\tfor(i = 0; i < data.length; i+=j) {\n\t\tj = 1;\n\t\tif((c=data.charCodeAt(i)) < 128) w = c;\n\t\telse if(c < 224) { w = (c&31)*64+(data.charCodeAt(i+1)&63); j=2; }\n\t\telse if(c < 240) { w=(c&15)*4096+(data.charCodeAt(i+1)&63)*64+(data.charCodeAt(i+2)&63); j=3; }\n\t\telse { j = 4;\n\t\t\tw = (c & 7)*262144+(data.charCodeAt(i+1)&63)*4096+(data.charCodeAt(i+2)&63)*64+(data.charCodeAt(i+3)&63);\n\t\t\tw -= 65536; ww = 0xD800 + ((w>>>10)&1023); w = 0xDC00 + (w&1023);\n\t\t}\n\t\tif(ww !== 0) { out[k++] = ww&255; out[k++] = ww>>>8; ww = 0; }\n\t\tout[k++] = w%256; out[k++] = w>>>8;\n\t}\n\treturn out.slice(0,k).toString('ucs2');\n}\n\nfunction utf8readc(data) { return Buffer_from(data, 'binary').toString('utf8'); }\n\nvar utf8corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\nvar utf8read = has_buf && (/*#__PURE__*/utf8readc(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readc || /*#__PURE__*/utf8readb(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readb) || utf8reada;\n\nvar utf8write/*:StringConv*/ = has_buf ? function(data) { return Buffer_from(data, 'utf8').toString(\"binary\"); } : function(orig/*:string*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [], i = 0, c = 0, d = 0;\n\twhile(i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tswitch(true) {\n\t\t\tcase c < 128: out.push(String.fromCharCode(c)); break;\n\t\t\tcase c < 2048:\n\t\t\t\tout.push(String.fromCharCode(192 + (c >> 6)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t\t\tbreak;\n\t\t\tcase c >= 55296 && c < 57344:\n\t\t\t\tc -= 55296; d = orig.charCodeAt(i++) - 56320 + (c<<10);\n\t\t\t\tout.push(String.fromCharCode(240 + ((d >>18) & 7)));\n\t\t\t\tout.push(String.fromCharCode(144 + ((d >>12) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((d >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (d & 63)));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tout.push(String.fromCharCode(224 + (c >> 12)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((c >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t}\n\t}\n\treturn out.join(\"\");\n};\n\n// matches <foo>...</foo> extracts content\nvar matchtag = /*#__PURE__*/(function() {\n\tvar mtcache/*:{[k:string]:RegExp}*/ = ({}/*:any*/);\n\treturn function matchtag(f/*:string*/,g/*:?string*/)/*:RegExp*/ {\n\t\tvar t = f+\"|\"+(g||\"\");\n\t\tif(mtcache[t]) return mtcache[t];\n\t\treturn (mtcache[t] = new RegExp('<(?:\\\\w+:)?'+f+'(?: xml:space=\"preserve\")?(?:[^>]*)>([\\\\s\\\\S]*?)</(?:\\\\w+:)?'+f+'>',((g||\"\")/*:any*/)));\n\t};\n})();\n\nvar htmldecode/*:{(s:string):string}*/ = /*#__PURE__*/(function() {\n\tvar entities/*:Array<[RegExp, string]>*/ = [\n\t\t['nbsp', ' '], ['middot', '·'],\n\t\t['quot', '\"'], ['apos', \"'\"], ['gt',   '>'], ['lt',   '<'], ['amp',  '&']\n\t].map(function(x/*:[string, string]*/) { return [new RegExp('&' + x[0] + ';', \"ig\"), x[1]]; });\n\treturn function htmldecode(str/*:string*/)/*:string*/ {\n\t\tvar o = str\n\t\t\t\t// Remove new lines and spaces from start of content\n\t\t\t\t.replace(/^[\\t\\n\\r ]+/, \"\")\n\t\t\t\t// Remove new lines and spaces from end of content\n\t\t\t\t.replace(/[\\t\\n\\r ]+$/,\"\")\n\t\t\t\t// Added line which removes any white space characters after and before html tags\n\t\t\t\t.replace(/>\\s+/g,\">\").replace(/\\s+</g,\"<\")\n\t\t\t\t// Replace remaining new lines and spaces with space\n\t\t\t\t.replace(/[\\t\\n\\r ]+/g, \" \")\n\t\t\t\t// Replace <br> tags with new lines\n\t\t\t\t.replace(/<\\s*[bB][rR]\\s*\\/?>/g,\"\\n\")\n\t\t\t\t// Strip HTML elements\n\t\t\t\t.replace(/<[^>]*>/g,\"\");\n\t\tfor(var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\n\t\treturn o;\n\t};\n})();\n\nvar vtregex = /*#__PURE__*/(function(){ var vt_cache = {};\n\treturn function vt_regex(bt) {\n\t\tif(vt_cache[bt] !== undefined) return vt_cache[bt];\n\t\treturn (vt_cache[bt] = new RegExp(\"<(?:vt:)?\" + bt + \">([\\\\s\\\\S]*?)</(?:vt:)?\" + bt + \">\", 'g') );\n};})();\nvar vtvregex = /<\\/?(?:vt:)?variant>/g, vtmregex = /<(?:vt:)([^>]*)>([\\s\\S]*)</;\nfunction parseVector(data/*:string*/, opts)/*:Array<{v:string,t:string}>*/ {\n\tvar h = parsexmltag(data);\n\n\tvar matches/*:Array<string>*/ = data.match(vtregex(h.baseType))||[];\n\tvar res/*:Array<any>*/ = [];\n\tif(matches.length != h.size) {\n\t\tif(opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\n\t\treturn res;\n\t}\n\tmatches.forEach(function(x/*:string*/) {\n\t\tvar v = x.replace(vtvregex,\"\").match(vtmregex);\n\t\tif(v) res.push({v:utf8read(v[2]), t:v[1]});\n\t});\n\treturn res;\n}\n\nvar wtregex = /(^\\s|\\s$|\\n)/;\nfunction writetag(f/*:string*/,g/*:string*/)/*:string*/ { return '<' + f + (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>'; }\n\nfunction wxt_helper(h)/*:string*/ { return keys(h).map(function(k) { return \" \" + k + '=\"' + h[k] + '\"';}).join(\"\"); }\nfunction writextag(f/*:string*/,g/*:?string*/,h) { return '<' + f + ((h != null) ? wxt_helper(h) : \"\") + ((g != null) ? (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';}\n\nfunction write_w3cdtf(d/*:Date*/, t/*:?boolean*/)/*:string*/ { try { return d.toISOString().replace(/\\.\\d*/,\"\"); } catch(e) { if(t) throw e; } return \"\"; }\n\nfunction write_vt(s, xlsx/*:?boolean*/)/*:string*/ {\n\tswitch(typeof s) {\n\t\tcase 'string':\n\t\t\tvar o = writextag('vt:lpwstr', escapexml(s));\n\t\t\tif(xlsx) o = o.replace(/&quot;/g, \"_x0022_\");\n\t\t\treturn o;\n\t\tcase 'number': return writextag((s|0)==s?'vt:i4':'vt:r8', escapexml(String(s)));\n\t\tcase 'boolean': return writextag('vt:bool',s?'true':'false');\n\t}\n\tif(s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\n\tthrow new Error(\"Unable to serialize \" + s);\n}\n\nfunction xlml_normalize(d)/*:string*/ {\n\tif(has_buf &&/*::typeof Buffer !== \"undefined\" && d != null && d instanceof Buffer &&*/ Buffer.isBuffer(d)) return d.toString('utf8');\n\tif(typeof d === 'string') return d;\n\t/* duktape */\n\tif(typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\n\tthrow new Error(\"Bad input format: expected Buffer or string\");\n}\n/* UOS uses CJK in tags */\nvar xlmlregex = /<(\\/?)([^\\s?><!\\/:]*:|)([^\\s?<>:\\/]+)(?:[\\s?:\\/][^>]*)?>/mg;\n//var xlmlregex = /<(\\/?)([a-z0-9]*:|)(\\w+)[^>]*>/mg;\n\nvar XMLNS = ({\n\tCORE_PROPS: 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n\tCUST_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\",\n\tEXT_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\",\n\tCT: 'http://schemas.openxmlformats.org/package/2006/content-types',\n\tRELS: 'http://schemas.openxmlformats.org/package/2006/relationships',\n\tTCMNT: 'http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments',\n\t'dc': 'http://purl.org/dc/elements/1.1/',\n\t'dcterms': 'http://purl.org/dc/terms/',\n\t'dcmitype': 'http://purl.org/dc/dcmitype/',\n\t'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\n\t'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n\t'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\n\t'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n\t'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n\t'xsd': 'http://www.w3.org/2001/XMLSchema'\n}/*:any*/);\n\nvar XMLNS_main = [\n\t'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n\t'http://purl.oclc.org/ooxml/spreadsheetml/main',\n\t'http://schemas.microsoft.com/office/excel/2006/main',\n\t'http://schemas.microsoft.com/office/excel/2006/2'\n];\n\nvar XLMLNS = ({\n\t'o':    'urn:schemas-microsoft-com:office:office',\n\t'x':    'urn:schemas-microsoft-com:office:excel',\n\t'ss':   'urn:schemas-microsoft-com:office:spreadsheet',\n\t'dt':   'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\n\t'mv':   'http://macVmlSchemaUri',\n\t'v':    'urn:schemas-microsoft-com:vml',\n\t'html': 'http://www.w3.org/TR/REC-html40'\n}/*:any*/);\nfunction read_double_le(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ {\n\tvar s = 1 - 2 * (b[idx + 7] >>> 7);\n\tvar e = ((b[idx + 7] & 0x7f) << 4) + ((b[idx + 6] >>> 4) & 0x0f);\n\tvar m = (b[idx+6]&0x0f);\n\tfor(var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\n\tif(e == 0x7ff) return m == 0 ? (s * Infinity) : NaN;\n\tif(e == 0) e = -1022;\n\telse { e -= 1023; m += Math.pow(2,52); }\n\treturn s * Math.pow(2, e - 52) * m;\n}\n\nfunction write_double_le(b/*:RawBytes|CFBlob*/, v/*:number*/, idx/*:number*/) {\n\tvar bs = ((((v < 0) || (1/v == -Infinity)) ? 1 : 0) << 7), e = 0, m = 0;\n\tvar av = bs ? (-v) : v;\n\tif(!isFinite(av)) { e = 0x7ff; m = isNaN(v) ? 0x6969 : 0; }\n\telse if(av == 0) e = m = 0;\n\telse {\n\t\te = Math.floor(Math.log(av) / Math.LN2);\n\t\tm = av * Math.pow(2, 52 - e);\n\t\tif((e <= -1023) && (!isFinite(m) || (m < Math.pow(2,52)))) { e = -1022; }\n\t\telse { m -= Math.pow(2,52); e+=1023; }\n\t}\n\tfor(var i = 0; i <= 5; ++i, m/=256) b[idx + i] = m & 0xff;\n\tb[idx + 6] = ((e & 0x0f) << 4) | (m & 0xf);\n\tb[idx + 7] = (e >> 4) | bs;\n}\n\nvar ___toBuffer = function(bufs/*:Array<Array<RawBytes> >*/)/*:RawBytes*/ { var x=[],w=10240; for(var i=0;i<bufs[0].length;++i) if(bufs[0][i]) for(var j=0,L=bufs[0][i].length;j<L;j+=w) x.push.apply(x, bufs[0][i].slice(j,j+w)); return x; };\nvar __toBuffer = has_buf ? function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat(bufs[0].map(function(x) { return Buffer.isBuffer(x) ? x : Buffer_from(x); })) : ___toBuffer(bufs);} : ___toBuffer;\n\nvar ___utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join(\"\").replace(chr0,''); };\nvar __utf16le = has_buf ? function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___utf16le(b,s,e); return b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/; } : ___utf16le;\n\nvar ___hexlify = function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<s+l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2)); return ss.join(\"\"); };\nvar __hexlify = has_buf ? function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { return Buffer.isBuffer(b)/*:: && b instanceof Buffer*/ ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); } : ___hexlify;\n\nvar ___utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { var ss=[]; for(var i=s; i<e; i++) ss.push(String.fromCharCode(__readUInt8(b,i))); return ss.join(\"\"); };\nvar __utf8 = has_buf ? function utf8_b(b/*:RawBytes|CFBlob*/, s/*:number*/, e/*:number*/) { return (Buffer.isBuffer(b)/*:: && (b instanceof Buffer)*/) ? b.toString('utf8',s,e) : ___utf8(b,s,e); } : ___utf8;\n\nvar ___lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __lpstr = ___lpstr;\n\nvar ___cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __cpstr = ___cpstr;\n\nvar ___lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __lpwstr = ___lpwstr;\n\nvar ___lpp4 = function lpp4_(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf16le(b, i+4,i+4+len) : \"\";};\nvar __lpp4 = ___lpp4;\n\nvar ___8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len) : \"\";};\nvar __8lpp4 = ___8lpp4;\n\nvar ___double = function(b/*:RawBytes|CFBlob*/, idx/*:number*/) { return read_double_le(b, idx);};\nvar __double = ___double;\n\nvar is_buf = function is_buf_a(a) { return Array.isArray(a) || (typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array); };\n\nif(has_buf/*:: && typeof Buffer !== 'undefined'*/) {\n\t__lpstr = function lpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__cpstr = function cpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___cpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__lpwstr = function lpwstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpwstr(b, i); var len = 2*b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len-1);};\n\t__lpp4 = function lpp4_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len);};\n\t__8lpp4 = function lpp4_8b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___8lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf8',i+4,i+4+len);};\n\t__double = function double_(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(Buffer.isBuffer(b)/*::&& b instanceof Buffer*/) return b.readDoubleLE(i); return ___double(b,i); };\n\tis_buf = function is_buf_b(a) { return Buffer.isBuffer(a) || Array.isArray(a) || (typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array); };\n}\n\n/* from js-xls */\nfunction cpdoit() {\n\t__utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { return $cptable.utils.decode(1200, b.slice(s,e)).replace(chr0, ''); };\n\t__utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { return $cptable.utils.decode(65001, b.slice(s,e)); };\n\t__lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(current_ansi, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(current_codepage, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(1200, b.slice(i+4,i+4+len-1)) : \"\";};\n\t__lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(1200, b.slice(i+4,i+4+len)) : \"\";};\n\t__8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(65001, b.slice(i+4,i+4+len)) : \"\";};\n}\nif(typeof $cptable !== 'undefined') cpdoit();\n\nvar __readUInt8 = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx]; };\nvar __readUInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+1]*(1<<8))+b[idx]; };\nvar __readInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { var u = (b[idx+1]*(1<<8))+b[idx]; return (u < 0x8000) ? u : ((0xffff - u + 1) * -1); };\nvar __readUInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\nvar __readInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+3]<<24)|(b[idx+2]<<16)|(b[idx+1]<<8)|b[idx]; };\nvar __readInt32BE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx]<<24)|(b[idx+1]<<16)|(b[idx+2]<<8)|b[idx+3]; };\n\nfunction ReadShift(size/*:number*/, t/*:?string*/)/*:number|string*/ {\n\tvar o=\"\", oI/*:: :number = 0*/, oR, oo=[], w, vv, i, loc;\n\tswitch(t) {\n\t\tcase 'dbcs':\n\t\t\tloc = this.l;\n\t\t\tif(has_buf && Buffer.isBuffer(this)) o = this.slice(this.l, this.l+2*size).toString(\"utf16le\");\n\t\t\telse for(i = 0; i < size; ++i) { o+=String.fromCharCode(__readUInt16LE(this, loc)); loc+=2; }\n\t\t\tsize *= 2;\n\t\t\tbreak;\n\n\t\tcase 'utf8': o = __utf8(this, this.l, this.l + size); break;\n\t\tcase 'utf16le': size *= 2; o = __utf16le(this, this.l, this.l + size); break;\n\n\t\tcase 'wstr':\n\t\t\tif(typeof $cptable !== 'undefined') o = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l+2*size));\n\t\t\telse return ReadShift.call(this, size, 'dbcs');\n\t\t\tsize = 2 * size; break;\n\n\t\t/* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\n\t\tcase 'lpstr-ansi': o = __lpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\tcase 'lpstr-cp': o = __cpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\n\t\tcase 'lpwstr': o = __lpwstr(this, this.l); size = 4 + 2 * __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\n\t\tcase 'lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __lpp4(this, this.l); if(size & 0x02) size += 2; break;\n\t\t/* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\n\t\tcase '8lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __8lpp4(this, this.l); if(size & 0x03) size += 4 - (size & 0x03); break;\n\n\t\tcase 'cstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt8(this, this.l + size++))!==0) oo.push(_getchar(w));\n\t\t\to = oo.join(\"\"); break;\n\t\tcase '_wstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}\n\t\t\tsize+=2; o = oo.join(\"\"); break;\n\n\t\t/* sbcs and dbcs support continue records in the SST way TODO codepages */\n\t\tcase 'dbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i < size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt16LE(this, loc)));\n\t\t\t\tloc+=2;\n\t\t\t} o = oo.join(\"\"); size *= 2; break;\n\n\t\tcase 'cpstr':\n\t\t\tif(typeof $cptable !== 'undefined') {\n\t\t\t\to = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t/* falls through */\n\t\tcase 'sbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i != size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt8(this, loc)));\n\t\t\t\tloc+=1;\n\t\t\t} o = oo.join(\"\"); break;\n\n\t\tdefault:\n\tswitch(size) {\n\t\tcase 1: oI = __readUInt8(this, this.l); this.l++; return oI;\n\t\tcase 2: oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l); this.l += 2; return oI;\n\t\tcase 4: case -4:\n\t\t\tif(t === 'i' || ((this[this.l+3] & 0x80)===0)) { oI = ((size > 0) ? __readInt32LE : __readInt32BE)(this, this.l); this.l += 4; return oI; }\n\t\t\telse { oR = __readUInt32LE(this, this.l); this.l += 4; } return oR;\n\t\tcase 8: case -8:\n\t\t\tif(t === 'f') {\n\t\t\t\tif(size == 8) oR = __double(this, this.l);\n\t\t\t\telse oR = __double([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]], 0);\n\t\t\t\tthis.l += 8; return oR;\n\t\t\t} else size = 8;\n\t\t/* falls through */\n\t\tcase 16: o = __hexlify(this, this.l, size); break;\n\t}}\n\tthis.l+=size; return o;\n}\n\nvar __writeUInt32LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };\nvar __writeInt32LE  = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };\nvar __writeUInt16LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); };\n\nfunction WriteShift(t/*:number*/, val/*:string|number*/, f/*:?string*/)/*:any*/ {\n\tvar size = 0, i = 0;\n\tif(f === 'dbcs') {\n\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\tfor(i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\n\t\tsize = 2 * val.length;\n\t} else if(f === 'sbcs') {\n\t\tif(typeof $cptable !== 'undefined' && current_ansi == 874) {\n\t\t\t/* TODO: use tables directly, don't encode */\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tfor(i = 0; i != val.length; ++i) {\n\t\t\t\tvar cppayload = $cptable.utils.encode(current_ansi, val.charAt(i));\n\t\t\t\tthis[this.l + i] = cppayload[0];\n\t\t\t}\n\t\t} else {\n\t\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\t\tval = val.replace(/[^\\x00-\\x7F]/g, \"_\");\n\t\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\t\tfor(i = 0; i != val.length; ++i) this[this.l + i] = (val.charCodeAt(i) & 0xFF);\n\t\t}\n\t\tsize = val.length;\n\t} else if(f === 'hex') {\n\t\tfor(; i < t; ++i) {\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tthis[this.l++] = (parseInt(val.slice(2*i, 2*i+2), 16)||0);\n\t\t} return this;\n\t} else if(f === 'utf16le') {\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tvar end/*:number*/ = Math.min(this.l + t, this.length);\n\t\t\tfor(i = 0; i < Math.min(val.length, t); ++i) {\n\t\t\t\tvar cc = val.charCodeAt(i);\n\t\t\t\tthis[this.l++] = (cc & 0xff);\n\t\t\t\tthis[this.l++] = (cc >> 8);\n\t\t\t}\n\t\t\twhile(this.l < end) this[this.l++] = 0;\n\t\t\treturn this;\n\t} else /*:: if(typeof val === 'number') */ switch(t) {\n\t\tcase  1: size = 1; this[this.l] = val&0xFF; break;\n\t\tcase  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;\n\t\tcase  3: size = 3; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; val >>>= 8; this[this.l+2] = val&0xFF; break;\n\t\tcase  4: size = 4; __writeUInt32LE(this, val, this.l); break;\n\t\tcase  8: size = 8; if(f === 'f') { write_double_le(this, val, this.l); break; }\n\t\t/* falls through */\n\t\tcase 16: break;\n\t\tcase -4: size = 4; __writeInt32LE(this, val, this.l); break;\n\t}\n\tthis.l += size; return this;\n}\n\nfunction CheckField(hexstr/*:string*/, fld/*:string*/)/*:void*/ {\n\tvar m = __hexlify(this,this.l,hexstr.length>>1);\n\tif(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n\tthis.l += hexstr.length>>1;\n}\n\nfunction prep_blob(blob, pos/*:number*/)/*:void*/ {\n\tblob.l = pos;\n\tblob.read_shift = /*::(*/ReadShift/*:: :any)*/;\n\tblob.chk = CheckField;\n\tblob.write_shift = WriteShift;\n}\n\nfunction parsenoop(blob, length/*:: :number, opts?:any */) { blob.l += length; }\n\nfunction new_buf(sz/*:number*/)/*:Block*/ {\n\tvar o = new_raw_buf(sz);\n\tprep_blob(o, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.1.4 Record */\nfunction recordhopper(data, cb/*:RecordHopperCB*/, opts/*:?any*/) {\n\tif(!data) return;\n\tvar tmpbyte, cntbyte, length;\n\tprep_blob(data, data.l || 0);\n\tvar L = data.length, RT = 0, tgt = 0;\n\twhile(data.l < L) {\n\t\tRT = data.read_shift(1);\n\t\tif(RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F)<<7);\n\t\tvar R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\n\t\ttmpbyte = data.read_shift(1);\n\t\tlength = tmpbyte & 0x7F;\n\t\tfor(cntbyte = 1; cntbyte <4 && (tmpbyte & 0x80); ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F)<<(7*cntbyte);\n\t\ttgt = data.l + length;\n\t\tvar d = R.f && R.f(data, length, opts);\n\t\tdata.l = tgt;\n\t\tif(cb(d, R, RT)) return;\n\t}\n}\n\n/* control buffer usage for fixed-length buffers */\nfunction buf_array()/*:BufArray*/ {\n\tvar bufs/*:Array<Block>*/ = [], blksz = has_buf ? 256 : 2048;\n\tvar newblk = function ba_newblk(sz/*:number*/)/*:Block*/ {\n\t\tvar o/*:Block*/ = (new_buf(sz)/*:any*/);\n\t\tprep_blob(o, 0);\n\t\treturn o;\n\t};\n\n\tvar curbuf/*:Block*/ = newblk(blksz);\n\n\tvar endbuf = function ba_endbuf() {\n\t\tif(!curbuf) return;\n\t\tif(curbuf.length > curbuf.l) { curbuf = curbuf.slice(0, curbuf.l); curbuf.l = curbuf.length; }\n\t\tif(curbuf.length > 0) bufs.push(curbuf);\n\t\tcurbuf = null;\n\t};\n\n\tvar next = function ba_next(sz/*:number*/)/*:Block*/ {\n\t\tif(curbuf && (sz < (curbuf.length - curbuf.l))) return curbuf;\n\t\tendbuf();\n\t\treturn (curbuf = newblk(Math.max(sz+1, blksz)));\n\t};\n\n\tvar end = function ba_end() {\n\t\tendbuf();\n\t\treturn bconcat(bufs);\n\t};\n\n\tvar push = function ba_push(buf) { endbuf(); curbuf = buf; if(curbuf.l == null) curbuf.l = curbuf.length; next(blksz); };\n\n\treturn ({ next:next, push:push, end:end, _bufs:bufs }/*:any*/);\n}\n\nfunction write_record(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/) {\n\tvar t/*:number*/ = +type, l;\n\tif(isNaN(t)) return; // TODO: throw something here?\n\tif(!length) length = XLSBRecordEnum[t].p || (payload||[]).length || 0;\n\tl = 1 + (t >= 0x80 ? 1 : 0) + 1/* + length*/;\n\tif(length >= 0x80) ++l; if(length >= 0x4000) ++l; if(length >= 0x200000) ++l;\n\tvar o = ba.next(l);\n\tif(t <= 0x7F) o.write_shift(1, t);\n\telse {\n\t\to.write_shift(1, (t & 0x7F) + 0x80);\n\t\to.write_shift(1, (t >> 7));\n\t}\n\tfor(var i = 0; i != 4; ++i) {\n\t\tif(length >= 0x80) { o.write_shift(1, (length & 0x7F)+0x80); length >>= 7; }\n\t\telse { o.write_shift(1, length); break; }\n\t}\n\tif(/*:: length != null &&*/length > 0 && is_buf(payload)) ba.push(payload);\n}\n/* XLS ranges enforced */\nfunction shift_cell_xls(cell/*:CellAddress*/, tgt/*:any*/, opts/*:?any*/)/*:CellAddress*/ {\n\tvar out = dup(cell);\n\tif(tgt.s) {\n\t\tif(out.cRel) out.c += tgt.s.c;\n\t\tif(out.rRel) out.r += tgt.s.r;\n\t} else {\n\t\tif(out.cRel) out.c += tgt.c;\n\t\tif(out.rRel) out.r += tgt.r;\n\t}\n\tif(!opts || opts.biff < 12) {\n\t\twhile(out.c >= 0x100) out.c -= 0x100;\n\t\twhile(out.r >= 0x10000) out.r -= 0x10000;\n\t}\n\treturn out;\n}\n\nfunction shift_range_xls(cell, range, opts) {\n\tvar out = dup(cell);\n\tout.s = shift_cell_xls(out.s, range.s, opts);\n\tout.e = shift_cell_xls(out.e, range.s, opts);\n\treturn out;\n}\n\nfunction encode_cell_xls(c/*:CellAddress*/, biff/*:number*/)/*:string*/ {\n\tif(c.cRel && c.c < 0) { c = dup(c); while(c.c < 0) c.c += (biff > 8) ? 0x4000 : 0x100; }\n\tif(c.rRel && c.r < 0) { c = dup(c); while(c.r < 0) c.r += (biff > 8) ? 0x100000 : ((biff > 5) ? 0x10000 : 0x4000); }\n\tvar s = encode_cell(c);\n\tif(!c.cRel && c.cRel != null) s = fix_col(s);\n\tif(!c.rRel && c.rRel != null) s = fix_row(s);\n\treturn s;\n}\n\nfunction encode_range_xls(r, opts)/*:string*/ {\n\tif(r.s.r == 0 && !r.s.rRel) {\n\t\tif(r.e.r == (opts.biff >= 12 ? 0xFFFFF : (opts.biff >= 8 ? 0x10000 : 0x4000)) && !r.e.rRel) {\n\t\t\treturn (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\n\t\t}\n\t}\n\tif(r.s.c == 0 && !r.s.cRel) {\n\t\tif(r.e.c == (opts.biff >= 12 ? 0x3FFF : 0xFF) && !r.e.cRel) {\n\t\t\treturn (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\n\t\t}\n\t}\n\treturn encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\n}\nfunction decode_row(rowstr/*:string*/)/*:number*/ { return parseInt(unfix_row(rowstr),10) - 1; }\nfunction encode_row(row/*:number*/)/*:string*/ { return \"\" + (row + 1); }\nfunction fix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/([A-Z]|^)(\\d+)$/,\"$1$$$2\"); }\nfunction unfix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/\\$(\\d+)$/,\"$1\"); }\n\nfunction decode_col(colstr/*:string*/)/*:number*/ { var c = unfix_col(colstr), d = 0, i = 0; for(; i !== c.length; ++i) d = 26*d + c.charCodeAt(i) - 64; return d - 1; }\nfunction encode_col(col/*:number*/)/*:string*/ { if(col < 0) throw new Error(\"invalid column \" + col); var s=\"\"; for(++col; col; col=Math.floor((col-1)/26)) s = String.fromCharCode(((col-1)%26) + 65) + s; return s; }\nfunction fix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^([A-Z])/,\"$$$1\"); }\nfunction unfix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^\\$([A-Z])/,\"$1\"); }\n\nfunction split_cell(cstr/*:string*/)/*:Array<string>*/ { return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/,\"$1,$2\").split(\",\"); }\n//function decode_cell(cstr/*:string*/)/*:CellAddress*/ { var splt = split_cell(cstr); return { c:decode_col(splt[0]), r:decode_row(splt[1]) }; }\nfunction decode_cell(cstr/*:string*/)/*:CellAddress*/ {\n\tvar R = 0, C = 0;\n\tfor(var i = 0; i < cstr.length; ++i) {\n\t\tvar cc = cstr.charCodeAt(i);\n\t\tif(cc >= 48 && cc <= 57) R = 10 * R + (cc - 48);\n\t\telse if(cc >= 65 && cc <= 90) C = 26 * C + (cc - 64);\n\t}\n\treturn { c: C - 1, r:R - 1 };\n}\n//function encode_cell(cell/*:CellAddress*/)/*:string*/ { return encode_col(cell.c) + encode_row(cell.r); }\nfunction encode_cell(cell/*:CellAddress*/)/*:string*/ {\n\tvar col = cell.c + 1;\n\tvar s=\"\";\n\tfor(; col; col=((col-1)/26)|0) s = String.fromCharCode(((col-1)%26) + 65) + s;\n\treturn s + (cell.r + 1);\n}\nfunction decode_range(range/*:string*/)/*:Range*/ {\n\tvar idx = range.indexOf(\":\");\n\tif(idx == -1) return { s: decode_cell(range), e: decode_cell(range) };\n\treturn { s: decode_cell(range.slice(0, idx)), e: decode_cell(range.slice(idx + 1)) };\n}\n/*# if only one arg, it is assumed to be a Range.  If 2 args, both are cell addresses */\nfunction encode_range(cs/*:CellAddrSpec|Range*/,ce/*:?CellAddrSpec*/)/*:string*/ {\n\tif(typeof ce === 'undefined' || typeof ce === 'number') {\n/*:: if(!(cs instanceof Range)) throw \"unreachable\"; */\n\t\treturn encode_range(cs.s, cs.e);\n\t}\n/*:: if((cs instanceof Range)) throw \"unreachable\"; */\n\tif(typeof cs !== 'string') cs = encode_cell((cs/*:any*/));\n\tif(typeof ce !== 'string') ce = encode_cell((ce/*:any*/));\n/*:: if(typeof cs !== 'string') throw \"unreachable\"; */\n/*:: if(typeof ce !== 'string') throw \"unreachable\"; */\n\treturn cs == ce ? cs : cs + \":\" + ce;\n}\n\nfunction safe_decode_range(range/*:string*/)/*:Range*/ {\n\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\tvar idx = 0, i = 0, cc = 0;\n\tvar len = range.length;\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.s.c = --idx;\n\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.s.r = --idx;\n\n\tif(i === len || cc != 10) { o.e.c=o.s.c; o.e.r=o.s.r; return o; }\n\t++i;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.e.c = --idx;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.e.r = --idx;\n\treturn o;\n}\n\nfunction safe_format_cell(cell/*:Cell*/, v/*:any*/) {\n\tvar q = (cell.t == 'd' && v instanceof Date);\n\tif(cell.z != null) try { return (cell.w = SSF_format(cell.z, q ? datenum(v) : v)); } catch(e) { }\n\ttry { return (cell.w = SSF_format((cell.XF||{}).numFmtId||(q ? 14 : 0),  q ? datenum(v) : v)); } catch(e) { return ''+v; }\n}\n\nfunction format_cell(cell/*:Cell*/, v/*:any*/, o/*:any*/) {\n\tif(cell == null || cell.t == null || cell.t == 'z') return \"\";\n\tif(cell.w !== undefined) return cell.w;\n\tif(cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\n\tif(cell.t == \"e\") return BErr[cell.v] || cell.v;\n\tif(v == undefined) return safe_format_cell(cell, cell.v);\n\treturn safe_format_cell(cell, v);\n}\n\nfunction sheet_to_workbook(sheet/*:Worksheet*/, opts)/*:Workbook*/ {\n\tvar n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n\tvar sheets = {}; sheets[n] = sheet;\n\treturn { SheetNames: [n], Sheets: sheets };\n}\n\nfunction sheet_add_aoa(_ws/*:?Worksheet*/, data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tvar dense = _ws ? Array.isArray(_ws) : o.dense;\n\tif(DENSE != null && dense == null) dense = DENSE;\n\tvar ws/*:Worksheet*/ = _ws || (dense ? ([]/*:any*/) : ({}/*:any*/));\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t\tif(!ws[\"!ref\"]) ws[\"!ref\"] = \"A1:A1\";\n\t}\n\tvar range/*:Range*/ = ({s: {c:10000000, r:10000000}, e: {c:0, r:0}}/*:any*/);\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.s.c = _range.s.c;\n\t\trange.s.r = _range.s.r;\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) range.e.r = _R = _range.e.r + 1;\n\t}\n\tfor(var R = 0; R != data.length; ++R) {\n\t\tif(!data[R]) continue;\n\t\tif(!Array.isArray(data[R])) throw new Error(\"aoa_to_sheet expects an array of arrays\");\n\t\tfor(var C = 0; C != data[R].length; ++C) {\n\t\t\tif(typeof data[R][C] === 'undefined') continue;\n\t\t\tvar cell/*:Cell*/ = ({v: data[R][C] }/*:any*/);\n\t\t\tvar __R = _R + R, __C = _C + C;\n\t\t\tif(range.s.r > __R) range.s.r = __R;\n\t\t\tif(range.s.c > __C) range.s.c = __C;\n\t\t\tif(range.e.r < __R) range.e.r = __R;\n\t\t\tif(range.e.c < __C) range.e.c = __C;\n\t\t\tif(data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];\n\t\t\telse {\n\t\t\t\tif(Array.isArray(cell.v)) { cell.f = data[R][C][1]; cell.v = cell.v[0]; }\n\t\t\t\tif(cell.v === null) {\n\t\t\t\t\tif(cell.f) cell.t = 'n';\n\t\t\t\t\telse if(o.nullError) { cell.t = 'e'; cell.v = 0; }\n\t\t\t\t\telse if(!o.sheetStubs) continue;\n\t\t\t\t\telse cell.t = 'z';\n\t\t\t\t}\n\t\t\t\telse if(typeof cell.v === 'number') cell.t = 'n';\n\t\t\t\telse if(typeof cell.v === 'boolean') cell.t = 'b';\n\t\t\t\telse if(cell.v instanceof Date) {\n\t\t\t\t\tcell.z = o.dateNF || table_fmt[14];\n\t\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.w = SSF_format(cell.z, datenum(cell.v)); }\n\t\t\t\t\telse { cell.t = 'n'; cell.v = datenum(cell.v); cell.w = SSF_format(cell.z, cell.v); }\n\t\t\t\t}\n\t\t\t\telse cell.t = 's';\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\tif(!ws[__R]) ws[__R] = [];\n\t\t\t\tif(ws[__R][__C] && ws[__R][__C].z) cell.z = ws[__R][__C].z;\n\t\t\t\tws[__R][__C] = cell;\n\t\t\t} else {\n\t\t\t\tvar cell_ref = encode_cell(({c:__C,r:__R}/*:any*/));\n\t\t\t\tif(ws[cell_ref] && ws[cell_ref].z) cell.z = ws[cell_ref].z;\n\t\t\t\tws[cell_ref] = cell;\n\t\t\t}\n\t\t}\n\t}\n\tif(range.s.c < 10000000) ws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction aoa_to_sheet(data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ { return sheet_add_aoa(null, data, opts); }\n\nfunction parse_Int32LE(data) {\n\treturn data.read_shift(4, 'i');\n}\nfunction write_UInt32LE(x/*:number*/, o) {\n\tif (!o) o = new_buf(4);\n\to.write_shift(4, x);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.168 */\nfunction parse_XLWideString(data/*::, length*/)/*:string*/ {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLWideString(data/*:string*/, o) {\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(4 + 2 * data.length); }\n\to.write_shift(4, data.length);\n\tif (data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.91 */\n//function parse_LPWideString(data/*::, length*/)/*:string*/ {\n//\tvar cchCharacters = data.read_shift(2);\n//\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, \"utf16le\");\n//}\n\n/* [MS-XLSB] 2.5.143 */\nfunction parse_StrRun(data) {\n\treturn { ich: data.read_shift(2), ifnt: data.read_shift(2) };\n}\nfunction write_StrRun(run, o) {\n\tif (!o) o = new_buf(4);\n\to.write_shift(2, run.ich || 0);\n\to.write_shift(2, run.ifnt || 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.121 */\nfunction parse_RichStr(data, length/*:number*/)/*:XLString*/ {\n\tvar start = data.l;\n\tvar flags = data.read_shift(1);\n\tvar str = parse_XLWideString(data);\n\tvar rgsStrRun = [];\n\tvar z = ({ t: str, h: str }/*:any*/);\n\tif ((flags & 1) !== 0) { /* fRichStr */\n\t\t/* TODO: formatted string */\n\t\tvar dwSizeStrRun = data.read_shift(4);\n\t\tfor (var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\n\t\tz.r = rgsStrRun;\n\t}\n\telse z.r = [{ ich: 0, ifnt: 0 }];\n\t//if((flags & 2) !== 0) { /* fExtStr */\n\t//\t/* TODO: phonetic string */\n\t//}\n\tdata.l = start + length;\n\treturn z;\n}\nfunction write_RichStr(str/*:XLString*/, o/*:?Block*/)/*:Block*/ {\n\t/* TODO: formatted string */\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(15 + 4 * str.t.length); }\n\to.write_shift(1, 0);\n\twrite_XLWideString(str.t, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\nvar parse_BrtCommentText = parse_RichStr;\nfunction write_BrtCommentText(str/*:XLString*/, o/*:?Block*/)/*:Block*/ {\n\t/* TODO: formatted string */\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(23 + 4 * str.t.length); }\n\to.write_shift(1, 1);\n\twrite_XLWideString(str.t, o);\n\to.write_shift(4, 1);\n\twrite_StrRun({ ich: 0, ifnt: 0 }, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.9 */\nfunction parse_XLSBCell(data)/*:any*/ {\n\tvar col = data.read_shift(4);\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) << 16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c: col, iStyleRef: iStyleRef };\n}\nfunction write_XLSBCell(cell/*:any*/, o/*:?Block*/) {\n\tif (o == null) o = new_buf(8);\n\to.write_shift(-4, cell.c);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n/* Short XLSB Cell does not include column */\nfunction parse_XLSBShortCell(data)/*:any*/ {\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) <<16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c:-1, iStyleRef: iStyleRef };\n}\nfunction write_XLSBShortCell(cell/*:any*/, o/*:?Block*/) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.21 */\nvar parse_XLSBCodeName = parse_XLWideString;\nvar write_XLSBCodeName = write_XLWideString;\n\n/* [MS-XLSB] 2.5.166 */\nfunction parse_XLNullableWideString(data/*::, length*/)/*:string*/ {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLNullableWideString(data/*:string*/, o) {\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(127); }\n\to.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\n\tif (data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.165 */\nvar parse_XLNameWideString = parse_XLWideString;\n//var write_XLNameWideString = write_XLWideString;\n\n/* [MS-XLSB] 2.5.114 */\nvar parse_RelID = parse_XLNullableWideString;\nvar write_RelID = write_XLNullableWideString;\n\n\n/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\nfunction parse_RkNumber(data)/*:number*/ {\n\tvar b = data.slice(data.l, data.l + 4);\n\tvar fX100 = (b[0] & 1), fInt = (b[0] & 2);\n\tdata.l += 4;\n\tvar RK = fInt === 0 ? __double([0, 0, 0, 0, (b[0] & 0xFC), b[1], b[2], b[3]], 0) : __readInt32LE(b, 0) >> 2;\n\treturn fX100 ? (RK / 100) : RK;\n}\nfunction write_RkNumber(data/*:number*/, o) {\n\tif (o == null) o = new_buf(4);\n\tvar fX100 = 0, fInt = 0, d100 = data * 100;\n\tif ((data == (data | 0)) && (data >= -(1 << 29)) && (data < (1 << 29))) { fInt = 1; }\n\telse if ((d100 == (d100 | 0)) && (d100 >= -(1 << 29)) && (d100 < (1 << 29))) { fInt = 1; fX100 = 1; }\n\tif (fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));\n\telse throw new Error(\"unsupported RkNumber \" + data); // TODO\n}\n\n\n/* [MS-XLSB] 2.5.117 RfX */\nfunction parse_RfX(data /*::, length*/)/*:Range*/ {\n\tvar cell/*:Range*/ = ({ s: {}, e: {} }/*:any*/);\n\tcell.s.r = data.read_shift(4);\n\tcell.e.r = data.read_shift(4);\n\tcell.s.c = data.read_shift(4);\n\tcell.e.c = data.read_shift(4);\n\treturn cell;\n}\nfunction write_RfX(r/*:Range*/, o) {\n\tif (!o) o = new_buf(16);\n\to.write_shift(4, r.s.r);\n\to.write_shift(4, r.e.r);\n\to.write_shift(4, r.s.c);\n\to.write_shift(4, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.153 UncheckedRfX */\nvar parse_UncheckedRfX = parse_RfX;\nvar write_UncheckedRfX = write_RfX;\n\n/* [MS-XLSB] 2.5.155 UncheckedSqRfX */\n//function parse_UncheckedSqRfX(data) {\n//\tvar cnt = data.read_shift(4);\n//\tvar out = [];\n//\tfor(var i = 0; i < cnt; ++i) {\n//\t\tvar rng = parse_UncheckedRfX(data);\n//\t\tout.push(encode_range(rng));\n//\t}\n//\treturn out.join(\",\");\n//}\n//function write_UncheckedSqRfX(sqrfx/*:string*/) {\n//\tvar parts = sqrfx.split(/\\s*,\\s*/);\n//\tvar o = new_buf(4); o.write_shift(4, parts.length);\n//\tvar out = [o];\n//\tparts.forEach(function(rng) {\n//\t\tout.push(write_UncheckedRfX(safe_decode_range(rng)));\n//\t});\n//\treturn bconcat(out);\n//}\n\n/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\n/* TODO: error checking, NaN and Infinity values are not valid Xnum */\nfunction parse_Xnum(data/*::, length*/) {\n\tif(data.length - data.l < 8) throw \"XLS Xnum Buffer underflow\";\n\treturn data.read_shift(8, 'f');\n}\nfunction write_Xnum(data, o) { return (o || new_buf(8)).write_shift(8, data, 'f'); }\n\n/* [MS-XLSB] 2.4.324 BrtColor */\nfunction parse_BrtColor(data/*::, length*/) {\n\tvar out = {};\n\tvar d = data.read_shift(1);\n\n\t//var fValidRGB = d & 1;\n\tvar xColorType = d >>> 1;\n\n\tvar index = data.read_shift(1);\n\tvar nTS = data.read_shift(2, 'i');\n\tvar bR = data.read_shift(1);\n\tvar bG = data.read_shift(1);\n\tvar bB = data.read_shift(1);\n\tdata.l++; //var bAlpha = data.read_shift(1);\n\n\tswitch (xColorType) {\n\t\tcase 0: out.auto = 1; break;\n\t\tcase 1:\n\t\t\tout.index = index;\n\t\t\tvar icv = XLSIcv[index];\n\t\t\t/* automatic pseudo index 81 */\n\t\t\tif (icv) out.rgb = rgb2Hex(icv);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/* if(!fValidRGB) throw new Error(\"invalid\"); */\n\t\t\tout.rgb = rgb2Hex([bR, bG, bB]);\n\t\t\tbreak;\n\t\tcase 3: out.theme = index; break;\n\t}\n\tif (nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\n\n\treturn out;\n}\nfunction write_BrtColor(color, o) {\n\tif (!o) o = new_buf(8);\n\tif (!color || color.auto) { o.write_shift(4, 0); o.write_shift(4, 0); return o; }\n\tif (color.index != null) {\n\t\to.write_shift(1, 0x02);\n\t\to.write_shift(1, color.index);\n\t} else if (color.theme != null) {\n\t\to.write_shift(1, 0x06);\n\t\to.write_shift(1, color.theme);\n\t} else {\n\t\to.write_shift(1, 0x05);\n\t\to.write_shift(1, 0);\n\t}\n\tvar nTS = color.tint || 0;\n\tif (nTS > 0) nTS *= 32767;\n\telse if (nTS < 0) nTS *= 32768;\n\to.write_shift(2, nTS);\n\tif (!color.rgb || color.theme != null) {\n\t\to.write_shift(2, 0);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(1, 0);\n\t} else {\n\t\tvar rgb = (color.rgb || 'FFFFFF');\n\t\tif (typeof rgb == 'number') rgb = (\"000000\" + rgb.toString(16)).slice(-6);\n\t\to.write_shift(1, parseInt(rgb.slice(0, 2), 16));\n\t\to.write_shift(1, parseInt(rgb.slice(2, 4), 16));\n\t\to.write_shift(1, parseInt(rgb.slice(4, 6), 16));\n\t\to.write_shift(1, 0xFF);\n\t}\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.52 */\nfunction parse_FontFlags(data/*::, length, opts*/) {\n\tvar d = data.read_shift(1);\n\tdata.l++;\n\tvar out = {\n\t\tfBold: d & 0x01,\n\t\tfItalic: d & 0x02,\n\t\tfUnderline: d & 0x04,\n\t\tfStrikeout: d & 0x08,\n\t\tfOutline: d & 0x10,\n\t\tfShadow: d & 0x20,\n\t\tfCondense: d & 0x40,\n\t\tfExtend: d & 0x80\n\t};\n\treturn out;\n}\nfunction write_FontFlags(font, o) {\n\tif (!o) o = new_buf(2);\n\tvar grbit =\n\t\t(font.italic ? 0x02 : 0) |\n\t\t(font.strike ? 0x08 : 0) |\n\t\t(font.outline ? 0x10 : 0) |\n\t\t(font.shadow ? 0x20 : 0) |\n\t\t(font.condense ? 0x40 : 0) |\n\t\t(font.extend ? 0x80 : 0);\n\to.write_shift(1, grbit);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-OLEDS] 2.3.1 and 2.3.2 */\nfunction parse_ClipboardFormatOrString(o, w/*:number*/)/*:string*/ {\n\t// $FlowIgnore\n\tvar ClipFmt = { 2: \"BITMAP\", 3: \"METAFILEPICT\", 8: \"DIB\", 14: \"ENHMETAFILE\" };\n\tvar m/*:number*/ = o.read_shift(4);\n\tswitch (m) {\n\t\tcase 0x00000000: return \"\";\n\t\tcase 0xffffffff: case 0xfffffffe: return ClipFmt[o.read_shift(4)] || \"\";\n\t}\n\tif (m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\n\to.l -= 4;\n\treturn o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\n}\nfunction parse_ClipboardFormatOrAnsiString(o) { return parse_ClipboardFormatOrString(o, 1); }\nfunction parse_ClipboardFormatOrUnicodeString(o) { return parse_ClipboardFormatOrString(o, 2); }\n\n/* [MS-OLEPS] 2.2 PropertyType */\n// Note: some tree shakers cannot handle VT_VECTOR | $CONST, hence extra vars\n//var VT_EMPTY    = 0x0000;\n//var VT_NULL     = 0x0001;\nvar VT_I2       = 0x0002;\nvar VT_I4       = 0x0003;\n//var VT_R4       = 0x0004;\n//var VT_R8       = 0x0005;\n//var VT_CY       = 0x0006;\n//var VT_DATE     = 0x0007;\n//var VT_BSTR     = 0x0008;\n//var VT_ERROR    = 0x000A;\nvar VT_BOOL     = 0x000B;\nvar VT_VARIANT  = 0x000C;\n//var VT_DECIMAL  = 0x000E;\n//var VT_I1       = 0x0010;\n//var VT_UI1      = 0x0011;\n//var VT_UI2      = 0x0012;\nvar VT_UI4      = 0x0013;\n//var VT_I8       = 0x0014;\n//var VT_UI8      = 0x0015;\n//var VT_INT      = 0x0016;\n//var VT_UINT     = 0x0017;\nvar VT_LPSTR    = 0x001E;\n//var VT_LPWSTR   = 0x001F;\nvar VT_FILETIME = 0x0040;\nvar VT_BLOB     = 0x0041;\n//var VT_STREAM   = 0x0042;\n//var VT_STORAGE  = 0x0043;\n//var VT_STREAMED_Object  = 0x0044;\n//var VT_STORED_Object    = 0x0045;\n//var VT_BLOB_Object      = 0x0046;\nvar VT_CF       = 0x0047;\n//var VT_CLSID    = 0x0048;\n//var VT_VERSIONED_STREAM = 0x0049;\nvar VT_VECTOR   = 0x1000;\nvar VT_VECTOR_VARIANT = 0x100C;\nvar VT_VECTOR_LPSTR   = 0x101E;\n//var VT_ARRAY    = 0x2000;\n\nvar VT_STRING   = 0x0050; // 2.3.3.1.11 VtString\nvar VT_USTR     = 0x0051; // 2.3.3.1.12 VtUnalignedString\nvar VT_CUSTOM   = [VT_STRING, VT_USTR];\n\n/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\nvar DocSummaryPIDDSI = {\n\t/*::[*/0x01/*::]*/: { n: 'CodePage', t: VT_I2 },\n\t/*::[*/0x02/*::]*/: { n: 'Category', t: VT_STRING },\n\t/*::[*/0x03/*::]*/: { n: 'PresentationFormat', t: VT_STRING },\n\t/*::[*/0x04/*::]*/: { n: 'ByteCount', t: VT_I4 },\n\t/*::[*/0x05/*::]*/: { n: 'LineCount', t: VT_I4 },\n\t/*::[*/0x06/*::]*/: { n: 'ParagraphCount', t: VT_I4 },\n\t/*::[*/0x07/*::]*/: { n: 'SlideCount', t: VT_I4 },\n\t/*::[*/0x08/*::]*/: { n: 'NoteCount', t: VT_I4 },\n\t/*::[*/0x09/*::]*/: { n: 'HiddenCount', t: VT_I4 },\n\t/*::[*/0x0a/*::]*/: { n: 'MultimediaClipCount', t: VT_I4 },\n\t/*::[*/0x0b/*::]*/: { n: 'ScaleCrop', t: VT_BOOL },\n\t/*::[*/0x0c/*::]*/: { n: 'HeadingPairs', t: VT_VECTOR_VARIANT /* VT_VECTOR | VT_VARIANT */ },\n\t/*::[*/0x0d/*::]*/: { n: 'TitlesOfParts', t: VT_VECTOR_LPSTR /* VT_VECTOR | VT_LPSTR */ },\n\t/*::[*/0x0e/*::]*/: { n: 'Manager', t: VT_STRING },\n\t/*::[*/0x0f/*::]*/: { n: 'Company', t: VT_STRING },\n\t/*::[*/0x10/*::]*/: { n: 'LinksUpToDate', t: VT_BOOL },\n\t/*::[*/0x11/*::]*/: { n: 'CharacterCount', t: VT_I4 },\n\t/*::[*/0x13/*::]*/: { n: 'SharedDoc', t: VT_BOOL },\n\t/*::[*/0x16/*::]*/: { n: 'HyperlinksChanged', t: VT_BOOL },\n\t/*::[*/0x17/*::]*/: { n: 'AppVersion', t: VT_I4, p: 'version' },\n\t/*::[*/0x18/*::]*/: { n: 'DigSig', t: VT_BLOB },\n\t/*::[*/0x1A/*::]*/: { n: 'ContentType', t: VT_STRING },\n\t/*::[*/0x1B/*::]*/: { n: 'ContentStatus', t: VT_STRING },\n\t/*::[*/0x1C/*::]*/: { n: 'Language', t: VT_STRING },\n\t/*::[*/0x1D/*::]*/: { n: 'Version', t: VT_STRING },\n\t/*::[*/0xFF/*::]*/: {},\n\t/* [MS-OLEPS] 2.18 */\n\t/*::[*/0x80000000/*::]*/: { n: 'Locale', t: VT_UI4 },\n\t/*::[*/0x80000003/*::]*/: { n: 'Behavior', t: VT_UI4 },\n\t/*::[*/0x72627262/*::]*/: {}\n};\n\n/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\nvar SummaryPIDSI = {\n\t/*::[*/0x01/*::]*/: { n: 'CodePage', t: VT_I2 },\n\t/*::[*/0x02/*::]*/: { n: 'Title', t: VT_STRING },\n\t/*::[*/0x03/*::]*/: { n: 'Subject', t: VT_STRING },\n\t/*::[*/0x04/*::]*/: { n: 'Author', t: VT_STRING },\n\t/*::[*/0x05/*::]*/: { n: 'Keywords', t: VT_STRING },\n\t/*::[*/0x06/*::]*/: { n: 'Comments', t: VT_STRING },\n\t/*::[*/0x07/*::]*/: { n: 'Template', t: VT_STRING },\n\t/*::[*/0x08/*::]*/: { n: 'LastAuthor', t: VT_STRING },\n\t/*::[*/0x09/*::]*/: { n: 'RevNumber', t: VT_STRING },\n\t/*::[*/0x0A/*::]*/: { n: 'EditTime', t: VT_FILETIME },\n\t/*::[*/0x0B/*::]*/: { n: 'LastPrinted', t: VT_FILETIME },\n\t/*::[*/0x0C/*::]*/: { n: 'CreatedDate', t: VT_FILETIME },\n\t/*::[*/0x0D/*::]*/: { n: 'ModifiedDate', t: VT_FILETIME },\n\t/*::[*/0x0E/*::]*/: { n: 'PageCount', t: VT_I4 },\n\t/*::[*/0x0F/*::]*/: { n: 'WordCount', t: VT_I4 },\n\t/*::[*/0x10/*::]*/: { n: 'CharCount', t: VT_I4 },\n\t/*::[*/0x11/*::]*/: { n: 'Thumbnail', t: VT_CF },\n\t/*::[*/0x12/*::]*/: { n: 'Application', t: VT_STRING },\n\t/*::[*/0x13/*::]*/: { n: 'DocSecurity', t: VT_I4 },\n\t/*::[*/0xFF/*::]*/: {},\n\t/* [MS-OLEPS] 2.18 */\n\t/*::[*/0x80000000/*::]*/: { n: 'Locale', t: VT_UI4 },\n\t/*::[*/0x80000003/*::]*/: { n: 'Behavior', t: VT_UI4 },\n\t/*::[*/0x72627262/*::]*/: {}\n};\n\n/* [MS-XLS] 2.4.63 Country/Region codes */\nvar CountryEnum = {\n\t/*::[*/0x0001/*::]*/: \"US\", // United States\n\t/*::[*/0x0002/*::]*/: \"CA\", // Canada\n\t/*::[*/0x0003/*::]*/: \"\", // Latin America (except Brazil)\n\t/*::[*/0x0007/*::]*/: \"RU\", // Russia\n\t/*::[*/0x0014/*::]*/: \"EG\", // Egypt\n\t/*::[*/0x001E/*::]*/: \"GR\", // Greece\n\t/*::[*/0x001F/*::]*/: \"NL\", // Netherlands\n\t/*::[*/0x0020/*::]*/: \"BE\", // Belgium\n\t/*::[*/0x0021/*::]*/: \"FR\", // France\n\t/*::[*/0x0022/*::]*/: \"ES\", // Spain\n\t/*::[*/0x0024/*::]*/: \"HU\", // Hungary\n\t/*::[*/0x0027/*::]*/: \"IT\", // Italy\n\t/*::[*/0x0029/*::]*/: \"CH\", // Switzerland\n\t/*::[*/0x002B/*::]*/: \"AT\", // Austria\n\t/*::[*/0x002C/*::]*/: \"GB\", // United Kingdom\n\t/*::[*/0x002D/*::]*/: \"DK\", // Denmark\n\t/*::[*/0x002E/*::]*/: \"SE\", // Sweden\n\t/*::[*/0x002F/*::]*/: \"NO\", // Norway\n\t/*::[*/0x0030/*::]*/: \"PL\", // Poland\n\t/*::[*/0x0031/*::]*/: \"DE\", // Germany\n\t/*::[*/0x0034/*::]*/: \"MX\", // Mexico\n\t/*::[*/0x0037/*::]*/: \"BR\", // Brazil\n\t/*::[*/0x003d/*::]*/: \"AU\", // Australia\n\t/*::[*/0x0040/*::]*/: \"NZ\", // New Zealand\n\t/*::[*/0x0042/*::]*/: \"TH\", // Thailand\n\t/*::[*/0x0051/*::]*/: \"JP\", // Japan\n\t/*::[*/0x0052/*::]*/: \"KR\", // Korea\n\t/*::[*/0x0054/*::]*/: \"VN\", // Viet Nam\n\t/*::[*/0x0056/*::]*/: \"CN\", // China\n\t/*::[*/0x005A/*::]*/: \"TR\", // Turkey\n\t/*::[*/0x0069/*::]*/: \"JS\", // Ramastan\n\t/*::[*/0x00D5/*::]*/: \"DZ\", // Algeria\n\t/*::[*/0x00D8/*::]*/: \"MA\", // Morocco\n\t/*::[*/0x00DA/*::]*/: \"LY\", // Libya\n\t/*::[*/0x015F/*::]*/: \"PT\", // Portugal\n\t/*::[*/0x0162/*::]*/: \"IS\", // Iceland\n\t/*::[*/0x0166/*::]*/: \"FI\", // Finland\n\t/*::[*/0x01A4/*::]*/: \"CZ\", // Czech Republic\n\t/*::[*/0x0376/*::]*/: \"TW\", // Taiwan\n\t/*::[*/0x03C1/*::]*/: \"LB\", // Lebanon\n\t/*::[*/0x03C2/*::]*/: \"JO\", // Jordan\n\t/*::[*/0x03C3/*::]*/: \"SY\", // Syria\n\t/*::[*/0x03C4/*::]*/: \"IQ\", // Iraq\n\t/*::[*/0x03C5/*::]*/: \"KW\", // Kuwait\n\t/*::[*/0x03C6/*::]*/: \"SA\", // Saudi Arabia\n\t/*::[*/0x03CB/*::]*/: \"AE\", // United Arab Emirates\n\t/*::[*/0x03CC/*::]*/: \"IL\", // Israel\n\t/*::[*/0x03CE/*::]*/: \"QA\", // Qatar\n\t/*::[*/0x03D5/*::]*/: \"IR\", // Iran\n\t/*::[*/0xFFFF/*::]*/: \"US\"  // United States\n};\n\n/* [MS-XLS] 2.5.127 */\nvar XLSFillPattern = [\n\tnull,\n\t'solid',\n\t'mediumGray',\n\t'darkGray',\n\t'lightGray',\n\t'darkHorizontal',\n\t'darkVertical',\n\t'darkDown',\n\t'darkUp',\n\t'darkGrid',\n\t'darkTrellis',\n\t'lightHorizontal',\n\t'lightVertical',\n\t'lightDown',\n\t'lightUp',\n\t'lightGrid',\n\t'lightTrellis',\n\t'gray125',\n\t'gray0625'\n];\n\nfunction rgbify(arr/*:Array<number>*/)/*:Array<[number, number, number]>*/ { return arr.map(function(x) { return [(x>>16)&255,(x>>8)&255,x&255]; }); }\n\n/* [MS-XLS] 2.5.161 */\n/* [MS-XLSB] 2.5.75 Icv */\nvar _XLSIcv = /*#__PURE__*/ rgbify([\n\t/* Color Constants */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t/* Overridable Defaults */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t0x800000,\n\t0x008000,\n\t0x000080,\n\t0x808000,\n\t0x800080,\n\t0x008080,\n\t0xC0C0C0,\n\t0x808080,\n\t0x9999FF,\n\t0x993366,\n\t0xFFFFCC,\n\t0xCCFFFF,\n\t0x660066,\n\t0xFF8080,\n\t0x0066CC,\n\t0xCCCCFF,\n\n\t0x000080,\n\t0xFF00FF,\n\t0xFFFF00,\n\t0x00FFFF,\n\t0x800080,\n\t0x800000,\n\t0x008080,\n\t0x0000FF,\n\t0x00CCFF,\n\t0xCCFFFF,\n\t0xCCFFCC,\n\t0xFFFF99,\n\t0x99CCFF,\n\t0xFF99CC,\n\t0xCC99FF,\n\t0xFFCC99,\n\n\t0x3366FF,\n\t0x33CCCC,\n\t0x99CC00,\n\t0xFFCC00,\n\t0xFF9900,\n\t0xFF6600,\n\t0x666699,\n\t0x969696,\n\t0x003366,\n\t0x339966,\n\t0x003300,\n\t0x333300,\n\t0x993300,\n\t0x993366,\n\t0x333399,\n\t0x333333,\n\n\t/* Other entries to appease BIFF8/12 */\n\t0xFFFFFF, /* 0x40 icvForeground ?? */\n\t0x000000, /* 0x41 icvBackground ?? */\n\t0x000000, /* 0x42 icvFrame ?? */\n\t0x000000, /* 0x43 icv3D ?? */\n\t0x000000, /* 0x44 icv3DText ?? */\n\t0x000000, /* 0x45 icv3DHilite ?? */\n\t0x000000, /* 0x46 icv3DShadow ?? */\n\t0x000000, /* 0x47 icvHilite ?? */\n\t0x000000, /* 0x48 icvCtlText ?? */\n\t0x000000, /* 0x49 icvCtlScrl ?? */\n\t0x000000, /* 0x4A icvCtlInv ?? */\n\t0x000000, /* 0x4B icvCtlBody ?? */\n\t0x000000, /* 0x4C icvCtlFrame ?? */\n\t0x000000, /* 0x4D icvCtlFore ?? */\n\t0x000000, /* 0x4E icvCtlBack ?? */\n\t0x000000, /* 0x4F icvCtlNeutral */\n\t0x000000, /* 0x50 icvInfoBk ?? */\n\t0x000000 /* 0x51 icvInfoText ?? */\n]);\nvar XLSIcv = /*#__PURE__*/dup(_XLSIcv);\n\n/* [MS-XLSB] 2.5.97.2 */\nvar BErr = {\n\t/*::[*/0x00/*::]*/: \"#NULL!\",\n\t/*::[*/0x07/*::]*/: \"#DIV/0!\",\n\t/*::[*/0x0F/*::]*/: \"#VALUE!\",\n\t/*::[*/0x17/*::]*/: \"#REF!\",\n\t/*::[*/0x1D/*::]*/: \"#NAME?\",\n\t/*::[*/0x24/*::]*/: \"#NUM!\",\n\t/*::[*/0x2A/*::]*/: \"#N/A\",\n\t/*::[*/0x2B/*::]*/: \"#GETTING_DATA\",\n\t/*::[*/0xFF/*::]*/: \"#WTF?\"\n};\n//var RBErr = evert_num(BErr);\nvar RBErr = {\n\t\"#NULL!\":        0x00,\n\t\"#DIV/0!\":       0x07,\n\t\"#VALUE!\":       0x0F,\n\t\"#REF!\":         0x17,\n\t\"#NAME?\":        0x1D,\n\t\"#NUM!\":         0x24,\n\t\"#N/A\":          0x2A,\n\t\"#GETTING_DATA\": 0x2B,\n\t\"#WTF?\":         0xFF\n};\n\n/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\n/* 12.3 Part Summary <SpreadsheetML> */\n/* 14.2 Part Summary <DrawingML> */\n/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\nvar ct2type/*{[string]:string}*/ = ({\n\t/* Workbook */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\n\t\"application/vnd.ms-excel.sheet.macroEnabled.main+xml\": \"workbooks\",\n\t\"application/vnd.ms-excel.sheet.binary.macroEnabled.main\": \"workbooks\",\n\t\"application/vnd.ms-excel.addin.macroEnabled.main+xml\": \"workbooks\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": \"workbooks\",\n\n\t/* Worksheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": \"sheets\",\n\t\"application/vnd.ms-excel.worksheet\": \"sheets\",\n\t\"application/vnd.ms-excel.binIndexWs\": \"TODO\", /* Binary Index */\n\n\t/* Chartsheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": \"charts\",\n\t\"application/vnd.ms-excel.chartsheet\": \"charts\",\n\n\t/* Macrosheet */\n\t\"application/vnd.ms-excel.macrosheet+xml\": \"macros\",\n\t\"application/vnd.ms-excel.macrosheet\": \"macros\",\n\t\"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\n\t\"application/vnd.ms-excel.binIndexMs\": \"TODO\", /* Binary Index */\n\n\t/* Dialogsheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": \"dialogs\",\n\t\"application/vnd.ms-excel.dialogsheet\": \"dialogs\",\n\n\t/* Shared Strings */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\": \"strs\",\n\t\"application/vnd.ms-excel.sharedStrings\": \"strs\",\n\n\t/* Styles */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": \"styles\",\n\t\"application/vnd.ms-excel.styles\": \"styles\",\n\n\t/* File Properties */\n\t\"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\n\t\"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\n\t\"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\n\n\t/* Custom Data Properties */\n\t\"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\n\n\t/* Comments */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": \"comments\",\n\t\"application/vnd.ms-excel.comments\": \"comments\",\n\t\"application/vnd.ms-excel.threadedcomments+xml\": \"threadedcomments\",\n\t\"application/vnd.ms-excel.person+xml\": \"people\",\n\n\t/* Metadata (Stock/Geography and Dynamic Array) */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"metadata\",\n\t\"application/vnd.ms-excel.sheetMetadata\": \"metadata\",\n\n\t/* PivotTable */\n\t\"application/vnd.ms-excel.pivotTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\n\n\t/* Chart Objects */\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\n\n\t/* Chart Colors */\n\t\"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\n\n\t/* Chart Style */\n\t\"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\n\n\t/* Chart Advanced */\n\t\"application/vnd.ms-office.chartex+xml\": \"TODO\",\n\n\t/* Calculation Chain */\n\t\"application/vnd.ms-excel.calcChain\": \"calcchains\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\n\n\t/* Printer Settings */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\n\n\t/* ActiveX */\n\t\"application/vnd.ms-office.activeX\": \"TODO\",\n\t\"application/vnd.ms-office.activeX+xml\": \"TODO\",\n\n\t/* Custom Toolbars */\n\t\"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\n\n\t/* External Data Connections */\n\t\"application/vnd.ms-excel.connections\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\n\n\t/* External Links */\n\t\"application/vnd.ms-excel.externalLink\": \"links\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\n\n\t/* PivotCache */\n\t\"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\n\t\"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\n\n\t/* Query Table */\n\t\"application/vnd.ms-excel.queryTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\n\n\t/* Shared Workbook */\n\t\"application/vnd.ms-excel.userNames\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionLog\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\n\n\t/* Single Cell Table */\n\t\"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\n\n\t/* Slicer */\n\t\"application/vnd.ms-excel.slicer\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache\": \"TODO\",\n\t\"application/vnd.ms-excel.slicer+xml\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\n\n\t/* Sort Map */\n\t\"application/vnd.ms-excel.wsSortMap\": \"TODO\",\n\n\t/* Table */\n\t\"application/vnd.ms-excel.table\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\n\n\t/* Themes */\n\t\"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\n\n\t/* Theme Override */\n\t\"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\n\n\t/* Timeline */\n\t\"application/vnd.ms-excel.Timeline+xml\": \"TODO\", /* verify */\n\t\"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\", /* verify */\n\n\t/* VBA */\n\t\"application/vnd.ms-office.vbaProject\": \"vba\",\n\t\"application/vnd.ms-office.vbaProjectSignature\": \"TODO\",\n\n\t/* Volatile Dependencies */\n\t\"application/vnd.ms-office.volatileDependencies\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\n\n\t/* Control Properties */\n\t\"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\n\n\t/* Data Model */\n\t\"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\n\n\t/* Survey */\n\t\"application/vnd.ms-excel.Survey+xml\": \"TODO\",\n\n\t/* Drawing */\n\t\"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\n\n\t/* VML */\n\t\"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\n\n\t\"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\n\t\"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\n\n\t/* Image */\n\t\"image/png\": \"TODO\",\n\n\t\"sheet\": \"js\"\n}/*:any*/);\n\nvar CT_LIST = {\n\t\tworkbooks: {\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\n\t\t\txlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\n\t\t\txlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\n\t\t\txltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\n\t\t},\n\t\tstrs: { /* Shared Strings */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sharedStrings\"\n\t\t},\n\t\tcomments: { /* Comments */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.comments\"\n\t\t},\n\t\tsheets: { /* Worksheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.worksheet\"\n\t\t},\n\t\tcharts: { /* Chartsheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.chartsheet\"\n\t\t},\n\t\tdialogs: { /* Dialogsheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.dialogsheet\"\n\t\t},\n\t\tmacros: { /* Macrosheet (Excel 4.0 Macros) */\n\t\t\txlsx: \"application/vnd.ms-excel.macrosheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.macrosheet\"\n\t\t},\n\t\tmetadata: { /* Metadata (Stock/Geography and Dynamic Array) */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sheetMetadata\"\n\t\t},\n\t\tstyles: { /* Styles */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.styles\"\n\t\t}\n};\n\nfunction new_ct()/*:any*/ {\n\treturn ({\n\t\tworkbooks:[], sheets:[], charts:[], dialogs:[], macros:[],\n\t\trels:[], strs:[], comments:[], threadedcomments:[], links:[],\n\t\tcoreprops:[], extprops:[], custprops:[], themes:[], styles:[],\n\t\tcalcchains:[], vba: [], drawings: [], metadata: [], people:[],\n\t\tTODO:[], xmlns: \"\" }/*:any*/);\n}\n\nfunction parse_ct(data/*:?string*/) {\n\tvar ct = new_ct();\n\tif(!data || !data.match) return ct;\n\tvar ctext = {};\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0].replace(nsregex,\"<\")) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Types': ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/)||[\"\",\"\"])[1] ]; break;\n\t\t\tcase '<Default': ctext[y.Extension] = y.ContentType; break;\n\t\t\tcase '<Override':\n\t\t\t\tif(ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\n\t\t\t\tbreak;\n\t\t}\n\t});\n\tif(ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\n\tct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\n\tct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\n\tct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\n\tct.defaults = ctext;\n\tdelete ct.calcchains;\n\treturn ct;\n}\n\nfunction write_ct(ct, opts)/*:string*/ {\n\tvar type2ct/*{[string]:Array<string>}*/ = evert_arr(ct2type);\n\n\tvar o/*:Array<string>*/ = [], v;\n\to[o.length] = (XML_HEADER);\n\to[o.length] = writextag('Types', null, {\n\t\t'xmlns': XMLNS.CT,\n\t\t'xmlns:xsd': XMLNS.xsd,\n\t\t'xmlns:xsi': XMLNS.xsi\n\t});\n\n\to = o.concat([\n\t\t['xml', 'application/xml'],\n\t\t['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'],\n\t\t['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'],\n\t\t['data', 'application/vnd.openxmlformats-officedocument.model+data'],\n\t\t/* from test files */\n\t\t['bmp', 'image/bmp'],\n\t\t['png', 'image/png'],\n\t\t['gif', 'image/gif'],\n\t\t['emf', 'image/x-emf'],\n\t\t['wmf', 'image/x-wmf'],\n\t\t['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'],\n\t\t['tif', 'image/tiff'], ['tiff', 'image/tiff'],\n\t\t['pdf', 'application/pdf'],\n\t\t['rels', 'application/vnd.openxmlformats-package.relationships+xml']\n\t].map(function(x) {\n\t\treturn writextag('Default', null, {'Extension':x[0], 'ContentType': x[1]});\n\t}));\n\n\t/* only write first instance */\n\tvar f1 = function(w) {\n\t\tif(ct[w] && ct[w].length > 0) {\n\t\t\tv = ct[w][0];\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n\t\t\t}));\n\t\t}\n\t};\n\n\t/* book type-specific */\n\tvar f2 = function(w) {\n\t\t(ct[w]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n\t\t\t}));\n\t\t});\n\t};\n\n\t/* standard type */\n\tvar f3 = function(t) {\n\t\t(ct[t]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': type2ct[t][0]\n\t\t\t}));\n\t\t});\n\t};\n\n\tf1('workbooks');\n\tf2('sheets');\n\tf2('charts');\n\tf3('themes');\n\t['strs', 'styles'].forEach(f1);\n\t['coreprops', 'extprops', 'custprops'].forEach(f3);\n\tf3('vba');\n\tf3('comments');\n\tf3('threadedcomments');\n\tf3('drawings');\n\tf2('metadata');\n\tf3('people');\n\tif(o.length>2){ o[o.length] = ('</Types>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 9.3 Relationships */\nvar RELS = ({\n\tWB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tSHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tHLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n\tVML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\n\tXPATH: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath\",\n\tXMISS: \"http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing\",\n\tXLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink\",\n\tCXML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml\",\n\tCXMLP: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps\",\n\tCMNT: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\",\n\tCORE_PROPS: \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\n\tEXT_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties',\n\tCUST_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties',\n\tSST: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\",\n\tSTY: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\n\tTHEME: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\n\tCHART: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart\",\n\tCHARTEX: \"http://schemas.microsoft.com/office/2014/relationships/chartEx\",\n\tCS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\",\n\tWS: [\n\t\t\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\",\n\t\t\"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"\n\t],\n\tDS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\",\n\tMS: \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\",\n\tIMG: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\n\tDRAW: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\",\n\tXLMETA: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata\",\n\tTCMNT: \"http://schemas.microsoft.com/office/2017/10/relationships/threadedComment\",\n\tPEOPLE: \"http://schemas.microsoft.com/office/2017/10/relationships/person\",\n\tVBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\n}/*:any*/);\n\n\n/* 9.3.3 Representing Relationships */\nfunction get_rels_path(file/*:string*/)/*:string*/ {\n\tvar n = file.lastIndexOf(\"/\");\n\treturn file.slice(0,n+1) + '_rels/' + file.slice(n+1) + \".rels\";\n}\n\nfunction parse_rels(data/*:?string*/, currentFilePath/*:string*/) {\n\tvar rels = {\"!id\":{}};\n\tif (!data) return rels;\n\tif (currentFilePath.charAt(0) !== '/') {\n\t\tcurrentFilePath = '/'+currentFilePath;\n\t}\n\tvar hash = {};\n\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\t/* 9.3.2.2 OPC_Relationships */\n\t\tif (y[0] === '<Relationship') {\n\t\t\tvar rel = {}; rel.Type = y.Type; rel.Target = y.Target; rel.Id = y.Id; if(y.TargetMode) rel.TargetMode = y.TargetMode;\n\t\t\tvar canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\n\t\t\trels[canonictarget] = rel;\n\t\t\thash[y.Id] = rel;\n\t\t}\n\t});\n\trels[\"!id\"] = hash;\n\treturn rels;\n}\n\n\n/* TODO */\nfunction write_rels(rels)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('Relationships', null, {\n\t\t//'xmlns:ns0': XMLNS.RELS,\n\t\t'xmlns': XMLNS.RELS\n\t})];\n\tkeys(rels['!id']).forEach(function(rid) {\n\t\to[o.length] = (writextag('Relationship', null, rels['!id'][rid]));\n\t});\n\tif(o.length>2){ o[o.length] = ('</Relationships>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\nfunction add_rels(rels, rId/*:number*/, f, type, relobj, targetmode/*:?string*/)/*:number*/ {\n\tif(!relobj) relobj = {};\n\tif(!rels['!id']) rels['!id'] = {};\n\tif(!rels['!idx']) rels['!idx'] = 1;\n\tif(rId < 0) for(rId = rels['!idx']; rels['!id']['rId' + rId]; ++rId){/* empty */}\n\trels['!idx'] = rId + 1;\n\trelobj.Id = 'rId' + rId;\n\trelobj.Type = type;\n\trelobj.Target = f;\n\tif(targetmode) relobj.TargetMode = targetmode;\n\telse if([RELS.HLINK, RELS.XPATH, RELS.XMISS].indexOf(relobj.Type) > -1) relobj.TargetMode = \"External\";\n\tif(rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\n\trels['!id'][relobj.Id] = relobj;\n\trels[('/' + relobj.Target).replace(\"//\",\"/\")] = relobj;\n\treturn rId;\n}\n/* Open Document Format for Office Applications (OpenDocument) Version 1.2 */\n/* Part 3 Section 4 Manifest File */\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\nfunction parse_manifest(d, opts) {\n\tvar str = xlml_normalize(d);\n\tvar Rn;\n\tvar FEtag;\n\twhile((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\n\t\tcase 'manifest': break; // 4.2 <manifest:manifest>\n\t\tcase 'file-entry': // 4.3 <manifest:file-entry>\n\t\t\tFEtag = parsexmltag(Rn[0], false);\n\t\t\tif(FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\n\t\t\tbreak;\n\t\tcase 'encryption-data': // 4.4 <manifest:encryption-data>\n\t\tcase 'algorithm': // 4.5 <manifest:algorithm>\n\t\tcase 'start-key-generation': // 4.6 <manifest:start-key-generation>\n\t\tcase 'key-derivation': // 4.7 <manifest:key-derivation>\n\t\t\tthrow new Error(\"Unsupported ODS Encryption\");\n\t\tdefault: if(opts && opts.WTF) throw Rn;\n\t}\n}\n\nfunction write_manifest(manifest/*:Array<Array<string> >*/)/*:string*/ {\n\tvar o = [XML_HEADER];\n\to.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\n\to.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\n\tfor(var i = 0; i < manifest.length; ++i) o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\n\to.push('</manifest:manifest>');\n\treturn o.join(\"\");\n}\n\n/* Part 3 Section 6 Metadata Manifest File */\nfunction write_rdf_type(file/*:string*/, res/*:string*/, tag/*:?string*/) {\n\treturn [\n\t\t'  <rdf:Description rdf:about=\"' + file + '\">\\n',\n\t\t'    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + '#' + res + '\"/>\\n',\n\t\t'  </rdf:Description>\\n'\n\t].join(\"\");\n}\nfunction write_rdf_has(base/*:string*/, file/*:string*/) {\n\treturn [\n\t\t'  <rdf:Description rdf:about=\"' + base + '\">\\n',\n\t\t'    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n',\n\t\t'  </rdf:Description>\\n'\n\t].join(\"\");\n}\nfunction write_rdf(rdf) {\n\tvar o = [XML_HEADER];\n\to.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\n\tfor(var i = 0; i != rdf.length; ++i) {\n\t\to.push(write_rdf_type(rdf[i][0], rdf[i][1]));\n\t\to.push(write_rdf_has(\"\",rdf[i][0]));\n\t}\n\to.push(write_rdf_type(\"\",\"Document\", \"pkg\"));\n\to.push('</rdf:RDF>');\n\treturn o.join(\"\");\n}\n/* TODO: pull properties */\nfunction write_meta_ods(/*:: wb: Workbook, opts: any*/)/*:string*/ {\n\treturn '<office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>Sheet' + 'JS ' + XLSX.version + '</meta:generator></office:meta></office:document-meta>';\n}\n\n/* ECMA-376 Part II 11.1 Core Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar CORE_PROPS/*:Array<Array<string> >*/ = [\n\t[\"cp:category\", \"Category\"],\n\t[\"cp:contentStatus\", \"ContentStatus\"],\n\t[\"cp:keywords\", \"Keywords\"],\n\t[\"cp:lastModifiedBy\", \"LastAuthor\"],\n\t[\"cp:lastPrinted\", \"LastPrinted\"],\n\t[\"cp:revision\", \"RevNumber\"],\n\t[\"cp:version\", \"Version\"],\n\t[\"dc:creator\", \"Author\"],\n\t[\"dc:description\", \"Comments\"],\n\t[\"dc:identifier\", \"Identifier\"],\n\t[\"dc:language\", \"Language\"],\n\t[\"dc:subject\", \"Subject\"],\n\t[\"dc:title\", \"Title\"],\n\t[\"dcterms:created\", \"CreatedDate\", 'date'],\n\t[\"dcterms:modified\", \"ModifiedDate\", 'date']\n];\n\nvar CORE_PROPS_REGEX/*:Array<RegExp>*/ = /*#__PURE__*/(function() {\n\tvar r = new Array(CORE_PROPS.length);\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar g = \"(?:\"+ f[0].slice(0,f[0].indexOf(\":\")) +\":)\"+ f[0].slice(f[0].indexOf(\":\")+1);\n\t\tr[i] = new RegExp(\"<\" + g + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + g + \">\");\n\t}\n\treturn r;\n})();\n\nfunction parse_core_props(data) {\n\tvar p = {};\n\tdata = utf8read(data);\n\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i], cur = data.match(CORE_PROPS_REGEX[i]);\n\t\tif(cur != null && cur.length > 0) p[f[1]] = unescapexml(cur[1]);\n\t\tif(f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);\n\t}\n\n\treturn p;\n}\n\nfunction cp_doit(f, g, h, o, p) {\n\tif(p[f] != null || g == null || g === \"\") return;\n\tp[f] = g;\n\tg = escapexml(g);\n\to[o.length] = (h ? writextag(f,g,h) : writetag(f,g));\n}\n\nfunction write_core_props(cp, _opts) {\n\tvar opts = _opts || {};\n\tvar o = [XML_HEADER, writextag('cp:coreProperties', null, {\n\t\t//'xmlns': XMLNS.CORE_PROPS,\n\t\t'xmlns:cp': XMLNS.CORE_PROPS,\n\t\t'xmlns:dc': XMLNS.dc,\n\t\t'xmlns:dcterms': XMLNS.dcterms,\n\t\t'xmlns:dcmitype': XMLNS.dcmitype,\n\t\t'xmlns:xsi': XMLNS.xsi\n\t})], p = {};\n\tif(!cp && !opts.Props) return o.join(\"\");\n\n\tif(cp) {\n\t\tif(cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t\tif(cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t}\n\n\tfor(var i = 0; i != CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\n\t\tif(v === true) v = \"1\";\n\t\telse if(v === false) v = \"0\";\n\t\telse if(typeof v == \"number\") v = String(v);\n\t\tif(v != null) cp_doit(f[0], v, null, o, p);\n\t}\n\tif(o.length>2){ o[o.length] = ('</cp:coreProperties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.3 Extended File Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar EXT_PROPS/*:Array<Array<string> >*/ = [\n\t[\"Application\", \"Application\", \"string\"],\n\t[\"AppVersion\", \"AppVersion\", \"string\"],\n\t[\"Company\", \"Company\", \"string\"],\n\t[\"DocSecurity\", \"DocSecurity\", \"string\"],\n\t[\"Manager\", \"Manager\", \"string\"],\n\t[\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"],\n\t[\"SharedDoc\", \"SharedDoc\", \"bool\"],\n\t[\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"],\n\t[\"ScaleCrop\", \"ScaleCrop\", \"bool\"],\n\t[\"HeadingPairs\", \"HeadingPairs\", \"raw\"],\n\t[\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]\n];\n\nvar PseudoPropsPairs = [\n\t\"Worksheets\",  \"SheetNames\",\n\t\"NamedRanges\", \"DefinedNames\",\n\t\"Chartsheets\", \"ChartNames\"\n];\nfunction load_props_pairs(HP/*:string|Array<Array<any>>*/, TOP, props, opts) {\n\tvar v = [];\n\tif(typeof HP == \"string\") v = parseVector(HP, opts);\n\telse for(var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function(hp) { return {v:hp}; }));\n\tvar parts = (typeof TOP == \"string\") ? parseVector(TOP, opts).map(function (x) { return x.v; }) : TOP;\n\tvar idx = 0, len = 0;\n\tif(parts.length > 0) for(var i = 0; i !== v.length; i += 2) {\n\t\tlen = +(v[i+1].v);\n\t\tswitch(v[i].v) {\n\t\t\tcase \"Worksheets\":\n\t\t\tcase \"工作表\":\n\t\t\tcase \"Листы\":\n\t\t\tcase \"أوراق العمل\":\n\t\t\tcase \"ワークシート\":\n\t\t\tcase \"גליונות עבודה\":\n\t\t\tcase \"Arbeitsblätter\":\n\t\t\tcase \"Çalışma Sayfaları\":\n\t\t\tcase \"Feuilles de calcul\":\n\t\t\tcase \"Fogli di lavoro\":\n\t\t\tcase \"Folhas de cálculo\":\n\t\t\tcase \"Planilhas\":\n\t\t\tcase \"Regneark\":\n\t\t\tcase \"Hojas de cálculo\":\n\t\t\tcase \"Werkbladen\":\n\t\t\t\tprops.Worksheets = len;\n\t\t\t\tprops.SheetNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Named Ranges\":\n\t\t\tcase \"Rangos con nombre\":\n\t\t\tcase \"名前付き一覧\":\n\t\t\tcase \"Benannte Bereiche\":\n\t\t\tcase \"Navngivne områder\":\n\t\t\t\tprops.NamedRanges = len;\n\t\t\t\tprops.DefinedNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Charts\":\n\t\t\tcase \"Diagramme\":\n\t\t\t\tprops.Chartsheets = len;\n\t\t\t\tprops.ChartNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\t\t}\n\t\tidx += len;\n\t}\n}\n\nfunction parse_ext_props(data, p, opts) {\n\tvar q = {}; if(!p) p = {};\n\tdata = utf8read(data);\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tvar xml = (data.match(matchtag(f[0]))||[])[1];\n\t\tswitch(f[2]) {\n\t\t\tcase \"string\": if(xml) p[f[1]] = unescapexml(xml); break;\n\t\t\tcase \"bool\": p[f[1]] = xml === \"true\"; break;\n\t\t\tcase \"raw\":\n\t\t\t\tvar cur = data.match(new RegExp(\"<\" + f[0] + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + f[0] + \">\"));\n\t\t\t\tif(cur && cur.length > 0) q[f[1]] = cur[1];\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tif(q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);\n\n\treturn p;\n}\n\nfunction write_ext_props(cp/*::, opts*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], W = writextag;\n\tif(!cp) cp = {};\n\tcp.Application = \"SheetJS\";\n\to[o.length] = (XML_HEADER);\n\to[o.length] = (writextag('Properties', null, {\n\t\t'xmlns': XMLNS.EXT_PROPS,\n\t\t'xmlns:vt': XMLNS.vt\n\t}));\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tif(cp[f[1]] === undefined) return;\n\t\tvar v;\n\t\tswitch(f[2]) {\n\t\t\tcase 'string': v = escapexml(String(cp[f[1]])); break;\n\t\t\tcase 'bool': v = cp[f[1]] ? 'true' : 'false'; break;\n\t\t}\n\t\tif(v !== undefined) o[o.length] = (W(f[0], v));\n\t});\n\n\t/* TODO: HeadingPairs, TitlesOfParts */\n\to[o.length] = (W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>')+W('vt:variant', W('vt:i4', String(cp.Worksheets))), {size:2, baseType:\"variant\"})));\n\to[o.length] = (W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function(s) { return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\"; }).join(\"\"), {size: cp.Worksheets, baseType:\"lpstr\"})));\n\tif(o.length>2){ o[o.length] = ('</Properties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.2 Custom File Properties Part */\nvar custregex = /<[^>]+>[^<]*/g;\nfunction parse_cust_props(data/*:string*/, opts) {\n\tvar p = {}, name = \"\";\n\tvar m = data.match(custregex);\n\tif(m) for(var i = 0; i != m.length; ++i) {\n\t\tvar x = m[i], y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Properties': break;\n\t\t\tcase '<property': name = unescapexml(y.name); break;\n\t\t\tcase '</property>': name = null; break;\n\t\t\tdefault: if (x.indexOf('<vt:') === 0) {\n\t\t\t\tvar toks = x.split('>');\n\t\t\t\tvar type = toks[0].slice(4), text = toks[1];\n\t\t\t\t/* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\n\t\t\t\tswitch(type) {\n\t\t\t\t\tcase 'lpstr': case 'bstr': case 'lpwstr':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bool':\n\t\t\t\t\t\tp[name] = parsexmlbool(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'i1': case 'i2': case 'i4': case 'i8': case 'int': case 'uint':\n\t\t\t\t\t\tp[name] = parseInt(text, 10);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r4': case 'r8': case 'decimal':\n\t\t\t\t\t\tp[name] = parseFloat(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'filetime': case 'date':\n\t\t\t\t\t\tp[name] = parseDate(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cy': case 'error':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(type.slice(-1) == '/') break;\n\t\t\t\t\t\tif(opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\n\t\t\t\t}\n\t\t\t} else if(x.slice(0,2) === \"</\") {/* empty */\n\t\t\t} else if(opts.WTF) throw new Error(x);\n\t\t}\n\t}\n\treturn p;\n}\n\nfunction write_cust_props(cp/*::, opts*/)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('Properties', null, {\n\t\t'xmlns': XMLNS.CUST_PROPS,\n\t\t'xmlns:vt': XMLNS.vt\n\t})];\n\tif(!cp) return o.join(\"\");\n\tvar pid = 1;\n\tkeys(cp).forEach(function custprop(k) { ++pid;\n\t\to[o.length] = (writextag('property', write_vt(cp[k], true), {\n\t\t\t'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\n\t\t\t'pid': pid,\n\t\t\t'name': escapexml(k)\n\t\t}));\n\t});\n\tif(o.length>2){ o[o.length] = '</Properties>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* Common Name -> XLML Name */\nvar XLMLDocPropsMap = {\n\tTitle: 'Title',\n\tSubject: 'Subject',\n\tAuthor: 'Author',\n\tKeywords: 'Keywords',\n\tComments: 'Description',\n\tLastAuthor: 'LastAuthor',\n\tRevNumber: 'Revision',\n\tApplication: 'AppName',\n\t/* TotalTime: 'TotalTime', */\n\tLastPrinted: 'LastPrinted',\n\tCreatedDate: 'Created',\n\tModifiedDate: 'LastSaved',\n\t/* Pages */\n\t/* Words */\n\t/* Characters */\n\tCategory: 'Category',\n\t/* PresentationFormat */\n\tManager: 'Manager',\n\tCompany: 'Company',\n\t/* Guid */\n\t/* HyperlinkBase */\n\t/* Bytes */\n\t/* Lines */\n\t/* Paragraphs */\n\t/* CharactersWithSpaces */\n\tAppVersion: 'Version',\n\n\tContentStatus: 'ContentStatus', /* NOTE: missing from schema */\n\tIdentifier: 'Identifier', /* NOTE: missing from schema */\n\tLanguage: 'Language' /* NOTE: missing from schema */\n};\nvar evert_XLMLDPM;\n\nfunction xlml_set_prop(Props, tag/*:string*/, val) {\n\tif(!evert_XLMLDPM) evert_XLMLDPM = evert(XLMLDocPropsMap);\n\ttag = evert_XLMLDPM[tag] || tag;\n\tProps[tag] = val;\n}\n\nfunction xlml_write_docprops(Props, opts) {\n\tvar o/*:Array<string>*/ = [];\n\tkeys(XLMLDocPropsMap).map(function(m) {\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(CORE_PROPS[i][1] == m) return CORE_PROPS[i];\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(EXT_PROPS[i][1] == m) return EXT_PROPS[i];\n\t\tthrow m;\n\t}).forEach(function(p) {\n\t\tif(Props[p[1]] == null) return;\n\t\tvar m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\n\t\tswitch(p[2]) {\n\t\t\tcase 'date': m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"Z\"); break;\n\t\t}\n\t\tif(typeof m == 'number') m = String(m);\n\t\telse if(m === true || m === false) { m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"\");\n\t\to.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\n\t});\n\treturn writextag('DocumentProperties', o.join(\"\"), {xmlns:XLMLNS.o });\n}\nfunction xlml_write_custprops(Props, Custprops/*::, opts*/) {\n\tvar BLACKLIST = [\"Worksheets\",\"SheetNames\"];\n\tvar T = 'CustomDocumentProperties';\n\tvar o/*:Array<string>*/ = [];\n\tif(Props) keys(Props).forEach(function(k) {\n\t\t/*:: if(!Props) return; */\n\t\tif(!Object.prototype.hasOwnProperty.call(Props, k)) return;\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(k == CORE_PROPS[i][1]) return;\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(k == EXT_PROPS[i][1]) return;\n\t\tfor(i = 0; i < BLACKLIST.length; ++i) if(k == BLACKLIST[i]) return;\n\n\t\tvar m = Props[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\tif(Custprops) keys(Custprops).forEach(function(k) {\n\t\t/*:: if(!Custprops) return; */\n\t\tif(!Object.prototype.hasOwnProperty.call(Custprops, k)) return;\n\t\tif(Props && Object.prototype.hasOwnProperty.call(Props, k)) return;\n\t\tvar m = Custprops[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) { t = \"dateTime.tz\"; m = m.toISOString(); }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\treturn '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\n}\n/* [MS-DTYP] 2.3.3 FILETIME */\n/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\n/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\nfunction parse_FILETIME(blob) {\n\tvar dwLowDateTime = blob.read_shift(4), dwHighDateTime = blob.read_shift(4);\n\treturn new Date(((dwHighDateTime/1e7*Math.pow(2,32) + dwLowDateTime/1e7) - 11644473600)*1000).toISOString().replace(/\\.000/,\"\");\n}\nfunction write_FILETIME(time/*:string|Date*/) {\n\tvar date = (typeof time == \"string\") ? new Date(Date.parse(time)) : time;\n\tvar t = date.getTime() / 1000 + 11644473600;\n\tvar l = t % Math.pow(2,32), h = (t - l) / Math.pow(2,32);\n\tl *= 1e7; h *= 1e7;\n\tvar w = (l / Math.pow(2,32)) | 0;\n\tif(w > 0) { l = l % Math.pow(2,32); h += w; }\n\tvar o = new_buf(8); o.write_shift(4, l); o.write_shift(4, h); return o;\n}\n\n/* [MS-OSHARED] 2.3.3.1.4 Lpstr */\nfunction parse_lpstr(blob, type, pad/*:?number*/) {\n\tvar start = blob.l;\n\tvar str = blob.read_shift(0, 'lpstr-cp');\n\tif(pad) while((blob.l - start) & 3) ++blob.l;\n\treturn str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\nfunction parse_lpwstr(blob, type, pad) {\n\tvar str = blob.read_shift(0, 'lpwstr');\n\tif(pad) blob.l += (4 - ((str.length+1) & 3)) & 3;\n\treturn str;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.11 VtString */\n/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\nfunction parse_VtStringBase(blob, stringType, pad) {\n\tif(stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\n\treturn parse_lpstr(blob, stringType, pad);\n}\n\nfunction parse_VtString(blob, t/*:number*/, pad/*:?boolean*/) { return parse_VtStringBase(blob, t, pad === false ? 0: 4); }\nfunction parse_VtUnalignedString(blob, t/*:number*/) { if(!t) throw new Error(\"VtUnalignedString must have positive length\"); return parse_VtStringBase(blob, t, 0); }\n\n/* [MS-OSHARED] 2.3.3.1.7 VtVecLpwstrValue */\nfunction parse_VtVecLpwstrValue(blob)/*:Array<string>*/ {\n\tvar length = blob.read_shift(4);\n\tvar ret/*:Array<string>*/ = [];\n\tfor(var i = 0; i != length; ++i) {\n\t\tvar start = blob.l;\n\t\tret[i] = blob.read_shift(0, 'lpwstr').replace(chr0,'');\n\t\tif((blob.l - start) & 0x02) blob.l += 2;\n\t}\n\treturn ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\nfunction parse_VtVecUnalignedLpstrValue(blob)/*:Array<string>*/ {\n\tvar length = blob.read_shift(4);\n\tvar ret/*:Array<string>*/ = [];\n\tfor(var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0,'');\n\treturn ret;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\nfunction parse_VtHeadingPair(blob) {\n\tvar start = blob.l;\n\tvar headingString = parse_TypedPropertyValue(blob, VT_USTR);\n\tif(blob[blob.l] == 0x00 && blob[blob.l+1] == 0x00 && ((blob.l - start) & 0x02)) blob.l += 2;\n\tvar headerParts = parse_TypedPropertyValue(blob, VT_I4);\n\treturn [headingString, headerParts];\n}\n\n/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\nfunction parse_VtVecHeadingPairValue(blob) {\n\tvar cElements = blob.read_shift(4);\n\tvar out = [];\n\tfor(var i = 0; i < cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\n\treturn out;\n}\n\n/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\nfunction parse_dictionary(blob,CodePage) {\n\tvar cnt = blob.read_shift(4);\n\tvar dict/*:{[number]:string}*/ = ({}/*:any*/);\n\tfor(var j = 0; j != cnt; ++j) {\n\t\tvar pid = blob.read_shift(4);\n\t\tvar len = blob.read_shift(4);\n\t\tdict[pid] = blob.read_shift(len, (CodePage === 0x4B0 ?'utf16le':'utf8')).replace(chr0,'').replace(chr1,'!');\n\t\tif(CodePage === 0x4B0 && (len % 2)) blob.l += 2;\n\t}\n\tif(blob.l & 3) blob.l = (blob.l>>2+1)<<2;\n\treturn dict;\n}\n\n/* [MS-OLEPS] 2.9 BLOB */\nfunction parse_BLOB(blob) {\n\tvar size = blob.read_shift(4);\n\tvar bytes = blob.slice(blob.l,blob.l+size);\n\tblob.l += size;\n\tif((size & 3) > 0) blob.l += (4 - (size & 3)) & 3;\n\treturn bytes;\n}\n\n/* [MS-OLEPS] 2.11 ClipboardData */\nfunction parse_ClipboardData(blob) {\n\t// TODO\n\tvar o = {};\n\to.Size = blob.read_shift(4);\n\t//o.Format = blob.read_shift(4);\n\tblob.l += o.Size + 3 - (o.Size - 1) % 4;\n\treturn o;\n}\n\n/* [MS-OLEPS] 2.15 TypedPropertyValue */\nfunction parse_TypedPropertyValue(blob, type/*:number*/, _opts)/*:any*/ {\n\tvar t = blob.read_shift(2), ret, opts = _opts||{};\n\tblob.l += 2;\n\tif(type !== VT_VARIANT)\n\tif(t !== type && VT_CUSTOM.indexOf(type)===-1 && !((type & 0xFFFE) == 0x101E && (t & 0xFFFE) == 0x101E)) throw new Error('Expected type ' + type + ' saw ' + t);\n\tswitch(type === VT_VARIANT ? t : type) {\n\t\tcase 0x02 /*VT_I2*/: ret = blob.read_shift(2, 'i'); if(!opts.raw) blob.l += 2; return ret;\n\t\tcase 0x03 /*VT_I4*/: ret = blob.read_shift(4, 'i'); return ret;\n\t\tcase 0x0B /*VT_BOOL*/: return blob.read_shift(4) !== 0x0;\n\t\tcase 0x13 /*VT_UI4*/: ret = blob.read_shift(4); return ret;\n\t\tcase 0x1E /*VT_LPSTR*/: return parse_lpstr(blob, t, 4).replace(chr0,'');\n\t\tcase 0x1F /*VT_LPWSTR*/: return parse_lpwstr(blob);\n\t\tcase 0x40 /*VT_FILETIME*/: return parse_FILETIME(blob);\n\t\tcase 0x41 /*VT_BLOB*/: return parse_BLOB(blob);\n\t\tcase 0x47 /*VT_CF*/: return parse_ClipboardData(blob);\n\t\tcase 0x50 /*VT_STRING*/: return parse_VtString(blob, t, !opts.raw).replace(chr0,'');\n\t\tcase 0x51 /*VT_USTR*/: return parse_VtUnalignedString(blob, t/*, 4*/).replace(chr0,'');\n\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: return parse_VtVecHeadingPairValue(blob);\n\t\tcase 0x101E /*VT_VECTOR|VT_LPSTR*/:\n\t\tcase 0x101F /*VT_VECTOR|VT_LPWSTR*/:\n\t\t\treturn t == 0x101F ? parse_VtVecLpwstrValue(blob) : parse_VtVecUnalignedLpstrValue(blob);\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\n\t}\n}\nfunction write_TypedPropertyValue(type/*:number*/, value) {\n\tvar o = new_buf(4), p = new_buf(4);\n\to.write_shift(4, type == 0x50 ? 0x1F : type);\n\tswitch(type) {\n\t\tcase 0x03 /*VT_I4*/: p.write_shift(-4, value); break;\n\t\tcase 0x05 /*VT_I4*/: p = new_buf(8); p.write_shift(8, value, 'f'); break;\n\t\tcase 0x0B /*VT_BOOL*/: p.write_shift(4, value ? 0x01 : 0x00); break;\n\t\tcase 0x40 /*VT_FILETIME*/: /*:: if(typeof value !== \"string\" && !(value instanceof Date)) throw \"unreachable\"; */ p = write_FILETIME(value); break;\n\t\tcase 0x1F /*VT_LPWSTR*/:\n\t\tcase 0x50 /*VT_STRING*/:\n\t\t\t/*:: if(typeof value !== \"string\") throw \"unreachable\"; */\n\t\t\tp = new_buf(4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tp.write_shift(4, value.length + 1);\n\t\t\tp.write_shift(0, value, \"dbcs\");\n\t\t\twhile(p.l != p.length) p.write_shift(1, 0);\n\t\t\tbreak;\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + value);\n\t}\n\treturn bconcat([o, p]);\n}\n\n/* [MS-OLEPS] 2.20 PropertySet */\nfunction parse_PropertySet(blob, PIDSI) {\n\tvar start_addr = blob.l;\n\tvar size = blob.read_shift(4);\n\tvar NumProps = blob.read_shift(4);\n\tvar Props = [], i = 0;\n\tvar CodePage = 0;\n\tvar Dictionary = -1, DictObj/*:{[number]:string}*/ = ({}/*:any*/);\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tvar PropID = blob.read_shift(4);\n\t\tvar Offset = blob.read_shift(4);\n\t\tProps[i] = [PropID, Offset + start_addr];\n\t}\n\tProps.sort(function(x,y) { return x[1] - y[1]; });\n\tvar PropH = {};\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tif(blob.l !== Props[i][1]) {\n\t\t\tvar fail = true;\n\t\t\tif(i>0 && PIDSI) switch(PIDSI[Props[i-1][0]].t) {\n\t\t\t\tcase 0x02 /*VT_I2*/: if(blob.l+2 === Props[i][1]) { blob.l+=2; fail = false; } break;\n\t\t\t\tcase 0x50 /*VT_STRING*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t}\n\t\t\tif((!PIDSI||i==0) && blob.l <= Props[i][1]) { fail=false; blob.l = Props[i][1]; }\n\t\t\tif(fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\n\t\t}\n\t\tif(PIDSI) {\n\t\t\tvar piddsi = PIDSI[Props[i][0]];\n\t\t\tPropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {raw:true});\n\t\t\tif(piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + (\"0000\" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);\n\t\t\tif(piddsi.n == \"CodePage\") switch(PropH[piddsi.n]) {\n\t\t\t\tcase 0: PropH[piddsi.n] = 1252;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 874:\n\t\t\t\tcase 932:\n\t\t\t\tcase 936:\n\t\t\t\tcase 949:\n\t\t\t\tcase 950:\n\t\t\t\tcase 1250:\n\t\t\t\tcase 1251:\n\t\t\t\tcase 1253:\n\t\t\t\tcase 1254:\n\t\t\t\tcase 1255:\n\t\t\t\tcase 1256:\n\t\t\t\tcase 1257:\n\t\t\t\tcase 1258:\n\t\t\t\tcase 10000:\n\t\t\t\tcase 1200:\n\t\t\t\tcase 1201:\n\t\t\t\tcase 1252:\n\t\t\t\tcase 65000: case -536:\n\t\t\t\tcase 65001: case -535:\n\t\t\t\t\tset_cp(CodePage = (PropH[piddsi.n]>>>0) & 0xFFFF); break;\n\t\t\t\tdefault: throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\n\t\t\t}\n\t\t} else {\n\t\t\tif(Props[i][0] === 0x1) {\n\t\t\t\tCodePage = PropH.CodePage = (parse_TypedPropertyValue(blob, VT_I2)/*:number*/);\n\t\t\t\tset_cp(CodePage);\n\t\t\t\tif(Dictionary !== -1) {\n\t\t\t\t\tvar oldpos = blob.l;\n\t\t\t\t\tblob.l = Props[Dictionary][1];\n\t\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t\t\tblob.l = oldpos;\n\t\t\t\t}\n\t\t\t} else if(Props[i][0] === 0) {\n\t\t\t\tif(CodePage === 0) { Dictionary = i; blob.l = Props[i+1][1]; continue; }\n\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t} else {\n\t\t\t\tvar name = DictObj[Props[i][0]];\n\t\t\t\tvar val;\n\t\t\t\t/* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\n\t\t\t\tswitch(blob[blob.l]) {\n\t\t\t\t\tcase 0x41 /*VT_BLOB*/: blob.l += 4; val = parse_BLOB(blob); break;\n\t\t\t\t\tcase 0x1E /*VT_LPSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n\t\t\t\t\tcase 0x1F /*VT_LPWSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n\t\t\t\t\tcase 0x03 /*VT_I4*/: blob.l += 4; val = blob.read_shift(4, 'i'); break;\n\t\t\t\t\tcase 0x13 /*VT_UI4*/: blob.l += 4; val = blob.read_shift(4); break;\n\t\t\t\t\tcase 0x05 /*VT_R8*/: blob.l += 4; val = blob.read_shift(8, 'f'); break;\n\t\t\t\t\tcase 0x0B /*VT_BOOL*/: blob.l += 4; val = parsebool(blob, 4); break;\n\t\t\t\t\tcase 0x40 /*VT_FILETIME*/: blob.l += 4; val = parseDate(parse_FILETIME(blob)); break;\n\t\t\t\t\tdefault: throw new Error(\"unparsed value: \" + blob[blob.l]);\n\t\t\t\t}\n\t\t\t\tPropH[name] = val;\n\t\t\t}\n\t\t}\n\t}\n\tblob.l = start_addr + size; /* step ahead to skip padding */\n\treturn PropH;\n}\nvar XLSPSSkip = [ \"CodePage\", \"Thumbnail\", \"_PID_LINKBASE\", \"_PID_HLINKS\", \"SystemIdentifier\", \"FMTID\" ]; //.concat(PseudoPropsPairs);\nfunction guess_property_type(val/*:any*/)/*:number*/ {\n\tswitch(typeof val) {\n\t\tcase \"boolean\": return 0x0B;\n\t\tcase \"number\": return ((val|0)==val) ? 0x03 : 0x05;\n\t\tcase \"string\": return 0x1F;\n\t\tcase \"object\": if(val instanceof Date) return 0x40; break;\n\t}\n\treturn -1;\n}\nfunction write_PropertySet(entries, RE, PIDSI) {\n\tvar hdr = new_buf(8), piao = [], prop = [];\n\tvar sz = 8, i = 0;\n\n\tvar pr = new_buf(8), pio = new_buf(8);\n\tpr.write_shift(4, 0x0002);\n\tpr.write_shift(4, 0x04B0);\n\tpio.write_shift(4, 0x0001);\n\tprop.push(pr); piao.push(pio);\n\tsz += 8 + pr.length;\n\n\tif(!RE) {\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, 0);\n\t\tpiao.unshift(pio);\n\n\t\tvar bufs = [new_buf(4)];\n\t\tbufs[0].write_shift(4, entries.length);\n\t\tfor(i = 0; i < entries.length; ++i) {\n\t\t\tvar value = entries[i][0];\n\t\t\tpr = new_buf(4 + 4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tpr.write_shift(4, i+2);\n\t\t\tpr.write_shift(4, value.length + 1);\n\t\t\tpr.write_shift(0, value, \"dbcs\");\n\t\t\twhile(pr.l != pr.length) pr.write_shift(1, 0);\n\t\t\tbufs.push(pr);\n\t\t}\n\t\tpr = bconcat(bufs);\n\t\tprop.unshift(pr);\n\t\tsz += 8 + pr.length;\n\t}\n\n\tfor(i = 0; i < entries.length; ++i) {\n\t\tif(RE && !RE[entries[i][0]]) continue;\n\t\tif(XLSPSSkip.indexOf(entries[i][0]) > -1 || PseudoPropsPairs.indexOf(entries[i][0]) > -1) continue;\n\t\tif(entries[i][1] == null) continue;\n\n\t\tvar val = entries[i][1], idx = 0;\n\t\tif(RE) {\n\t\t\tidx = +RE[entries[i][0]];\n\t\t\tvar pinfo = (PIDSI/*:: || {}*/)[idx]/*:: || {} */;\n\t\t\tif(pinfo.p == \"version\" && typeof val == \"string\") {\n\t\t\t\t/*:: if(typeof val !== \"string\") throw \"unreachable\"; */\n\t\t\t\tvar arr = val.split(\".\");\n\t\t\t\tval = ((+arr[0])<<16) + ((+arr[1])||0);\n\t\t\t}\n\t\t\tpr = write_TypedPropertyValue(pinfo.t, val);\n\t\t} else {\n\t\t\tvar T = guess_property_type(val);\n\t\t\tif(T == -1) { T = 0x1F; val = String(val); }\n\t\t\tpr = write_TypedPropertyValue(T, val);\n\t\t}\n\t\tprop.push(pr);\n\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, !RE ? 2+i : idx);\n\t\tpiao.push(pio);\n\n\t\tsz += 8 + pr.length;\n\t}\n\n\tvar w = 8 * (prop.length + 1);\n\tfor(i = 0; i < prop.length; ++i) { piao[i].write_shift(4, w); w += prop[i].length; }\n\thdr.write_shift(4, sz);\n\thdr.write_shift(4, prop.length);\n\treturn bconcat([hdr].concat(piao).concat(prop));\n}\n\n/* [MS-OLEPS] 2.21 PropertySetStream */\nfunction parse_PropertySetStream(file, PIDSI, clsid) {\n\tvar blob = file.content;\n\tif(!blob) return ({}/*:any*/);\n\tprep_blob(blob, 0);\n\n\tvar NumSets, FMTID0, FMTID1, Offset0, Offset1 = 0;\n\tblob.chk('feff', 'Byte Order: ');\n\n\t/*var vers = */blob.read_shift(2); // TODO: check version\n\tvar SystemIdentifier = blob.read_shift(4);\n\tvar CLSID = blob.read_shift(16);\n\tif(CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\n\tNumSets = blob.read_shift(4);\n\tif(NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\n\tFMTID0 = blob.read_shift(16); Offset0 = blob.read_shift(4);\n\n\tif(NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);\n\telse if(NumSets === 2) { FMTID1 = blob.read_shift(16); Offset1 = blob.read_shift(4); }\n\tvar PSet0 = parse_PropertySet(blob, PIDSI);\n\n\tvar rval = ({ SystemIdentifier: SystemIdentifier }/*:any*/);\n\tfor(var y in PSet0) rval[y] = PSet0[y];\n\t//rval.blob = blob;\n\trval.FMTID = FMTID0;\n\t//rval.PSet0 = PSet0;\n\tif(NumSets === 1) return rval;\n\tif(Offset1 - blob.l == 2) blob.l += 2;\n\tif(blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\n\tvar PSet1;\n\ttry { PSet1 = parse_PropertySet(blob, null); } catch(e) {/* empty */}\n\tfor(y in PSet1) rval[y] = PSet1[y];\n\trval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\n\treturn rval;\n}\nfunction write_PropertySetStream(entries, clsid, RE, PIDSI/*:{[key:string|number]:any}*/, entries2/*:?any*/, clsid2/*:?any*/) {\n\tvar hdr = new_buf(entries2 ? 68 : 48);\n\tvar bufs = [hdr];\n\thdr.write_shift(2, 0xFFFE);\n\thdr.write_shift(2, 0x0000); /* TODO: type 1 props */\n\thdr.write_shift(4, 0x32363237);\n\thdr.write_shift(16, CFB.utils.consts.HEADER_CLSID, \"hex\");\n\thdr.write_shift(4, (entries2 ? 2 : 1));\n\thdr.write_shift(16, clsid, \"hex\");\n\thdr.write_shift(4, (entries2 ? 68 : 48));\n\tvar ps0 = write_PropertySet(entries, RE, PIDSI);\n\tbufs.push(ps0);\n\n\tif(entries2) {\n\t\tvar ps1 = write_PropertySet(entries2, null, null);\n\t\thdr.write_shift(16, clsid2, \"hex\");\n\t\thdr.write_shift(4, 68 + ps0.length);\n\t\tbufs.push(ps1);\n\t}\n\treturn bconcat(bufs);\n}\n\nfunction parsenoop2(blob, length) { blob.read_shift(length); return null; }\nfunction writezeroes(n, o) { if(!o) o=new_buf(n); for(var j=0; j<n; ++j) o.write_shift(1, 0); return o; }\n\nfunction parslurp(blob, length, cb) {\n\tvar arr = [], target = blob.l + length;\n\twhile(blob.l < target) arr.push(cb(blob, target - blob.l));\n\tif(target !== blob.l) throw new Error(\"Slurp error\");\n\treturn arr;\n}\n\nfunction parsebool(blob, length/*:number*/) { return blob.read_shift(length) === 0x1; }\nfunction writebool(v/*:any*/, o) { if(!o) o=new_buf(2); o.write_shift(2, +!!v); return o; }\n\nfunction parseuint16(blob/*::, length:?number, opts:?any*/) { return blob.read_shift(2, 'u'); }\nfunction writeuint16(v/*:number*/, o) { if(!o) o=new_buf(2); o.write_shift(2, v); return o; }\nfunction parseuint16a(blob, length/*:: :?number, opts:?any*/) { return parslurp(blob,length,parseuint16);}\n\n/* --- 2.5 Structures --- */\n\n/* [MS-XLS] 2.5.10 Bes (boolean or error) */\nfunction parse_Bes(blob/*::, length*/) {\n\tvar v = blob.read_shift(1), t = blob.read_shift(1);\n\treturn t === 0x01 ? v : v === 0x01;\n}\nfunction write_Bes(v, t/*:string*/, o) {\n\tif(!o) o = new_buf(2);\n\to.write_shift(1, ((t == 'e') ? +v : +!!v));\n\to.write_shift(1, ((t == 'e') ? 1 : 0));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.240 ShortXLUnicodeString */\nfunction parse_ShortXLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\n\tvar encoding = 'sbcs-cont';\n\tvar cp = current_codepage;\n\tif(opts && opts.biff >= 8) current_codepage = 1200;\n\tif(!opts || opts.biff == 8 ) {\n\t\tvar fHighByte = blob.read_shift(1);\n\t\tif(fHighByte) { encoding = 'dbcs-cont'; }\n\t} else if(opts.biff == 12) {\n\t\tencoding = 'wstr';\n\t}\n\tif(opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\n\tvar o = cch ? blob.read_shift(cch, encoding) : \"\";\n\tcurrent_codepage = cp;\n\treturn o;\n}\n\n/* 2.5.293 XLUnicodeRichExtendedString */\nfunction parse_XLUnicodeRichExtendedString(blob) {\n\tvar cp = current_codepage;\n\tcurrent_codepage = 1200;\n\tvar cch = blob.read_shift(2), flags = blob.read_shift(1);\n\tvar /*fHighByte = flags & 0x1,*/ fExtSt = flags & 0x4, fRichSt = flags & 0x8;\n\tvar width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\n\tvar cRun = 0, cbExtRst;\n\tvar z = {};\n\tif(fRichSt) cRun = blob.read_shift(2);\n\tif(fExtSt) cbExtRst = blob.read_shift(4);\n\tvar encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\n\tvar msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\n\tif(fRichSt) blob.l += 4 * cRun; //TODO: parse this\n\tif(fExtSt) blob.l += cbExtRst; //TODO: parse this\n\tz.t = msg;\n\tif(!fRichSt) { z.raw = \"<t>\" + z.t + \"</t>\"; z.r = z.t; }\n\tcurrent_codepage = cp;\n\treturn z;\n}\nfunction write_XLUnicodeRichExtendedString(xlstr/*:: :XLString, opts*/) {\n\tvar str = (xlstr.t||\"\"), nfmts = 1;\n\n\tvar hdr = new_buf(3 + (nfmts > 1 ? 2 : 0));\n\thdr.write_shift(2, str.length);\n\thdr.write_shift(1, (nfmts > 1 ? 0x08 : 0x00) | 0x01);\n\tif(nfmts > 1) hdr.write_shift(2, nfmts);\n\n\tvar otext = new_buf(2 * str.length);\n\totext.write_shift(2 * str.length, str, 'utf16le');\n\n\tvar out = [hdr, otext];\n\n\treturn bconcat(out);\n}\n\n/* 2.5.296 XLUnicodeStringNoCch */\nfunction parse_XLUnicodeStringNoCch(blob, cch, opts) {\n\tvar retval;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\n\t\tif(opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\n\t}\n\tvar fHighByte = blob.read_shift(1);\n\tif(fHighByte===0) { retval = blob.read_shift(cch, 'sbcs-cont'); }\n\telse { retval = blob.read_shift(cch, 'dbcs-cont'); }\n\treturn retval;\n}\n\n/* 2.5.294 XLUnicodeString */\nfunction parse_XLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn parse_XLUnicodeStringNoCch(blob, cch, opts);\n}\n/* BIFF5 override */\nfunction parse_XLUnicodeString2(blob, length, opts) {\n\tif(opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, (opts.biff <= 4 || !blob.lens ) ? 'cpstr' : 'sbcs-cont');\n}\n/* TODO: BIFF5 and lower, codepage awareness */\nfunction write_XLUnicodeString(str, opts, o) {\n\tif(!o) o = new_buf(3 + 2 * str.length);\n\to.write_shift(2, str.length);\n\to.write_shift(1, 1);\n\to.write_shift(31, str, 'utf16le');\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.61 ControlInfo */\nfunction parse_ControlInfo(blob/*::, length, opts*/) {\n\tvar flags = blob.read_shift(1);\n\tblob.l++;\n\tvar accel = blob.read_shift(2);\n\tblob.l += 2;\n\treturn [flags, accel];\n}\n\n/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\nfunction parse_URLMoniker(blob/*::, length, opts*/) {\n\tvar len = blob.read_shift(4), start = blob.l;\n\tvar extra = false;\n\tif(len > 24) {\n\t\t/* look ahead */\n\t\tblob.l += len - 24;\n\t\tif(blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\n\t\tblob.l = start;\n\t}\n\tvar url = blob.read_shift((extra?len-24:len)>>1, 'utf16le').replace(chr0,\"\");\n\tif(extra) blob.l += 24;\n\treturn url;\n}\n\n/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\nfunction parse_FileMoniker(blob/*::, length*/) {\n\tvar cAnti = blob.read_shift(2);\n\tvar preamble = \"\"; while(cAnti-- > 0) preamble += \"../\";\n\tvar ansiPath = blob.read_shift(0, 'lpstr-ansi');\n\tblob.l += 2; //var endServer = blob.read_shift(2);\n\tif(blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\n\tvar sz = blob.read_shift(4);\n\tif(sz === 0) return preamble + ansiPath.replace(/\\\\/g,\"/\");\n\tvar bytes = blob.read_shift(4);\n\tif(blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\n\tvar unicodePath = blob.read_shift(bytes>>1, 'utf16le').replace(chr0,\"\");\n\treturn preamble + unicodePath;\n}\n\n/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\nfunction parse_HyperlinkMoniker(blob, length) {\n\tvar clsid = blob.read_shift(16); length -= 16;\n\tswitch(clsid) {\n\t\tcase \"e0c9ea79f9bace118c8200aa004ba90b\": return parse_URLMoniker(blob, length);\n\t\tcase \"0303000000000000c000000000000046\": return parse_FileMoniker(blob, length);\n\t\tdefault: throw new Error(\"Unsupported Moniker \" + clsid);\n\t}\n}\n\n/* [MS-OSHARED] 2.3.7.9 HyperlinkString */\nfunction parse_HyperlinkString(blob/*::, length*/) {\n\tvar len = blob.read_shift(4);\n\tvar o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\n\treturn o;\n}\nfunction write_HyperlinkString(str/*:string*/, o) {\n\tif(!o) o = new_buf(6 + str.length * 2);\n\to.write_shift(4, 1 + str.length);\n\tfor(var i = 0; i < str.length; ++i) o.write_shift(2, str.charCodeAt(i));\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\nfunction parse_Hyperlink(blob, length)/*:Hyperlink*/ {\n\tvar end = blob.l + length;\n\tvar sVer = blob.read_shift(4);\n\tif(sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\n\tvar flags = blob.read_shift(2);\n\tblob.l += 2;\n\tvar displayName, targetFrameName, moniker, oleMoniker, Loc=\"\", guid, fileTime;\n\tif(flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\n\tif(flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0020) guid = blob.read_shift(16);\n\tif(flags & 0x0040) fileTime = parse_FILETIME(blob/*, 8*/);\n\tblob.l = end;\n\tvar target = targetFrameName||moniker||oleMoniker||\"\";\n\tif(target && Loc) target+=\"#\"+Loc;\n\tif(!target) target = \"#\" + Loc;\n\tif((flags & 0x0002) && target.charAt(0) == \"/\" && target.charAt(1) != \"/\") target = \"file://\" + target;\n\tvar out = ({Target:target}/*:any*/);\n\tif(guid) out.guid = guid;\n\tif(fileTime) out.time = fileTime;\n\tif(displayName) out.Tooltip = displayName;\n\treturn out;\n}\nfunction write_Hyperlink(hl) {\n\tvar out = new_buf(512), i = 0;\n\tvar Target = hl.Target;\n\tif(Target.slice(0,7) == \"file://\") Target = Target.slice(7);\n\tvar hashidx = Target.indexOf(\"#\");\n\tvar F = hashidx > -1 ? 0x1f : 0x17;\n\tswitch(Target.charAt(0)) { case \"#\": F=0x1c; break; case \".\": F&=~2; break; }\n\tout.write_shift(4,2); out.write_shift(4, F);\n\tvar data = [8,6815827,6619237,4849780,83]; for(i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\n\tif(F == 0x1C) {\n\t\tTarget = Target.slice(1);\n\t\twrite_HyperlinkString(Target, out);\n\t} else if(F & 0x02) {\n\t\tdata = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar Pretarget = hashidx > -1 ? Target.slice(0, hashidx) : Target;\n\t\tout.write_shift(4, 2*(Pretarget.length + 1));\n\t\tfor(i = 0; i < Pretarget.length; ++i) out.write_shift(2, Pretarget.charCodeAt(i));\n\t\tout.write_shift(2, 0);\n\t\tif(F & 0x08) write_HyperlinkString(hashidx > -1 ? Target.slice(hashidx+1): \"\", out);\n\t} else {\n\t\tdata = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar P = 0;\n\t\twhile(Target.slice(P*3,P*3+3)==\"../\"||Target.slice(P*3,P*3+3)==\"..\\\\\") ++P;\n\t\tout.write_shift(2, P);\n\t\tout.write_shift(4, Target.length - 3 * P + 1);\n\t\tfor(i = 0; i < Target.length - 3 * P; ++i) out.write_shift(1, Target.charCodeAt(i + 3 * P) & 0xFF);\n\t\tout.write_shift(1, 0);\n\t\tout.write_shift(2, 0xFFFF);\n\t\tout.write_shift(2, 0xDEAD);\n\t\tfor(i = 0; i < 6; ++i) out.write_shift(4, 0);\n\t}\n\treturn out.slice(0, out.l);\n}\n\n/* 2.5.178 LongRGBA */\nfunction parse_LongRGBA(blob/*::, length*/) { var r = blob.read_shift(1), g = blob.read_shift(1), b = blob.read_shift(1), a = blob.read_shift(1); return [r,g,b,a]; }\n\n/* 2.5.177 LongRGB */\nfunction parse_LongRGB(blob, length) { var x = parse_LongRGBA(blob, length); x[3] = 0; return x; }\n\n\n/* [MS-XLS] 2.5.19 */\nfunction parse_XLSCell(blob/*::, length*/)/*:Cell*/ {\n\tvar rw = blob.read_shift(2); // 0-indexed\n\tvar col = blob.read_shift(2);\n\tvar ixfe = blob.read_shift(2);\n\treturn ({r:rw, c:col, ixfe:ixfe}/*:any*/);\n}\nfunction write_XLSCell(R/*:number*/, C/*:number*/, ixfe/*:?number*/, o) {\n\tif(!o) o = new_buf(6);\n\to.write_shift(2, R);\n\to.write_shift(2, C);\n\to.write_shift(2, ixfe||0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.134 */\nfunction parse_frtHeader(blob) {\n\tvar rt = blob.read_shift(2);\n\tvar flags = blob.read_shift(2); // TODO: parse these flags\n\tblob.l += 8;\n\treturn {type: rt, flags: flags};\n}\n\n\n\nfunction parse_OptXLUnicodeString(blob, length, opts) { return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts); }\n\n/* [MS-XLS] 2.5.344 */\nfunction parse_XTI(blob, length, opts) {\n\tvar w = opts.biff > 8 ? 4 : 2;\n\tvar iSupBook = blob.read_shift(w), itabFirst = blob.read_shift(w,'i'), itabLast = blob.read_shift(w,'i');\n\treturn [iSupBook, itabFirst, itabLast];\n}\n\n/* [MS-XLS] 2.5.218 */\nfunction parse_RkRec(blob) {\n\tvar ixfe = blob.read_shift(2);\n\tvar RK = parse_RkNumber(blob);\n\treturn [ixfe, RK];\n}\n\n/* [MS-XLS] 2.5.1 */\nfunction parse_AddinUdf(blob, length, opts) {\n\tblob.l += 4; length -= 4;\n\tvar l = blob.l + length;\n\tvar udfName = parse_ShortXLUnicodeString(blob, length, opts);\n\tvar cb = blob.read_shift(2);\n\tl -= blob.l;\n\tif(cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n\tblob.l += cb;\n\treturn udfName;\n}\n\n/* [MS-XLS] 2.5.209 TODO: Check sizes */\nfunction parse_Ref8U(blob/*::, length*/) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(2);\n\tvar colLast = blob.read_shift(2);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\nfunction write_Ref8U(r/*:Range*/, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(2, r.s.r);\n\to.write_shift(2, r.e.r);\n\to.write_shift(2, r.s.c);\n\to.write_shift(2, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.211 */\nfunction parse_RefU(blob/*::, length*/) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(1);\n\tvar colLast = blob.read_shift(1);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\n\n/* [MS-XLS] 2.5.207 */\nvar parse_Ref = parse_RefU;\n\n/* [MS-XLS] 2.5.143 */\nfunction parse_FtCmo(blob/*::, length*/) {\n\tblob.l += 4;\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tblob.l+=12;\n\treturn [id, ot, flags];\n}\n\n/* [MS-XLS] 2.5.149 */\nfunction parse_FtNts(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.l += 16; // GUID TODO\n\tout.fSharedNote = blob.read_shift(2);\n\tblob.l += 4;\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.142 */\nfunction parse_FtCf(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.cf = blob.read_shift(2);\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.140 - 2.5.154 and friends */\nfunction parse_FtSkip(blob) { blob.l += 2; blob.l += blob.read_shift(2); }\nvar FtTab = {\n\t/*::[*/0x00/*::]*/: parse_FtSkip,      /* FtEnd */\n\t/*::[*/0x04/*::]*/: parse_FtSkip,      /* FtMacro */\n\t/*::[*/0x05/*::]*/: parse_FtSkip,      /* FtButton */\n\t/*::[*/0x06/*::]*/: parse_FtSkip,      /* FtGmo */\n\t/*::[*/0x07/*::]*/: parse_FtCf,        /* FtCf */\n\t/*::[*/0x08/*::]*/: parse_FtSkip,      /* FtPioGrbit */\n\t/*::[*/0x09/*::]*/: parse_FtSkip,      /* FtPictFmla */\n\t/*::[*/0x0A/*::]*/: parse_FtSkip,      /* FtCbls */\n\t/*::[*/0x0B/*::]*/: parse_FtSkip,      /* FtRbo */\n\t/*::[*/0x0C/*::]*/: parse_FtSkip,      /* FtSbs */\n\t/*::[*/0x0D/*::]*/: parse_FtNts,       /* FtNts */\n\t/*::[*/0x0E/*::]*/: parse_FtSkip,      /* FtSbsFmla */\n\t/*::[*/0x0F/*::]*/: parse_FtSkip,      /* FtGboData */\n\t/*::[*/0x10/*::]*/: parse_FtSkip,      /* FtEdoData */\n\t/*::[*/0x11/*::]*/: parse_FtSkip,      /* FtRboData */\n\t/*::[*/0x12/*::]*/: parse_FtSkip,      /* FtCblsData */\n\t/*::[*/0x13/*::]*/: parse_FtSkip,      /* FtLbsData */\n\t/*::[*/0x14/*::]*/: parse_FtSkip,      /* FtCblsFmla */\n\t/*::[*/0x15/*::]*/: parse_FtCmo\n};\nfunction parse_FtArray(blob, length/*::, ot*/) {\n\tvar tgt = blob.l + length;\n\tvar fts = [];\n\twhile(blob.l < tgt) {\n\t\tvar ft = blob.read_shift(2);\n\t\tblob.l-=2;\n\t\ttry {\n\t\t\tfts.push(FtTab[ft](blob, tgt - blob.l));\n\t\t} catch(e) { blob.l = tgt; return fts; }\n\t}\n\tif(blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\n\treturn fts;\n}\n\n/* --- 2.4 Records --- */\n\n/* [MS-XLS] 2.4.21 */\nfunction parse_BOF(blob, length) {\n\tvar o = {BIFFVer:0, dt:0};\n\to.BIFFVer = blob.read_shift(2); length -= 2;\n\tif(length >= 2) { o.dt = blob.read_shift(2); blob.l -= 2; }\n\tswitch(o.BIFFVer) {\n\t\tcase 0x0600: /* BIFF8 */\n\t\tcase 0x0500: /* BIFF5 */\n\t\tcase 0x0400: /* BIFF4 */\n\t\tcase 0x0300: /* BIFF3 */\n\t\tcase 0x0200: /* BIFF2 */\n\t\tcase 0x0002: case 0x0007: /* BIFF2 */\n\t\t\tbreak;\n\t\tdefault: if(length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\n\t}\n\n\tblob.read_shift(length);\n\treturn o;\n}\nfunction write_BOF(wb/*:Workbook*/, t/*:number*/, o) {\n\tvar h = 0x0600, w = 16;\n\tswitch(o.bookType) {\n\t\tcase 'biff8': break;\n\t\tcase 'biff5': h = 0x0500; w = 8; break;\n\t\tcase 'biff4': h = 0x0004; w = 6; break;\n\t\tcase 'biff3': h = 0x0003; w = 6; break;\n\t\tcase 'biff2': h = 0x0002; w = 4; break;\n\t\tcase 'xla': break;\n\t\tdefault: throw new Error(\"unsupported BIFF version\");\n\t}\n\tvar out = new_buf(w);\n\tout.write_shift(2, h);\n\tout.write_shift(2, t);\n\tif(w > 4) out.write_shift(2, 0x7262);\n\tif(w > 6) out.write_shift(2, 0x07CD);\n\tif(w > 8) {\n\t\tout.write_shift(2, 0xC009);\n\t\tout.write_shift(2, 0x0001);\n\t\tout.write_shift(2, 0x0706);\n\t\tout.write_shift(2, 0x0000);\n\t}\n\treturn out;\n}\n\n\n/* [MS-XLS] 2.4.146 */\nfunction parse_InterfaceHdr(blob, length) {\n\tif(length === 0) return 0x04b0;\n\tif((blob.read_shift(2))!==0x04b0){/* empty */}\n\treturn 0x04b0;\n}\n\n\n/* [MS-XLS] 2.4.349 */\nfunction parse_WriteAccess(blob, length, opts) {\n\tif(opts.enc) { blob.l += length; return \"\"; }\n\tvar l = blob.l;\n\t// TODO: make sure XLUnicodeString doesnt overrun\n\tvar UserName = parse_XLUnicodeString2(blob, 0, opts);\n\tblob.read_shift(length + l - blob.l);\n\treturn UserName;\n}\nfunction write_WriteAccess(s/*:string*/, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(b8 ? 112 : 54);\n\to.write_shift(opts.biff == 8 ? 2 : 1, 7);\n\tif(b8) o.write_shift(1, 0);\n\to.write_shift(4, 0x33336853);\n\to.write_shift(4, (0x00534A74 | (b8 ? 0 : 0x20000000)));\n\twhile(o.l < o.length) o.write_shift(1, (b8 ? 0 : 32));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.351 */\nfunction parse_WsBool(blob, length, opts) {\n\tvar flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\n\treturn { fDialog: flags & 0x10, fBelow: flags & 0x40, fRight: flags & 0x80 };\n}\n\n/* [MS-XLS] 2.4.28 */\nfunction parse_BoundSheet8(blob, length, opts) {\n\tvar pos = blob.read_shift(4);\n\tvar hidden = blob.read_shift(1) & 0x03;\n\tvar dt = blob.read_shift(1);\n\tswitch(dt) {\n\t\tcase 0: dt = 'Worksheet'; break;\n\t\tcase 1: dt = 'Macrosheet'; break;\n\t\tcase 2: dt = 'Chartsheet'; break;\n\t\tcase 6: dt = 'VBAModule'; break;\n\t}\n\tvar name = parse_ShortXLUnicodeString(blob, 0, opts);\n\tif(name.length === 0) name = \"Sheet1\";\n\treturn { pos:pos, hs:hidden, dt:dt, name:name };\n}\nfunction write_BoundSheet8(data, opts) {\n\tvar w = (!opts || opts.biff >= 8 ? 2 : 1);\n\tvar o = new_buf(8 + w * data.name.length);\n\to.write_shift(4, data.pos);\n\to.write_shift(1, data.hs || 0);\n\to.write_shift(1, data.dt);\n\to.write_shift(1, data.name.length);\n\tif(opts.biff >= 8) o.write_shift(1, 1);\n\to.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\n\tvar out = o.slice(0, o.l);\n\tout.l = o.l; return out;\n}\n\n/* [MS-XLS] 2.4.265 TODO */\nfunction parse_SST(blob, length)/*:SST*/ {\n\tvar end = blob.l + length;\n\tvar cnt = blob.read_shift(4);\n\tvar ucnt = blob.read_shift(4);\n\tvar strs/*:SST*/ = ([]/*:any*/);\n\tfor(var i = 0; i != ucnt && blob.l < end; ++i) {\n\t\tstrs.push(parse_XLUnicodeRichExtendedString(blob));\n\t}\n\tstrs.Count = cnt; strs.Unique = ucnt;\n\treturn strs;\n}\nfunction write_SST(sst, opts) {\n\tvar header = new_buf(8);\n\theader.write_shift(4, sst.Count);\n\theader.write_shift(4, sst.Unique);\n\tvar strs = [];\n\tfor(var j = 0; j < sst.length; ++j) strs[j] = write_XLUnicodeRichExtendedString(sst[j], opts);\n\tvar o = bconcat([header].concat(strs));\n\t/*::(*/o/*:: :any)*/.parts = [header.length].concat(strs.map(function(str) { return str.length; }));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.107 */\nfunction parse_ExtSST(blob, length) {\n\tvar extsst = {};\n\textsst.dsst = blob.read_shift(2);\n\tblob.l += length-2;\n\treturn extsst;\n}\n\n\n/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\nfunction parse_Row(blob) {\n\tvar z = ({}/*:any*/);\n\tz.r = blob.read_shift(2);\n\tz.c = blob.read_shift(2);\n\tz.cnt = blob.read_shift(2) - z.c;\n\tvar miyRw = blob.read_shift(2);\n\tblob.l += 4; // reserved(2), unused(2)\n\tvar flags = blob.read_shift(1); // various flags\n\tblob.l += 3; // reserved(8), ixfe(12), flags(4)\n\tif(flags & 0x07) z.level = flags & 0x07;\n\t// collapsed: flags & 0x10\n\tif(flags & 0x20) z.hidden = true;\n\tif(flags & 0x40) z.hpt = miyRw / 20;\n\treturn z;\n}\n\n\n/* [MS-XLS] 2.4.125 */\nfunction parse_ForceFullCalculation(blob) {\n\tvar header = parse_frtHeader(blob);\n\tif(header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\n\tvar fullcalc = blob.read_shift(4);\n\treturn fullcalc !== 0x0;\n}\n\n\n\n\n\n/* [MS-XLS] 2.4.215 rt */\nfunction parse_RecalcId(blob) {\n\tblob.read_shift(2);\n\treturn blob.read_shift(4);\n}\n\n/* [MS-XLS] 2.4.87 */\nfunction parse_DefaultRowHeight(blob, length, opts) {\n\tvar f = 0;\n\tif(!(opts && opts.biff == 2)) {\n\t\tf = blob.read_shift(2);\n\t}\n\tvar miyRw = blob.read_shift(2);\n\tif((opts && opts.biff == 2)) {\n\t\tf = 1 - (miyRw >> 15); miyRw &= 0x7fff;\n\t}\n\tvar fl = {Unsynced:f&1,DyZero:(f&2)>>1,ExAsc:(f&4)>>2,ExDsc:(f&8)>>3};\n\treturn [fl, miyRw];\n}\n\n/* [MS-XLS] 2.4.345 TODO */\nfunction parse_Window1(blob) {\n\tvar xWn = blob.read_shift(2), yWn = blob.read_shift(2), dxWn = blob.read_shift(2), dyWn = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), iTabCur = blob.read_shift(2), iTabFirst = blob.read_shift(2);\n\tvar ctabSel = blob.read_shift(2), wTabRatio = blob.read_shift(2);\n\treturn { Pos: [xWn, yWn], Dim: [dxWn, dyWn], Flags: flags, CurTab: iTabCur,\n\t\tFirstTab: iTabFirst, Selected: ctabSel, TabRatio: wTabRatio };\n}\nfunction write_Window1(/*::opts*/) {\n\tvar o = new_buf(18);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0x7260);\n\to.write_shift(2, 0x44c0);\n\to.write_shift(2, 0x38);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 1);\n\to.write_shift(2, 0x01f4);\n\treturn o;\n}\n/* [MS-XLS] 2.4.346 TODO */\nfunction parse_Window2(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff < 5) return {};\n\tvar f = blob.read_shift(2);\n\treturn { RTL: f & 0x40 };\n}\nfunction write_Window2(view) {\n\tvar o = new_buf(18), f = 0x6b6;\n\tif(view && view.RTL) f |= 0x40;\n\to.write_shift(2, f);\n\to.write_shift(4, 0);\n\to.write_shift(4, 64);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.189 TODO */\nfunction parse_Pane(/*blob, length, opts*/) {\n}\n\n/* [MS-XLS] 2.4.122 TODO */\nfunction parse_Font(blob, length, opts) {\n\tvar o/*:any*/ = {\n\t\tdyHeight: blob.read_shift(2),\n\t\tfl: blob.read_shift(2)\n\t};\n\tswitch((opts && opts.biff) || 8) {\n\t\tcase 2: break;\n\t\tcase 3: case 4: blob.l += 2; break;\n\t\tdefault: blob.l += 10; break;\n\t}\n\to.name = parse_ShortXLUnicodeString(blob, 0, opts);\n\treturn o;\n}\nfunction write_Font(data, opts) {\n\tvar name = data.name || \"Arial\";\n\tvar b5 = (opts && (opts.biff == 5)), w = (b5 ? (15 + name.length) : (16 + 2 * name.length));\n\tvar o = new_buf(w);\n\to.write_shift(2, (data.sz || 12) * 20);\n\to.write_shift(4, 0);\n\to.write_shift(2, 400);\n\to.write_shift(4, 0);\n\to.write_shift(2, 0);\n\to.write_shift(1, name.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * name.length, name, (b5 ? \"sbcs\" : \"utf16le\"));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.149 */\nfunction parse_LabelSst(blob) {\n\tvar cell = parse_XLSCell(blob);\n\tcell.isst = blob.read_shift(4);\n\treturn cell;\n}\nfunction write_LabelSst(R/*:number*/, C/*:number*/, v/*:number*/, os/*:number*/ /*::, opts*/) {\n\tvar o = new_buf(10);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(4, v);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.148 */\nfunction parse_Label(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 2) opts.biff = 5;\n\tvar target = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) blob.l++;\n\tvar str = parse_XLUnicodeString(blob, target - blob.l, opts);\n\tcell.val = str;\n\treturn cell;\n}\nfunction write_Label(R/*:number*/, C/*:number*/, v/*:string*/, os/*:number*/, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(6 + 2 + (+b8) + (1 + b8) * v.length);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(2, v.length);\n\tif(b8) o.write_shift(1, 1);\n\to.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\n\treturn o;\n}\n\n\n/* [MS-XLS] 2.4.126 Number Formats */\nfunction parse_Format(blob, length, opts) {\n\tvar numFmtId = blob.read_shift(2);\n\tvar fmtstr = parse_XLUnicodeString2(blob, 0, opts);\n\treturn [numFmtId, fmtstr];\n}\nfunction write_Format(i/*:number*/, f/*:string*/, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? (3 + f.length) : (5 + 2 * f.length));\n\to.write_shift(2, i);\n\to.write_shift((b5 ? 1 : 2), f.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * f.length, f, (b5 ? 'sbcs' : 'utf16le'));\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(out.l == null) out.l = out.length;\n\treturn out;\n}\nvar parse_BIFF2Format = parse_XLUnicodeString2;\n\n/* [MS-XLS] 2.4.90 */\nfunction parse_Dimensions(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar r = blob.read_shift(w), R = blob.read_shift(w);\n\tvar c = blob.read_shift(2), C = blob.read_shift(2);\n\tblob.l = end;\n\treturn {s: {r:r, c:c}, e: {r:R, c:C}};\n}\nfunction write_Dimensions(range, opts) {\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar o = new_buf(2*w + 6);\n\to.write_shift(w, range.s.r);\n\to.write_shift(w, range.e.r + 1);\n\to.write_shift(2, range.s.c);\n\to.write_shift(2, range.e.c + 1);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.220 */\nfunction parse_RK(blob) {\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrec = parse_RkRec(blob);\n\treturn {r:rw, c:col, ixfe:rkrec[0], rknum:rkrec[1]};\n}\n\n/* [MS-XLS] 2.4.175 */\nfunction parse_MulRk(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrecs = [];\n\twhile(blob.l < target) rkrecs.push(parse_RkRec(blob));\n\tif(blob.l !== target) throw new Error(\"MulRK read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, rkrec:rkrecs};\n}\n/* [MS-XLS] 2.4.174 */\nfunction parse_MulBlank(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar ixfes = [];\n\twhile(blob.l < target) ixfes.push(blob.read_shift(2));\n\tif(blob.l !== target) throw new Error(\"MulBlank read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, ixfe:ixfes};\n}\n\n/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\nfunction parse_CellStyleXF(blob, length, style, opts) {\n\tvar o = {};\n\tvar a = blob.read_shift(4), b = blob.read_shift(4);\n\tvar c = blob.read_shift(4), d = blob.read_shift(2);\n\to.patternType = XLSFillPattern[c >> 26];\n\n\tif(!opts.cellStyles) return o;\n\to.alc = a & 0x07;\n\to.fWrap = (a >> 3) & 0x01;\n\to.alcV = (a >> 4) & 0x07;\n\to.fJustLast = (a >> 7) & 0x01;\n\to.trot = (a >> 8) & 0xFF;\n\to.cIndent = (a >> 16) & 0x0F;\n\to.fShrinkToFit = (a >> 20) & 0x01;\n\to.iReadOrder = (a >> 22) & 0x02;\n\to.fAtrNum = (a >> 26) & 0x01;\n\to.fAtrFnt = (a >> 27) & 0x01;\n\to.fAtrAlc = (a >> 28) & 0x01;\n\to.fAtrBdr = (a >> 29) & 0x01;\n\to.fAtrPat = (a >> 30) & 0x01;\n\to.fAtrProt = (a >> 31) & 0x01;\n\n\to.dgLeft = b & 0x0F;\n\to.dgRight = (b >> 4) & 0x0F;\n\to.dgTop = (b >> 8) & 0x0F;\n\to.dgBottom = (b >> 12) & 0x0F;\n\to.icvLeft = (b >> 16) & 0x7F;\n\to.icvRight = (b >> 23) & 0x7F;\n\to.grbitDiag = (b >> 30) & 0x03;\n\n\to.icvTop = c & 0x7F;\n\to.icvBottom = (c >> 7) & 0x7F;\n\to.icvDiag = (c >> 14) & 0x7F;\n\to.dgDiag = (c >> 21) & 0x0F;\n\n\to.icvFore = d & 0x7F;\n\to.icvBack = (d >> 7) & 0x7F;\n\to.fsxButton = (d >> 14) & 0x01;\n\treturn o;\n}\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\n\n/* [MS-XLS] 2.4.353 TODO: actually do this right */\nfunction parse_XF(blob, length, opts) {\n\tvar o = {};\n\to.ifnt = blob.read_shift(2); o.numFmtId = blob.read_shift(2); o.flags = blob.read_shift(2);\n\to.fStyle = (o.flags >> 2) & 0x01;\n\tlength -= 6;\n\to.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\n\treturn o;\n}\nfunction write_XF(data, ixfeP, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? 16 : 20);\n\to.write_shift(2, 0);\n\tif(data.style) {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, 0xFFF4);\n\t} else {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, (ixfeP<<4));\n\t}\n\tvar f = 0;\n\tif(data.numFmtId > 0 && b5) f |= 0x0400;\n\to.write_shift(4, f);\n\to.write_shift(4, 0);\n\tif(!b5) o.write_shift(4, 0);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.134 */\nfunction parse_Guts(blob) {\n\tblob.l += 4;\n\tvar out = [blob.read_shift(2), blob.read_shift(2)];\n\tif(out[0] !== 0) out[0]--;\n\tif(out[1] !== 0) out[1]--;\n\tif(out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\n\treturn out;\n}\nfunction write_Guts(guts/*:Array<number>*/) {\n\tvar o = new_buf(8);\n\to.write_shift(4, 0);\n\to.write_shift(2, guts[0] ? guts[0] + 1 : 0);\n\to.write_shift(2, guts[1] ? guts[1] + 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.24 */\nfunction parse_BoolErr(blob, length, opts) {\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2 || length == 9) ++blob.l;\n\tvar val = parse_Bes(blob, 2);\n\tcell.val = val;\n\tcell.t = (val === true || val === false) ? 'b' : 'e';\n\treturn cell;\n}\nfunction write_BoolErr(R/*:number*/, C/*:number*/, v, os/*:number*/, opts, t/*:string*/) {\n\tvar o = new_buf(8);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Bes(v, t, o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.180 Number */\nfunction parse_Number(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 2) opts.biff = 5;\n\tvar cell = parse_XLSCell(blob, 6);\n\tvar xnum = parse_Xnum(blob, 8);\n\tcell.val = xnum;\n\treturn cell;\n}\nfunction write_Number(R/*:number*/, C/*:number*/, v, os/*:: :number, opts*/) {\n\tvar o = new_buf(14);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Xnum(v, o);\n\treturn o;\n}\n\nvar parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\n\n/* [MS-XLS] 2.4.271 */\nfunction parse_SupBook(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar ctab = blob.read_shift(2);\n\tvar cch = blob.read_shift(2);\n\topts.sbcch = cch;\n\tif(cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\n\tif(cch < 0x01 || cch >0xff) throw new Error(\"Unexpected SupBook type: \"+cch);\n\tvar virtPath = parse_XLUnicodeStringNoCch(blob, cch);\n\t/* TODO: 2.5.277 Virtual Path */\n\tvar rgst = [];\n\twhile(end > blob.l) rgst.push(parse_XLUnicodeString(blob));\n\treturn [cch, ctab, virtPath, rgst];\n}\n\n/* [MS-XLS] 2.4.105 TODO */\nfunction parse_ExternName(blob, length, opts) {\n\tvar flags = blob.read_shift(2);\n\tvar body;\n\tvar o = ({\n\t\tfBuiltIn: flags & 0x01,\n\t\tfWantAdvise: (flags >>> 1) & 0x01,\n\t\tfWantPict: (flags >>> 2) & 0x01,\n\t\tfOle: (flags >>> 3) & 0x01,\n\t\tfOleLink: (flags >>> 4) & 0x01,\n\t\tcf: (flags >>> 5) & 0x3FF,\n\t\tfIcon: flags >>> 15 & 0x01\n\t}/*:any*/);\n\tif(opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length-2, opts);\n\t//else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\n\to.body = body || blob.read_shift(length-2);\n\tif(typeof body === \"string\") o.Name = body;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.150 TODO */\nvar XLSLblBuiltIn = [\n\t\"_xlnm.Consolidate_Area\",\n\t\"_xlnm.Auto_Open\",\n\t\"_xlnm.Auto_Close\",\n\t\"_xlnm.Extract\",\n\t\"_xlnm.Database\",\n\t\"_xlnm.Criteria\",\n\t\"_xlnm.Print_Area\",\n\t\"_xlnm.Print_Titles\",\n\t\"_xlnm.Recorder\",\n\t\"_xlnm.Data_Form\",\n\t\"_xlnm.Auto_Activate\",\n\t\"_xlnm.Auto_Deactivate\",\n\t\"_xlnm.Sheet_Title\",\n\t\"_xlnm._FilterDatabase\"\n];\nfunction parse_Lbl(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar flags = blob.read_shift(2);\n\tvar chKey = blob.read_shift(1);\n\tvar cch = blob.read_shift(1);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar itab = 0;\n\tif(!opts || opts.biff >= 5) {\n\t\tif(opts.biff != 5) blob.l += 2;\n\t\titab = blob.read_shift(2);\n\t\tif(opts.biff == 5) blob.l += 2;\n\t\tblob.l += 4;\n\t}\n\tvar name = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tif(flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\n\tvar npflen = target - blob.l; if(opts && opts.biff == 2) --npflen;\n\t/*jshint -W018 */\n\tvar rgce = (target == blob.l || cce === 0 || !(npflen > 0)) ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\n\t/*jshint +W018 */\n\treturn {\n\t\tchKey: chKey,\n\t\tName: name,\n\t\titab: itab,\n\t\trgce: rgce\n\t};\n}\n\n/* [MS-XLS] 2.4.106 TODO: verify filename encoding */\nfunction parse_ExternSheet(blob, length, opts) {\n\tif(opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\n\tvar o = [], target = blob.l + length, len = blob.read_shift(opts.biff > 8 ? 4 : 2);\n\twhile(len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\n\t\t// [iSupBook, itabFirst, itabLast];\n\tif(blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\n\treturn o;\n}\nfunction parse_BIFF5ExternSheet(blob, length, opts) {\n\tif(blob[blob.l + 1] == 0x03) blob[blob.l]++;\n\tvar o = parse_ShortXLUnicodeString(blob, length, opts);\n\treturn o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\n}\n\n/* [MS-XLS] 2.4.176 TODO: check older biff */\nfunction parse_NameCmt(blob, length, opts) {\n\tif(opts.biff < 8) { blob.l += length; return; }\n\tvar cchName = blob.read_shift(2);\n\tvar cchComment = blob.read_shift(2);\n\tvar name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\n\tvar comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\n\treturn [name, comment];\n}\n\n/* [MS-XLS] 2.4.260 */\nfunction parse_ShrFmla(blob, length, opts) {\n\tvar ref = parse_RefU(blob, 6);\n\tblob.l++;\n\tvar cUse = blob.read_shift(1);\n\tlength -= 8;\n\treturn [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\n}\n\n/* [MS-XLS] 2.4.4 TODO */\nfunction parse_Array(blob, length, opts) {\n\tvar ref = parse_Ref(blob, 6);\n\t/* TODO: fAlwaysCalc */\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l ++; length -= 7; break;\n\t\tcase 3: case 4: blob.l += 2; length -= 8; break;\n\t\tdefault: blob.l += 6; length -= 12;\n\t}\n\treturn [ref, parse_ArrayParsedFormula(blob, length, opts, ref)];\n}\n\n/* [MS-XLS] 2.4.173 */\nfunction parse_MTRSettings(blob) {\n\tvar fMTREnabled = blob.read_shift(4) !== 0x00;\n\tvar fUserSetThreadCount = blob.read_shift(4) !== 0x00;\n\tvar cUserThreadCount = blob.read_shift(4);\n\treturn [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\n}\n\n/* [MS-XLS] 2.5.186 TODO: BIFF5 */\nfunction parse_NoteSh(blob, length, opts) {\n\tif(opts.biff < 8) return;\n\tvar row = blob.read_shift(2), col = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), idObj = blob.read_shift(2);\n\tvar stAuthor = parse_XLUnicodeString2(blob, 0, opts);\n\tif(opts.biff < 8) blob.read_shift(1);\n\treturn [{r:row,c:col}, stAuthor, idObj, flags];\n}\n\n/* [MS-XLS] 2.4.179 */\nfunction parse_Note(blob, length, opts) {\n\t/* TODO: Support revisions */\n\treturn parse_NoteSh(blob, length, opts);\n}\n\n/* [MS-XLS] 2.4.168 */\nfunction parse_MergeCells(blob, length)/*:Array<Range>*/ {\n\tvar merges/*:Array<Range>*/ = [];\n\tvar cmcs = blob.read_shift(2);\n\twhile (cmcs--) merges.push(parse_Ref8U(blob,length));\n\treturn merges;\n}\nfunction write_MergeCells(merges/*:Array<Range>*/) {\n\tvar o = new_buf(2 + merges.length * 8);\n\to.write_shift(2, merges.length);\n\tfor(var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.181 TODO: parse all the things! */\nfunction parse_Obj(blob, length, opts) {\n\tif(opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\n\tvar cmo = parse_FtCmo(blob, 22); // id, ot, flags\n\tvar fts = parse_FtArray(blob, length-22, cmo[1]);\n\treturn { cmo: cmo, ft:fts };\n}\n/* from older spec */\nvar parse_BIFF5OT = {\n0x08: function(blob, length) {\n\tvar tgt = blob.l + length;\n\tblob.l += 10; // todo\n\tvar cf = blob.read_shift(2);\n\tblob.l += 4;\n\tblob.l += 2; //var cbPictFmla = blob.read_shift(2);\n\tblob.l += 2;\n\tblob.l += 2; //var grbit = blob.read_shift(2);\n\tblob.l += 4;\n\tvar cchName = blob.read_shift(1);\n\tblob.l += cchName; // TODO: stName\n\tblob.l = tgt; // TODO: fmla\n\treturn { fmt:cf };\n}\n};\n\nfunction parse_BIFF5Obj(blob, length, opts) {\n\tblob.l += 4; //var cnt = blob.read_shift(4);\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar grbit = blob.read_shift(2);\n\tblob.l += 2; //var colL = blob.read_shift(2);\n\tblob.l += 2; //var dxL = blob.read_shift(2);\n\tblob.l += 2; //var rwT = blob.read_shift(2);\n\tblob.l += 2; //var dyT = blob.read_shift(2);\n\tblob.l += 2; //var colR = blob.read_shift(2);\n\tblob.l += 2; //var dxR = blob.read_shift(2);\n\tblob.l += 2; //var rwB = blob.read_shift(2);\n\tblob.l += 2; //var dyB = blob.read_shift(2);\n\tblob.l += 2; //var cbMacro = blob.read_shift(2);\n\tblob.l += 6;\n\tlength -= 36;\n\tvar fts = [];\n\tfts.push((parse_BIFF5OT[ot]||parsenoop)(blob, length, opts));\n\treturn { cmo: [id, ot, grbit], ft:fts };\n}\n\n/* [MS-XLS] 2.4.329 TODO: parse properly */\nfunction parse_TxO(blob, length, opts) {\n\tvar s = blob.l;\n\tvar texts = \"\";\ntry {\n\tblob.l += 4;\n\tvar ot = (opts.lastobj||{cmo:[0,0]}).cmo[1];\n\tvar controlInfo; // eslint-disable-line no-unused-vars\n\tif([0,5,7,11,12,14].indexOf(ot) == -1) blob.l += 6;\n\telse controlInfo = parse_ControlInfo(blob, 6, opts); // eslint-disable-line no-unused-vars\n\tvar cchText = blob.read_shift(2);\n\t/*var cbRuns = */blob.read_shift(2);\n\t/*var ifntEmpty = */parseuint16(blob, 2);\n\tvar len = blob.read_shift(2);\n\tblob.l += len;\n\t//var fmla = parse_ObjFmla(blob, s + length - blob.l);\n\n\tfor(var i = 1; i < blob.lens.length-1; ++i) {\n\t\tif(blob.l-s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\n\t\tvar hdr = blob[blob.l];\n\t\tvar t = parse_XLUnicodeStringNoCch(blob, blob.lens[i+1]-blob.lens[i]-1);\n\t\ttexts += t;\n\t\tif(texts.length >= (hdr ? cchText : 2*cchText)) break;\n\t}\n\tif(texts.length !== cchText && texts.length !== cchText*2) {\n\t\tthrow new Error(\"cchText: \" + cchText + \" != \" + texts.length);\n\t}\n\n\tblob.l = s + length;\n\t/* [MS-XLS] 2.5.272 TxORuns */\n//\tvar rgTxoRuns = [];\n//\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\n//\tvar cchText2 = blob.read_shift(2);\n//\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\n//\tblob.l += 6;\n//\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\n\treturn { t: texts };\n} catch(e) { blob.l = s + length; return { t: texts }; }\n}\n\n/* [MS-XLS] 2.4.140 */\nfunction parse_HLink(blob, length) {\n\tvar ref = parse_Ref8U(blob, 8);\n\tblob.l += 16; /* CLSID */\n\tvar hlink = parse_Hyperlink(blob, length-24);\n\treturn [ref, hlink];\n}\nfunction write_HLink(hl) {\n\tvar O = new_buf(24);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tvar clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\tfor(var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\n\treturn bconcat([O, write_Hyperlink(hl[1])]);\n}\n\n\n/* [MS-XLS] 2.4.141 */\nfunction parse_HLinkTooltip(blob, length) {\n\tblob.read_shift(2);\n\tvar ref = parse_Ref8U(blob, 8);\n\tvar wzTooltip = blob.read_shift((length-10)/2, 'dbcs-cont');\n\twzTooltip = wzTooltip.replace(chr0,\"\");\n\treturn [ref, wzTooltip];\n}\nfunction write_HLinkTooltip(hl) {\n\tvar TT = hl[1].Tooltip;\n\tvar O = new_buf(10 + 2 * (TT.length + 1));\n\tO.write_shift(2, 0x0800);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tfor(var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\n\tO.write_shift(2, 0);\n\treturn O;\n}\n\n/* [MS-XLS] 2.4.63 */\nfunction parse_Country(blob)/*:[string|number, string|number]*/ {\n\tvar o = [0,0], d;\n\td = blob.read_shift(2); o[0] = CountryEnum[d] || d;\n\td = blob.read_shift(2); o[1] = CountryEnum[d] || d;\n\treturn o;\n}\nfunction write_Country(o) {\n\tif(!o) o = new_buf(4);\n\to.write_shift(2, 0x01);\n\to.write_shift(2, 0x01);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.50 ClrtClient */\nfunction parse_ClrtClient(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.188 */\nfunction parse_Palette(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.354 */\nfunction parse_XFCRC(blob) {\n\tblob.l += 2;\n\tvar o = {cxfs:0, crc:0};\n\to.cxfs = blob.read_shift(2);\n\to.crc = blob.read_shift(4);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.53 TODO: parse flags */\n/* [MS-XLSB] 2.4.323 TODO: parse flags */\nfunction parse_ColInfo(blob, length, opts) {\n\tif(!opts.cellStyles) return parsenoop(blob, length);\n\tvar w = opts && opts.biff >= 12 ? 4 : 2;\n\tvar colFirst = blob.read_shift(w);\n\tvar colLast = blob.read_shift(w);\n\tvar coldx = blob.read_shift(w);\n\tvar ixfe = blob.read_shift(w);\n\tvar flags = blob.read_shift(2);\n\tif(w == 2) blob.l += 2;\n\tvar o = ({s:colFirst, e:colLast, w:coldx, ixfe:ixfe, flags:flags}/*:any*/);\n\tif(opts.biff >= 5 || !opts.biff) o.level = (flags >> 8) & 0x7;\n\treturn o;\n}\nfunction write_ColInfo(col, idx) {\n\tvar o = new_buf(12);\n\to.write_shift(2, idx);\n\to.write_shift(2, idx);\n\to.write_shift(2, col.width * 256);\n\to.write_shift(2, 0);\n\tvar f = 0;\n\tif(col.hidden) f |= 1;\n\to.write_shift(1, f);\n\tf = col.level || 0;\n\to.write_shift(1, f);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.257 */\nfunction parse_Setup(blob, length) {\n\tvar o = {};\n\tif(length < 32) return o;\n\tblob.l += 16;\n\to.header = parse_Xnum(blob, 8);\n\to.footer = parse_Xnum(blob, 8);\n\tblob.l += 2;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.261 */\nfunction parse_ShtProps(blob, length, opts) {\n\tvar def = {area:false};\n\tif(opts.biff != 5) { blob.l += length; return def; }\n\tvar d = blob.read_shift(1); blob.l += 3;\n\tif((d & 0x10)) def.area = true;\n\treturn def;\n}\n\n/* [MS-XLS] 2.4.241 */\nfunction write_RRTabId(n/*:number*/) {\n\tvar out = new_buf(2 * n);\n\tfor(var i = 0; i < n; ++i) out.write_shift(2, i+1);\n\treturn out;\n}\n\nvar parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\nvar parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\nvar parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\n\n/* --- Specific to versions before BIFF8 --- */\nfunction parse_ImData(blob) {\n\tvar cf = blob.read_shift(2);\n\tvar env = blob.read_shift(2);\n\tvar lcb = blob.read_shift(4);\n\tvar o = {fmt:cf, env:env, len:lcb, data:blob.slice(blob.l,blob.l+lcb)};\n\tblob.l += lcb;\n\treturn o;\n}\n\n/* BIFF2_??? where ??? is the name from [XLS] */\nfunction parse_BIFF2STR(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 5) opts.biff = 2;\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar str = parse_XLUnicodeString2(blob, length-7, opts);\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n\nfunction parse_BIFF2NUM(blob/*::, length*/) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar num = parse_Xnum(blob, 8);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2NUM(r/*:number*/, c/*:number*/, val/*:number*/) {\n\tvar out = new_buf(15);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(8, val, 'f');\n\treturn out;\n}\n\nfunction parse_BIFF2INT(blob) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar num = blob.read_shift(2);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2INT(r/*:number*/, c/*:number*/, val/*:number*/) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(2, val);\n\treturn out;\n}\n\nfunction parse_BIFF2STRING(blob) {\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, 'sbcs-cont');\n}\n\n/* TODO: convert to BIFF8 font struct */\nfunction parse_BIFF2FONTXTRA(blob, length) {\n\tblob.l += 6; // unknown\n\tblob.l += 2; // font weight \"bls\"\n\tblob.l += 1; // charset\n\tblob.l += 3; // unknown\n\tblob.l += 1; // font family\n\tblob.l += length - 13;\n}\n\n/* TODO: parse rich text runs */\nfunction parse_RString(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tvar cch = blob.read_shift(2);\n\tvar str = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tblob.l = end;\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n/* from js-harb (C) 2014-present  SheetJS */\nvar DBF_SUPPORTED_VERSIONS = [0x02, 0x03, 0x30, 0x31, 0x83, 0x8B, 0x8C, 0xF5];\nvar DBF = /*#__PURE__*/(function() {\nvar dbf_codepage_map = {\n\t/* Code Pages Supported by Visual FoxPro */\n\t/*::[*/0x01/*::]*/:   437,           /*::[*/0x02/*::]*/:   850,\n\t/*::[*/0x03/*::]*/:  1252,           /*::[*/0x04/*::]*/: 10000,\n\t/*::[*/0x64/*::]*/:   852,           /*::[*/0x65/*::]*/:   866,\n\t/*::[*/0x66/*::]*/:   865,           /*::[*/0x67/*::]*/:   861,\n\t/*::[*/0x68/*::]*/:   895,           /*::[*/0x69/*::]*/:   620,\n\t/*::[*/0x6A/*::]*/:   737,           /*::[*/0x6B/*::]*/:   857,\n\t/*::[*/0x78/*::]*/:   950,           /*::[*/0x79/*::]*/:   949,\n\t/*::[*/0x7A/*::]*/:   936,           /*::[*/0x7B/*::]*/:   932,\n\t/*::[*/0x7C/*::]*/:   874,           /*::[*/0x7D/*::]*/:  1255,\n\t/*::[*/0x7E/*::]*/:  1256,           /*::[*/0x96/*::]*/: 10007,\n\t/*::[*/0x97/*::]*/: 10029,           /*::[*/0x98/*::]*/: 10006,\n\t/*::[*/0xC8/*::]*/:  1250,           /*::[*/0xC9/*::]*/:  1251,\n\t/*::[*/0xCA/*::]*/:  1254,           /*::[*/0xCB/*::]*/:  1253,\n\n\t/* shapefile DBF extension */\n\t/*::[*/0x00/*::]*/: 20127,           /*::[*/0x08/*::]*/:   865,\n\t/*::[*/0x09/*::]*/:   437,           /*::[*/0x0A/*::]*/:   850,\n\t/*::[*/0x0B/*::]*/:   437,           /*::[*/0x0D/*::]*/:   437,\n\t/*::[*/0x0E/*::]*/:   850,           /*::[*/0x0F/*::]*/:   437,\n\t/*::[*/0x10/*::]*/:   850,           /*::[*/0x11/*::]*/:   437,\n\t/*::[*/0x12/*::]*/:   850,           /*::[*/0x13/*::]*/:   932,\n\t/*::[*/0x14/*::]*/:   850,           /*::[*/0x15/*::]*/:   437,\n\t/*::[*/0x16/*::]*/:   850,           /*::[*/0x17/*::]*/:   865,\n\t/*::[*/0x18/*::]*/:   437,           /*::[*/0x19/*::]*/:   437,\n\t/*::[*/0x1A/*::]*/:   850,           /*::[*/0x1B/*::]*/:   437,\n\t/*::[*/0x1C/*::]*/:   863,           /*::[*/0x1D/*::]*/:   850,\n\t/*::[*/0x1F/*::]*/:   852,           /*::[*/0x22/*::]*/:   852,\n\t/*::[*/0x23/*::]*/:   852,           /*::[*/0x24/*::]*/:   860,\n\t/*::[*/0x25/*::]*/:   850,           /*::[*/0x26/*::]*/:   866,\n\t/*::[*/0x37/*::]*/:   850,           /*::[*/0x40/*::]*/:   852,\n\t/*::[*/0x4D/*::]*/:   936,           /*::[*/0x4E/*::]*/:   949,\n\t/*::[*/0x4F/*::]*/:   950,           /*::[*/0x50/*::]*/:   874,\n\t/*::[*/0x57/*::]*/:  1252,           /*::[*/0x58/*::]*/:  1252,\n\t/*::[*/0x59/*::]*/:  1252,           /*::[*/0x6C/*::]*/:   863,\n\t/*::[*/0x86/*::]*/:   737,           /*::[*/0x87/*::]*/:   852,\n\t/*::[*/0x88/*::]*/:   857,           /*::[*/0xCC/*::]*/:  1257,\n\n\t/*::[*/0xFF/*::]*/: 16969\n};\nvar dbf_reverse_map = evert({\n\t/*::[*/0x01/*::]*/:   437,           /*::[*/0x02/*::]*/:   850,\n\t/*::[*/0x03/*::]*/:  1252,           /*::[*/0x04/*::]*/: 10000,\n\t/*::[*/0x64/*::]*/:   852,           /*::[*/0x65/*::]*/:   866,\n\t/*::[*/0x66/*::]*/:   865,           /*::[*/0x67/*::]*/:   861,\n\t/*::[*/0x68/*::]*/:   895,           /*::[*/0x69/*::]*/:   620,\n\t/*::[*/0x6A/*::]*/:   737,           /*::[*/0x6B/*::]*/:   857,\n\t/*::[*/0x78/*::]*/:   950,           /*::[*/0x79/*::]*/:   949,\n\t/*::[*/0x7A/*::]*/:   936,           /*::[*/0x7B/*::]*/:   932,\n\t/*::[*/0x7C/*::]*/:   874,           /*::[*/0x7D/*::]*/:  1255,\n\t/*::[*/0x7E/*::]*/:  1256,           /*::[*/0x96/*::]*/: 10007,\n\t/*::[*/0x97/*::]*/: 10029,           /*::[*/0x98/*::]*/: 10006,\n\t/*::[*/0xC8/*::]*/:  1250,           /*::[*/0xC9/*::]*/:  1251,\n\t/*::[*/0xCA/*::]*/:  1254,           /*::[*/0xCB/*::]*/:  1253,\n\t/*::[*/0x00/*::]*/: 20127\n});\n/* TODO: find an actual specification */\nfunction dbf_to_aoa(buf, opts)/*:AOA*/ {\n\tvar out/*:AOA*/ = [];\n\tvar d/*:Block*/ = (new_raw_buf(1)/*:any*/);\n\tswitch(opts.type) {\n\t\tcase 'base64': d = s2a(Base64_decode(buf)); break;\n\t\tcase 'binary': d = s2a(buf); break;\n\t\tcase 'buffer':\n\t\tcase 'array': d = buf; break;\n\t}\n\tprep_blob(d, 0);\n\n\t/* header */\n\tvar ft = d.read_shift(1);\n\tvar memo = !!(ft & 0x88);\n\tvar vfp = false, l7 = false;\n\tswitch(ft) {\n\t\tcase 0x02: break; // dBASE II\n\t\tcase 0x03: break; // dBASE III\n\t\tcase 0x30: vfp = true; memo = true; break; // VFP\n\t\tcase 0x31: vfp = true; memo = true; break; // VFP with autoincrement\n\t\t// 0x43 dBASE IV SQL table files\n\t\t// 0x63 dBASE IV SQL system files\n\t\tcase 0x83: break; // dBASE III with memo\n\t\tcase 0x8B: break; // dBASE IV with memo\n\t\tcase 0x8C: l7 = true; break; // dBASE Level 7 with memo\n\t\t// case 0xCB dBASE IV SQL table files with memo\n\t\tcase 0xF5: break; // FoxPro 2.x with memo\n\t\t// case 0xFB FoxBASE\n\t\tdefault: throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\n\t}\n\n\tvar nrow = 0, fpos = 0x0209;\n\tif(ft == 0x02) nrow = d.read_shift(2);\n\td.l += 3; // dBASE II stores DDMMYY date, others use YYMMDD\n\tif(ft != 0x02) nrow = d.read_shift(4);\n\tif(nrow > 1048576) nrow = 1e6;\n\n\tif(ft != 0x02) fpos = d.read_shift(2); // header length\n\tvar rlen = d.read_shift(2); // record length\n\n\tvar /*flags = 0,*/ current_cp = opts.codepage || 1252;\n\tif(ft != 0x02) { // 20 reserved bytes\n\t\td.l+=16;\n\t\t/*flags = */d.read_shift(1);\n\t\t//if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\n\n\t\t/* codepage present in FoxPro and dBASE Level 7 */\n\t\tif(d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];\n\t\td.l+=1;\n\n\t\td.l+=2;\n\t}\n\tif(l7) d.l += 36; // Level 7: 32 byte \"Language driver name\", 4 byte reserved\n\n/*:: type DBFField = { name:string; len:number; type:string; } */\n\tvar fields/*:Array<DBFField>*/ = [], field/*:DBFField*/ = ({}/*:any*/);\n\tvar hend = Math.min(d.length, (ft == 0x02 ? 0x209 : (fpos - 10 - (vfp ? 264 : 0))));\n\tvar ww = l7 ? 32 : 11;\n\twhile(d.l < hend && d[d.l] != 0x0d) {\n\t\tfield = ({}/*:any*/);\n\t\tfield.name = $cptable.utils.decode(current_cp, d.slice(d.l, d.l+ww)).replace(/[\\u0000\\r\\n].*$/g,\"\");\n\t\td.l += ww;\n\t\tfield.type = String.fromCharCode(d.read_shift(1));\n\t\tif(ft != 0x02 && !l7) field.offset = d.read_shift(4);\n\t\tfield.len = d.read_shift(1);\n\t\tif(ft == 0x02) field.offset = d.read_shift(2);\n\t\tfield.dec = d.read_shift(1);\n\t\tif(field.name.length) fields.push(field);\n\t\tif(ft != 0x02) d.l += l7 ? 13 : 14;\n\t\tswitch(field.type) {\n\t\t\tcase 'B': // Double (VFP) / Binary (dBASE L7)\n\t\t\t\tif((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase 'G': // General (FoxPro and dBASE L7)\n\t\t\tcase 'P': // Picture (FoxPro and dBASE L7)\n\t\t\t\tif(opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase '+': // Autoincrement (dBASE L7 only)\n\t\t\tcase '0': // _NullFlags (VFP only)\n\t\t\tcase '@': // Timestamp (dBASE L7 only)\n\t\t\tcase 'C': // Character (dBASE II)\n\t\t\tcase 'D': // Date (dBASE III)\n\t\t\tcase 'F': // Float (dBASE IV)\n\t\t\tcase 'I': // Long (VFP and dBASE L7)\n\t\t\tcase 'L': // Logical (dBASE II)\n\t\t\tcase 'M': // Memo (dBASE III)\n\t\t\tcase 'N': // Number (dBASE II)\n\t\t\tcase 'O': // Double (dBASE L7 only)\n\t\t\tcase 'T': // Datetime (VFP only)\n\t\t\tcase 'Y': // Currency (VFP only)\n\t\t\t\tbreak;\n\t\t\tdefault: throw new Error('Unknown Field Type: ' + field.type);\n\t\t}\n\t}\n\n\tif(d[d.l] !== 0x0D) d.l = fpos-1;\n\tif(d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\n\td.l = fpos;\n\n\t/* data */\n\tvar R = 0, C = 0;\n\tout[0] = [];\n\tfor(C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\n\twhile(nrow-- > 0) {\n\t\tif(d[d.l] === 0x2A) {\n\t\t\t// TODO: record marked as deleted -- create a hidden row?\n\t\t\td.l+=rlen;\n\t\t\tcontinue;\n\t\t}\n\t\t++d.l;\n\t\tout[++R] = []; C = 0;\n\t\tfor(C = 0; C != fields.length; ++C) {\n\t\t\tvar dd = d.slice(d.l, d.l+fields[C].len); d.l+=fields[C].len;\n\t\t\tprep_blob(dd, 0);\n\t\t\tvar s = $cptable.utils.decode(current_cp, dd);\n\t\t\tswitch(fields[C].type) {\n\t\t\t\tcase 'C':\n\t\t\t\t\t// NOTE: it is conventional to write '  /  /  ' for empty dates\n\t\t\t\t\tif(s.trim().length) out[R][C] = s.replace(/\\s+$/,\"\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(s.length === 8) out[R][C] = new Date(+s.slice(0,4), +s.slice(4,6)-1, +s.slice(6,8));\n\t\t\t\t\telse out[R][C] = s;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'F': out[R][C] = parseFloat(s.trim()); break;\n\t\t\t\tcase '+': case 'I': out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i'); break;\n\t\t\t\tcase 'L': switch(s.trim().toUpperCase()) {\n\t\t\t\t\tcase 'Y': case 'T': out[R][C] = true; break;\n\t\t\t\t\tcase 'N': case 'F': out[R][C] = false; break;\n\t\t\t\t\tcase '': case '?': break;\n\t\t\t\t\tdefault: throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'M': /* TODO: handle memo files */\n\t\t\t\t\tif(!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\n\t\t\t\t\tout[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10): dd.read_shift(4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'N':\n\t\t\t\t\ts = s.replace(/\\u0000/g,\"\").trim();\n\t\t\t\t\t// NOTE: dBASE II interprets \"  .  \" as 0\n\t\t\t\t\tif(s && s != \".\") out[R][C] = +s || 0; break;\n\t\t\t\tcase '@':\n\t\t\t\t\t// NOTE: dBASE specs appear to be incorrect\n\t\t\t\t\tout[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'T': out[R][C] = new Date((dd.read_shift(4) - 0x253D8C) * 0x5265C00 + dd.read_shift(4)); break;\n\t\t\t\tcase 'Y': out[R][C] = dd.read_shift(4,'i')/1e4 + (dd.read_shift(4, 'i')/1e4)*Math.pow(2,32); break;\n\t\t\t\tcase 'O': out[R][C] = -dd.read_shift(-8, 'f'); break;\n\t\t\t\tcase 'B': if(vfp && fields[C].len == 8) { out[R][C] = dd.read_shift(8,'f'); break; }\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'G': case 'P': dd.l += fields[C].len; break;\n\t\t\t\tcase '0':\n\t\t\t\t\tif(fields[C].name === '_NullFlags') break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault: throw new Error(\"DBF Unsupported data type \" + fields[C].type);\n\t\t\t}\n\t\t}\n\t}\n\tif(ft != 0x02) if(d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l-1) + \" of \" + d.length + \" \" + d[d.l-1].toString(16));\n\tif(opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\n\topts.DBF = fields;\n\treturn out;\n}\n\nfunction dbf_to_sheet(buf, opts)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tif(!o.dateNF) o.dateNF = \"yyyymmdd\";\n\tvar ws = aoa_to_sheet(dbf_to_aoa(buf, o), o);\n\tws[\"!cols\"] = o.DBF.map(function(field) { return {\n\t\twch: field.len,\n\t\tDBF: field\n\t};});\n\tdelete o.DBF;\n\treturn ws;\n}\n\nfunction dbf_to_workbook(buf, opts)/*:Workbook*/ {\n\ttry { return sheet_to_workbook(dbf_to_sheet(buf, opts), opts); }\n\tcatch(e) { if(opts && opts.WTF) throw e; }\n\treturn ({SheetNames:[],Sheets:{}});\n}\n\nvar _RLEN = { 'B': 8, 'C': 250, 'L': 1, 'D': 8, '?': 0, '': 0 };\nfunction sheet_to_dbf(ws/*:Worksheet*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\tif(o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\n\tvar ba = buf_array();\n\tvar aoa/*:AOA*/ = sheet_to_json(ws, {header:1, raw:true, cellDates:true});\n\tvar headers = aoa[0], data = aoa.slice(1), cols = ws[\"!cols\"] || [];\n\tvar i = 0, j = 0, hcnt = 0, rlen = 1;\n\tfor(i = 0; i < headers.length; ++i) {\n\t\tif(((cols[i]||{}).DBF||{}).name) { headers[i] = cols[i].DBF.name; ++hcnt; continue; }\n\t\tif(headers[i] == null) continue;\n\t\t++hcnt;\n\t\tif(typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\n\t\tif(typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + (typeof headers[i]) + \"|\");\n\t\tif(headers.indexOf(headers[i]) !== i) for(j=0; j<1024;++j)\n\t\t\tif(headers.indexOf(headers[i] + \"_\" + j) == -1) { headers[i] += \"_\" + j; break; }\n\t}\n\tvar range = safe_decode_range(ws['!ref']);\n\tvar coltypes/*:Array<string>*/ = [];\n\tvar colwidths/*:Array<number>*/ = [];\n\tvar coldecimals/*:Array<number>*/ = [];\n\tfor(i = 0; i <= range.e.c - range.s.c; ++i) {\n\t\tvar guess = '', _guess = '', maxlen = 0;\n\t\tvar col/*:Array<any>*/ = [];\n\t\tfor(j=0; j < data.length; ++j) {\n\t\t\tif(data[j][i] != null) col.push(data[j][i]);\n\t\t}\n\t\tif(col.length == 0 || headers[i] == null) { coltypes[i] = '?'; continue; }\n\t\tfor(j = 0; j < col.length; ++j) {\n\t\t\tswitch(typeof col[j]) {\n\t\t\t\t/* TODO: check if L2 compat is desired */\n\t\t\t\tcase 'number': _guess = 'B'; break;\n\t\t\t\tcase 'string': _guess = 'C'; break;\n\t\t\t\tcase 'boolean': _guess = 'L'; break;\n\t\t\t\tcase 'object': _guess = col[j] instanceof Date ? 'D' : 'C'; break;\n\t\t\t\tdefault: _guess = 'C';\n\t\t\t}\n\t\t\tmaxlen = Math.max(maxlen, String(col[j]).length);\n\t\t\tguess = guess && guess != _guess ? 'C' : _guess;\n\t\t\t//if(guess == 'C') break;\n\t\t}\n\t\tif(maxlen > 250) maxlen = 250;\n\t\t_guess = ((cols[i]||{}).DBF||{}).type;\n\t\t/* TODO: more fine grained control over DBF type resolution */\n\t\tif(_guess == 'C') {\n\t\t\tif(cols[i].DBF.len > maxlen) maxlen = cols[i].DBF.len;\n\t\t}\n\t\tif(guess == 'B' && _guess == 'N') {\n\t\t\tguess = 'N';\n\t\t\tcoldecimals[i] = cols[i].DBF.dec;\n\t\t\tmaxlen = cols[i].DBF.len;\n\t\t}\n\t\tcolwidths[i] = guess == 'C' || _guess == 'N' ? maxlen : (_RLEN[guess] || 0);\n\t\trlen += colwidths[i];\n\t\tcoltypes[i] = guess;\n\t}\n\n\tvar h = ba.next(32);\n\th.write_shift(4, 0x13021130);\n\th.write_shift(4, data.length);\n\th.write_shift(2, 296 + 32 * hcnt);\n\th.write_shift(2, rlen);\n\tfor(i=0; i < 4; ++i) h.write_shift(4, 0);\n\th.write_shift(4, 0x00000000 | ((+dbf_reverse_map[/*::String(*/current_ansi/*::)*/] || 0x03)<<8));\n\n\tfor(i = 0, j = 0; i < headers.length; ++i) {\n\t\tif(headers[i] == null) continue;\n\t\tvar hf = ba.next(32);\n\t\tvar _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\n\t\thf.write_shift(1, _f, \"sbcs\");\n\t\thf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\n\t\thf.write_shift(4, j);\n\t\thf.write_shift(1, colwidths[i] || _RLEN[coltypes[i]] || 0);\n\t\thf.write_shift(1, coldecimals[i] || 0);\n\t\thf.write_shift(1, 0x02);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(1, 0);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(4, 0);\n\t\tj += (colwidths[i] || _RLEN[coltypes[i]] || 0);\n\t}\n\n\tvar hb = ba.next(264);\n\thb.write_shift(4, 0x0000000D);\n\tfor(i=0; i < 65;++i) hb.write_shift(4, 0x00000000);\n\tfor(i=0; i < data.length; ++i) {\n\t\tvar rout = ba.next(rlen);\n\t\trout.write_shift(1, 0);\n\t\tfor(j=0; j<headers.length; ++j) {\n\t\t\tif(headers[j] == null) continue;\n\t\t\tswitch(coltypes[j]) {\n\t\t\t\tcase 'L': rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46); break;\n\t\t\t\tcase 'B': rout.write_shift(8, data[i][j]||0, 'f'); break;\n\t\t\t\tcase 'N':\n\t\t\t\t\tvar _n = \"0\";\n\t\t\t\t\tif(typeof data[i][j] == \"number\") _n = data[i][j].toFixed(coldecimals[j]||0);\n\t\t\t\t\tfor(hcnt=0; hcnt < colwidths[j]-_n.length; ++hcnt) rout.write_shift(1, 0x20);\n\t\t\t\t\trout.write_shift(1, _n, \"sbcs\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");\n\t\t\t\t\telse {\n\t\t\t\t\t\trout.write_shift(4, (\"0000\"+data[i][j].getFullYear()).slice(-4), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+(data[i][j].getMonth()+1)).slice(-2), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+data[i][j].getDate()).slice(-2), \"sbcs\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C':\n\t\t\t\t\tvar _s = String(data[i][j] != null ? data[i][j] : \"\").slice(0, colwidths[j]);\n\t\t\t\t\trout.write_shift(1, _s, \"sbcs\");\n\t\t\t\t\tfor(hcnt=0; hcnt < colwidths[j]-_s.length; ++hcnt) rout.write_shift(1, 0x20); break;\n\t\t\t}\n\t\t}\n\t\t// data\n\t}\n\tba.next(1).write_shift(1, 0x1A);\n\treturn ba.end();\n}\n\treturn {\n\t\tto_workbook: dbf_to_workbook,\n\t\tto_sheet: dbf_to_sheet,\n\t\tfrom_sheet: sheet_to_dbf\n\t};\n})();\n\nvar SYLK = /*#__PURE__*/(function() {\n\t/* TODO: stress test sequences */\n\tvar sylk_escapes = ({\n\t\tAA:'À', BA:'Á', CA:'Â', DA:195, HA:'Ä', JA:197,\n\t\tAE:'È', BE:'É', CE:'Ê',         HE:'Ë',\n\t\tAI:'Ì', BI:'Í', CI:'Î',         HI:'Ï',\n\t\tAO:'Ò', BO:'Ó', CO:'Ô', DO:213, HO:'Ö',\n\t\tAU:'Ù', BU:'Ú', CU:'Û',         HU:'Ü',\n\t\tAa:'à', Ba:'á', Ca:'â', Da:227, Ha:'ä', Ja:229,\n\t\tAe:'è', Be:'é', Ce:'ê',         He:'ë',\n\t\tAi:'ì', Bi:'í', Ci:'î',         Hi:'ï',\n\t\tAo:'ò', Bo:'ó', Co:'ô', Do:245, Ho:'ö',\n\t\tAu:'ù', Bu:'ú', Cu:'û',         Hu:'ü',\n\t\tKC:'Ç', Kc:'ç', q:'æ',  z:'œ',  a:'Æ',  j:'Œ',\n\t\tDN:209, Dn:241, Hy:255,\n\t\tS:169,  c:170,  R:174,  \"B \":180,\n\t\t/*::[*/0/*::]*/:176,    /*::[*/1/*::]*/:177,  /*::[*/2/*::]*/:178,\n\t\t/*::[*/3/*::]*/:179,    /*::[*/5/*::]*/:181,  /*::[*/6/*::]*/:182,\n\t\t/*::[*/7/*::]*/:183,    Q:185,  k:186,  b:208,  i:216,  l:222,  s:240,  y:248,\n\t\t\"!\":161, '\"':162, \"#\":163, \"(\":164, \"%\":165, \"'\":167, \"H \":168,\n\t\t\"+\":171, \";\":187, \"<\":188, \"=\":189, \">\":190, \"?\":191, \"{\":223\n\t}/*:any*/);\n\tvar sylk_char_regex = new RegExp(\"\\u001BN(\" + keys(sylk_escapes).join(\"|\").replace(/\\|\\|\\|/, \"|\\\\||\").replace(/([?()+])/g,\"\\\\$1\") + \"|\\\\|)\", \"gm\");\n\tvar sylk_char_fn = function(_, $1){ var o = sylk_escapes[$1]; return typeof o == \"number\" ? _getansi(o) : o; };\n\tvar decode_sylk_char = function($$, $1, $2) { var newcc = (($1.charCodeAt(0) - 0x20)<<4) | ($2.charCodeAt(0) - 0x30); return newcc == 59 ? $$ : _getansi(newcc); };\n\tsylk_escapes[\"|\"] = 254;\n\t/* TODO: find an actual specification */\n\tfunction sylk_to_aoa(d/*:RawData*/, opts)/*:[AOA, Worksheet]*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return sylk_to_aoa_str(Base64_decode(d), opts);\n\t\t\tcase 'binary': return sylk_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return sylk_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array': return sylk_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction sylk_to_aoa_str(str/*:string*/, opts)/*:[AOA, Worksheet]*/ {\n\t\tvar records = str.split(/[\\n\\r]+/), R = -1, C = -1, ri = 0, rj = 0, arr/*:AOA*/ = [];\n\t\tvar formats/*:Array<string>*/ = [];\n\t\tvar next_cell_format/*:string|null*/ = null;\n\t\tvar sht = {}, rowinfo/*:Array<RowInfo>*/ = [], colinfo/*:Array<ColInfo>*/ = [], cw/*:Array<string>*/ = [];\n\t\tvar Mval = 0, j;\n\t\tif(+opts.codepage >= 0) set_cp(+opts.codepage);\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tMval = 0;\n\t\t\tvar rstr=records[ri].trim().replace(/\\x1B([\\x20-\\x2F])([\\x30-\\x3F])/g, decode_sylk_char).replace(sylk_char_regex, sylk_char_fn);\n\t\t\tvar record=rstr.replace(/;;/g, \"\\u0000\").split(\";\").map(function(x) { return x.replace(/\\u0000/g, \";\"); });\n\t\t\tvar RT=record[0], val;\n\t\t\tif(rstr.length > 0) switch(RT) {\n\t\t\tcase 'ID': break; /* header */\n\t\t\tcase 'E': break; /* EOF */\n\t\t\tcase 'B': break; /* dimensions */\n\t\t\tcase 'O': break; /* options? */\n\t\t\tcase 'W': break; /* window? */\n\t\t\tcase 'P':\n\t\t\t\tif(record[1].charAt(0) == 'P')\n\t\t\t\t\tformats.push(rstr.slice(3).replace(/;;/g, \";\"));\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\tvar C_seen_K = false, C_seen_X = false, C_seen_S = false, C_seen_E = false, _R = -1, _C = -1;\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'A': break; // TODO: comment\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1))-1; C_seen_X = true; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1; if(!C_seen_X) C = 0;\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'K':\n\t\t\t\t\tval = record[rj].slice(1);\n\t\t\t\t\tif(val.charAt(0) === '\"') val = val.slice(1,val.length - 1);\n\t\t\t\t\telse if(val === 'TRUE') val = true;\n\t\t\t\t\telse if(val === 'FALSE') val = false;\n\t\t\t\t\telse if(!isNaN(fuzzynum(val))) {\n\t\t\t\t\t\tval = fuzzynum(val);\n\t\t\t\t\t\tif(next_cell_format !== null && fmt_is_date(next_cell_format)) val = numdate(val);\n\t\t\t\t\t} else if(!isNaN(fuzzydate(val).getDate())) {\n\t\t\t\t\t\tval = parseDate(val);\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof $cptable !== 'undefined' && typeof val == \"string\" && ((opts||{}).type != \"string\") && (opts||{}).codepage) val = $cptable.utils.decode(opts.codepage, val);\n\t\t\t\t\tC_seen_K = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\t\tC_seen_E = true;\n\t\t\t\t\tvar formula = rc_to_a1(record[rj].slice(1), {r:R,c:C});\n\t\t\t\t\tarr[R][C] = [arr[R][C], formula];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tC_seen_S = true;\n\t\t\t\t\tarr[R][C] = [arr[R][C], \"S5S\"];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G': break; // unknown\n\t\t\t\tcase 'R': _R = parseInt(record[rj].slice(1))-1; break;\n\t\t\t\tcase 'C': _C = parseInt(record[rj].slice(1))-1; break;\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(C_seen_K) {\n\t\t\t\tif(arr[R][C] && arr[R][C].length == 2) arr[R][C][0] = val;\n\t\t\t\telse arr[R][C] = val;\n\t\t\t\tnext_cell_format = null;\n\t\t\t}\n\t\t\tif(C_seen_S) {\n\t\t\t\tif(C_seen_E) throw new Error(\"SYLK shared formula cannot have own formula\");\n\t\t\t\tvar shrbase = _R > -1 && arr[_R][_C];\n\t\t\t\tif(!shrbase || !shrbase[1]) throw new Error(\"SYLK shared formula cannot find base\");\n\t\t\t\tarr[R][C][1] = shift_formula_str(shrbase[1], {r: R - _R, c: C - _C});\n\t\t\t}\n\t\t\tbreak;\n\t\t\tcase 'F':\n\t\t\tvar F_seen = 0;\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1))-1; ++F_seen; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1; /*C = 0;*/\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'M': Mval = parseInt(record[rj].slice(1)) / 20; break;\n\t\t\t\tcase 'F': break; /* ??? */\n\t\t\t\tcase 'G': break; /* hide grid */\n\t\t\t\tcase 'P':\n\t\t\t\t\tnext_cell_format = formats[parseInt(record[rj].slice(1))];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S': break; /* cell style */\n\t\t\t\tcase 'D': break; /* column */\n\t\t\t\tcase 'N': break; /* font */\n\t\t\t\tcase 'W':\n\t\t\t\t\tcw = record[rj].slice(1).split(\" \");\n\t\t\t\t\tfor(j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\n\t\t\t\t\t\tMval = parseInt(cw[2], 10);\n\t\t\t\t\t\tcolinfo[j-1] = Mval === 0 ? {hidden:true}: {wch:Mval}; process_col(colinfo[j-1]);\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C': /* default column format */\n\t\t\t\t\tC = parseInt(record[rj].slice(1))-1;\n\t\t\t\t\tif(!colinfo[C]) colinfo[C] = {};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R': /* row properties */\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1;\n\t\t\t\t\tif(!rowinfo[R]) rowinfo[R] = {};\n\t\t\t\t\tif(Mval > 0) { rowinfo[R].hpt = Mval; rowinfo[R].hpx = pt2px(Mval); }\n\t\t\t\t\telse if(Mval === 0) rowinfo[R].hidden = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(F_seen < 1) next_cell_format = null; break;\n\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t}\n\t\tif(rowinfo.length > 0) sht['!rows'] = rowinfo;\n\t\tif(colinfo.length > 0) sht['!cols'] = colinfo;\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn [arr, sht];\n\t}\n\n\tfunction sylk_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tvar aoasht = sylk_to_aoa(d, opts);\n\t\tvar aoa = aoasht[0], ws = aoasht[1];\n\t\tvar o = aoa_to_sheet(aoa, opts);\n\t\tkeys(ws).forEach(function(k) { o[k] = ws[k]; });\n\t\treturn o;\n\t}\n\n\tfunction sylk_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(sylk_to_sheet(d, opts), opts); }\n\n\tfunction write_ws_cell_sylk(cell/*:Cell*/, ws/*:Worksheet*/, R/*:number*/, C/*:number*//*::, opts*/)/*:string*/ {\n\t\tvar o = \"C;Y\" + (R+1) + \";X\" + (C+1) + \";K\";\n\t\tswitch(cell.t) {\n\t\t\tcase 'n':\n\t\t\t\to += (cell.v||0);\n\t\t\t\tif(cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {r:R, c:C}); break;\n\t\t\tcase 'b': o += cell.v ? \"TRUE\" : \"FALSE\"; break;\n\t\t\tcase 'e': o += cell.w || cell.v; break;\n\t\t\tcase 'd': o += '\"' + (cell.w || cell.v) + '\"'; break;\n\t\t\tcase 's': o += '\"' + cell.v.replace(/\"/g,\"\").replace(/;/g, \";;\") + '\"'; break;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction write_ws_cols_sylk(out, cols) {\n\t\tcols.forEach(function(col, i) {\n\t\t\tvar rec = \"F;W\" + (i+1) + \" \" + (i+1) + \" \";\n\t\t\tif(col.hidden) rec += \"0\";\n\t\t\telse {\n\t\t\t\tif(typeof col.width == 'number' && !col.wpx) col.wpx = width2px(col.width);\n\t\t\t\tif(typeof col.wpx == 'number' && !col.wch) col.wch = px2char(col.wpx);\n\t\t\t\tif(typeof col.wch == 'number') rec += Math.round(col.wch);\n\t\t\t}\n\t\t\tif(rec.charAt(rec.length - 1) != \" \") out.push(rec);\n\t\t});\n\t}\n\n\tfunction write_ws_rows_sylk(out/*:Array<string>*/, rows/*:Array<RowInfo>*/) {\n\t\trows.forEach(function(row, i) {\n\t\t\tvar rec = \"F;\";\n\t\t\tif(row.hidden) rec += \"M0;\";\n\t\t\telse if(row.hpt) rec += \"M\" + 20 * row.hpt + \";\";\n\t\t\telse if(row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\n\t\t\tif(rec.length > 2) out.push(rec + \"R\" + (i+1));\n\t\t});\n\t}\n\n\tfunction sheet_to_sylk(ws/*:Worksheet*/, opts/*:?any*/)/*:string*/ {\n\t\tvar preamble/*:Array<string>*/ = [\"ID;PWXL;N;E\"], o/*:Array<string>*/ = [];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = Array.isArray(ws);\n\t\tvar RS = \"\\r\\n\";\n\n\t\tpreamble.push(\"P;PGeneral\");\n\t\tpreamble.push(\"F;P0;DG0G8;M255\");\n\t\tif(ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\n\t\tif(ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\n\n\t\tpreamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c,r.s.r,r.e.c,r.e.r].join(\" \"));\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C]: ws[coord];\n\t\t\t\tif(!cell || (cell.v == null && (!cell.f || cell.F))) continue;\n\t\t\t\to.push(write_ws_cell_sylk(cell, ws, R, C, opts));\n\t\t\t}\n\t\t}\n\t\treturn preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\n\t}\n\n\treturn {\n\t\tto_workbook: sylk_to_workbook,\n\t\tto_sheet: sylk_to_sheet,\n\t\tfrom_sheet: sheet_to_sylk\n\t};\n})();\n\nvar DIF = /*#__PURE__*/(function() {\n\tfunction dif_to_aoa(d/*:RawData*/, opts)/*:AOA*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return dif_to_aoa_str(Base64_decode(d), opts);\n\t\t\tcase 'binary': return dif_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return dif_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array': return dif_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction dif_to_aoa_str(str/*:string*/, opts)/*:AOA*/ {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tif (records[ri].trim() === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\tif (R < 0) continue;\n\t\t\tvar metadata = records[ri].trim().split(\",\");\n\t\t\tvar type = metadata[0], value = metadata[1];\n\t\t\t++ri;\n\t\t\tvar data = records[ri] || \"\";\n\t\t\twhile(((data.match(/[\"]/g)||[]).length & 1) && ri < records.length - 1) data += \"\\n\" + records[++ri];\n\t\t\tdata = data.trim();\n\t\t\tswitch (+type) {\n\t\t\t\tcase -1:\n\t\t\t\t\tif (data === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\t\t\telse if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\tif(data === 'TRUE') arr[R][C] = true;\n\t\t\t\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\t\t\t\telse if(!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);\n\t\t\t\t\telse if(!isNaN(fuzzydate(value).getDate())) arr[R][C] = parseDate(value);\n\t\t\t\t\telse arr[R][C] = value;\n\t\t\t\t\t++C; break;\n\t\t\t\tcase 1:\n\t\t\t\t\tdata = data.slice(1,data.length-1);\n\t\t\t\t\tdata = data.replace(/\"\"/g, '\"');\n\t\t\t\t\tif(DIF_XL && data && data.match(/^=\".*\"$/)) data = data.slice(2, -1);\n\t\t\t\t\tarr[R][C++] = data !== '' ? data : null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (data === 'EOD') break;\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction dif_to_sheet(str/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(dif_to_aoa(str, opts), opts); }\n\tfunction dif_to_workbook(str/*:string*/, opts)/*:Workbook*/ { return sheet_to_workbook(dif_to_sheet(str, opts), opts); }\n\n\tvar sheet_to_dif = /*#__PURE__*/(function() {\n\t\tvar push_field = function pf(o/*:Array<string>*/, topic/*:string*/, v/*:number*/, n/*:number*/, s/*:string*/) {\n\t\t\to.push(topic);\n\t\t\to.push(v + \",\" + n);\n\t\t\to.push('\"' + s.replace(/\"/g,'\"\"') + '\"');\n\t\t};\n\t\tvar push_value = function po(o/*:Array<string>*/, type/*:number*/, v/*:any*/, s/*:string*/) {\n\t\t\to.push(type + \",\" + v);\n\t\t\to.push(type == 1 ? '\"' + s.replace(/\"/g,'\"\"') + '\"' : s);\n\t\t};\n\t\treturn function sheet_to_dif(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\t\tvar o/*:Array<string>*/ = [];\n\t\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\t\tvar dense = Array.isArray(ws);\n\t\t\tpush_field(o, \"TABLE\", 0, 1, \"sheetjs\");\n\t\t\tpush_field(o, \"VECTORS\", 0, r.e.r - r.s.r + 1,\"\");\n\t\t\tpush_field(o, \"TUPLES\", 0, r.e.c - r.s.c + 1,\"\");\n\t\t\tpush_field(o, \"DATA\", 0, 0,\"\");\n\t\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\t\tpush_value(o, -1, 0, \"BOT\");\n\t\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\t\tif(!cell) { push_value(o, 1, 0, \"\"); continue;}\n\t\t\t\t\tswitch(cell.t) {\n\t\t\t\t\t\tcase 'n':\n\t\t\t\t\t\t\tvar val = DIF_XL ? cell.w : cell.v;\n\t\t\t\t\t\t\tif(!val && cell.v != null) val = cell.v;\n\t\t\t\t\t\t\tif(val == null) {\n\t\t\t\t\t\t\t\tif(DIF_XL && cell.f && !cell.F) push_value(o, 1, 0, \"=\" + cell.f);\n\t\t\t\t\t\t\t\telse push_value(o, 1, 0, \"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse push_value(o, 0, val, \"V\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tpush_value(o, 0, cell.v ? 1 : 0, cell.v ? \"TRUE\" : \"FALSE\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 's':\n\t\t\t\t\t\t\tpush_value(o, 1, 0, (!DIF_XL || isNaN(cell.v)) ? cell.v : '=\"' + cell.v + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\tif(!cell.w) cell.w = SSF_format(cell.z || table_fmt[14], datenum(parseDate(cell.v)));\n\t\t\t\t\t\t\tif(DIF_XL) push_value(o, 0, cell.w, \"V\");\n\t\t\t\t\t\t\telse push_value(o, 1, 0, cell.w);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault: push_value(o, 1, 0, \"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpush_value(o, -1, 0, \"EOD\");\n\t\t\tvar RS = \"\\r\\n\";\n\t\t\tvar oo = o.join(RS);\n\t\t\t//while((oo.length & 0x7F) != 0) oo += \"\\0\";\n\t\t\treturn oo;\n\t\t};\n\t})();\n\treturn {\n\t\tto_workbook: dif_to_workbook,\n\t\tto_sheet: dif_to_sheet,\n\t\tfrom_sheet: sheet_to_dif\n\t};\n})();\n\nvar ETH = /*#__PURE__*/(function() {\n\tfunction decode(s/*:string*/)/*:string*/ { return s.replace(/\\\\b/g,\"\\\\\").replace(/\\\\c/g,\":\").replace(/\\\\n/g,\"\\n\"); }\n\tfunction encode(s/*:string*/)/*:string*/ { return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g,\"\\\\n\"); }\n\n\tfunction eth_to_aoa(str/*:string*/, opts)/*:AOA*/ {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tvar record = records[ri].trim().split(\":\");\n\t\t\tif(record[0] !== 'cell') continue;\n\t\t\tvar addr = decode_cell(record[1]);\n\t\t\tif(arr.length <= addr.r) for(R = arr.length; R <= addr.r; ++R) if(!arr[R]) arr[R] = [];\n\t\t\tR = addr.r; C = addr.c;\n\t\t\tswitch(record[2]) {\n\t\t\t\tcase 't': arr[R][C] = decode(record[3]); break;\n\t\t\t\tcase 'v': arr[R][C] = +record[3]; break;\n\t\t\t\tcase 'vtf': var _f = record[record.length - 1];\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'vtc':\n\t\t\t\t\tswitch(record[3]) {\n\t\t\t\t\t\tcase 'nl': arr[R][C] = +record[4] ? true : false; break;\n\t\t\t\t\t\tdefault: arr[R][C] = +record[4]; break;\n\t\t\t\t\t}\n\t\t\t\t\tif(record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\n\t\t\t}\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction eth_to_sheet(d/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(eth_to_aoa(d, opts), opts); }\n\tfunction eth_to_workbook(d/*:string*/, opts)/*:Workbook*/ { return sheet_to_workbook(eth_to_sheet(d, opts), opts); }\n\n\tvar header = [\n\t\t\"socialcalc:version:1.5\",\n\t\t\"MIME-Version: 1.0\",\n\t\t\"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"\n\t].join(\"\\n\");\n\n\tvar sep = [\n\t\t\"--SocialCalcSpreadsheetControlSave\",\n\t\t\"Content-type: text/plain; charset=UTF-8\"\n\t].join(\"\\n\") + \"\\n\";\n\n\t/* TODO: the other parts */\n\tvar meta = [\n\t\t\"# SocialCalc Spreadsheet Control Save\",\n\t\t\"part:sheet\"\n\t].join(\"\\n\");\n\n\tvar end = \"--SocialCalcSpreadsheetControlSave--\";\n\n\tfunction sheet_to_eth_data(ws/*:Worksheet*/)/*:string*/ {\n\t\tif(!ws || !ws['!ref']) return \"\";\n\t\tvar o/*:Array<string>*/ = [], oo/*:Array<string>*/ = [], cell, coord = \"\";\n\t\tvar r = decode_range(ws['!ref']);\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tcoord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null || cell.t === 'z') continue;\n\t\t\t\too = [\"cell\", coord, 't'];\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 's': case 'str': oo.push(encode(cell.v)); break;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tif(!cell.f) { oo[2]='v'; oo[3]=cell.v; }\n\t\t\t\t\t\telse { oo[2]='vtf'; oo[3]='n'; oo[4]=cell.v; oo[5]=encode(cell.f); }\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\too[2] = 'vt'+(cell.f?'f':'c'); oo[3]='nl'; oo[4]=cell.v?\"1\":\"0\";\n\t\t\t\t\t\too[5] = encode(cell.f||(cell.v?'TRUE':'FALSE'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\tvar t = datenum(parseDate(cell.v));\n\t\t\t\t\t\too[2] = 'vtc'; oo[3] = 'nd'; oo[4] = \"\"+t;\n\t\t\t\t\t\too[5] = cell.w || SSF_format(cell.z || table_fmt[14], t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'e': continue;\n\t\t\t\t}\n\t\t\t\to.push(oo.join(\":\"));\n\t\t\t}\n\t\t}\n\t\to.push(\"sheet:c:\" + (r.e.c-r.s.c+1) + \":r:\" + (r.e.r-r.s.r+1) + \":tvf:1\");\n\t\to.push(\"valueformat:1:text-wiki\");\n\t\t//o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\n\t\treturn o.join(\"\\n\");\n\t}\n\n\tfunction sheet_to_eth(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\treturn [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\n\t\t// return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\n\t}\n\n\treturn {\n\t\tto_workbook: eth_to_workbook,\n\t\tto_sheet: eth_to_sheet,\n\t\tfrom_sheet: sheet_to_eth\n\t};\n})();\n\nvar PRN = /*#__PURE__*/(function() {\n\tfunction set_text_arr(data/*:string*/, arr/*:AOA*/, R/*:number*/, C/*:number*/, o/*:any*/) {\n\t\tif(o.raw) arr[R][C] = data;\n\t\telse if(data === \"\"){/* empty */}\n\t\telse if(data === 'TRUE') arr[R][C] = true;\n\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\telse if(!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);\n\t\telse if(!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);\n\t\telse arr[R][C] = data;\n\t}\n\n\tfunction prn_to_aoa_str(f/*:string*/, opts)/*:AOA*/ {\n\t\tvar o = opts || {};\n\t\tvar arr/*:AOA*/ = ([]/*:any*/);\n\t\tif(!f || f.length === 0) return arr;\n\t\tvar lines = f.split(/[\\r\\n]/);\n\t\tvar L = lines.length - 1;\n\t\twhile(L >= 0 && lines[L].length === 0) --L;\n\t\tvar start = 10, idx = 0;\n\t\tvar R = 0;\n\t\tfor(; R <= L; ++R) {\n\t\t\tidx = lines[R].indexOf(\" \");\n\t\t\tif(idx == -1) idx = lines[R].length; else idx++;\n\t\t\tstart = Math.max(start, idx);\n\t\t}\n\t\tfor(R = 0; R <= L; ++R) {\n\t\t\tarr[R] = [];\n\t\t\t/* TODO: confirm that widths are always 10 */\n\t\t\tvar C = 0;\n\t\t\tset_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\n\t\t\tfor(C = 1; C <= (lines[R].length - start)/10 + 1; ++C)\n\t\t\t\tset_text_arr(lines[R].slice(start+(C-1)*10,start+C*10).trim(),arr,R,C,o);\n\t\t}\n\t\tif(o.sheetRows) arr = arr.slice(0, o.sheetRows);\n\t\treturn arr;\n\t}\n\n\t// List of accepted CSV separators\n\tvar guess_seps = {\n\t\t/*::[*/0x2C/*::]*/: ',',\n\t\t/*::[*/0x09/*::]*/: \"\\t\",\n\t\t/*::[*/0x3B/*::]*/: ';',\n\t\t/*::[*/0x7C/*::]*/: '|'\n\t};\n\n\t// CSV separator weights to be used in case of equal numbers\n\tvar guess_sep_weights = {\n\t\t/*::[*/0x2C/*::]*/: 3,\n\t\t/*::[*/0x09/*::]*/: 2,\n\t\t/*::[*/0x3B/*::]*/: 1,\n\t\t/*::[*/0x7C/*::]*/: 0\n\t};\n\n\tfunction guess_sep(str) {\n\t\tvar cnt = {}, instr = false, end = 0, cc = 0;\n\t\tfor(;end < str.length;++end) {\n\t\t\tif((cc=str.charCodeAt(end)) == 0x22) instr = !instr;\n\t\t\telse if(!instr && cc in guess_seps) cnt[cc] = (cnt[cc]||0)+1;\n\t\t}\n\n\t\tcc = [];\n\t\tfor(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {\n\t\t\tcc.push([ cnt[end], end ]);\n\t\t}\n\n\t\tif ( !cc.length ) {\n\t\t\tcnt = guess_sep_weights;\n\t\t\tfor(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {\n\t\t\t\tcc.push([ cnt[end], end ]);\n\t\t\t}\n\t\t}\n\n\t\tcc.sort(function(a, b) { return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]]; });\n\n\t\treturn guess_seps[cc.pop()[1]] || 0x2C;\n\t}\n\n\tfunction dsv_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tvar o = opts || {};\n\t\tvar sep = \"\";\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar ws/*:Worksheet*/ = o.dense ? ([]/*:any*/) : ({}/*:any*/);\n\t\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:0, r:0}}/*:any*/);\n\n\t\tif(str.slice(0,4) == \"sep=\") {\n\t\t\t// If the line ends in \\r\\n\n\t\t\tif(str.charCodeAt(5) == 13 && str.charCodeAt(6) == 10 ) {\n\t\t\t\tsep = str.charAt(4); str = str.slice(7);\n\t\t\t}\n\t\t\t// If line ends in \\r OR \\n\n\t\t\telse if(str.charCodeAt(5) == 13 || str.charCodeAt(5) == 10 ) {\n\t\t\t\tsep = str.charAt(4); str = str.slice(6);\n\t\t\t}\n\t\t\telse sep = guess_sep(str.slice(0,1024));\n\t\t}\n\t\telse if(o && o.FS) sep = o.FS;\n\t\telse sep = guess_sep(str.slice(0,1024));\n\t\tvar R = 0, C = 0, v = 0;\n\t\tvar start = 0, end = 0, sepcc = sep.charCodeAt(0), instr = false, cc=0, startcc=str.charCodeAt(0);\n\t\tstr = str.replace(/\\r\\n/mg, \"\\n\");\n\t\tvar _re/*:?RegExp*/ = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\n\t\tfunction finish_cell() {\n\t\t\tvar s = str.slice(start, end);\n\t\t\tvar cell = ({}/*:any*/);\n\t\t\tif(s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1,-1).replace(/\"\"/g,'\"');\n\t\t\tif(s.length === 0) cell.t = 'z';\n\t\t\telse if(o.raw) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.trim().length === 0) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.charCodeAt(0) == 0x3D) {\n\t\t\t\tif(s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) { cell.t = 's'; cell.v = s.slice(2,-1).replace(/\"\"/g,'\"'); }\n\t\t\t\telse if(fuzzyfmla(s)) { cell.t = 'n'; cell.f = s.slice(1); }\n\t\t\t\telse { cell.t = 's'; cell.v = s; } }\n\t\t\telse if(s == \"TRUE\") { cell.t = 'b'; cell.v = true; }\n\t\t\telse if(s == \"FALSE\") { cell.t = 'b'; cell.v = false; }\n\t\t\telse if(!isNaN(v = fuzzynum(s))) { cell.t = 'n'; if(o.cellText !== false) cell.w = s; cell.v = v; }\n\t\t\telse if(!isNaN(fuzzydate(s).getDate()) || _re && s.match(_re)) {\n\t\t\t\tcell.z = o.dateNF || table_fmt[14];\n\t\t\t\tvar k = 0;\n\t\t\t\tif(_re && s.match(_re)){ s=dateNF_fix(s, o.dateNF, (s.match(_re)||[])); k=1; }\n\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.v = parseDate(s, k); }\n\t\t\t\telse { cell.t = 'n'; cell.v = datenum(parseDate(s, k)); }\n\t\t\t\tif(o.cellText !== false) cell.w = SSF_format(cell.z, cell.v instanceof Date ? datenum(cell.v):cell.v);\n\t\t\t\tif(!o.cellNF) delete cell.z;\n\t\t\t} else {\n\t\t\t\tcell.t = 's';\n\t\t\t\tcell.v = s;\n\t\t\t}\n\t\t\tif(cell.t == 'z'){}\n\t\t\telse if(o.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = cell; }\n\t\t\telse ws[encode_cell({c:C,r:R})] = cell;\n\t\t\tstart = end+1; startcc = str.charCodeAt(start);\n\t\t\tif(range.e.c < C) range.e.c = C;\n\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\tif(cc == sepcc) ++C; else { C = 0; ++R; if(o.sheetRows && o.sheetRows <= R) return true; }\n\t\t}\n\t\touter: for(;end < str.length;++end) switch((cc=str.charCodeAt(end))) {\n\t\t\tcase 0x22: if(startcc === 0x22) instr = !instr; break;\n\t\t\tcase sepcc: case 0x0a: case 0x0d: if(!instr && finish_cell()) break outer; break;\n\t\t\tdefault: break;\n\t\t}\n\t\tif(end - start > 0) finish_cell();\n\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\n\tfunction prn_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tif(!(opts && opts.PRN)) return dsv_to_sheet_str(str, opts);\n\t\tif(opts.FS) return dsv_to_sheet_str(str, opts);\n\t\tif(str.slice(0,4) == \"sep=\") return dsv_to_sheet_str(str, opts);\n\t\tif(str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\n\t\treturn aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\n\t}\n\n\tfunction prn_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tvar str = \"\", bytes = opts.type == 'string' ? [0,0,0,0] : firstbyte(d, opts);\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': str = Base64_decode(d); break;\n\t\t\tcase 'binary': str = d; break;\n\t\t\tcase 'buffer':\n\t\t\t\tif(opts.codepage == 65001) str = d.toString('utf8'); // TODO: test if buf\n\t\t\t\telse if(opts.codepage && typeof $cptable !== 'undefined') str = $cptable.utils.decode(opts.codepage, d);\n\t\t\t\telse str = has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d);\n\t\t\t\tbreak;\n\t\t\tcase 'array': str = cc2str(d); break;\n\t\t\tcase 'string': str = d; break;\n\t\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t\t}\n\t\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));\n\t\telse if(opts.type != 'string' && opts.type != 'buffer' && opts.codepage == 65001) str = utf8read(str);\n\t\telse if((opts.type == 'binary') && typeof $cptable !== 'undefined' && opts.codepage)  str = $cptable.utils.decode(opts.codepage, $cptable.utils.encode(28591,str));\n\t\tif(str.slice(0,19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\n\t\treturn prn_to_sheet_str(str, opts);\n\t}\n\n\tfunction prn_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(prn_to_sheet(d, opts), opts); }\n\n\tfunction sheet_to_prn(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\tvar o/*:Array<string>*/ = [];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tvar oo/*:Array<string>*/ = [];\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null) { oo.push(\"          \"); continue; }\n\t\t\t\tvar w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0,10);\n\t\t\t\twhile(w.length < 10) w += \" \";\n\t\t\t\too.push(w + (C === 0 ? \" \" : \"\"));\n\t\t\t}\n\t\t\to.push(oo.join(\"\"));\n\t\t}\n\t\treturn o.join(\"\\n\");\n\t}\n\n\treturn {\n\t\tto_workbook: prn_to_workbook,\n\t\tto_sheet: prn_to_sheet,\n\t\tfrom_sheet: sheet_to_prn\n\t};\n})();\n\n/* Excel defaults to SYLK but warns if data is not valid */\nfunction read_wb_ID(d, opts) {\n\tvar o = opts || {}, OLD_WTF = !!o.WTF; o.WTF = true;\n\ttry {\n\t\tvar out = SYLK.to_workbook(d, o);\n\t\to.WTF = OLD_WTF;\n\t\treturn out;\n\t} catch(e) {\n\t\to.WTF = OLD_WTF;\n\t\tif(!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;\n\t\treturn PRN.to_workbook(d, opts);\n\t}\n}\n\nvar WK_ = /*#__PURE__*/(function() {\n\tfunction lotushopper(data, cb/*:RecordHopperCB*/, opts/*:any*/) {\n\t\tif(!data) return;\n\t\tprep_blob(data, data.l || 0);\n\t\tvar Enum = opts.Enum || WK1Enum;\n\t\twhile(data.l < data.length) {\n\t\t\tvar RT = data.read_shift(2);\n\t\t\tvar R = Enum[RT] || Enum[0xFFFF];\n\t\t\tvar length = data.read_shift(2);\n\t\t\tvar tgt = data.l + length;\n\t\t\tvar d = R.f && R.f(data, length, opts);\n\t\t\tdata.l = tgt;\n\t\t\tif(cb(d, R, RT)) return;\n\t\t}\n\t}\n\n\tfunction lotus_to_workbook(d/*:RawData*/, opts) {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return lotus_to_workbook_buf(s2a(Base64_decode(d)), opts);\n\t\t\tcase 'binary': return lotus_to_workbook_buf(s2a(d), opts);\n\t\t\tcase 'buffer':\n\t\t\tcase 'array': return lotus_to_workbook_buf(d, opts);\n\t\t}\n\t\tthrow \"Unsupported type \" + opts.type;\n\t}\n\n\tfunction lotus_to_workbook_buf(d, opts)/*:Workbook*/ {\n\t\tif(!d) return d;\n\t\tvar o = opts || {};\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar s/*:Worksheet*/ = ((o.dense ? [] : {})/*:any*/), n = \"Sheet1\", next_n = \"\", sidx = 0;\n\t\tvar sheets = {}, snames = [], realnames = [];\n\n\t\tvar refguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\tvar sheetRows = o.sheetRows || 0;\n\n\t\tif(d[2] == 0x00) {\n\t\t\tif(d[3] == 0x08 || d[3] == 0x09) {\n\t\t\t\tif(d.length >= 16 && d[14] == 0x05 && d[15] === 0x6c) throw new Error(\"Unsupported Works 3 for Mac file\");\n\t\t\t}\n\t\t}\n\n\t\tif(d[2] == 0x02) {\n\t\t\to.Enum = WK1Enum;\n\t\t\tlotushopper(d, function(val, R, RT) { switch(RT) {\n\t\t\t\tcase 0x00: /* BOF */\n\t\t\t\t\to.vers = val;\n\t\t\t\t\tif(val >= 0x1000) o.qpro = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x06: refguess = val; break; /* RANGE */\n\t\t\t\tcase 0xCC: if(val) next_n = val; break; /* SHEETNAMECS */\n\t\t\t\tcase 0xDE: next_n = val; break; /* SHEETNAMELP */\n\t\t\t\tcase 0x0F: /* LABEL */\n\t\t\t\tcase 0x33: /* STRING */\n\t\t\t\t\tif(!o.qpro) val[1].v = val[1].v.slice(1);\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x0D: /* INTEGER */\n\t\t\t\tcase 0x0E: /* NUMBER */\n\t\t\t\tcase 0x10: /* FORMULA */\n\t\t\t\t\t/* TODO: actual translation of the format code */\n\t\t\t\t\tif(RT == 0x0E && (val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\n\t\t\t\t\t\tval[1].z = o.dateNF || table_fmt[14];\n\t\t\t\t\t\tif(o.cellDates) { val[1].t = 'd'; val[1].v = numdate(val[1].v); }\n\t\t\t\t\t}\n\n\t\t\t\t\tif(o.qpro) {\n\t\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t\t\ts = (o.dense ? [] : {});\n\t\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\t\tsidx = val[3]; n = next_n || \"Sheet\" + (sidx + 1); next_n = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar tmpcell = o.dense ? (s[val[0].r]||[])[val[0].c] : s[encode_cell(val[0])];\n\t\t\t\t\tif(tmpcell) {\n\t\t\t\t\t\ttmpcell.t = val[1].t; tmpcell.v = val[1].v;\n\t\t\t\t\t\tif(val[1].z != null) tmpcell.z = val[1].z;\n\t\t\t\t\t\tif(val[1].f != null) tmpcell.f = val[1].f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!s[val[0].r]) s[val[0].r] = [];\n\t\t\t\t\t\ts[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t}}, o);\n\t\t} else if(d[2] == 0x1A || d[2] == 0x0E) {\n\t\t\to.Enum = WK3Enum;\n\t\t\tif(d[2] == 0x0E) { o.qpro = true; d.l = 0; }\n\t\t\tlotushopper(d, function(val, R, RT) { switch(RT) {\n\t\t\t\tcase 0xCC: n = val; break; /* SHEETNAMECS */\n\t\t\t\tcase 0x16: /* LABEL16 */\n\t\t\t\t\tval[1].v = val[1].v.slice(1);\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x17: /* NUMBER17 */\n\t\t\t\tcase 0x18: /* NUMBER18 */\n\t\t\t\tcase 0x19: /* FORMULA19 */\n\t\t\t\tcase 0x25: /* NUMBER25 */\n\t\t\t\tcase 0x27: /* NUMBER27 */\n\t\t\t\tcase 0x28: /* FORMULA28 */\n\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t\ts = (o.dense ? [] : {});\n\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\tsidx = val[3]; n = \"Sheet\" + (sidx + 1);\n\t\t\t\t\t}\n\t\t\t\t\tif(sheetRows > 0 && val[0].r >= sheetRows) break;\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!s[val[0].r]) s[val[0].r] = [];\n\t\t\t\t\t\ts[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tif(refguess.e.c < val[0].c) refguess.e.c = val[0].c;\n\t\t\t\t\tif(refguess.e.r < val[0].r) refguess.e.r = val[0].r;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x1B: /* XFORMAT */\n\t\t\t\t\tif(val[0x36b0]) realnames[val[0x36b0][0]] = val[0x36b0][1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0601: /* SHEETINFOQP */\n\t\t\t\t\trealnames[val[0]] = val[1]; if(val[0] == sidx) n = val[1]; break;\n\t\t\t\tdefault: break;\n\t\t\t}}, o);\n\t\t} else throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\n\t\ts[\"!ref\"] = encode_range(refguess);\n\t\tsheets[next_n || n] = s;\n\t\tsnames.push(next_n || n);\n\t\tif(!realnames.length) return { SheetNames: snames, Sheets: sheets };\n\t\tvar osheets = {}, rnames = [];\n\t\t/* TODO: verify no collisions */\n\t\tfor(var i = 0; i < realnames.length; ++i) if(sheets[snames[i]]) {\n\t\t\trnames.push(realnames[i] || snames[i]);\n\t\t\tosheets[realnames[i]] = sheets[realnames[i]] || sheets[snames[i]];\n\t\t} else {\n\t\t\trnames.push(realnames[i]);\n\t\t\tosheets[realnames[i]] = ({ \"!ref\": \"A1\" });\n\t\t}\n\t\treturn { SheetNames: rnames, Sheets: osheets };\n\t}\n\n\tfunction sheet_to_wk1(ws/*:Worksheet*/, opts/*:WriteOpts*/) {\n\t\tvar o = opts || {};\n\t\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\t\tif(o.type == \"string\") throw new Error(\"Cannot write WK1 to JS string\");\n\t\tvar ba = buf_array();\n\t\tvar range = safe_decode_range(ws[\"!ref\"]);\n\t\tvar dense = Array.isArray(ws);\n\t\tvar cols = [];\n\n\t\twrite_biff_rec(ba, 0x00, write_BOF_WK1(0x0406));\n\t\twrite_biff_rec(ba, 0x06, write_RANGE(range));\n\t\tvar max_R = Math.min(range.e.r, 8191);\n\t\tfor(var R = range.s.r; R <= max_R; ++R) {\n\t\t\tvar rr = encode_row(R);\n\t\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\t\tvar ref = cols[C] + rr;\n\t\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\t\tif(!cell || cell.t == \"z\") continue;\n\t\t\t\t/* TODO: formula records */\n\t\t\t\tif(cell.t == \"n\") {\n\t\t\t\t\tif((cell.v|0)==cell.v && cell.v >= -32768 && cell.v <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, cell.v));\n\t\t\t\t\telse write_biff_rec(ba, 0x0e, write_NUMBER(R, C, cell.v));\n\t\t\t\t} else {\n\t\t\t\t\tvar str = format_cell(cell);\n\t\t\t\t\twrite_biff_rec(ba, 0x0F, write_LABEL(R, C, str.slice(0, 239)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twrite_biff_rec(ba, 0x01);\n\t\treturn ba.end();\n\t}\n\n\tfunction book_to_wk3(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\t\tvar o = opts || {};\n\t\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\t\tif(o.type == \"string\") throw new Error(\"Cannot write WK3 to JS string\");\n\t\tvar ba = buf_array();\n\n\t\twrite_biff_rec(ba, 0x00, write_BOF_WK3(wb));\n\n\t\tfor(var i = 0, cnt = 0; i < wb.SheetNames.length; ++i) if((wb.Sheets[wb.SheetNames[i]] || {})[\"!ref\"]) write_biff_rec(ba, 0x1b, write_XFORMAT_SHEETNAME(wb.SheetNames[i], cnt++));\n\n\t\tvar wsidx = 0;\n\t\tfor(i = 0; i < wb.SheetNames.length; ++i) {\n\t\t\tvar ws = wb.Sheets[wb.SheetNames[i]];\n\t\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\t\tvar range = safe_decode_range(ws[\"!ref\"]);\n\t\t\tvar dense = Array.isArray(ws);\n\t\t\tvar cols = [];\n\t\t\tvar max_R = Math.min(range.e.r, 8191);\n\t\t\tfor(var R = range.s.r; R <= max_R; ++R) {\n\t\t\t\tvar rr = encode_row(R);\n\t\t\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\t\t\tvar ref = cols[C] + rr;\n\t\t\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\t\t\tif(!cell || cell.t == \"z\") continue;\n\t\t\t\t\t/* TODO: FORMULA19 NUMBER18 records */\n\t\t\t\t\tif(cell.t == \"n\") {\n\t\t\t\t\t\twrite_biff_rec(ba, 0x17, write_NUMBER_17(R, C, wsidx, cell.v));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar str = format_cell(cell);\n\t\t\t\t\t\t/* TODO: max len? */\n\t\t\t\t\t\twrite_biff_rec(ba, 0x16, write_LABEL_16(R, C, wsidx, str.slice(0, 239)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t++wsidx;\n\t\t}\n\n\t\twrite_biff_rec(ba, 0x01);\n\t\treturn ba.end();\n\t}\n\n\n\tfunction write_BOF_WK1(v/*:number*/) {\n\t\tvar out = new_buf(2);\n\t\tout.write_shift(2, v);\n\t\treturn out;\n\t}\n\n\tfunction write_BOF_WK3(wb/*:Workbook*/) {\n\t\tvar out = new_buf(26);\n\t\tout.write_shift(2, 0x1000);\n\t\tout.write_shift(2, 0x0004);\n\t\tout.write_shift(4, 0x0000);\n\t\tvar rows = 0, cols = 0, wscnt = 0;\n\t\tfor(var i = 0; i < wb.SheetNames.length; ++i) {\n\t\t\tvar name = wb.SheetNames[i];\n\t\t\tvar ws = wb.Sheets[name];\n\t\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\t\t++wscnt;\n\t\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\t\tif(rows < range.e.r) rows = range.e.r;\n\t\t\tif(cols < range.e.c) cols = range.e.c;\n\t\t}\n\t\tif(rows > 8191) rows = 8191;\n\t\tout.write_shift(2, rows);\n\t\tout.write_shift(1, wscnt);\n\t\tout.write_shift(1, cols);\n\t\tout.write_shift(2, 0x00);\n\t\tout.write_shift(2, 0x00);\n\t\tout.write_shift(1, 0x01);\n\t\tout.write_shift(1, 0x02);\n\t\tout.write_shift(4, 0);\n\t\tout.write_shift(4, 0);\n\t\treturn out;\n\t}\n\n\tfunction parse_RANGE(blob, length, opts) {\n\t\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\t\tif(length == 8 && opts.qpro) {\n\t\t\to.s.c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to.s.r = blob.read_shift(2);\n\t\t\to.e.c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to.e.r = blob.read_shift(2);\n\t\t\treturn o;\n\t\t}\n\t\to.s.c = blob.read_shift(2);\n\t\to.s.r = blob.read_shift(2);\n\t\tif(length == 12 && opts.qpro) blob.l += 2;\n\t\to.e.c = blob.read_shift(2);\n\t\to.e.r = blob.read_shift(2);\n\t\tif(length == 12 && opts.qpro) blob.l += 2;\n\t\tif(o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\n\t\treturn o;\n\t}\n\tfunction write_RANGE(range) {\n\t\tvar out = new_buf(8);\n\t\tout.write_shift(2, range.s.c);\n\t\tout.write_shift(2, range.s.r);\n\t\tout.write_shift(2, range.e.c);\n\t\tout.write_shift(2, range.e.r);\n\t\treturn out;\n\t}\n\n\tfunction parse_cell(blob, length, opts) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0, 0];\n\t\tif(opts.qpro && opts.vers != 0x5120) {\n\t\t\to[0].c = blob.read_shift(1);\n\t\t\to[3] = blob.read_shift(1);\n\t\t\to[0].r = blob.read_shift(2);\n\t\t\tblob.l+=2;\n\t\t} else {\n\t\t\to[2] = blob.read_shift(1);\n\t\t\to[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].t = 's';\n\t\tif(opts.vers == 0x5120) {\n\t\t\tblob.l++;\n\t\t\tvar len = blob.read_shift(1);\n\t\t\to[1].v = blob.read_shift(len, 'utf8');\n\t\t\treturn o;\n\t\t}\n\t\tif(opts.qpro) blob.l++;\n\t\to[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n\t\treturn o;\n\t}\n\tfunction write_LABEL(R, C, s) {\n\t\t/* TODO: encoding */\n\t\tvar o = new_buf(7 + s.length);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, 0x27); // ??\n\t\tfor(var i = 0; i < o.length; ++i) {\n\t\t\tvar cc = s.charCodeAt(i);\n\t\t\to.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n\t\t}\n\t\to.write_shift(1, 0);\n\t\treturn o;\n\t}\n\n\tfunction parse_INTEGER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(2, 'i');\n\t\treturn o;\n\t}\n\tfunction write_INTEGER(R, C, v) {\n\t\tvar o = new_buf(7);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(2, v, 'i');\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\treturn o;\n\t}\n\tfunction write_NUMBER(R, C, v) {\n\t\tvar o = new_buf(13);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(8, v, 'f');\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\t/* TODO: formula */\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\tif(opts.qpro) blob.l = tgt;\n\t\telse {\n\t\t\tvar flen = blob.read_shift(2);\n\t\t\twk1_fmla_to_csf(blob.slice(blob.l, blob.l + flen), o);\n\t\t\tblob.l += flen;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction wk1_parse_rc(B, V, col) {\n\t\tvar rel = V & 0x8000;\n\t\tV &= ~0x8000;\n\t\tV = (rel ? B : 0) + ((V >= 0x2000) ? V - 0x4000 : V);\n\t\treturn (rel ? \"\" : \"$\") + (col ? encode_col(V) : encode_row(V));\n\t}\n\t/* var oprec = [\n\t\t8, 8, 8, 8, 8, 8, 8, 8, 6, 4, 4, 5, 5, 7, 3, 3,\n\t\t3, 3, 3, 3, 1, 1, 2, 6, 8, 8, 8, 8, 8, 8, 8, 8\n\t]; */\n\t/* TODO: flesh out */\n\tvar FuncTab = {\n\t\t0x33: [\"FALSE\", 0],\n\t\t0x34: [\"TRUE\", 0],\n\t\t0x46: [\"LEN\", 1],\n\t\t0x50: [\"SUM\", 69],\n\t\t0x51: [\"AVERAGEA\", 69],\n\t\t0x52: [\"COUNTA\", 69],\n\t\t0x53: [\"MINA\", 69],\n\t\t0x54: [\"MAXA\", 69],\n\t\t0x6F: [\"T\", 1]\n\t};\n\tvar BinOpTab = [\n\t\t  \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t  \"\",  \"+\",  \"-\",  \"*\",  \"/\",  \"^\",  \"=\", \"<>\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t\"<=\", \">=\",  \"<\",  \">\",   \"\",   \"\",   \"\",   \"\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t \"&\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\"  // eslint-disable-line no-mixed-spaces-and-tabs\n\t];\n\n\tfunction wk1_fmla_to_csf(blob, o) {\n\t\tprep_blob(blob, 0);\n\t\tvar out = [], argc = 0, R = \"\", C = \"\", argL = \"\", argR = \"\";\n\t\twhile(blob.l < blob.length) {\n\t\t\tvar cc = blob[blob.l++];\n\t\t\tswitch(cc) {\n\t\t\t\tcase 0x00: out.push(blob.read_shift(8, 'f')); break;\n\t\t\t\tcase 0x01: {\n\t\t\t\t\tC = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tR = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tout.push(C + R);\n\t\t\t\t} break;\n\t\t\t\tcase 0x02: {\n\t\t\t\t\tvar c = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tvar r = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tC = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tR = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tout.push(c + r + \":\" + C + R);\n\t\t\t\t} break;\n\t\t\t\tcase 0x03:\n\t\t\t\t\tif(blob.l < blob.length) { console.error(\"WK1 premature formula end\"); return; }\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x04: out.push(\"(\" + out.pop() + \")\"); break;\n\t\t\t\tcase 0x05: out.push(blob.read_shift(2)); break;\n\t\t\t\tcase 0x06: {\n\t\t\t\t\t/* TODO: text encoding */\n\t\t\t\t\tvar Z = \"\"; while((cc = blob[blob.l++])) Z += String.fromCharCode(cc);\n\t\t\t\t\tout.push('\"' + Z.replace(/\"/g, '\"\"') + '\"');\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x08: out.push(\"-\" + out.pop()); break;\n\t\t\t\tcase 0x17: out.push(\"+\" + out.pop()); break;\n\t\t\t\tcase 0x16: out.push(\"NOT(\" + out.pop() + \")\"); break;\n\n\t\t\t\tcase 0x14: case 0x15: {\n\t\t\t\t\targR = out.pop(); argL = out.pop();\n\t\t\t\t\tout.push([\"AND\", \"OR\"][cc - 0x14] + \"(\" + argL + \",\" + argR + \")\");\n\t\t\t\t} break;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif(cc < 0x20 && BinOpTab[cc]) {\n\t\t\t\t\t\targR = out.pop(); argL = out.pop();\n\t\t\t\t\t\tout.push(argL + BinOpTab[cc] + argR);\n\t\t\t\t\t} else if(FuncTab[cc]) {\n\t\t\t\t\t\targc = FuncTab[cc][1];\n\t\t\t\t\t\tif(argc == 69) argc = blob[blob.l++];\n\t\t\t\t\t\tif(argc > out.length) { console.error(\"WK1 bad formula parse 0x\" + cc.toString(16) + \":|\" + out.join(\"|\") + \"|\"); return; }\n\t\t\t\t\t\tvar args = out.slice(-argc);\n\t\t\t\t\t\tout.length -= argc;\n\t\t\t\t\t\tout.push(FuncTab[cc][0] + \"(\" + args.join(\",\") + \")\");\n\t\t\t\t\t}\n\t\t\t\t\telse if(cc <= 0x07) return console.error(\"WK1 invalid opcode \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x18) return console.error(\"WK1 unsupported op \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x1E) return console.error(\"WK1 invalid opcode \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x73) return console.error(\"WK1 unsupported function opcode \" + cc.toString(16));\n\t\t\t\t\t// possible future functions ??\n\t\t\t\t\telse return console.error(\"WK1 unrecognized opcode \" + cc.toString(16));\n\t\t\t}\n\t\t}\n\t\tif(out.length == 1) o[1].f = \"\" + out[0];\n\t\telse console.error(\"WK1 bad formula parse |\" + out.join(\"|\") + \"|\");\n\t}\n\n\n\tfunction parse_cell_3(blob/*::, length*/) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0];\n\t\to[0].r = blob.read_shift(2); o[3] = blob[blob.l++]; o[0].c = blob[blob.l++];\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL_16(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].t = 's';\n\t\to[1].v = blob.read_shift(length - 4, 'cstr');\n\t\treturn o;\n\t}\n\tfunction write_LABEL_16(R, C, wsidx, s) {\n\t\t/* TODO: encoding */\n\t\tvar o = new_buf(6 + s.length);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, wsidx);\n\t\to.write_shift(1, C);\n\t\to.write_shift(1, 0x27);\n\t\tfor(var i = 0; i < s.length; ++i) {\n\t\t\tvar cc = s.charCodeAt(i);\n\t\t\to.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n\t\t}\n\t\to.write_shift(1, 0);\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_18(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].v = blob.read_shift(2);\n\t\tvar v = o[1].v >> 1;\n\t\tif(o[1].v & 0x1) {\n\t\t\tswitch(v & 0x07) {\n\t\t\t\tcase 0: v = (v >> 3) * 5000; break;\n\t\t\t\tcase 1: v = (v >> 3) * 500; break;\n\t\t\t\tcase 2: v = (v >> 3) / 20; break;\n\t\t\t\tcase 3: v = (v >> 3) / 200; break;\n\t\t\t\tcase 4: v = (v >> 3) / 2000; break;\n\t\t\t\tcase 5: v = (v >> 3) / 20000; break;\n\t\t\t\tcase 6: v = (v >> 3) / 16; break;\n\t\t\t\tcase 7: v = (v >> 3) / 64; break;\n\t\t\t}\n\t\t}\n\t\to[1].v = v;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_17(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\tvar v2 = blob.read_shift(4);\n\t\tvar e = blob.read_shift(2);\n\t\tif(e == 0xFFFF) {\n\t\t\tif(v1 === 0 && v2 === 0xC0000000) { o[1].t = \"e\"; o[1].v = 0x0F; } // ERR -> #VALUE!\n\t\t\telse if(v1 === 0 && v2 === 0xD0000000) { o[1].t = \"e\"; o[1].v = 0x2A; } // NA -> #N/A\n\t\t\telse o[1].v = 0;\n\t\t\treturn o;\n\t\t}\n\t\tvar s = e & 0x8000; e = (e&0x7FFF) - 16446;\n\t\to[1].v = (1 - s*2) * (v2 * Math.pow(2, e+32) + v1 * Math.pow(2, e));\n\t\treturn o;\n\t}\n\tfunction write_NUMBER_17(R, C, wsidx, v) {\n\t\tvar o = new_buf(14);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, wsidx);\n\t\to.write_shift(1, C);\n\t\tif(v == 0) {\n\t\t\to.write_shift(4, 0);\n\t\t\to.write_shift(4, 0);\n\t\t\to.write_shift(2, 0xFFFF);\n\t\t\treturn o;\n\t\t}\n\t\tvar s = 0, e = 0, v1 = 0, v2 = 0;\n\t\tif(v < 0) { s = 1; v = -v; }\n\t\te = Math.log2(v) | 0;\n\t\tv /= Math.pow(2, e-31);\n\t\tv2 = (v)>>>0;\n\t\tif((v2&0x80000000) == 0) { v/=2; ++e; v2 = v >>> 0; }\n\t\tv -= v2;\n\t\tv2 |= 0x80000000;\n\t\tv2 >>>= 0;\n\t\tv *= Math.pow(2, 32);\n\t\tv1 = v>>>0;\n\t\to.write_shift(4, v1);\n\t\to.write_shift(4, v2);\n\t\te += 0x3FFF + (s ? 0x8000 : 0);\n\t\to.write_shift(2, e);\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_19(blob, length) {\n\t\tvar o = parse_NUMBER_17(blob, 14);\n\t\tblob.l += length - 14; /* TODO: WK3 formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_25(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\to[1].v = v1 >> 6;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_27(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(8,'f');\n\t\to[1].v = v1;\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_28(blob, length) {\n\t\tvar o = parse_NUMBER_27(blob, 14);\n\t\tblob.l += length - 10; /* TODO: formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_SHEETNAMECS(blob, length) {\n\t\treturn blob[blob.l + length - 1] == 0 ? blob.read_shift(length, 'cstr') : \"\";\n\t}\n\n\tfunction parse_SHEETNAMELP(blob, length) {\n\t\tvar len = blob[blob.l++];\n\t\tif(len > length - 1) len = length - 1;\n\t\tvar o = \"\"; while(o.length < len) o += String.fromCharCode(blob[blob.l++]);\n\t\treturn o;\n\t}\n\n\tfunction parse_SHEETINFOQP(blob, length, opts) {\n\t\tif(!opts.qpro || length < 21) return;\n\t\tvar id = blob.read_shift(1);\n\t\tblob.l += 17;\n\t\tblob.l += 1; //var len = blob.read_shift(1);\n\t\tblob.l += 2;\n\t\tvar nm = blob.read_shift(length - 21, 'cstr');\n\t\treturn [id, nm];\n\t}\n\n\tfunction parse_XFORMAT(blob, length) {\n\t\tvar o = {}, tgt = blob.l + length;\n\t\twhile(blob.l < tgt) {\n\t\t\tvar dt = blob.read_shift(2);\n\t\t\tif(dt == 0x36b0) {\n\t\t\t\to[dt] = [0, \"\"];\n\t\t\t\to[dt][0] = blob.read_shift(2);\n\t\t\t\twhile(blob[blob.l]) { o[dt][1] += String.fromCharCode(blob[blob.l]); blob.l++; } blob.l++;\n\t\t\t}\n\t\t\t// TODO: 0x3a99 ??\n\t\t}\n\t\treturn o;\n\t}\n\tfunction write_XFORMAT_SHEETNAME(name, wsidx) {\n\t\tvar out = new_buf(5 + name.length);\n\t\tout.write_shift(2, 0x36b0);\n\t\tout.write_shift(2, wsidx);\n\t\tfor(var i = 0; i < name.length; ++i) {\n\t\t\tvar cc = name.charCodeAt(i);\n\t\t\tout[out.l++] = cc > 0x7F ? 0x5F : cc;\n\t\t}\n\t\tout[out.l++] = 0;\n\t\treturn out;\n\t}\n\n\tvar WK1Enum = {\n\t\t/*::[*/0x0000/*::]*/: { n:\"BOF\", f:parseuint16 },\n\t\t/*::[*/0x0001/*::]*/: { n:\"EOF\" },\n\t\t/*::[*/0x0002/*::]*/: { n:\"CALCMODE\" },\n\t\t/*::[*/0x0003/*::]*/: { n:\"CALCORDER\" },\n\t\t/*::[*/0x0004/*::]*/: { n:\"SPLIT\" },\n\t\t/*::[*/0x0005/*::]*/: { n:\"SYNC\" },\n\t\t/*::[*/0x0006/*::]*/: { n:\"RANGE\", f:parse_RANGE },\n\t\t/*::[*/0x0007/*::]*/: { n:\"WINDOW1\" },\n\t\t/*::[*/0x0008/*::]*/: { n:\"COLW1\" },\n\t\t/*::[*/0x0009/*::]*/: { n:\"WINTWO\" },\n\t\t/*::[*/0x000A/*::]*/: { n:\"COLW2\" },\n\t\t/*::[*/0x000B/*::]*/: { n:\"NAME\" },\n\t\t/*::[*/0x000C/*::]*/: { n:\"BLANK\" },\n\t\t/*::[*/0x000D/*::]*/: { n:\"INTEGER\", f:parse_INTEGER },\n\t\t/*::[*/0x000E/*::]*/: { n:\"NUMBER\", f:parse_NUMBER },\n\t\t/*::[*/0x000F/*::]*/: { n:\"LABEL\", f:parse_LABEL },\n\t\t/*::[*/0x0010/*::]*/: { n:\"FORMULA\", f:parse_FORMULA },\n\t\t/*::[*/0x0018/*::]*/: { n:\"TABLE\" },\n\t\t/*::[*/0x0019/*::]*/: { n:\"ORANGE\" },\n\t\t/*::[*/0x001A/*::]*/: { n:\"PRANGE\" },\n\t\t/*::[*/0x001B/*::]*/: { n:\"SRANGE\" },\n\t\t/*::[*/0x001C/*::]*/: { n:\"FRANGE\" },\n\t\t/*::[*/0x001D/*::]*/: { n:\"KRANGE1\" },\n\t\t/*::[*/0x0020/*::]*/: { n:\"HRANGE\" },\n\t\t/*::[*/0x0023/*::]*/: { n:\"KRANGE2\" },\n\t\t/*::[*/0x0024/*::]*/: { n:\"PROTEC\" },\n\t\t/*::[*/0x0025/*::]*/: { n:\"FOOTER\" },\n\t\t/*::[*/0x0026/*::]*/: { n:\"HEADER\" },\n\t\t/*::[*/0x0027/*::]*/: { n:\"SETUP\" },\n\t\t/*::[*/0x0028/*::]*/: { n:\"MARGINS\" },\n\t\t/*::[*/0x0029/*::]*/: { n:\"LABELFMT\" },\n\t\t/*::[*/0x002A/*::]*/: { n:\"TITLES\" },\n\t\t/*::[*/0x002B/*::]*/: { n:\"SHEETJS\" },\n\t\t/*::[*/0x002D/*::]*/: { n:\"GRAPH\" },\n\t\t/*::[*/0x002E/*::]*/: { n:\"NGRAPH\" },\n\t\t/*::[*/0x002F/*::]*/: { n:\"CALCCOUNT\" },\n\t\t/*::[*/0x0030/*::]*/: { n:\"UNFORMATTED\" },\n\t\t/*::[*/0x0031/*::]*/: { n:\"CURSORW12\" },\n\t\t/*::[*/0x0032/*::]*/: { n:\"WINDOW\" },\n\t\t/*::[*/0x0033/*::]*/: { n:\"STRING\", f:parse_LABEL },\n\t\t/*::[*/0x0037/*::]*/: { n:\"PASSWORD\" },\n\t\t/*::[*/0x0038/*::]*/: { n:\"LOCKED\" },\n\t\t/*::[*/0x003C/*::]*/: { n:\"QUERY\" },\n\t\t/*::[*/0x003D/*::]*/: { n:\"QUERYNAME\" },\n\t\t/*::[*/0x003E/*::]*/: { n:\"PRINT\" },\n\t\t/*::[*/0x003F/*::]*/: { n:\"PRINTNAME\" },\n\t\t/*::[*/0x0040/*::]*/: { n:\"GRAPH2\" },\n\t\t/*::[*/0x0041/*::]*/: { n:\"GRAPHNAME\" },\n\t\t/*::[*/0x0042/*::]*/: { n:\"ZOOM\" },\n\t\t/*::[*/0x0043/*::]*/: { n:\"SYMSPLIT\" },\n\t\t/*::[*/0x0044/*::]*/: { n:\"NSROWS\" },\n\t\t/*::[*/0x0045/*::]*/: { n:\"NSCOLS\" },\n\t\t/*::[*/0x0046/*::]*/: { n:\"RULER\" },\n\t\t/*::[*/0x0047/*::]*/: { n:\"NNAME\" },\n\t\t/*::[*/0x0048/*::]*/: { n:\"ACOMM\" },\n\t\t/*::[*/0x0049/*::]*/: { n:\"AMACRO\" },\n\t\t/*::[*/0x004A/*::]*/: { n:\"PARSE\" },\n\t\t/*::[*/0x0066/*::]*/: { n:\"PRANGES??\" },\n\t\t/*::[*/0x0067/*::]*/: { n:\"RRANGES??\" },\n\t\t/*::[*/0x0068/*::]*/: { n:\"FNAME??\" },\n\t\t/*::[*/0x0069/*::]*/: { n:\"MRANGES??\" },\n\t\t/*::[*/0x00CC/*::]*/: { n:\"SHEETNAMECS\", f:parse_SHEETNAMECS },\n\t\t/*::[*/0x00DE/*::]*/: { n:\"SHEETNAMELP\", f:parse_SHEETNAMELP },\n\t\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n\t};\n\n\tvar WK3Enum = {\n\t\t/*::[*/0x0000/*::]*/: { n:\"BOF\" },\n\t\t/*::[*/0x0001/*::]*/: { n:\"EOF\" },\n\t\t/*::[*/0x0002/*::]*/: { n:\"PASSWORD\" },\n\t\t/*::[*/0x0003/*::]*/: { n:\"CALCSET\" },\n\t\t/*::[*/0x0004/*::]*/: { n:\"WINDOWSET\" },\n\t\t/*::[*/0x0005/*::]*/: { n:\"SHEETCELLPTR\" },\n\t\t/*::[*/0x0006/*::]*/: { n:\"SHEETLAYOUT\" },\n\t\t/*::[*/0x0007/*::]*/: { n:\"COLUMNWIDTH\" },\n\t\t/*::[*/0x0008/*::]*/: { n:\"HIDDENCOLUMN\" },\n\t\t/*::[*/0x0009/*::]*/: { n:\"USERRANGE\" },\n\t\t/*::[*/0x000A/*::]*/: { n:\"SYSTEMRANGE\" },\n\t\t/*::[*/0x000B/*::]*/: { n:\"ZEROFORCE\" },\n\t\t/*::[*/0x000C/*::]*/: { n:\"SORTKEYDIR\" },\n\t\t/*::[*/0x000D/*::]*/: { n:\"FILESEAL\" },\n\t\t/*::[*/0x000E/*::]*/: { n:\"DATAFILLNUMS\" },\n\t\t/*::[*/0x000F/*::]*/: { n:\"PRINTMAIN\" },\n\t\t/*::[*/0x0010/*::]*/: { n:\"PRINTSTRING\" },\n\t\t/*::[*/0x0011/*::]*/: { n:\"GRAPHMAIN\" },\n\t\t/*::[*/0x0012/*::]*/: { n:\"GRAPHSTRING\" },\n\t\t/*::[*/0x0013/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0014/*::]*/: { n:\"ERRCELL\" },\n\t\t/*::[*/0x0015/*::]*/: { n:\"NACELL\" },\n\t\t/*::[*/0x0016/*::]*/: { n:\"LABEL16\", f:parse_LABEL_16},\n\t\t/*::[*/0x0017/*::]*/: { n:\"NUMBER17\", f:parse_NUMBER_17 },\n\t\t/*::[*/0x0018/*::]*/: { n:\"NUMBER18\", f:parse_NUMBER_18 },\n\t\t/*::[*/0x0019/*::]*/: { n:\"FORMULA19\", f:parse_FORMULA_19},\n\t\t/*::[*/0x001A/*::]*/: { n:\"FORMULA1A\" },\n\t\t/*::[*/0x001B/*::]*/: { n:\"XFORMAT\", f:parse_XFORMAT },\n\t\t/*::[*/0x001C/*::]*/: { n:\"DTLABELMISC\" },\n\t\t/*::[*/0x001D/*::]*/: { n:\"DTLABELCELL\" },\n\t\t/*::[*/0x001E/*::]*/: { n:\"GRAPHWINDOW\" },\n\t\t/*::[*/0x001F/*::]*/: { n:\"CPA\" },\n\t\t/*::[*/0x0020/*::]*/: { n:\"LPLAUTO\" },\n\t\t/*::[*/0x0021/*::]*/: { n:\"QUERY\" },\n\t\t/*::[*/0x0022/*::]*/: { n:\"HIDDENSHEET\" },\n\t\t/*::[*/0x0023/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0025/*::]*/: { n:\"NUMBER25\", f:parse_NUMBER_25 },\n\t\t/*::[*/0x0026/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0027/*::]*/: { n:\"NUMBER27\", f:parse_NUMBER_27 },\n\t\t/*::[*/0x0028/*::]*/: { n:\"FORMULA28\", f:parse_FORMULA_28 },\n\t\t/*::[*/0x008E/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0093/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0096/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0097/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0098/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0099/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009B/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00A3/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00AE/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00AF/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B0/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B1/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B8/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B9/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BA/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BB/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BC/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00C3/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00C9/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CC/*::]*/: { n:\"SHEETNAMECS\", f:parse_SHEETNAMECS },\n\t\t/*::[*/0x00CD/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CE/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CF/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00D0/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0100/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0103/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0104/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0105/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0106/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0107/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0109/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010B/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010E/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010F/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0180/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0185/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0186/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0189/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x018C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0200/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0202/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0201/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0204/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0205/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0280/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0281/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0282/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0283/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0284/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0285/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0286/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0287/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0288/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0292/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0293/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0294/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0295/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0296/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0299/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x029A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0300/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0304/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0601/*::]*/: { n:\"SHEETINFOQP\", f:parse_SHEETINFOQP },\n\t\t/*::[*/0x0640/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0642/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0701/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0702/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0703/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0704/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0780/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0800/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0801/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0804/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0A80/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x2AF6/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x3231/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x6E49/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x6F44/*::]*/: { n:\"??\" },\n\t\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n\t};\n\treturn {\n\t\tsheet_to_wk1: sheet_to_wk1,\n\t\tbook_to_wk3: book_to_wk3,\n\t\tto_workbook: lotus_to_workbook\n\t};\n})();\n/* 18.4.7 rPr CT_RPrElt */\nfunction parse_rpr(rpr) {\n\tvar font = {}, m = rpr.match(tagregex), i = 0;\n\tvar pass = false;\n\tif(m) for(;i!=m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(y[0].replace(/\\w*:/g,\"\")) {\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<condense': break;\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<extend': break;\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<shadow':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<shadow>':\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\t\t\tcase '</shadow>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty TODO */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\tfont.cp = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.4.2 outline CT_BooleanProperty TODO */\n\t\t\tcase '<outline':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<outline>':\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\t\t\tcase '</outline>': break;\n\n\t\t\t/* 18.4.5 rFont CT_FontName */\n\t\t\tcase '<rFont': font.name = y.val; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': font.sz = y.val; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<strike>':\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\t\t\tcase '</strike>': break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tif(!y.val) break;\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase 'double': font.uval = \"double\"; break;\n\t\t\t\t\tcase 'singleAccounting': font.uval = \"single-accounting\"; break;\n\t\t\t\t\tcase 'doubleAccounting': font.uval = \"double-accounting\"; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '<u>':\n\t\t\tcase '<u/>': font.u = 1; break;\n\t\t\tcase '</u>': break;\n\n\t\t\t/* 18.8.2 b */\n\t\t\tcase '<b':\n\t\t\t\tif(y.val == '0') break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<b>':\n\t\t\tcase '<b/>': font.b = 1; break;\n\t\t\tcase '</b>': break;\n\n\t\t\t/* 18.8.26 i */\n\t\t\tcase '<i':\n\t\t\t\tif(y.val == '0') break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<i>':\n\t\t\tcase '<i/>': font.i = 1; break;\n\t\t\tcase '</i>': break;\n\n\t\t\t/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n\t\t\tcase '<color':\n\t\t\t\tif(y.rgb) font.color = y.rgb.slice(2,8);\n\t\t\t\tbreak;\n\t\t\tcase '<color>': case '<color/>': case '</color>': break;\n\n\t\t\t/* 18.8.18 family ST_FontFamily */\n\t\t\tcase '<family': font.family = y.val; break;\n\t\t\tcase '<family>': case '<family/>': case '</family>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n\t\t\tcase '<vertAlign': font.valign = y.val; break;\n\t\t\tcase '<vertAlign>': case '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme TODO */\n\t\t\tcase '<scheme': break;\n\t\t\tcase '<scheme>': case '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault:\n\t\t\t\tif(y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n\t\t}\n\t}\n\treturn font;\n}\n\nvar parse_rs = /*#__PURE__*/(function() {\n\tvar tregex = matchtag(\"t\"), rpregex = matchtag(\"rPr\");\n\t/* 18.4.4 r CT_RElt */\n\tfunction parse_r(r) {\n\t\t/* 18.4.12 t ST_Xstring */\n\t\tvar t = r.match(tregex)/*, cp = 65001*/;\n\t\tif(!t) return {t:\"s\", v:\"\"};\n\n\t\tvar o/*:Cell*/ = ({t:'s', v:unescapexml(t[1])}/*:any*/);\n\t\tvar rpr = r.match(rpregex);\n\t\tif(rpr) o.s = parse_rpr(rpr[1]);\n\t\treturn o;\n\t}\n\tvar rregex = /<(?:\\w+:)?r>/g, rend = /<\\/(?:\\w+:)?r>/;\n\treturn function parse_rs(rs) {\n\t\treturn rs.replace(rregex,\"\").split(rend).map(parse_r).filter(function(r) { return r.v; });\n\t};\n})();\n\n\n/* Parse a list of <r> tags */\nvar rs_to_html = /*#__PURE__*/(function parse_rs_factory() {\n\tvar nlregex = /(\\r\\n|\\n)/g;\n\tfunction parse_rpr2(font, intro, outro) {\n\t\tvar style/*:Array<string>*/ = [];\n\n\t\tif(font.u) style.push(\"text-decoration: underline;\");\n\t\tif(font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\n\t\tif(font.sz) style.push(\"font-size:\" + font.sz + \"pt;\");\n\t\tif(font.outline) style.push(\"text-effect: outline;\");\n\t\tif(font.shadow) style.push(\"text-shadow: auto;\");\n\t\tintro.push('<span style=\"' + style.join(\"\") + '\">');\n\n\t\tif(font.b) { intro.push(\"<b>\"); outro.push(\"</b>\"); }\n\t\tif(font.i) { intro.push(\"<i>\"); outro.push(\"</i>\"); }\n\t\tif(font.strike) { intro.push(\"<s>\"); outro.push(\"</s>\"); }\n\n\t\tvar align = font.valign || \"\";\n\t\tif(align == \"superscript\" || align == \"super\") align = \"sup\";\n\t\telse if(align == \"subscript\") align = \"sub\";\n\t\tif(align != \"\") { intro.push(\"<\" + align + \">\"); outro.push(\"</\" + align + \">\"); }\n\n\t\toutro.push(\"</span>\");\n\t\treturn font;\n\t}\n\n\t/* 18.4.4 r CT_RElt */\n\tfunction r_to_html(r) {\n\t\tvar terms/*:[Array<string>, string, Array<string>]*/ = [[],r.v,[]];\n\t\tif(!r.v) return \"\";\n\n\t\tif(r.s) parse_rpr2(r.s, terms[0], terms[2]);\n\n\t\treturn terms[0].join(\"\") + terms[1].replace(nlregex,'<br/>') + terms[2].join(\"\");\n\t}\n\n\treturn function parse_rs(rs) {\n\t\treturn rs.map(r_to_html).join(\"\");\n\t};\n})();\n\n/* 18.4.8 si CT_Rst */\nvar sitregex = /<(?:\\w+:)?t[^>]*>([^<]*)<\\/(?:\\w+:)?t>/g, sirregex = /<(?:\\w+:)?r>/;\nvar sirphregex = /<(?:\\w+:)?rPh.*?>([\\s\\S]*?)<\\/(?:\\w+:)?rPh>/g;\nfunction parse_si(x, opts) {\n\tvar html = opts ? opts.cellHTML : true;\n\tvar z = {};\n\tif(!x) return { t: \"\" };\n\t//var y;\n\t/* 18.4.12 t ST_Xstring (Plaintext String) */\n\t// TODO: is whitespace actually valid here?\n\tif(x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\n\t\tz.t = unescapexml(utf8read(x.slice(x.indexOf(\">\")+1).split(/<\\/(?:\\w+:)?t>/)[0]||\"\"));\n\t\tz.r = utf8read(x);\n\t\tif(html) z.h = escapehtml(z.t);\n\t}\n\t/* 18.4.4 r CT_RElt (Rich Text Run) */\n\telse if((/*y = */x.match(sirregex))) {\n\t\tz.r = utf8read(x);\n\t\tz.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex)||[]).join(\"\").replace(tagregex,\"\")));\n\t\tif(html) z.h = rs_to_html(parse_rs(z.r));\n\t}\n\t/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n\t/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n\treturn z;\n}\n\n/* 18.4 Shared String Table */\nvar sstr0 = /<(?:\\w+:)?sst([^>]*)>([\\s\\S]*)<\\/(?:\\w+:)?sst>/;\nvar sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\nvar sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\nfunction parse_sst_xml(data/*:string*/, opts)/*:SST*/ {\n\tvar s/*:SST*/ = ([]/*:any*/), ss = \"\";\n\tif(!data) return s;\n\t/* 18.4.9 sst CT_Sst */\n\tvar sst = data.match(sstr0);\n\tif(sst) {\n\t\tss = sst[2].replace(sstr1,\"\").split(sstr2);\n\t\tfor(var i = 0; i != ss.length; ++i) {\n\t\t\tvar o = parse_si(ss[i].trim(), opts);\n\t\t\tif(o != null) s[s.length] = o;\n\t\t}\n\t\tsst = parsexmltag(sst[1]); s.Count = sst.count; s.Unique = sst.uniqueCount;\n\t}\n\treturn s;\n}\n\nvar straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\nfunction write_sst_xml(sst/*:SST*/, opts)/*:string*/ {\n\tif(!opts.bookSST) return \"\";\n\tvar o = [XML_HEADER];\n\to[o.length] = (writextag('sst', null, {\n\t\txmlns: XMLNS_main[0],\n\t\tcount: sst.Count,\n\t\tuniqueCount: sst.Unique\n\t}));\n\tfor(var i = 0; i != sst.length; ++i) { if(sst[i] == null) continue;\n\t\tvar s/*:XLString*/ = sst[i];\n\t\tvar sitag = \"<si>\";\n\t\tif(s.r) sitag += s.r;\n\t\telse {\n\t\t\tsitag += \"<t\";\n\t\t\tif(!s.t) s.t = \"\";\n\t\t\tif(s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\n\t\t\tsitag += \">\" + escapexml(s.t) + \"</t>\";\n\t\t}\n\t\tsitag += \"</si>\";\n\t\to[o.length] = (sitag);\n\t}\n\tif(o.length>2){ o[o.length] = ('</sst>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.221 BrtBeginSst */\nfunction parse_BrtBeginSst(data) {\n\treturn [data.read_shift(4), data.read_shift(4)];\n}\n\n/* [MS-XLSB] 2.1.7.45 Shared Strings */\nfunction parse_sst_bin(data, opts)/*:SST*/ {\n\tvar s/*:SST*/ = ([]/*:any*/);\n\tvar pass = false;\n\trecordhopper(data, function hopper_sst(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009F: /* BrtBeginSst */\n\t\t\t\ts.Count = val[0]; s.Unique = val[1]; break;\n\t\t\tcase 0x0013: /* BrtSSTItem */\n\t\t\t\ts.push(val); break;\n\t\t\tcase 0x00A0: /* BrtEndSst */\n\t\t\t\treturn true;\n\n\t\t\tcase 0x0023: /* BrtFRTBegin */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* BrtFRTEnd */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){}\n\t\t\t\tif(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn s;\n}\n\nfunction write_BrtBeginSst(sst, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(4, sst.Count);\n\to.write_shift(4, sst.Unique);\n\treturn o;\n}\n\nvar write_BrtSSTItem = write_RichStr;\n\nfunction write_sst_bin(sst/*::, opts*/) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x009F /* BrtBeginSst */, write_BrtBeginSst(sst));\n\tfor(var i = 0; i < sst.length; ++i) write_record(ba, 0x0013 /* BrtSSTItem */, write_BrtSSTItem(sst[i]));\n\t/* FRTSST */\n\twrite_record(ba, 0x00A0 /* BrtEndSst */);\n\treturn ba.end();\n}\nfunction _JS2ANSI(str/*:string*/)/*:Array<number>*/ {\n\tif(typeof $cptable !== 'undefined') return $cptable.utils.encode(current_ansi, str);\n\tvar o/*:Array<number>*/ = [], oo = str.split(\"\");\n\tfor(var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.4 Version */\nfunction parse_CRYPTOVersion(blob, length/*:?number*/) {\n\tvar o/*:any*/ = {};\n\to.Major = blob.read_shift(2);\n\to.Minor = blob.read_shift(2);\n\t/*:: if(length == null) return o; */\n\tif(length >= 4) blob.l += length - 4;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\nfunction parse_DataSpaceVersionInfo(blob) {\n\tvar o = {};\n\to.id = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\nfunction parse_DataSpaceMapEntry(blob) {\n\tvar len = blob.read_shift(4);\n\tvar end = blob.l + len - 4;\n\tvar o = {};\n\tvar cnt = blob.read_shift(4);\n\tvar comps/*:Array<{t:number, v:string}>*/ = [];\n\t/* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\n\twhile(cnt-- > 0) comps.push({ t: blob.read_shift(4), v: blob.read_shift(0, 'lpp4') });\n\to.name = blob.read_shift(0, 'lpp4');\n\to.comps = comps;\n\tif(blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\nfunction parse_DataSpaceMap(blob) {\n\tvar o = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\nfunction parse_DataSpaceDefinition(blob)/*:Array<string>*/ {\n\tvar o/*:Array<string>*/ = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\nfunction parse_TransformInfoHeader(blob) {\n\tvar o = {};\n\t/*var len = */blob.read_shift(4);\n\tblob.l += 4; // must be 0x1\n\to.id = blob.read_shift(0, 'lpp4');\n\to.name = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\nfunction parse_Primary(blob) {\n\t/* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\n\tvar hdr = parse_TransformInfoHeader(blob);\n\t/* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\n\thdr.ename = blob.read_shift(0, '8lpp4');\n\thdr.blksz = blob.read_shift(4);\n\thdr.cmode = blob.read_shift(4);\n\tif(blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\n\treturn hdr;\n}\n\n/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\nfunction parse_EncryptionHeader(blob, length/*:number*/) {\n\tvar tgt = blob.l + length;\n\tvar o = {};\n\to.Flags = (blob.read_shift(4) & 0x3F);\n\tblob.l += 4;\n\to.AlgID = blob.read_shift(4);\n\tvar valid = false;\n\tswitch(o.AlgID) {\n\t\tcase 0x660E: case 0x660F: case 0x6610: valid = (o.Flags == 0x24); break;\n\t\tcase 0x6801: valid = (o.Flags == 0x04); break;\n\t\tcase 0: valid = (o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24); break;\n\t\tdefault: throw 'Unrecognized encryption algorithm: ' + o.AlgID;\n\t}\n\tif(!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\n\to.AlgIDHash = blob.read_shift(4);\n\to.KeySize = blob.read_shift(4);\n\to.ProviderType = blob.read_shift(4);\n\tblob.l += 8;\n\to.CSPName = blob.read_shift((tgt-blob.l)>>1, 'utf16le');\n\tblob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\nfunction parse_EncryptionVerifier(blob, length/*:number*/) {\n\tvar o = {}, tgt = blob.l + length;\n\tblob.l += 4; // SaltSize must be 0x10\n\to.Salt = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\to.Verifier = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\t/*var sz = */blob.read_shift(4);\n\to.VerifierHash = blob.slice(blob.l, tgt); blob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\nfunction parse_EncryptionInfo(blob) {\n\tvar vers = parse_CRYPTOVersion(blob);\n\tswitch(vers.Minor) {\n\t\tcase 0x02: return [vers.Minor, parse_EncInfoStd(blob, vers)];\n\t\tcase 0x03: return [vers.Minor, parse_EncInfoExt(blob, vers)];\n\t\tcase 0x04: return [vers.Minor, parse_EncInfoAgl(blob, vers)];\n\t}\n\tthrow new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\nfunction parse_EncInfoStd(blob/*::, vers*/) {\n\tvar flags = blob.read_shift(4);\n\tif((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\n\tvar sz = blob.read_shift(4);\n\t//var tgt = blob.l + sz;\n\tvar hdr = parse_EncryptionHeader(blob, sz);\n\tvar verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\n\treturn { t:\"Std\", h:hdr, v:verifier };\n}\n/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\nfunction parse_EncInfoExt(/*::blob, vers*/) { throw new Error(\"File is password-protected: ECMA-376 Extensible\"); }\n/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\nfunction parse_EncInfoAgl(blob/*::, vers*/) {\n\tvar KeyData = [\"saltSize\",\"blockSize\",\"keyBits\",\"hashSize\",\"cipherAlgorithm\",\"cipherChaining\",\"hashAlgorithm\",\"saltValue\"];\n\tblob.l+=4;\n\tvar xml = blob.read_shift(blob.length - blob.l, 'utf8');\n\tvar o = {};\n\txml.replace(tagregex, function xml_agile(x) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<encryption': case '</encryption>': break;\n\t\t\tcase '<keyData': KeyData.forEach(function(k) { o[k] = y[k]; }); break;\n\t\t\tcase '<dataIntegrity': o.encryptedHmacKey = y.encryptedHmacKey; o.encryptedHmacValue = y.encryptedHmacValue; break;\n\t\t\tcase '<keyEncryptors>': case '<keyEncryptors': o.encs = []; break;\n\t\t\tcase '</keyEncryptors>': break;\n\n\t\t\tcase '<keyEncryptor': o.uri = y.uri; break;\n\t\t\tcase '</keyEncryptor>': break;\n\t\t\tcase '<encryptedKey': o.encs.push(y); break;\n\t\t\tdefault: throw y[0];\n\t\t}\n\t});\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\nfunction parse_RC4CryptoHeader(blob, length/*:number*/) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4); length -= 4;\n\tif(vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\n\tif(vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\n\to.Flags = blob.read_shift(4); length -= 4;\n\tvar sz = blob.read_shift(4); length -= 4;\n\to.EncryptionHeader = parse_EncryptionHeader(blob, sz); length -= sz;\n\to.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\n\treturn o;\n}\n/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\nfunction parse_RC4Header(blob/*::, length*/) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n\tif(vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\n\to.Salt = blob.read_shift(16);\n\to.EncryptedVerifier = blob.read_shift(16);\n\to.EncryptedVerifierHash = blob.read_shift(16);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\nfunction crypto_CreatePasswordVerifier_Method1(Password/*:string*/) {\n\tvar Verifier = 0x0000, PasswordArray;\n\tvar PasswordDecoded = _JS2ANSI(Password);\n\tvar len = PasswordDecoded.length + 1, i, PasswordByte;\n\tvar Intermediate1, Intermediate2, Intermediate3;\n\tPasswordArray = new_raw_buf(len);\n\tPasswordArray[0] = PasswordDecoded.length;\n\tfor(i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i-1];\n\tfor(i = len-1; i >= 0; --i) {\n\t\tPasswordByte = PasswordArray[i];\n\t\tIntermediate1 = ((Verifier & 0x4000) === 0x0000) ? 0 : 1;\n\t\tIntermediate2 = (Verifier << 1) & 0x7FFF;\n\t\tIntermediate3 = Intermediate1 | Intermediate2;\n\t\tVerifier = Intermediate3 ^ PasswordByte;\n\t}\n\treturn Verifier ^ 0xCE4B;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\nvar crypto_CreateXorArray_Method1 = /*#__PURE__*/(function() {\n\tvar PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\n\tvar InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\n\tvar XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\n\tvar Ror = function(Byte) { return ((Byte/2) | (Byte*128)) & 0xFF; };\n\tvar XorRor = function(byte1, byte2) { return Ror(byte1 ^ byte2); };\n\tvar CreateXorKey_Method1 = function(Password) {\n\t\tvar XorKey = InitialCode[Password.length - 1];\n\t\tvar CurrentElement = 0x68;\n\t\tfor(var i = Password.length-1; i >= 0; --i) {\n\t\t\tvar Char = Password[i];\n\t\t\tfor(var j = 0; j != 7; ++j) {\n\t\t\t\tif(Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\n\t\t\t\tChar *= 2; --CurrentElement;\n\t\t\t}\n\t\t}\n\t\treturn XorKey;\n\t};\n\treturn function(password/*:string*/) {\n\t\tvar Password = _JS2ANSI(password);\n\t\tvar XorKey = CreateXorKey_Method1(Password);\n\t\tvar Index = Password.length;\n\t\tvar ObfuscationArray = new_raw_buf(16);\n\t\tfor(var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\n\t\tvar Temp, PasswordLastChar, PadIndex;\n\t\tif((Index & 1) === 1) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[0], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tPasswordLastChar = Password[Password.length - 1];\n\t\t\tObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\n\t\t}\n\t\twhile(Index > 0) {\n\t\t\t--Index;\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t}\n\t\tIndex = 15;\n\t\tPadIndex = 15 - Password.length;\n\t\twhile(PadIndex > 0) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t}\n\t\treturn ObfuscationArray;\n\t};\n})();\n\n/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\nvar crypto_DecryptData_Method1 = function(password/*:string*/, Data, XorArrayIndex, XorArray, O) {\n\t/* If XorArray is set, use it; if O is not set, make changes in-place */\n\tif(!O) O = Data;\n\tif(!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\n\tvar Index, Value;\n\tfor(Index = 0; Index != Data.length; ++Index) {\n\t\tValue = Data[Index];\n\t\tValue ^= XorArray[XorArrayIndex];\n\t\tValue = ((Value>>5) | (Value<<3)) & 0xFF;\n\t\tO[Index] = Value;\n\t\t++XorArrayIndex;\n\t}\n\treturn [O, XorArrayIndex, XorArray];\n};\n\nvar crypto_MakeXorDecryptor = function(password/*:string*/) {\n\tvar XorArrayIndex = 0, XorArray = crypto_CreateXorArray_Method1(password);\n\treturn function(Data) {\n\t\tvar O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\n\t\tXorArrayIndex = O[1];\n\t\treturn O[0];\n\t};\n};\n\n/* 2.5.343 */\nfunction parse_XORObfuscation(blob, length, opts, out) {\n\tvar o = ({ key: parseuint16(blob), verificationBytes: parseuint16(blob) }/*:any*/);\n\tif(opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\n\tout.valid = o.verificationBytes === o.verifier;\n\tif(out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\n\treturn o;\n}\n\n/* 2.4.117 */\nfunction parse_FilePassHeader(blob, length/*:number*/, oo) {\n\tvar o = oo || {}; o.Info = blob.read_shift(2); blob.l -= 2;\n\tif(o.Info === 1) o.Data = parse_RC4Header(blob, length);\n\telse o.Data = parse_RC4CryptoHeader(blob, length);\n\treturn o;\n}\nfunction parse_FilePass(blob, length/*:number*/, opts) {\n\tvar o = ({ Type: opts.biff >= 8 ? blob.read_shift(2) : 0 }/*:any*/); /* wEncryptionType */\n\tif(o.Type) parse_FilePassHeader(blob, length-2, o);\n\telse parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\n\treturn o;\n}\n\n\nvar RTF = /*#__PURE__*/(function() {\n\tfunction rtf_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return rtf_to_sheet_str(Base64_decode(d), opts);\n\t\t\tcase 'binary': return rtf_to_sheet_str(d, opts);\n\t\t\tcase 'buffer': return rtf_to_sheet_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array':  return rtf_to_sheet_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\n\t/* TODO: this is a stub */\n\tfunction rtf_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tvar o = opts || {};\n\t\tvar ws/*:Worksheet*/ = o.dense ? ([]/*:any*/) : ({}/*:any*/);\n\n\t\tvar rows = str.match(/\\\\trowd.*?\\\\row\\b/g);\n\t\tif(!rows.length) throw new Error(\"RTF missing table\");\n\t\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:0, r:rows.length - 1}}/*:any*/);\n\t\trows.forEach(function(rowtf, R) {\n\t\t\tif(Array.isArray(ws)) ws[R] = [];\n\t\t\tvar rtfre = /\\\\\\w+\\b/g;\n\t\t\tvar last_index = 0;\n\t\t\tvar res;\n\t\t\tvar C = -1;\n\t\t\twhile((res = rtfre.exec(rowtf))) {\n\t\t\t\tswitch(res[0]) {\n\t\t\t\t\tcase \"\\\\cell\":\n\t\t\t\t\t\tvar data = rowtf.slice(last_index, rtfre.lastIndex - res[0].length);\n\t\t\t\t\t\tif(data[0] == \" \") data = data.slice(1);\n\t\t\t\t\t\t++C;\n\t\t\t\t\t\tif(data.length) {\n\t\t\t\t\t\t\t// TODO: value parsing, including codepage adjustments\n\t\t\t\t\t\t\tvar cell = {v: data, t:\"s\"};\n\t\t\t\t\t\t\tif(Array.isArray(ws)) ws[R][C] = cell;\n\t\t\t\t\t\t\telse ws[encode_cell({r:R, c:C})] = cell;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlast_index = rtfre.lastIndex;\n\t\t\t}\n\t\t\tif(C > range.e.c) range.e.c = C;\n\t\t});\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\n\tfunction rtf_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(rtf_to_sheet(d, opts), opts); }\n\n\t/* TODO: this is a stub */\n\tfunction sheet_to_rtf(ws/*:Worksheet*//*::, opts*/)/*:string*/ {\n\t\tvar o = [\"{\\\\rtf1\\\\ansi\"];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\to.push(\"\\\\trowd\\\\trautofit1\");\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) o.push(\"\\\\cellx\" + (C+1));\n\t\t\to.push(\"\\\\pard\\\\intbl\");\n\t\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C]: ws[coord];\n\t\t\t\tif(!cell || cell.v == null && (!cell.f || cell.F)) continue;\n\t\t\t\to.push(\" \" + (cell.w || (format_cell(cell), cell.w)));\n\t\t\t\to.push(\"\\\\cell\");\n\t\t\t}\n\t\t\to.push(\"\\\\pard\\\\intbl\\\\row\");\n\t\t}\n\t\treturn o.join(\"\") + \"}\";\n\t}\n\n\treturn {\n\t\tto_workbook: rtf_to_workbook,\n\t\tto_sheet: rtf_to_sheet,\n\t\tfrom_sheet: sheet_to_rtf\n\t};\n})();\nfunction hex2RGB(h) {\n\tvar o = h.slice(h[0]===\"#\"?1:0).slice(0,6);\n\treturn [parseInt(o.slice(0,2),16),parseInt(o.slice(2,4),16),parseInt(o.slice(4,6),16)];\n}\nfunction rgb2Hex(rgb) {\n\tfor(var i=0,o=1; i!=3; ++i) o = o*256 + (rgb[i]>255?255:rgb[i]<0?0:rgb[i]);\n\treturn o.toString(16).toUpperCase().slice(1);\n}\n\nfunction rgb2HSL(rgb) {\n\tvar R = rgb[0]/255, G = rgb[1]/255, B=rgb[2]/255;\n\tvar M = Math.max(R, G, B), m = Math.min(R, G, B), C = M - m;\n\tif(C === 0) return [0, 0, R];\n\n\tvar H6 = 0, S = 0, L2 = (M + m);\n\tS = C / (L2 > 1 ? 2 - L2 : L2);\n\tswitch(M){\n\t\tcase R: H6 = ((G - B) / C + 6)%6; break;\n\t\tcase G: H6 = ((B - R) / C + 2); break;\n\t\tcase B: H6 = ((R - G) / C + 4); break;\n\t}\n\treturn [H6 / 6, S, L2 / 2];\n}\n\nfunction hsl2RGB(hsl){\n\tvar H = hsl[0], S = hsl[1], L = hsl[2];\n\tvar C = S * 2 * (L < 0.5 ? L : 1 - L), m = L - C/2;\n\tvar rgb = [m,m,m], h6 = 6*H;\n\n\tvar X;\n\tif(S !== 0) switch(h6|0) {\n\t\tcase 0: case 6: X = C * h6; rgb[0] += C; rgb[1] += X; break;\n\t\tcase 1: X = C * (2 - h6);   rgb[0] += X; rgb[1] += C; break;\n\t\tcase 2: X = C * (h6 - 2);   rgb[1] += C; rgb[2] += X; break;\n\t\tcase 3: X = C * (4 - h6);   rgb[1] += X; rgb[2] += C; break;\n\t\tcase 4: X = C * (h6 - 4);   rgb[2] += C; rgb[0] += X; break;\n\t\tcase 5: X = C * (6 - h6);   rgb[2] += X; rgb[0] += C; break;\n\t}\n\tfor(var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i]*255);\n\treturn rgb;\n}\n\n/* 18.8.3 bgColor tint algorithm */\nfunction rgb_tint(hex, tint) {\n\tif(tint === 0) return hex;\n\tvar hsl = rgb2HSL(hex2RGB(hex));\n\tif (tint < 0) hsl[2] = hsl[2] * (1 + tint);\n\telse hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\n\treturn rgb2Hex(hsl2RGB(hsl));\n}\n\n/* 18.3.1.13 width calculations */\n/* [MS-OI29500] 2.1.595 Column Width & Formatting */\nvar DEF_MDW = 6, MAX_MDW = 15, MIN_MDW = 1, MDW = DEF_MDW;\nfunction width2px(width) { return Math.floor(( width + (Math.round(128/MDW))/256 )* MDW ); }\nfunction px2char(px) { return (Math.floor((px - 5)/MDW * 100 + 0.5))/100; }\nfunction char2width(chr) { return (Math.round((chr * MDW + 5)/MDW*256))/256; }\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\nfunction cycle_width(collw) { return char2width(px2char(width2px(collw))); }\n/* XLSX/XLSB/XLS specify width in units of MDW */\nfunction find_mdw_colw(collw) {\n\tvar delta = Math.abs(collw - cycle_width(collw)), _MDW = MDW;\n\tif(delta > 0.005) for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) if(Math.abs(collw - cycle_width(collw)) <= delta) { delta = Math.abs(collw - cycle_width(collw)); _MDW = MDW; }\n\tMDW = _MDW;\n}\n/* XLML specifies width in terms of pixels */\n/*function find_mdw_wpx(wpx) {\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\n\t\tguess = char2width_(px2char_(wpx))*256;\n\t\tguess = (guess) % 1;\n\t\tif(guess > 0.5) guess--;\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\n\t}\n\tMDW = _MDW;\n}*/\n\nfunction process_col(coll/*:ColInfo*/) {\n\tif(coll.width) {\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.MDW = MDW;\n\t} else if(coll.wpx) {\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.MDW = MDW;\n\t} else if(typeof coll.wch == 'number') {\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.MDW = MDW;\n\t}\n\tif(coll.customWidth) delete coll.customWidth;\n}\n\nvar DEF_PPI = 96, PPI = DEF_PPI;\nfunction px2pt(px) { return px * 96 / PPI; }\nfunction pt2px(pt) { return pt * PPI / 96; }\n\n/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\nvar XLMLPatternTypeMap = {\n\t\"None\": \"none\",\n\t\"Solid\": \"solid\",\n\t\"Gray50\": \"mediumGray\",\n\t\"Gray75\": \"darkGray\",\n\t\"Gray25\": \"lightGray\",\n\t\"HorzStripe\": \"darkHorizontal\",\n\t\"VertStripe\": \"darkVertical\",\n\t\"ReverseDiagStripe\": \"darkDown\",\n\t\"DiagStripe\": \"darkUp\",\n\t\"DiagCross\": \"darkGrid\",\n\t\"ThickDiagCross\": \"darkTrellis\",\n\t\"ThinHorzStripe\": \"lightHorizontal\",\n\t\"ThinVertStripe\": \"lightVertical\",\n\t\"ThinReverseDiagStripe\": \"lightDown\",\n\t\"ThinHorzCross\": \"lightGrid\"\n};\n\n/* 18.8.5 borders CT_Borders */\nfunction parse_borders(t, styles, themes, opts) {\n\tstyles.Borders = [];\n\tvar border = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<borders': case '<borders>': case '</borders>': break;\n\n\t\t\t/* 18.8.4 border CT_Border */\n\t\t\tcase '<border': case '<border>': case '<border/>':\n\t\t\t\tborder = /*::(*/{}/*:: :any)*/;\n\t\t\t\tif(y.diagonalUp) border.diagonalUp = parsexmlbool(y.diagonalUp);\n\t\t\t\tif(y.diagonalDown) border.diagonalDown = parsexmlbool(y.diagonalDown);\n\t\t\t\tstyles.Borders.push(border);\n\t\t\t\tbreak;\n\t\t\tcase '</border>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<left/>': break;\n\t\t\tcase '<left': case '<left>': break;\n\t\t\tcase '</left>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<right/>': break;\n\t\t\tcase '<right': case '<right>': break;\n\t\t\tcase '</right>': break;\n\n\t\t\t/* 18.8.43 top CT_BorderPr */\n\t\t\tcase '<top/>': break;\n\t\t\tcase '<top': case '<top>': break;\n\t\t\tcase '</top>': break;\n\n\t\t\t/* 18.8.6 bottom CT_BorderPr */\n\t\t\tcase '<bottom/>': break;\n\t\t\tcase '<bottom': case '<bottom>': break;\n\t\t\tcase '</bottom>': break;\n\n\t\t\t/* 18.8.13 diagonal CT_BorderPr */\n\t\t\tcase '<diagonal': case '<diagonal>': case '<diagonal/>': break;\n\t\t\tcase '</diagonal>': break;\n\n\t\t\t/* 18.8.25 horizontal CT_BorderPr */\n\t\t\tcase '<horizontal': case '<horizontal>': case '<horizontal/>': break;\n\t\t\tcase '</horizontal>': break;\n\n\t\t\t/* 18.8.44 vertical CT_BorderPr */\n\t\t\tcase '<vertical': case '<vertical>': case '<vertical/>': break;\n\t\t\tcase '</vertical>': break;\n\n\t\t\t/* 18.8.37 start CT_BorderPr */\n\t\t\tcase '<start': case '<start>': case '<start/>': break;\n\t\t\tcase '</start>': break;\n\n\t\t\t/* 18.8.16 end CT_BorderPr */\n\t\t\tcase '<end': case '<end>': case '<end/>': break;\n\t\t\tcase '</end>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color>':\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in borders');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.21 fills CT_Fills */\nfunction parse_fills(t, styles, themes, opts) {\n\tstyles.Fills = [];\n\tvar fill = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fills': case '<fills>': case '</fills>': break;\n\n\t\t\t/* 18.8.20 fill CT_Fill */\n\t\t\tcase '<fill>': case '<fill': case '<fill/>':\n\t\t\t\tfill = {}; styles.Fills.push(fill); break;\n\t\t\tcase '</fill>': break;\n\n\t\t\t/* 18.8.24 gradientFill CT_GradientFill */\n\t\t\tcase '<gradientFill>': break;\n\t\t\tcase '<gradientFill':\n\t\t\tcase '</gradientFill>': styles.Fills.push(fill); fill = {}; break;\n\n\t\t\t/* 18.8.32 patternFill CT_PatternFill */\n\t\t\tcase '<patternFill': case '<patternFill>':\n\t\t\t\tif(y.patternType) fill.patternType = y.patternType;\n\t\t\t\tbreak;\n\t\t\tcase '<patternFill/>': case '</patternFill>': break;\n\n\t\t\t/* 18.8.3 bgColor CT_Color */\n\t\t\tcase '<bgColor':\n\t\t\t\tif(!fill.bgColor) fill.bgColor = {};\n\t\t\t\tif(y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\n\t\t\t\tif(y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.bgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<bgColor/>': case '</bgColor>': break;\n\n\t\t\t/* 18.8.19 fgColor CT_Color */\n\t\t\tcase '<fgColor':\n\t\t\t\tif(!fill.fgColor) fill.fgColor = {};\n\t\t\t\tif(y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.fgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb != null) fill.fgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<fgColor/>': case '</fgColor>': break;\n\n\t\t\t/* 18.8.38 stop CT_GradientStop */\n\t\t\tcase '<stop': case '<stop/>': break;\n\t\t\tcase '</stop>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color/>': break;\n\t\t\tcase '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fills');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.23 fonts CT_Fonts */\nfunction parse_fonts(t, styles, themes, opts) {\n\tstyles.Fonts = [];\n\tvar font = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fonts': case '<fonts>': case '</fonts>': break;\n\n\t\t\t/* 18.8.22 font CT_Font */\n\t\t\tcase '<font': case '<font>': break;\n\t\t\tcase '</font>': case '<font/>':\n\t\t\t\tstyles.Fonts.push(font);\n\t\t\t\tfont = {};\n\t\t\t\tbreak;\n\n\t\t\t/* 18.8.29 name CT_FontName */\n\t\t\tcase '<name': if(y.val) font.name = utf8read(y.val); break;\n\t\t\tcase '<name/>': case '</name>': break;\n\n\t\t\t/* 18.8.2  b CT_BooleanProperty */\n\t\t\tcase '<b': font.bold = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<b/>': font.bold = 1; break;\n\n\t\t\t/* 18.8.26 i CT_BooleanProperty */\n\t\t\tcase '<i': font.italic = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<i/>': font.italic = 1; break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase \"none\": font.underline = 0x00; break;\n\t\t\t\t\tcase \"single\": font.underline = 0x01; break;\n\t\t\t\t\tcase \"double\": font.underline = 0x02; break;\n\t\t\t\t\tcase \"singleAccounting\": font.underline = 0x21; break;\n\t\t\t\t\tcase \"doubleAccounting\": font.underline = 0x22; break;\n\t\t\t\t} break;\n\t\t\tcase '<u/>': font.underline = 1; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike': font.strike = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\n\t\t\t/* 18.4.2  outline CT_BooleanProperty */\n\t\t\tcase '<outline': font.outline = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\tcase '<shadow': font.shadow = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\tcase '<condense': font.condense = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<condense/>': font.condense = 1; break;\n\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\tcase '<extend': font.extend = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<extend/>': font.extend = 1; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': if(y.val) font.sz = +y.val; break;\n\t\t\tcase '<sz/>': case '</sz>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\n\t\t\tcase '<vertAlign': if(y.val) font.vertAlign = y.val; break;\n\t\t\tcase '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.18 family CT_FontFamily */\n\t\t\tcase '<family': if(y.val) font.family = parseInt(y.val,10); break;\n\t\t\tcase '<family/>': case '</family>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme */\n\t\t\tcase '<scheme': if(y.val) font.scheme = y.val; break;\n\t\t\tcase '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\ty.codepage = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.?.? color CT_Color */\n\t\t\tcase '<color':\n\t\t\t\tif(!font.color) font.color = {};\n\t\t\t\tif(y.auto) font.color.auto = parsexmlbool(y.auto);\n\n\t\t\t\tif(y.rgb) font.color.rgb = y.rgb.slice(-6);\n\t\t\t\telse if(y.indexed) {\n\t\t\t\t\tfont.color.index = parseInt(y.indexed, 10);\n\t\t\t\t\tvar icv = XLSIcv[font.color.index];\n\t\t\t\t\tif(font.color.index == 81) icv = XLSIcv[1];\n\t\t\t\t\tif(!icv) icv = XLSIcv[1]; //throw new Error(x); // note: 206 is valid\n\t\t\t\t\tfont.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\n\t\t\t\t} else if(y.theme) {\n\t\t\t\t\tfont.color.theme = parseInt(y.theme, 10);\n\t\t\t\t\tif(y.tint) font.color.tint = parseFloat(y.tint);\n\t\t\t\t\tif(y.theme && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\t\tfont.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* note: sometimes mc:AlternateContent appears bare */\n\t\t\tcase '<AlternateContent': pass = true; break;\n\t\t\tcase '</AlternateContent>': pass = false; break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.31 numFmts CT_NumFmts */\nfunction parse_numFmts(t, styles, opts) {\n\tstyles.NumberFmt = [];\n\tvar k/*Array<number>*/ = (keys(table_fmt)/*:any*/);\n\tfor(var i=0; i < k.length; ++i) styles.NumberFmt[k[i]] = table_fmt[k[i]];\n\tvar m = t[0].match(tagregex);\n\tif(!m) return;\n\tfor(i=0; i < m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<numFmts': case '</numFmts>': case '<numFmts/>': case '<numFmts>': break;\n\t\t\tcase '<numFmt': {\n\t\t\t\tvar f=unescapexml(utf8read(y.formatCode)), j=parseInt(y.numFmtId,10);\n\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\tif(j>0) {\n\t\t\t\t\tif(j > 0x188) {\n\t\t\t\t\t\tfor(j = 0x188; j > 0x3c; --j) if(styles.NumberFmt[j] == null) break;\n\t\t\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\t\t}\n\t\t\t\t\tSSF_load(f,j);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase '</numFmt>': break;\n\t\t\tdefault: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\n\t\t}\n\t}\n}\n\nfunction write_numFmts(NF/*:{[n:number|string]:string}*//*::, opts*/) {\n\tvar o = [\"<numFmts>\"];\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) o[o.length] = (writextag('numFmt',null,{numFmtId:i,formatCode:escapexml(NF[i])}));\n\t});\n\tif(o.length === 1) return \"\";\n\to[o.length] = (\"</numFmts>\");\n\to[0] = writextag('numFmts', null, { count:o.length-2 }).replace(\"/>\", \">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8.10 cellXfs CT_CellXfs */\nvar cellXF_uint = [ \"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\" ];\nvar cellXF_bool = [ \"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\" ];\nfunction parse_cellXfs(t, styles, opts) {\n\tstyles.CellXf = [];\n\tvar xf;\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x), i = 0;\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<cellXfs': case '<cellXfs>': case '<cellXfs/>': case '</cellXfs>': break;\n\n\t\t\t/* 18.8.45 xf CT_Xf */\n\t\t\tcase '<xf': case '<xf/>':\n\t\t\t\txf = y;\n\t\t\t\tdelete xf[0];\n\t\t\t\tfor(i = 0; i < cellXF_uint.length; ++i) if(xf[cellXF_uint[i]])\n\t\t\t\t\txf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\n\t\t\t\tfor(i = 0; i < cellXF_bool.length; ++i) if(xf[cellXF_bool[i]])\n\t\t\t\t\txf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\n\t\t\t\tif(styles.NumberFmt && xf.numFmtId > 0x188) {\n\t\t\t\t\tfor(i = 0x188; i > 0x3c; --i) if(styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) { xf.numFmtId = i; break; }\n\t\t\t\t}\n\t\t\t\tstyles.CellXf.push(xf); break;\n\t\t\tcase '</xf>': break;\n\n\t\t\t/* 18.8.1 alignment CT_CellAlignment */\n\t\t\tcase '<alignment': case '<alignment/>':\n\t\t\t\tvar alignment = {};\n\t\t\t\tif(y.vertical) alignment.vertical = y.vertical;\n\t\t\t\tif(y.horizontal) alignment.horizontal = y.horizontal;\n\t\t\t\tif(y.textRotation != null) alignment.textRotation = y.textRotation;\n\t\t\t\tif(y.indent) alignment.indent = y.indent;\n\t\t\t\tif(y.wrapText) alignment.wrapText = parsexmlbool(y.wrapText);\n\t\t\t\txf.alignment = alignment;\n\t\t\t\tbreak;\n\t\t\tcase '</alignment>': break;\n\n\t\t\t/* 18.8.33 protection CT_CellProtection */\n\t\t\tcase '<protection':\n\t\t\t\tbreak;\n\t\t\tcase '</protection>': case '<protection/>': break;\n\n\t\t\t/* note: sometimes mc:AlternateContent appears bare */\n\t\t\tcase '<AlternateContent': pass = true; break;\n\t\t\tcase '</AlternateContent>': pass = false; break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction write_cellXfs(cellXfs)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\to[o.length] = (writextag('cellXfs',null));\n\tcellXfs.forEach(function(c) {\n\t\to[o.length] = (writextag('xf', null, c));\n\t});\n\to[o.length] = (\"</cellXfs>\");\n\tif(o.length === 2) return \"\";\n\to[0] = writextag('cellXfs',null, {count:o.length-2}).replace(\"/>\",\">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8 Styles CT_Stylesheet*/\nvar parse_sty_xml= /*#__PURE__*/(function make_pstyx() {\nvar numFmtRegex = /<(?:\\w+:)?numFmts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?numFmts>/;\nvar cellXfRegex = /<(?:\\w+:)?cellXfs([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?cellXfs>/;\nvar fillsRegex = /<(?:\\w+:)?fills([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fills>/;\nvar fontsRegex = /<(?:\\w+:)?fonts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fonts>/;\nvar bordersRegex = /<(?:\\w+:)?borders([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?borders>/;\n\nreturn function parse_sty_xml(data, themes, opts) {\n\tvar styles = {};\n\tif(!data) return styles;\n\tdata = data.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\t/* 18.8.39 styleSheet CT_Stylesheet */\n\tvar t;\n\n\t/* 18.8.31 numFmts CT_NumFmts ? */\n\tif((t=data.match(numFmtRegex))) parse_numFmts(t, styles, opts);\n\n\t/* 18.8.23 fonts CT_Fonts ? */\n\tif((t=data.match(fontsRegex))) parse_fonts(t, styles, themes, opts);\n\n\t/* 18.8.21 fills CT_Fills ? */\n\tif((t=data.match(fillsRegex))) parse_fills(t, styles, themes, opts);\n\n\t/* 18.8.5  borders CT_Borders ? */\n\tif((t=data.match(bordersRegex))) parse_borders(t, styles, themes, opts);\n\n\t/* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\n\t/* 18.8.8  cellStyles CT_CellStyles ? */\n\n\t/* 18.8.10 cellXfs CT_CellXfs ? */\n\tif((t=data.match(cellXfRegex))) parse_cellXfs(t, styles, opts);\n\n\t/* 18.8.15 dxfs CT_Dxfs ? */\n\t/* 18.8.42 tableStyles CT_TableStyles ? */\n\t/* 18.8.11 colors CT_Colors ? */\n\t/* 18.2.10 extLst CT_ExtensionList ? */\n\n\treturn styles;\n};\n})();\n\nfunction write_sty_xml(wb/*:Workbook*/, opts)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('styleSheet', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t'xmlns:vt': XMLNS.vt\n\t})], w;\n\tif(wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\n\to[o.length] = ('<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>');\n\to[o.length] = ('<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>');\n\to[o.length] = ('<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>');\n\to[o.length] = ('<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>');\n\tif((w = write_cellXfs(opts.cellXfs))) o[o.length] = (w);\n\to[o.length] = ('<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>');\n\to[o.length] = ('<dxfs count=\"0\"/>');\n\to[o.length] = ('<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>');\n\n\tif(o.length>2){ o[o.length] = ('</styleSheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.657 BrtFmt */\nfunction parse_BrtFmt(data, length/*:number*/) {\n\tvar numFmtId = data.read_shift(2);\n\tvar stFmtCode = parse_XLWideString(data,length-2);\n\treturn [numFmtId, stFmtCode];\n}\nfunction write_BrtFmt(i/*:number*/, f/*:string*/, o) {\n\tif(!o) o = new_buf(6 + 4 * f.length);\n\to.write_shift(2, i);\n\twrite_XLWideString(f, o);\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(o.l == null) o.l = o.length;\n\treturn out;\n}\n\n/* [MS-XLSB] 2.4.659 BrtFont TODO */\nfunction parse_BrtFont(data, length/*:number*/, opts) {\n\tvar out = ({}/*:any*/);\n\n\tout.sz = data.read_shift(2) / 20;\n\n\tvar grbit = parse_FontFlags(data, 2, opts);\n\tif(grbit.fItalic) out.italic = 1;\n\tif(grbit.fCondense) out.condense = 1;\n\tif(grbit.fExtend) out.extend = 1;\n\tif(grbit.fShadow) out.shadow = 1;\n\tif(grbit.fOutline) out.outline = 1;\n\tif(grbit.fStrikeout) out.strike = 1;\n\n\tvar bls = data.read_shift(2);\n\tif(bls === 0x02BC) out.bold = 1;\n\n\tswitch(data.read_shift(2)) {\n\t\t/* case 0: out.vertAlign = \"baseline\"; break; */\n\t\tcase 1: out.vertAlign = \"superscript\"; break;\n\t\tcase 2: out.vertAlign = \"subscript\"; break;\n\t}\n\n\tvar underline = data.read_shift(1);\n\tif(underline != 0) out.underline = underline;\n\n\tvar family = data.read_shift(1);\n\tif(family > 0) out.family = family;\n\n\tvar bCharSet = data.read_shift(1);\n\tif(bCharSet > 0) out.charset = bCharSet;\n\n\tdata.l++;\n\tout.color = parse_BrtColor(data, 8);\n\n\tswitch(data.read_shift(1)) {\n\t\t/* case 0: out.scheme = \"none\": break; */\n\t\tcase 1: out.scheme = \"major\"; break;\n\t\tcase 2: out.scheme = \"minor\"; break;\n\t}\n\n\tout.name = parse_XLWideString(data, length - 21);\n\n\treturn out;\n}\nfunction write_BrtFont(font/*:any*/, o) {\n\tif(!o) o = new_buf(25+4*32);\n\to.write_shift(2, font.sz * 20);\n\twrite_FontFlags(font, o);\n\to.write_shift(2, font.bold ? 0x02BC : 0x0190);\n\tvar sss = 0;\n\tif(font.vertAlign == \"superscript\") sss = 1;\n\telse if(font.vertAlign == \"subscript\") sss = 2;\n\to.write_shift(2, sss);\n\to.write_shift(1, font.underline || 0);\n\to.write_shift(1, font.family || 0);\n\to.write_shift(1, font.charset || 0);\n\to.write_shift(1, 0);\n\twrite_BrtColor(font.color, o);\n\tvar scheme = 0;\n\tif(font.scheme == \"major\") scheme = 1;\n\tif(font.scheme == \"minor\") scheme = 2;\n\to.write_shift(1, scheme);\n\twrite_XLWideString(font.name, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.650 BrtFill */\nvar XLSBFillPTNames = [\n\t\"none\",\n\t\"solid\",\n\t\"mediumGray\",\n\t\"darkGray\",\n\t\"lightGray\",\n\t\"darkHorizontal\",\n\t\"darkVertical\",\n\t\"darkDown\",\n\t\"darkUp\",\n\t\"darkGrid\",\n\t\"darkTrellis\",\n\t\"lightHorizontal\",\n\t\"lightVertical\",\n\t\"lightDown\",\n\t\"lightUp\",\n\t\"lightGrid\",\n\t\"lightTrellis\",\n\t\"gray125\",\n\t\"gray0625\"\n];\nvar rev_XLSBFillPTNames/*:EvertNumType*/;\n/* TODO: gradient fill representation */\nvar parse_BrtFill = parsenoop;\nfunction write_BrtFill(fill, o) {\n\tif(!o) o = new_buf(4*3 + 8*7 + 16*1);\n\tif(!rev_XLSBFillPTNames) rev_XLSBFillPTNames = (evert(XLSBFillPTNames)/*:any*/);\n\tvar fls/*:number*/ = rev_XLSBFillPTNames[fill.patternType];\n\tif(fls == null) fls = 0x28;\n\to.write_shift(4, fls);\n\tvar j = 0;\n\tif(fls != 0x28) {\n\t\t/* TODO: custom FG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\t\t/* TODO: custom BG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0);\n\t} else {\n\t\tfor(; j < 4; ++j) o.write_shift(4, 0);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0); /* TODO */\n\t\t/* iGradientType */\n\t\t/* xnumDegree */\n\t\t/* xnumFillToLeft */\n\t\t/* xnumFillToRight */\n\t\t/* xnumFillToTop */\n\t\t/* xnumFillToBottom */\n\t\t/* cNumStop */\n\t\t/* xfillGradientStop */\n\t}\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.824 BrtXF */\nfunction parse_BrtXF(data, length/*:number*/) {\n\tvar tgt = data.l + length;\n\tvar ixfeParent = data.read_shift(2);\n\tvar ifmt = data.read_shift(2);\n\tdata.l = tgt;\n\treturn {ixfe:ixfeParent, numFmtId:ifmt };\n}\nfunction write_BrtXF(data, ixfeP, o) {\n\tif(!o) o = new_buf(16);\n\to.write_shift(2, ixfeP||0);\n\to.write_shift(2, data.numFmtId||0);\n\to.write_shift(2, 0); /* iFont */\n\to.write_shift(2, 0); /* iFill */\n\to.write_shift(2, 0); /* ixBorder */\n\to.write_shift(1, 0); /* trot */\n\to.write_shift(1, 0); /* indent */\n\tvar flow = 0;\n\to.write_shift(1, flow); /* flags */\n\to.write_shift(1, 0); /* flags */\n\to.write_shift(1, 0); /* xfGrbitAtr */\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.4 Blxf TODO */\nfunction write_Blxf(data, o) {\n\tif(!o) o = new_buf(10);\n\to.write_shift(1, 0); /* dg */\n\to.write_shift(1, 0);\n\to.write_shift(4, 0); /* color */\n\to.write_shift(4, 0); /* color */\n\treturn o;\n}\n/* [MS-XLSB] 2.4.302 BrtBorder TODO */\nvar parse_BrtBorder = parsenoop;\nfunction write_BrtBorder(border, o) {\n\tif(!o) o = new_buf(51);\n\to.write_shift(1, 0); /* diagonal */\n\twrite_Blxf(null, o); /* top */\n\twrite_Blxf(null, o); /* bottom */\n\twrite_Blxf(null, o); /* left */\n\twrite_Blxf(null, o); /* right */\n\twrite_Blxf(null, o); /* diag */\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.763 BrtStyle TODO */\nfunction write_BrtStyle(style, o) {\n\tif(!o) o = new_buf(12+4*10);\n\to.write_shift(4, style.xfId);\n\to.write_shift(2, 1);\n\to.write_shift(1, +style.builtinId);\n\to.write_shift(1, 0); /* iLevel */\n\twrite_XLNullableWideString(style.name || \"\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\nfunction write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\n\tvar o = new_buf(4+256*2*4);\n\to.write_shift(4, cnt);\n\twrite_XLNullableWideString(defTableStyle, o);\n\twrite_XLNullableWideString(defPivotStyle, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction parse_sty_bin(data, themes, opts) {\n\tvar styles = {};\n\tstyles.NumberFmt = ([]/*:any*/);\n\tfor(var y in table_fmt) styles.NumberFmt[y] = table_fmt[y];\n\n\tstyles.CellXf = [];\n\tstyles.Fonts = [];\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_sty(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x002C: /* BrtFmt */\n\t\t\t\tstyles.NumberFmt[val[0]] = val[1]; SSF_load(val[1], val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x002B: /* BrtFont */\n\t\t\t\tstyles.Fonts.push(val);\n\t\t\t\tif(val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\tval.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0401: /* BrtKnownFonts */ break;\n\t\t\tcase 0x002D: /* BrtFill */\n\t\t\t\tbreak;\n\t\t\tcase 0x002E: /* BrtBorder */\n\t\t\t\tbreak;\n\t\t\tcase 0x002F: /* BrtXF */\n\t\t\t\tif(state[state.length - 1] == 0x0269 /* BrtBeginCellXFs */) {\n\t\t\t\t\tstyles.CellXf.push(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0030: /* BrtStyle */\n\t\t\tcase 0x01FB: /* BrtDXF */\n\t\t\tcase 0x023C: /* BrtMRUColor */\n\t\t\tcase 0x01DB: /* BrtIndexedColor */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0493: /* BrtDXF14 */\n\t\t\tcase 0x0836: /* BrtDXF15 */\n\t\t\tcase 0x046A: /* BrtSlicerStyleElement */\n\t\t\tcase 0x0200: /* BrtTableStyleElement */\n\t\t\tcase 0x082F: /* BrtTimelineStyleElement */\n\t\t\tcase 0x0C00: /* BrtUid */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* BrtFRTBegin */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* BrtFRTEnd */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* BrtACBegin */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* BrtACEnd */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T > 0) state.push(RT);\n\t\t\t\telse if(R.T < 0) state.pop();\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != 0x0025 /* BrtACBegin */)) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn styles;\n}\n\nfunction write_FMTS_bin(ba, NF/*:?SSFTable*/) {\n\tif(!NF) return;\n\tvar cnt = 0;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) ++cnt;\n\t});\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0267 /* BrtBeginFmts */, write_UInt32LE(cnt));\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_record(ba, 0x002C /* BrtFmt */, write_BrtFmt(i, NF[i]));\n\t});\n\twrite_record(ba, 0x0268 /* BrtEndFmts */);\n}\n\nfunction write_FONTS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0263 /* BrtBeginFonts */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002B /* BrtFont */, write_BrtFont({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Calibri\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}));\n\t/* 1*65491BrtFont [ACFONTS] */\n\twrite_record(ba, 0x0264 /* BrtEndFonts */);\n}\n\nfunction write_FILLS_bin(ba/*::, data*/) {\n\tvar cnt = 2;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x025B /* BrtBeginFills */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002D /* BrtFill */, write_BrtFill({patternType:\"none\"}));\n\twrite_record(ba, 0x002D /* BrtFill */, write_BrtFill({patternType:\"gray125\"}));\n\t/* 1*65431BrtFill */\n\twrite_record(ba, 0x025C /* BrtEndFills */);\n}\n\nfunction write_BORDERS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0265 /* BrtBeginBorders */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002E /* BrtBorder */, write_BrtBorder({}));\n\t/* 1*65430BrtBorder */\n\twrite_record(ba, 0x0266 /* BrtEndBorders */);\n}\n\nfunction write_CELLSTYLEXFS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\twrite_record(ba, 0x0272 /* BrtBeginCellStyleXFs */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002F /* BrtXF */, write_BrtXF({\n\t\tnumFmtId: 0,\n\t\tfontId:   0,\n\t\tfillId:   0,\n\t\tborderId: 0\n\t}, 0xFFFF));\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, 0x0273 /* BrtEndCellStyleXFs */);\n}\n\nfunction write_CELLXFS_bin(ba, data) {\n\twrite_record(ba, 0x0269 /* BrtBeginCellXFs */, write_UInt32LE(data.length));\n\tdata.forEach(function(c) { write_record(ba, 0x002F /* BrtXF */, write_BrtXF(c,0)); });\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, 0x026A /* BrtEndCellXFs */);\n}\n\nfunction write_STYLES_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\twrite_record(ba, 0x026B /* BrtBeginStyles */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x0030 /* BrtStyle */, write_BrtStyle({\n\t\txfId:0,\n\t\tbuiltinId:0,\n\t\tname:\"Normal\"\n\t}));\n\t/* 1*65430(BrtStyle *FRT) */\n\twrite_record(ba, 0x026C /* BrtEndStyles */);\n}\n\nfunction write_DXFS_bin(ba/*::, data*/) {\n\tvar cnt = 0;\n\n\twrite_record(ba, 0x01F9 /* BrtBeginDXFs */, write_UInt32LE(cnt));\n\t/* *2147483647(BrtDXF *FRT) */\n\twrite_record(ba, 0x01FA /* BrtEndDXFs */);\n}\n\nfunction write_TABLESTYLES_bin(ba/*::, data*/) {\n\tvar cnt = 0;\n\n\twrite_record(ba, 0x01FC /* BrtBeginTableStyles */, write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\n\t/* *TABLESTYLE */\n\twrite_record(ba, 0x01FD /* BrtEndTableStyles */);\n}\n\nfunction write_COLORPALETTE_bin(/*::ba, data*/) {\n\treturn;\n\t/* BrtBeginColorPalette [INDEXEDCOLORS] [MRUCOLORS] BrtEndColorPalette */\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction write_sty_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x0116 /* BrtBeginStyleSheet */);\n\twrite_FMTS_bin(ba, wb.SSF);\n\twrite_FONTS_bin(ba, wb);\n\twrite_FILLS_bin(ba, wb);\n\twrite_BORDERS_bin(ba, wb);\n\twrite_CELLSTYLEXFS_bin(ba, wb);\n\twrite_CELLXFS_bin(ba, opts.cellXfs);\n\twrite_STYLES_bin(ba, wb);\n\twrite_DXFS_bin(ba, wb);\n\twrite_TABLESTYLES_bin(ba, wb);\n\twrite_COLORPALETTE_bin(ba, wb);\n\t/* FRTSTYLESHEET*/\n\twrite_record(ba, 0x0117 /* BrtEndStyleSheet */);\n\treturn ba.end();\n}\n/* Even though theme layout is dk1 lt1 dk2 lt2, true order is lt1 dk1 lt2 dk2 */\nvar XLSXThemeClrScheme = [\n\t'</a:lt1>', '</a:dk1>', '</a:lt2>', '</a:dk2>',\n\t'</a:accent1>', '</a:accent2>', '</a:accent3>',\n\t'</a:accent4>', '</a:accent5>', '</a:accent6>',\n\t'</a:hlink>', '</a:folHlink>'\n];\n/* 20.1.6.2 clrScheme CT_ColorScheme */\nfunction parse_clrScheme(t, themes, opts) {\n\tthemes.themeElements.clrScheme = [];\n\tvar color = {};\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\t/* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\n\t\t\tcase '<a:clrScheme': case '</a:clrScheme>': break;\n\n\t\t\t/* 20.1.2.3.32 srgbClr CT_SRgbColor */\n\t\t\tcase '<a:srgbClr':\n\t\t\t\tcolor.rgb = y.val; break;\n\n\t\t\t/* 20.1.2.3.33 sysClr CT_SystemColor */\n\t\t\tcase '<a:sysClr':\n\t\t\t\tcolor.rgb = y.lastClr; break;\n\n\t\t\t/* 20.1.4.1.1 accent1 (Accent 1) */\n\t\t\t/* 20.1.4.1.2 accent2 (Accent 2) */\n\t\t\t/* 20.1.4.1.3 accent3 (Accent 3) */\n\t\t\t/* 20.1.4.1.4 accent4 (Accent 4) */\n\t\t\t/* 20.1.4.1.5 accent5 (Accent 5) */\n\t\t\t/* 20.1.4.1.6 accent6 (Accent 6) */\n\t\t\t/* 20.1.4.1.9 dk1 (Dark 1) */\n\t\t\t/* 20.1.4.1.10 dk2 (Dark 2) */\n\t\t\t/* 20.1.4.1.15 folHlink (Followed Hyperlink) */\n\t\t\t/* 20.1.4.1.19 hlink (Hyperlink) */\n\t\t\t/* 20.1.4.1.22 lt1 (Light 1) */\n\t\t\t/* 20.1.4.1.23 lt2 (Light 2) */\n\t\t\tcase '<a:dk1>': case '</a:dk1>':\n\t\t\tcase '<a:lt1>': case '</a:lt1>':\n\t\t\tcase '<a:dk2>': case '</a:dk2>':\n\t\t\tcase '<a:lt2>': case '</a:lt2>':\n\t\t\tcase '<a:accent1>': case '</a:accent1>':\n\t\t\tcase '<a:accent2>': case '</a:accent2>':\n\t\t\tcase '<a:accent3>': case '</a:accent3>':\n\t\t\tcase '<a:accent4>': case '</a:accent4>':\n\t\t\tcase '<a:accent5>': case '</a:accent5>':\n\t\t\tcase '<a:accent6>': case '</a:accent6>':\n\t\t\tcase '<a:hlink>': case '</a:hlink>':\n\t\t\tcase '<a:folHlink>': case '</a:folHlink>':\n\t\t\t\tif (y[0].charAt(1) === '/') {\n\t\t\t\t\tthemes.themeElements.clrScheme[XLSXThemeClrScheme.indexOf(y[0])] = color;\n\t\t\t\t\tcolor = {};\n\t\t\t\t} else {\n\t\t\t\t\tcolor.name = y[0].slice(3, y[0].length - 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault: if(opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\n\t\t}\n\t});\n}\n\n/* 20.1.4.1.18 fontScheme CT_FontScheme */\nfunction parse_fontScheme(/*::t, themes, opts*/) { }\n\n/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\nfunction parse_fmtScheme(/*::t, themes, opts*/) { }\n\nvar clrsregex = /<a:clrScheme([^>]*)>[\\s\\S]*<\\/a:clrScheme>/;\nvar fntsregex = /<a:fontScheme([^>]*)>[\\s\\S]*<\\/a:fontScheme>/;\nvar fmtsregex = /<a:fmtScheme([^>]*)>[\\s\\S]*<\\/a:fmtScheme>/;\n\n/* 20.1.6.10 themeElements CT_BaseStyles */\nfunction parse_themeElements(data, themes, opts) {\n\tthemes.themeElements = {};\n\n\tvar t;\n\n\t[\n\t\t/* clrScheme CT_ColorScheme */\n\t\t['clrScheme', clrsregex, parse_clrScheme],\n\t\t/* fontScheme CT_FontScheme */\n\t\t['fontScheme', fntsregex, parse_fontScheme],\n\t\t/* fmtScheme CT_StyleMatrix */\n\t\t['fmtScheme', fmtsregex, parse_fmtScheme]\n\t].forEach(function(m) {\n\t\tif(!(t=data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');\n\t\tm[2](t, themes, opts);\n\t});\n}\n\nvar themeltregex = /<a:themeElements([^>]*)>[\\s\\S]*<\\/a:themeElements>/;\n\n/* 14.2.7 Theme Part */\nfunction parse_theme_xml(data/*:string*/, opts) {\n\t/* 20.1.6.9 theme CT_OfficeStyleSheet */\n\tif(!data || data.length === 0) data = write_theme();\n\n\tvar t;\n\tvar themes = {};\n\n\t/* themeElements CT_BaseStyles */\n\tif(!(t=data.match(themeltregex))) throw new Error('themeElements not found in theme');\n\tparse_themeElements(t[0], themes, opts);\n\tthemes.raw = data;\n\treturn themes;\n}\n\nfunction write_theme(Themes, opts)/*:string*/ {\n\tif(opts && opts.themeXLSX) return opts.themeXLSX;\n\tif(Themes && typeof Themes.raw == \"string\") return Themes.raw;\n\tvar o = [XML_HEADER];\n\to[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\n\to[o.length] =  '<a:themeElements>';\n\n\to[o.length] =   '<a:clrScheme name=\"Office\">';\n\to[o.length] =    '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\n\to[o.length] =    '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\n\to[o.length] =    '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\n\to[o.length] =    '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\n\to[o.length] =    '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\n\to[o.length] =    '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\n\to[o.length] =    '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\n\to[o.length] =    '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\n\to[o.length] =    '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\n\to[o.length] =    '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\n\to[o.length] =    '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\n\to[o.length] =    '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\n\to[o.length] =   '</a:clrScheme>';\n\n\to[o.length] =   '<a:fontScheme name=\"Office\">';\n\to[o.length] =    '<a:majorFont>';\n\to[o.length] =     '<a:latin typeface=\"Cambria\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:majorFont>';\n\to[o.length] =    '<a:minorFont>';\n\to[o.length] =     '<a:latin typeface=\"Calibri\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:minorFont>';\n\to[o.length] =   '</a:fontScheme>';\n\n\to[o.length] =   '<a:fmtScheme name=\"Office\">';\n\to[o.length] =    '<a:fillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"1\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"0\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:fillStyleLst>';\n\to[o.length] =    '<a:lnStyleLst>';\n\to[o.length] =     '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =    '</a:lnStyleLst>';\n\to[o.length] =    '<a:effectStyleLst>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =      '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\n\to[o.length] =      '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =    '</a:effectStyleLst>';\n\to[o.length] =    '<a:bgFillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:bgFillStyleLst>';\n\to[o.length] =   '</a:fmtScheme>';\n\to[o.length] =  '</a:themeElements>';\n\n\to[o.length] =  '<a:objectDefaults>';\n\to[o.length] =   '<a:spDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:spDef>';\n\to[o.length] =   '<a:lnDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:lnDef>';\n\to[o.length] =  '</a:objectDefaults>';\n\to[o.length] =  '<a:extraClrSchemeLst/>';\n\to[o.length] = '</a:theme>';\n\treturn o.join(\"\");\n}\n/* [MS-XLS] 2.4.326 TODO: payload is a zip file */\nfunction parse_Theme(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar dwThemeVersion = blob.read_shift(4);\n\tif(dwThemeVersion === 124226) return;\n\tif(!opts.cellStyles) { blob.l = end; return; }\n\tvar data = blob.slice(blob.l);\n\tblob.l = end;\n\tvar zip; try { zip = zip_read(data, {type: \"array\"}); } catch(e) { return; }\n\tvar themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\n\tif(!themeXML) return;\n\treturn parse_theme_xml(themeXML, opts);\n}\n\n/* 2.5.49 */\nfunction parse_ColorTheme(blob/*::, length*/) { return blob.read_shift(4); }\n\n/* 2.5.155 */\nfunction parse_FullColorExt(blob/*::, length*/) {\n\tvar o = {};\n\to.xclrType = blob.read_shift(2);\n\to.nTintShade = blob.read_shift(2);\n\tswitch(o.xclrType) {\n\t\tcase 0: blob.l += 4; break;\n\t\tcase 1: o.xclrValue = parse_IcvXF(blob, 4); break;\n\t\tcase 2: o.xclrValue = parse_LongRGBA(blob, 4); break;\n\t\tcase 3: o.xclrValue = parse_ColorTheme(blob, 4); break;\n\t\tcase 4: blob.l += 4; break;\n\t}\n\tblob.l += 8;\n\treturn o;\n}\n\n/* 2.5.164 TODO: read 7 bits*/\nfunction parse_IcvXF(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* 2.5.280 */\nfunction parse_XFExtGradient(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* [MS-XLS] 2.5.108 */\nfunction parse_ExtProp(blob/*::, length*/)/*:Array<any>*/ {\n\tvar extType = blob.read_shift(2);\n\tvar cb = blob.read_shift(2) - 4;\n\tvar o = [extType];\n\tswitch(extType) {\n\t\tcase 0x04: case 0x05: case 0x07: case 0x08:\n\t\tcase 0x09: case 0x0A: case 0x0B: case 0x0D:\n\t\t\to[1] = parse_FullColorExt(blob, cb); break;\n\t\tcase 0x06: o[1] = parse_XFExtGradient(blob, cb); break;\n\t\tcase 0x0E: case 0x0F: o[1] = blob.read_shift(cb === 1 ? 1 : 2); break;\n\t\tdefault: throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\n\t}\n\treturn o;\n}\n\n/* 2.4.355 */\nfunction parse_XFExt(blob, length) {\n\tvar end = blob.l + length;\n\tblob.l += 2;\n\tvar ixfe = blob.read_shift(2);\n\tblob.l += 2;\n\tvar cexts = blob.read_shift(2);\n\tvar ext/*:AOA*/ = [];\n\twhile(cexts-- > 0) ext.push(parse_ExtProp(blob, end-blob.l));\n\treturn {ixfe:ixfe, ext:ext};\n}\n\n/* xf is an XF, see parse_XFExt for xfext */\nfunction update_xfext(xf, xfext) {\n\txfext.forEach(function(xfe) {\n\t\tswitch(xfe[0]) { /* 2.5.108 extPropData */\n\t\t\tcase 0x04: break; /* foreground color */\n\t\t\tcase 0x05: break; /* background color */\n\t\t\tcase 0x06: break; /* gradient fill */\n\t\t\tcase 0x07: break; /* top cell border color */\n\t\t\tcase 0x08: break; /* bottom cell border color */\n\t\t\tcase 0x09: break; /* left cell border color */\n\t\t\tcase 0x0a: break; /* right cell border color */\n\t\t\tcase 0x0b: break; /* diagonal cell border color */\n\t\t\tcase 0x0d: /* text color */\n\t\t\t\tbreak;\n\t\t\tcase 0x0e: break; /* font scheme */\n\t\t\tcase 0x0f: break; /* indentation level */\n\t\t}\n\t});\n}\n\nfunction parse_BrtMdtinfo(data, length) {\n  return {\n    flags: data.read_shift(4),\n    version: data.read_shift(4),\n    name: parse_XLWideString(data, length - 8)\n  };\n}\nfunction write_BrtMdtinfo(data) {\n  var o = new_buf(12 + 2 * data.name.length);\n  o.write_shift(4, data.flags);\n  o.write_shift(4, data.version);\n  write_XLWideString(data.name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtMdb(data) {\n  var out = [];\n  var cnt = data.read_shift(4);\n  while (cnt-- > 0)\n    out.push([data.read_shift(4), data.read_shift(4)]);\n  return out;\n}\nfunction write_BrtMdb(mdb) {\n  var o = new_buf(4 + 8 * mdb.length);\n  o.write_shift(4, mdb.length);\n  for (var i = 0; i < mdb.length; ++i) {\n    o.write_shift(4, mdb[i][0]);\n    o.write_shift(4, mdb[i][1]);\n  }\n  return o;\n}\nfunction write_BrtBeginEsfmd(cnt, name) {\n  var o = new_buf(8 + 2 * name.length);\n  o.write_shift(4, cnt);\n  write_XLWideString(name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtBeginEsmdb(data) {\n  data.l += 4;\n  return data.read_shift(4) != 0;\n}\nfunction write_BrtBeginEsmdb(cnt, cm) {\n  var o = new_buf(8);\n  o.write_shift(4, cnt);\n  o.write_shift(4, cm ? 1 : 0);\n  return o;\n}\nfunction parse_xlmeta_bin(data, name, _opts) {\n  var out = { Types: [], Cell: [], Value: [] };\n  var opts = _opts || {};\n  var state = [];\n  var pass = false;\n  var metatype = 2;\n  recordhopper(data, function(val, R, RT) {\n    switch (RT) {\n      case 335:\n        out.Types.push({ name: val.name });\n        break;\n      case 51:\n        val.forEach(function(r) {\n          if (metatype == 1)\n            out.Cell.push({ type: out.Types[r[0] - 1].name, index: r[1] });\n          else if (metatype == 0)\n            out.Value.push({ type: out.Types[r[0] - 1].name, index: r[1] });\n        });\n        break;\n      case 337:\n        metatype = val ? 1 : 0;\n        break;\n      case 338:\n        metatype = 2;\n        break;\n      case 35:\n        state.push(RT);\n        pass = true;\n        break;\n      case 36:\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (R.T) {\n        } else if (!pass || opts.WTF && state[state.length - 1] != 35)\n          throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\nfunction write_xlmeta_bin() {\n  var ba = buf_array();\n  write_record(ba, 332);\n  write_record(ba, 334, write_UInt32LE(1));\n  write_record(ba, 335, write_BrtMdtinfo({\n    name: \"XLDAPR\",\n    version: 12e4,\n    flags: 3496657072\n  }));\n  write_record(ba, 336);\n  write_record(ba, 339, write_BrtBeginEsfmd(1, \"XLDAPR\"));\n  write_record(ba, 52);\n  write_record(ba, 35, write_UInt32LE(514));\n  write_record(ba, 4096, write_UInt32LE(0));\n  write_record(ba, 4097, writeuint16(1));\n  write_record(ba, 36);\n  write_record(ba, 53);\n  write_record(ba, 340);\n  write_record(ba, 337, write_BrtBeginEsmdb(1, true));\n  write_record(ba, 51, write_BrtMdb([[1, 0]]));\n  write_record(ba, 338);\n  write_record(ba, 333);\n  return ba.end();\n}\nfunction parse_xlmeta_xml(data, name, opts) {\n  var out = { Types: [], Cell: [], Value: [] };\n  if (!data)\n    return out;\n  var pass = false;\n  var metatype = 2;\n  var lastmeta;\n  data.replace(tagregex, function(x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case \"<?xml\":\n        break;\n      case \"<metadata\":\n      case \"</metadata>\":\n        break;\n      case \"<metadataTypes\":\n      case \"</metadataTypes>\":\n        break;\n      case \"<metadataType\":\n        out.Types.push({ name: y.name });\n        break;\n      case \"</metadataType>\":\n        break;\n      case \"<futureMetadata\":\n        for (var j = 0; j < out.Types.length; ++j)\n          if (out.Types[j].name == y.name)\n            lastmeta = out.Types[j];\n        break;\n      case \"</futureMetadata>\":\n        break;\n      case \"<bk>\":\n        break;\n      case \"</bk>\":\n        break;\n      case \"<rc\":\n        if (metatype == 1)\n          out.Cell.push({ type: out.Types[y.t - 1].name, index: +y.v });\n        else if (metatype == 0)\n          out.Value.push({ type: out.Types[y.t - 1].name, index: +y.v });\n        break;\n      case \"</rc>\":\n        break;\n      case \"<cellMetadata\":\n        metatype = 1;\n        break;\n      case \"</cellMetadata>\":\n        metatype = 2;\n        break;\n      case \"<valueMetadata\":\n        metatype = 0;\n        break;\n      case \"</valueMetadata>\":\n        metatype = 2;\n        break;\n      case \"<extLst\":\n      case \"<extLst>\":\n      case \"</extLst>\":\n      case \"<extLst/>\":\n        break;\n      case \"<ext\":\n        pass = true;\n        break;\n      case \"</ext>\":\n        pass = false;\n        break;\n      case \"<rvb\":\n        if (!lastmeta)\n          break;\n        if (!lastmeta.offsets)\n          lastmeta.offsets = [];\n        lastmeta.offsets.push(+y.i);\n        break;\n      default:\n        if (!pass && opts.WTF)\n          throw new Error(\"unrecognized \" + y[0] + \" in metadata\");\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_xlmeta_xml() {\n  var o = [XML_HEADER];\n  o.push('<metadata xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:xlrd=\"http://schemas.microsoft.com/office/spreadsheetml/2017/richdata\" xmlns:xda=\"http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray\">\\n  <metadataTypes count=\"1\">\\n    <metadataType name=\"XLDAPR\" minSupportedVersion=\"120000\" copy=\"1\" pasteAll=\"1\" pasteValues=\"1\" merge=\"1\" splitFirst=\"1\" rowColShift=\"1\" clearFormats=\"1\" clearComments=\"1\" assign=\"1\" coerce=\"1\" cellMeta=\"1\"/>\\n  </metadataTypes>\\n  <futureMetadata name=\"XLDAPR\" count=\"1\">\\n    <bk>\\n      <extLst>\\n        <ext uri=\"{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}\">\\n          <xda:dynamicArrayProperties fDynamic=\"1\" fCollapsed=\"0\"/>\\n        </ext>\\n      </extLst>\\n    </bk>\\n  </futureMetadata>\\n  <cellMetadata count=\"1\">\\n    <bk>\\n      <rc t=\"1\" v=\"0\"/>\\n    </bk>\\n  </cellMetadata>\\n</metadata>');\n  return o.join(\"\");\n}\n/* 18.6 Calculation Chain */\nfunction parse_cc_xml(data/*::, name, opts*/)/*:Array<any>*/ {\n\tvar d = [];\n\tif(!data) return d;\n\tvar i = 1;\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\tcase '<?xml': break;\n\t\t\t/* 18.6.2  calcChain CT_CalcChain 1 */\n\t\t\tcase '<calcChain': case '<calcChain>': case '</calcChain>': break;\n\t\t\t/* 18.6.1  c CT_CalcCell 1 */\n\t\t\tcase '<c': delete y[0]; if(y.i) i = y.i; else y.i = i; d.push(y); break;\n\t\t}\n\t});\n\treturn d;\n}\n\n//function write_cc_xml(data, opts) { }\n\n/* [MS-XLSB] 2.6.4.1 */\nfunction parse_BrtCalcChainItem$(data) {\n\tvar out = {};\n\tout.i = data.read_shift(4);\n\tvar cell = {};\n\tcell.r = data.read_shift(4);\n\tcell.c = data.read_shift(4);\n\tout.r = encode_cell(cell);\n\tvar flags = data.read_shift(1);\n\tif(flags & 0x2) out.l = '1';\n\tif(flags & 0x8) out.a = '1';\n\treturn out;\n}\n\n/* 18.6 Calculation Chain */\nfunction parse_cc_bin(data, name, opts) {\n\tvar out = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_cc(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x003F: /* 'BrtCalcChainItem$' */\n\t\t\t\tout.push(val); break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn out;\n}\n\n//function write_cc_bin(data, opts) { }\n/* 18.14 Supplementary Workbook Data */\nfunction parse_xlink_xml(/*::data, rel, name:string, _opts*/) {\n\t//var opts = _opts || {};\n\t//if(opts.WTF) throw \"XLSX External Link\";\n}\n\n/* [MS-XLSB] 2.1.7.25 External Link */\nfunction parse_xlink_bin(data, rel, name/*:string*/, _opts) {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\n\tvar pass = false, end = false;\n\n\trecordhopper(data, function xlink_parse(val, R, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0167: /* 'BrtSupTabs' */\n\t\t\tcase 0x016B: /* 'BrtExternTableStart' */\n\t\t\tcase 0x016C: /* 'BrtExternTableEnd' */\n\t\t\tcase 0x016E: /* 'BrtExternRowHdr' */\n\t\t\tcase 0x016F: /* 'BrtExternCellBlank' */\n\t\t\tcase 0x0170: /* 'BrtExternCellReal' */\n\t\t\tcase 0x0171: /* 'BrtExternCellBool' */\n\t\t\tcase 0x0172: /* 'BrtExternCellError' */\n\t\t\tcase 0x0173: /* 'BrtExternCellString' */\n\t\t\tcase 0x01D8: /* 'BrtExternValueMeta' */\n\t\t\tcase 0x0241: /* 'BrtSupNameStart' */\n\t\t\tcase 0x0242: /* 'BrtSupNameValueStart' */\n\t\t\tcase 0x0243: /* 'BrtSupNameValueEnd' */\n\t\t\tcase 0x0244: /* 'BrtSupNameNum' */\n\t\t\tcase 0x0245: /* 'BrtSupNameErr' */\n\t\t\tcase 0x0246: /* 'BrtSupNameSt' */\n\t\t\tcase 0x0247: /* 'BrtSupNameNil' */\n\t\t\tcase 0x0248: /* 'BrtSupNameBool' */\n\t\t\tcase 0x0249: /* 'BrtSupNameFmla' */\n\t\t\tcase 0x024A: /* 'BrtSupNameBits' */\n\t\t\tcase 0x024B: /* 'BrtSupNameEnd' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n}\n/* 20.5 DrawingML - SpreadsheetML Drawing */\n/* 20.5.2.35 wsDr CT_Drawing */\nfunction parse_drawing(data, rels/*:any*/) {\n\tif(!data) return \"??\";\n\t/*\n\t  Chartsheet Drawing:\n\t   - 20.5.2.35 wsDr CT_Drawing\n\t    - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\n\t     - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\n\t      - 20.1.2.2.16 graphic CT_GraphicalObject\n\t       - 20.1.2.2.17 graphicData CT_GraphicalObjectData\n          - chart reference\n\t   the actual type is based on the URI of the graphicData\n\t\tTODO: handle embedded charts and other types of graphics\n\t*/\n\tvar id = (data.match(/<c:chart [^>]*r:id=\"([^\"]*)\"/)||[\"\",\"\"])[1];\n\n\treturn rels['!id'][id].Target;\n}\n\n/* L.5.5.2 SpreadsheetML Comments + VML Schema */\nvar _shapeid = 1024;\nfunction write_comments_vml(rId/*:number*/, comments) {\n\tvar csize = [21600, 21600];\n\t/* L.5.2.1.2 Path Attribute */\n\tvar bbox = [\"m0,0l0\",csize[1],csize[0],csize[1],csize[0],\"0xe\"].join(\",\");\n\tvar o = [\n\t\twritextag(\"xml\", null, { 'xmlns:v': XLMLNS.v, 'xmlns:o': XLMLNS.o, 'xmlns:x': XLMLNS.x, 'xmlns:mv': XLMLNS.mv }).replace(/\\/>/,\">\"),\n\t\twritextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {'v:ext':\"edit\", 'data':rId}), {'v:ext':\"edit\"}),\n\t\twritextag(\"v:shapetype\", [\n\t\t\twritextag(\"v:stroke\", null, {joinstyle:\"miter\"}),\n\t\t\twritextag(\"v:path\", null, {gradientshapeok:\"t\", 'o:connecttype':\"rect\"})\n\t\t].join(\"\"), {id:\"_x0000_t202\", 'o:spt':202, coordsize:csize.join(\",\"),path:bbox})\n\t];\n\twhile(_shapeid < rId * 1000) _shapeid += 1000;\n\n\tcomments.forEach(function(x) {\n\tvar c = decode_cell(x[0]);\n\tvar fillopts = /*::(*/{'color2':\"#BEFF82\", 'type':\"gradient\"}/*:: :any)*/;\n\tif(fillopts.type == \"gradient\") fillopts.angle = \"-180\";\n\tvar fillparm = fillopts.type == \"gradient\" ? writextag(\"o:fill\", null, {type:\"gradientUnscaled\", 'v:ext':\"view\"}) : null;\n\tvar fillxml = writextag('v:fill', fillparm, fillopts);\n\n\tvar shadata = ({on:\"t\", 'obscured':\"t\"}/*:any*/);\n\t++_shapeid;\n\n\to = o.concat([\n\t'<v:shape' + wxt_helper({\n\t\tid:'_x0000_s' + _shapeid,\n\t\ttype:\"#_x0000_t202\",\n\t\tstyle:\"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10\" + (x[1].hidden ? \";visibility:hidden\" : \"\") ,\n\t\tfillcolor:\"#ECFAD4\",\n\t\tstrokecolor:\"#edeaa1\"\n\t}) + '>',\n\t\tfillxml,\n\t\twritextag(\"v:shadow\", null, shadata),\n\t\twritextag(\"v:path\", null, {'o:connecttype':\"none\"}),\n\t\t'<v:textbox><div style=\"text-align:left\"></div></v:textbox>',\n\t\t'<x:ClientData ObjectType=\"Note\">',\n\t\t\t'<x:MoveWithCells/>',\n\t\t\t'<x:SizeWithCells/>',\n\t\t\t/* Part 4 19.4.2.3 Anchor (Anchor) */\n\t\t\twritetag('x:Anchor', [c.c+1, 0, c.r+1, 0, c.c+3, 20, c.r+5, 20].join(\",\")),\n\t\t\twritetag('x:AutoFill', \"False\"),\n\t\t\twritetag('x:Row', String(c.r)),\n\t\t\twritetag('x:Column', String(c.c)),\n\t\t\tx[1].hidden ? '' : '<x:Visible/>',\n\t\t'</x:ClientData>',\n\t'</v:shape>'\n\t]); });\n\to.push('</xml>');\n\treturn o.join(\"\");\n}\nfunction sheet_insert_comments(sheet, comments/*:Array<RawComment>*/, threaded/*:boolean*/, people/*:?Array<any>*/) {\n\tvar dense = Array.isArray(sheet);\n\tvar cell/*:Cell*/;\n\tcomments.forEach(function(comment) {\n\t\tvar r = decode_cell(comment.ref);\n\t\tif(dense) {\n\t\t\tif(!sheet[r.r]) sheet[r.r] = [];\n\t\t\tcell = sheet[r.r][r.c];\n\t\t} else cell = sheet[comment.ref];\n\t\tif (!cell) {\n\t\t\tcell = ({t:\"z\"}/*:any*/);\n\t\t\tif(dense) sheet[r.r][r.c] = cell;\n\t\t\telse sheet[comment.ref] = cell;\n\t\t\tvar range = safe_decode_range(sheet[\"!ref\"]||\"BDWGO1000001:A1\");\n\t\t\tif(range.s.r > r.r) range.s.r = r.r;\n\t\t\tif(range.e.r < r.r) range.e.r = r.r;\n\t\t\tif(range.s.c > r.c) range.s.c = r.c;\n\t\t\tif(range.e.c < r.c) range.e.c = r.c;\n\t\t\tvar encoded = encode_range(range);\n\t\t\tif (encoded !== sheet[\"!ref\"]) sheet[\"!ref\"] = encoded;\n\t\t}\n\n\t\tif (!cell.c) cell.c = [];\n\t\tvar o/*:Comment*/ = ({a: comment.author, t: comment.t, r: comment.r, T: threaded});\n\t\tif(comment.h) o.h = comment.h;\n\n\t\t/* threaded comments always override */\n\t\tfor(var i = cell.c.length - 1; i >= 0; --i) {\n\t\t\tif(!threaded && cell.c[i].T) return;\n\t\t\tif(threaded && !cell.c[i].T) cell.c.splice(i, 1);\n\t\t}\n\t\tif(threaded && people) for(i = 0; i < people.length; ++i) {\n\t\t\tif(o.a == people[i].id) { o.a = people[i].name || o.a; break; }\n\t\t}\n\t\tcell.c.push(o);\n\t});\n}\n\n/* 18.7 Comments */\nfunction parse_comments_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {\n\t/* 18.7.6 CT_Comments */\n\tif(data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\n\tvar authors/*:Array<string>*/ = [];\n\tvar commentList/*:Array<RawComment>*/ = [];\n\tvar authtag = data.match(/<(?:\\w+:)?authors>([\\s\\S]*)<\\/(?:\\w+:)?authors>/);\n\tif(authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar a = x.match(/<(?:\\w+:)?author[^>]*>(.*)/);\n\t\tif(a) authors.push(a[1]);\n\t});\n\tvar cmnttag = data.match(/<(?:\\w+:)?commentList>([\\s\\S]*)<\\/(?:\\w+:)?commentList>/);\n\tif(cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar cm = x.match(/<(?:\\w+:)?comment[^>]*>/);\n\t\tif(!cm) return;\n\t\tvar y = parsexmltag(cm[0]);\n\t\tvar comment/*:RawComment*/ = ({ author: y.authorId && authors[y.authorId] || \"sheetjsghost\", ref: y.ref, guid: y.guid }/*:any*/);\n\t\tvar cell = decode_cell(y.ref);\n\t\tif(opts.sheetRows && opts.sheetRows <= cell.r) return;\n\t\tvar textMatch = x.match(/<(?:\\w+:)?text>([\\s\\S]*)<\\/(?:\\w+:)?text>/);\n\t\tvar rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {r:\"\",t:\"\",h:\"\"};\n\t\tcomment.r = rt.r;\n\t\tif(rt.r == \"<t></t>\") rt.t = rt.h = \"\";\n\t\tcomment.t = (rt.t||\"\").replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\t\tif(opts.cellHTML) comment.h = rt.h;\n\t\tcommentList.push(comment);\n\t});\n\treturn commentList;\n}\n\nfunction write_comments_xml(data/*::, opts*/) {\n\tvar o = [XML_HEADER, writextag('comments', null, { 'xmlns': XMLNS_main[0] })];\n\n\tvar iauthor/*:Array<string>*/ = [];\n\to.push(\"<authors>\");\n\tdata.forEach(function(x) { x[1].forEach(function(w) { var a = escapexml(w.a);\n\t\tif(iauthor.indexOf(a) == -1) {\n\t\t\tiauthor.push(a);\n\t\t\to.push(\"<author>\" + a + \"</author>\");\n\t\t}\n\t\tif(w.T && w.ID && iauthor.indexOf(\"tc=\" + w.ID) == -1) {\n\t\t\tiauthor.push(\"tc=\" + w.ID);\n\t\t\to.push(\"<author>\" + \"tc=\" + w.ID + \"</author>\");\n\t\t}\n\t}); });\n\tif(iauthor.length == 0) { iauthor.push(\"SheetJ5\"); o.push(\"<author>SheetJ5</author>\"); }\n\to.push(\"</authors>\");\n\to.push(\"<commentList>\");\n\tdata.forEach(function(d) {\n\t\t/* 18.7.3 CT_Comment */\n\t\tvar lastauthor = 0, ts = [];\n\t\tif(d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf(\"tc=\" + d[1][0].ID);\n\t\telse d[1].forEach(function(c) {\n\t\t\tif(c.a) lastauthor = iauthor.indexOf(escapexml(c.a));\n\t\t\tts.push(c.t||\"\");\n\t\t});\n\t\to.push('<comment ref=\"' + d[0] + '\" authorId=\"' + lastauthor + '\"><text>');\n\t\tif(ts.length <= 1) o.push(writetag(\"t\", escapexml(ts[0]||\"\")));\n\t\telse {\n\t\t\t/* based on Threaded Comments -> Comments projection */\n\t\t\tvar t = \"Comment:\\n    \" + (ts[0]) + \"\\n\";\n\t\t\tfor(var i = 1; i < ts.length; ++i) t += \"Reply:\\n    \" + ts[i] + \"\\n\";\n\t\t\to.push(writetag(\"t\", escapexml(t)));\n\t\t}\n\t\to.push('</text></comment>');\n\t});\n\to.push(\"</commentList>\");\n\tif(o.length>2) { o[o.length] = ('</comments>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.17 */\nfunction parse_tcmnt_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {\n\tvar out = [];\n\tvar pass = false, comment = {}, tidx = 0;\n\tdata.replace(tagregex, function xml_tcmnt(x, idx) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 2.6.207 ThreadedComments CT_ThreadedComments */\n\t\t\tcase '<ThreadedComments': break;\n\t\t\tcase '</ThreadedComments>': break;\n\n\t\t\t/* 2.6.205 threadedComment CT_ThreadedComment */\n\t\t\tcase '<threadedComment': comment = {author: y.personId, guid: y.id, ref: y.ref, T: 1}; break;\n\t\t\tcase '</threadedComment>': if(comment.t != null) out.push(comment); break;\n\n\t\t\tcase '<text>': case '<text': tidx = idx + x.length; break;\n\t\t\tcase '</text>': comment.t = data.slice(tidx, idx).replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\"); break;\n\n\t\t\t/* 2.6.206 mentions CT_ThreadedCommentMentions TODO */\n\t\t\tcase '<mentions': case '<mentions>': pass = true; break;\n\t\t\tcase '</mentions>': pass = false; break;\n\n\t\t\t/* 2.6.202 mention CT_Mention TODO */\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break;\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n\t\t}\n\t\treturn x;\n\t});\n\treturn out;\n}\n\nfunction write_tcmnt_xml(comments, people, opts) {\n\tvar o = [XML_HEADER, writextag('ThreadedComments', null, { 'xmlns': XMLNS.TCMNT }).replace(/[\\/]>/, \">\")];\n\tcomments.forEach(function(carr) {\n\t\tvar rootid = \"\";\n\t\t(carr[1] || []).forEach(function(c, idx) {\n\t\t\tif(!c.T) { delete c.ID; return; }\n\t\t\tif(c.a && people.indexOf(c.a) == -1) people.push(c.a);\n\t\t\tvar tcopts = {\n\t\t\t\tref: carr[0],\n\t\t\t\tid: \"{54EE7951-7262-4200-6969-\" + (\"000000000000\" + opts.tcid++).slice(-12) + \"}\"\n\t\t\t};\n\t\t\tif(idx == 0) rootid = tcopts.id;\n\t\t\telse tcopts.parentId = rootid;\n\t\t\tc.ID = tcopts.id;\n\t\t\tif(c.a) tcopts.personId = \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + people.indexOf(c.a)).slice(-12) + \"}\";\n\t\t\to.push(writextag('threadedComment', writetag('text', c.t||\"\"), tcopts));\n\t\t});\n\t});\n\to.push('</ThreadedComments>');\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.18 */\nfunction parse_people_xml(data/*:string*/, opts) {\n\tvar out = [];\n\tvar pass = false;\n\tdata.replace(tagregex, function xml_tcmnt(x) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 2.4.85 personList CT_PersonList */\n\t\t\tcase '<personList': break;\n\t\t\tcase '</personList>': break;\n\n\t\t\t/* 2.6.203 person CT_Person TODO: providers */\n\t\t\tcase '<person': out.push({name: y.displayname, id: y.id }); break;\n\t\t\tcase '</person>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break;\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n\t\t}\n\t\treturn x;\n\t});\n\treturn out;\n}\nfunction write_people_xml(people/*, opts*/) {\n\tvar o = [XML_HEADER, writextag('personList', null, {\n\t\t'xmlns': XMLNS.TCMNT,\n\t\t'xmlns:x': XMLNS_main[0]\n\t}).replace(/[\\/]>/, \">\")];\n\tpeople.forEach(function(person, idx) {\n\t\to.push(writextag('person', null, {\n\t\t\tdisplayName: person,\n\t\t\tid: \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + idx).slice(-12) + \"}\",\n\t\t\tuserId: person,\n\t\t\tproviderId: \"None\"\n\t\t}));\n\t});\n\to.push(\"</personList>\");\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.28 BrtBeginComment */\nfunction parse_BrtBeginComment(data) {\n\tvar out = {};\n\tout.iauthor = data.read_shift(4);\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tout.rfx = rfx.s;\n\tout.ref = encode_cell(rfx.s);\n\tdata.l += 16; /*var guid = parse_GUID(data); */\n\treturn out;\n}\nfunction write_BrtBeginComment(data, o) {\n\tif(o == null) o = new_buf(36);\n\to.write_shift(4, data[1].iauthor);\n\twrite_UncheckedRfX((data[0]/*:any*/), o);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.327 BrtCommentAuthor */\nvar parse_BrtCommentAuthor = parse_XLWideString;\nfunction write_BrtCommentAuthor(data) { return write_XLWideString(data.slice(0, 54)); }\n\n/* [MS-XLSB] 2.1.7.8 Comments */\nfunction parse_comments_bin(data, opts)/*:Array<RawComment>*/ {\n\tvar out/*:Array<RawComment>*/ = [];\n\tvar authors/*:Array<string>*/ = [];\n\tvar c = {};\n\tvar pass = false;\n\trecordhopper(data, function hopper_cmnt(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x0278: /* 'BrtCommentAuthor' */\n\t\t\t\tauthors.push(val); break;\n\t\t\tcase 0x027B: /* 'BrtBeginComment' */\n\t\t\t\tc = val; break;\n\t\t\tcase 0x027D: /* 'BrtCommentText' */\n\t\t\t\tc.t = val.t; c.h = val.h; c.r = val.r; break;\n\t\t\tcase 0x027C: /* 'BrtEndComment' */\n\t\t\t\tc.author = authors[c.iauthor];\n\t\t\t\tdelete (c/*:any*/).iauthor;\n\t\t\t\tif(opts.sheetRows && c.rfx && opts.sheetRows <= c.rfx.r) break;\n\t\t\t\tif(!c.t) c.t = \"\";\n\t\t\t\tdelete c.rfx; out.push(c); break;\n\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */ break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */ break;\n\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn out;\n}\n\nfunction write_comments_bin(data/*::, opts*/) {\n\tvar ba = buf_array();\n\tvar iauthor/*:Array<string>*/ = [];\n\twrite_record(ba, 0x0274 /* BrtBeginComments */);\n\n\twrite_record(ba, 0x0276 /* BrtBeginCommentAuthors */);\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tif(iauthor.indexOf(c.a) > -1) return;\n\t\t\tiauthor.push(c.a.slice(0,54));\n\t\t\twrite_record(ba, 0x0278 /* BrtCommentAuthor */, write_BrtCommentAuthor(c.a));\n\t\t});\n\t});\n\twrite_record(ba, 0x0277 /* BrtEndCommentAuthors */);\n\n\twrite_record(ba, 0x0279 /* BrtBeginCommentList */);\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tc.iauthor = iauthor.indexOf(c.a);\n\t\t\tvar range = {s:decode_cell(comment[0]),e:decode_cell(comment[0])};\n\t\t\twrite_record(ba, 0x027B /* BrtBeginComment */, write_BrtBeginComment([range, c]));\n\t\t\tif(c.t && c.t.length > 0) write_record(ba, 0x027D /* BrtCommentText */, write_BrtCommentText(c));\n\t\t\twrite_record(ba, 0x027C /* BrtEndComment */);\n\t\t\tdelete c.iauthor;\n\t\t});\n\t});\n\twrite_record(ba, 0x027A /* BrtEndCommentList */);\n\n\twrite_record(ba, 0x0275 /* BrtEndComments */);\n\treturn ba.end();\n}\nvar CT_VBA = \"application/vnd.ms-office.vbaProject\";\nfunction make_vba_xls(cfb) {\n  var newcfb = CFB.utils.cfb_new({ root: \"R\" });\n  cfb.FullPaths.forEach(function(p, i) {\n    if (p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/))\n      return;\n    var newpath = p.replace(/^[^\\/]*/, \"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\n    CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\n  });\n  return CFB.write(newcfb);\n}\nfunction fill_vba_xls(cfb, vba) {\n  vba.FullPaths.forEach(function(p, i) {\n    if (i == 0)\n      return;\n    var newpath = p.replace(/[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\n    if (newpath.slice(-1) !== \"/\")\n      CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\n  });\n}\nvar VBAFMTS = [\"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\"];\n/* macro and dialog sheet stubs */\nfunction parse_ds_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }\nfunction parse_ds_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }\nfunction parse_ms_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }\nfunction parse_ms_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }\n/* TODO: it will be useful to parse the function str */\nvar rc_to_a1 = /*#__PURE__*/(function(){\n\tvar rcregex = /(^|[^A-Za-z_])R(\\[?-?\\d+\\]|[1-9]\\d*|)C(\\[?-?\\d+\\]|[1-9]\\d*|)(?![A-Za-z0-9_])/g;\n\tvar rcbase/*:Cell*/ = ({r:0,c:0}/*:any*/);\n\tfunction rcfunc($$,$1,$2,$3) {\n\t\tvar cRel = false, rRel = false;\n\n\t\tif($2.length == 0) rRel = true;\n\t\telse if($2.charAt(0) == \"[\") { rRel = true; $2 = $2.slice(1, -1); }\n\n\t\tif($3.length == 0) cRel = true;\n\t\telse if($3.charAt(0) == \"[\") { cRel = true; $3 = $3.slice(1, -1); }\n\n\t\tvar R = $2.length>0?parseInt($2,10)|0:0, C = $3.length>0?parseInt($3,10)|0:0;\n\n\t\tif(cRel) C += rcbase.c; else --C;\n\t\tif(rRel) R += rcbase.r; else --R;\n\t\treturn $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\n\t}\n\treturn function rc_to_a1(fstr/*:string*/, base/*:Cell*/)/*:string*/ {\n\t\trcbase = base;\n\t\treturn fstr.replace(rcregex, rcfunc);\n\t};\n})();\n\nvar crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})(?![_.\\(A-Za-z0-9])/g;\nvar a1_to_rc = /*#__PURE__*/(function(){\n\treturn function a1_to_rc(fstr/*:string*/, base/*:CellAddress*/) {\n\t\treturn fstr.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\t\tvar c = decode_col($3) - ($2 ? 0 : base.c);\n\t\t\tvar r = decode_row($5) - ($4 ? 0 : base.r);\n\t\t\tvar R = (r == 0 ? \"\" : !$4 ? \"[\" + r + \"]\" : (r+1));\n\t\t\tvar C = (c == 0 ? \"\" : !$2 ? \"[\" + c + \"]\" : (c+1));\n\t\t\treturn $1 + \"R\" + R + \"C\" + C;\n\t\t});\n\t};\n})();\n\n/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\nfunction shift_formula_str(f/*:string*/, delta/*:Cell*/)/*:string*/ {\n\treturn f.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\treturn $1+($2==\"$\" ? $2+$3 : encode_col(decode_col($3)+delta.c))+($4==\"$\" ? $4+$5 : encode_row(decode_row($5) + delta.r));\n\t});\n}\n\nfunction shift_formula_xlsx(f/*:string*/, range/*:string*/, cell/*:string*/)/*:string*/ {\n\tvar r = decode_range(range), s = r.s, c = decode_cell(cell);\n\tvar delta = {r:c.r - s.r, c:c.c - s.c};\n\treturn shift_formula_str(f, delta);\n}\n\n/* TODO: parse formula */\nfunction fuzzyfmla(f/*:string*/)/*:boolean*/ {\n\tif(f.length == 1) return false;\n\treturn true;\n}\n\nfunction _xlfn(f/*:string*/)/*:string*/ {\n\treturn f.replace(/_xlfn\\./g,\"\");\n}\nfunction parseread1(blob) { blob.l+=1; return; }\n\n/* [MS-XLS] 2.5.51 */\nfunction parse_ColRelU(blob, length) {\n\tvar c = blob.read_shift(length == 1 ? 1 : 2);\n\treturn [c & 0x3FFF, (c >> 14) & 1, (c >> 15) & 1];\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\nfunction parse_RgceArea(blob, length, opts) {\n\tvar w = 2;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob, length, opts);\n\t\telse if(opts.biff == 12) w = 4;\n\t}\n\tvar r=blob.read_shift(w), R=blob.read_shift(w);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n/* BIFF 2-5 encodes flags in the row field */\nfunction parse_RgceArea_BIFF2(blob/*::, length, opts*/) {\n\tvar r=parse_ColRelU(blob, 2), R=parse_ColRelU(blob, 2);\n\tvar c=blob.read_shift(1);\n\tvar C=blob.read_shift(1);\n\treturn { s:{r:r[0], c:c, cRel:r[1], rRel:r[2]}, e:{r:R[0], c:C, cRel:R[1], rRel:R[2]} };\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\nfunction parse_RgceAreaRel(blob, length, opts) {\n\tif(opts.biff < 8) return parse_RgceArea_BIFF2(blob, length, opts);\n\tvar r=blob.read_shift(opts.biff == 12 ? 4 : 2), R=blob.read_shift(opts.biff == 12 ? 4 : 2);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n\n/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\nfunction parse_RgceLoc(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\n\tvar c = parse_ColRelU(blob, 2);\n\treturn {r:r, c:c[0], cRel:c[1], rRel:c[2]};\n}\nfunction parse_RgceLoc_BIFF2(blob/*::, length, opts*/) {\n\tvar r = parse_ColRelU(blob, 2);\n\tvar c = blob.read_shift(1);\n\treturn {r:r[0], c:c, cRel:r[1], rRel:r[2]};\n}\n\n/* [MS-XLS] 2.5.198.107, 2.5.47 */\nfunction parse_RgceElfLoc(blob/*::, length, opts*/) {\n\tvar r = blob.read_shift(2);\n\tvar c = blob.read_shift(2);\n\treturn {r:r, c:c & 0xFF, fQuoted:!!(c & 0x4000), cRel:c>>15, rRel:c>>15 };\n}\n\n/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\nfunction parse_RgceLocRel(blob, length, opts) {\n\tvar biff = opts && opts.biff ? opts.biff : 8;\n\tif(biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(biff >= 12 ? 4 : 2);\n\tvar cl = blob.read_shift(2);\n\tvar cRel = (cl & 0x4000) >> 14, rRel = (cl & 0x8000) >> 15;\n\tcl &= 0x3FFF;\n\tif(rRel == 1) while(r > 0x7FFFF) r -= 0x100000;\n\tif(cRel == 1) while(cl > 0x1FFF) cl = cl - 0x4000;\n\treturn {r:r,c:cl,cRel:cRel,rRel:rRel};\n}\nfunction parse_RgceLocRel_BIFF2(blob/*::, length:number, opts*/) {\n\tvar rl = blob.read_shift(2);\n\tvar c = blob.read_shift(1);\n\tvar rRel = (rl & 0x8000) >> 15, cRel = (rl & 0x4000) >> 14;\n\trl &= 0x3FFF;\n\tif(rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\n\tif(cRel == 1 && c >= 0x80) c = c - 0x100;\n\treturn {r:rl,c:c,cRel:cRel,rRel:rRel};\n}\n\n/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\nfunction parse_PtgArea(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\nfunction parse_PtgArea3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2, 'i');\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tvar area = parse_RgceArea(blob, w, opts);\n\treturn [type, ixti, area];\n}\n\n/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\nfunction parse_PtgAreaErr(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts && (opts.biff > 8) ? 12 : (opts.biff < 8 ? 6 : 8);\n\treturn [type];\n}\n/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\nfunction parse_PtgAreaErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\nfunction parse_PtgAreaN(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceAreaRel(blob, length - 1, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\nfunction parse_PtgArray(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\nfunction parse_PtgAttrBaxcel(blob) {\n\tvar bitSemi = blob[blob.l+1] & 0x01; /* 1 = volatile */\n\tvar bitBaxcel = 1;\n\tblob.l += 4;\n\treturn [bitSemi, bitBaxcel];\n}\n\n/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\nfunction parse_PtgAttrChoose(blob, length, opts)/*:Array<number>*/ {\n\tblob.l +=2;\n\tvar offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar o/*:Array<number>*/ = [];\n\t/* offset is 1 less than the number of elements */\n\tfor(var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\nfunction parse_PtgAttrGoto(blob, length, opts) {\n\tvar bitGoto = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\nfunction parse_PtgAttrIf(blob, length, opts) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLSB] 2.5.97.28 */\nfunction parse_PtgAttrIfError(blob) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(2)];\n}\n\n/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\nfunction parse_PtgAttrSemi(blob, length, opts) {\n\tvar bitSemi = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += opts && opts.biff == 2 ? 3 : 4;\n\treturn [bitSemi];\n}\n\n/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\nfunction parse_PtgAttrSpaceType(blob/*::, length*/) {\n\tvar type = blob.read_shift(1), cch = blob.read_shift(1);\n\treturn [type, cch];\n}\n\n/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\nfunction parse_PtgAttrSpace(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\nfunction parse_PtgAttrSpaceSemi(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\nfunction parse_PtgRef(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLoc(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\nfunction parse_PtgRefN(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLocRel(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\nfunction parse_PtgRef3d(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tif(opts && opts.biff == 5) blob.l += 12;\n\tvar loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\n\treturn [type, ixti, loc];\n}\n\n\n/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\nfunction parse_PtgFunc(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\n\treturn [FtabArgc[iftab], Ftab[iftab], type];\n}\n/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\nfunction parse_PtgFuncVar(blob, length, opts) {\n\tvar type = blob[blob.l++];\n\tvar cparams = blob.read_shift(1), tab = opts && opts.biff <= 3 ? [(type == 0x58 ? -1 : 0), blob.read_shift(1)]: parsetab(blob);\n\treturn [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\n}\n\nfunction parsetab(blob) {\n\treturn [blob[blob.l+1]>>7, blob.read_shift(2) & 0x7FFF];\n}\n\n/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\nfunction parse_PtgAttrSum(blob, length, opts) {\n\tblob.l += opts && opts.biff == 2 ? 3 : 4; return;\n}\n\n/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\nfunction parse_PtgExp(blob, length, opts) {\n\tblob.l++;\n\tif(opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\n\tvar row = blob.read_shift(2);\n\tvar col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [row, col];\n}\n\n/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\nfunction parse_PtgErr(blob) { blob.l++; return BErr[blob.read_shift(1)]; }\n\n/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\nfunction parse_PtgInt(blob) { blob.l++; return blob.read_shift(2); }\n\n/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\nfunction parse_PtgBool(blob) { blob.l++; return blob.read_shift(1)!==0;}\n\n/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\nfunction parse_PtgNum(blob) { blob.l++; return parse_Xnum(blob, 8); }\n\n/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\nfunction parse_PtgStr(blob, length, opts) { blob.l++; return parse_ShortXLUnicodeString(blob, length-1, opts); }\n\n/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\n/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\nfunction parse_SerAr(blob, biff/*:number*/) {\n\tvar val = [blob.read_shift(1)];\n\tif(biff == 12) switch(val[0]) {\n\t\tcase 0x02: val[0] = 0x04; break; /* SerBool */\n\t\tcase 0x04: val[0] = 0x10; break; /* SerErr */\n\t\tcase 0x00: val[0] = 0x01; break; /* SerNum */\n\t\tcase 0x01: val[0] = 0x02; break; /* SerStr */\n\t}\n\tswitch(val[0]) {\n\t\tcase 0x04: /* SerBool -- boolean */\n\t\t\tval[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\n\t\t\tif(biff != 12) blob.l += 7; break;\n\t\tcase 0x25: /* appears to be an alias */\n\t\tcase 0x10: /* SerErr -- error */\n\t\t\tval[1] = BErr[blob[blob.l]];\n\t\t\tblob.l += ((biff == 12) ? 4 : 8); break;\n\t\tcase 0x00: /* SerNil -- honestly, I'm not sure how to reproduce this */\n\t\t\tblob.l += 8; break;\n\t\tcase 0x01: /* SerNum -- Xnum */\n\t\t\tval[1] = parse_Xnum(blob, 8); break;\n\t\tcase 0x02: /* SerStr -- XLUnicodeString (<256 chars) */\n\t\t\tval[1] = parse_XLUnicodeString2(blob, 0, {biff:biff > 0 && biff < 8 ? 2 : biff}); break;\n\t\tdefault: throw new Error(\"Bad SerAr: \" + val[0]); /* Unreachable */\n\t}\n\treturn val;\n}\n\n/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\nfunction parse_PtgExtraMem(blob, cce, opts) {\n\tvar count = blob.read_shift((opts.biff == 12) ? 4 : 2);\n\tvar out/*:Array<Range>*/ = [];\n\tfor(var i = 0; i != count; ++i) out.push(((opts.biff == 12) ? parse_UncheckedRfX : parse_Ref8U)(blob, 8));\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\nfunction parse_PtgExtraArray(blob, length, opts) {\n\tvar rows = 0, cols = 0;\n\tif(opts.biff == 12) {\n\t\trows = blob.read_shift(4); // DRw\n\t\tcols = blob.read_shift(4); // DCol\n\t} else {\n\t\tcols = 1 + blob.read_shift(1); //DColByteU\n\t\trows = 1 + blob.read_shift(2); //DRw\n\t}\n\tif(opts.biff >= 2 && opts.biff < 8) { --rows; if(--cols == 0) cols = 0x100; }\n\t// $FlowIgnore\n\tfor(var i = 0, o/*:Array<Array<any>>*/ = []; i != rows && (o[i] = []); ++i)\n\t\tfor(var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\nfunction parse_PtgName(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar w = (!opts || (opts.biff >= 8)) ? 4 : 2;\n\tvar nameindex = blob.read_shift(w);\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l += 5; break;\n\t\tcase 3: case 4: blob.l += 8; break;\n\t\tcase 5: blob.l += 12; break;\n\t}\n\treturn [type, 0, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\nfunction parse_PtgNameX(blob, length, opts) {\n\tif(opts.biff == 5) return parse_PtgNameX_BIFF5(blob, length, opts);\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tvar nameindex = blob.read_shift(4);\n\treturn [type, ixti, nameindex];\n}\nfunction parse_PtgNameX_BIFF5(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2, 'i'); // XtiIndex\n\tblob.l += 8;\n\tvar nameindex = blob.read_shift(2);\n\tblob.l += 12;\n\treturn [type, ixti, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\nfunction parse_PtgMemArea(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += (opts && opts.biff == 2 ? 3 : 4);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\nfunction parse_PtgMemFunc(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n\n/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\nfunction parse_PtgRefErr(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += 4;\n\tif(opts.biff < 8) blob.l--;\n\tif(opts.biff == 12) blob.l += 2;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\nfunction parse_PtgRefErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 4;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: w = 15; break;\n\t\tcase 12: w = 6; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\nvar parse_PtgMemErr = parsenoop;\n/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\nvar parse_PtgMemNoMem = parsenoop;\n/* [MS-XLS] 2.5.198.92 */\nvar parse_PtgTbl = parsenoop;\n\nfunction parse_PtgElfLoc(blob, length, opts) {\n\tblob.l += 2;\n\treturn [parse_RgceElfLoc(blob, 4, opts)];\n}\nfunction parse_PtgElfNoop(blob/*::, length, opts*/) {\n\tblob.l += 6;\n\treturn [];\n}\n/* [MS-XLS] 2.5.198.46 */\nvar parse_PtgElfCol = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.47 */\nvar parse_PtgElfColS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.48 */\nvar parse_PtgElfColSV = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.49 */\nvar parse_PtgElfColV = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.50 */\nfunction parse_PtgElfLel(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\treturn [parseuint16(blob), blob.read_shift(2) & 0x01];\n}\n/* [MS-XLS] 2.5.198.51 */\nvar parse_PtgElfRadical = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.52 */\nvar parse_PtgElfRadicalLel = parse_PtgElfLel;\n/* [MS-XLS] 2.5.198.53 */\nvar parse_PtgElfRadicalS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.54 */\nvar parse_PtgElfRw = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.55 */\nvar parse_PtgElfRwV = parse_PtgElfLoc;\n\n/* [MS-XLSB] 2.5.97.52 TODO */\nvar PtgListRT = [\n\t\"Data\",\n\t\"All\",\n\t\"Headers\",\n\t\"??\",\n\t\"?Data2\",\n\t\"??\",\n\t\"?DataHeaders\",\n\t\"??\",\n\t\"Totals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?DataTotals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?Current\"\n];\nfunction parse_PtgList(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\tvar ixti = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tvar idx = blob.read_shift(4);\n\tvar c = blob.read_shift(2);\n\tvar C = blob.read_shift(2);\n\tvar rt = PtgListRT[(flags >> 2) & 0x1F];\n\treturn {ixti: ixti, coltype:(flags&0x3), rt:rt, idx:idx, c:c, C:C};\n}\n/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\nfunction parse_PtgSxName(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\treturn [blob.read_shift(4)];\n}\n\n/* [XLS] old spec */\nfunction parse_PtgSheet(blob, length, opts) {\n\tblob.l += 5;\n\tblob.l += 2;\n\tblob.l += (opts.biff == 2 ? 1 : 4);\n\treturn [\"PTGSHEET\"];\n}\nfunction parse_PtgEndSheet(blob, length, opts) {\n\tblob.l += (opts.biff == 2 ? 4 : 5);\n\treturn [\"PTGENDSHEET\"];\n}\nfunction parse_PtgMemAreaN(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgMemNoMemN(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgAttrNoop(blob/*::, length, opts*/) {\n\tblob.l += 4;\n\treturn [0, 0];\n}\n\n/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\nvar PtgTypes = {\n\t/*::[*/0x01/*::]*/: { n:'PtgExp', f:parse_PtgExp },\n\t/*::[*/0x02/*::]*/: { n:'PtgTbl', f:parse_PtgTbl },\n\t/*::[*/0x03/*::]*/: { n:'PtgAdd', f:parseread1 },\n\t/*::[*/0x04/*::]*/: { n:'PtgSub', f:parseread1 },\n\t/*::[*/0x05/*::]*/: { n:'PtgMul', f:parseread1 },\n\t/*::[*/0x06/*::]*/: { n:'PtgDiv', f:parseread1 },\n\t/*::[*/0x07/*::]*/: { n:'PtgPower', f:parseread1 },\n\t/*::[*/0x08/*::]*/: { n:'PtgConcat', f:parseread1 },\n\t/*::[*/0x09/*::]*/: { n:'PtgLt', f:parseread1 },\n\t/*::[*/0x0A/*::]*/: { n:'PtgLe', f:parseread1 },\n\t/*::[*/0x0B/*::]*/: { n:'PtgEq', f:parseread1 },\n\t/*::[*/0x0C/*::]*/: { n:'PtgGe', f:parseread1 },\n\t/*::[*/0x0D/*::]*/: { n:'PtgGt', f:parseread1 },\n\t/*::[*/0x0E/*::]*/: { n:'PtgNe', f:parseread1 },\n\t/*::[*/0x0F/*::]*/: { n:'PtgIsect', f:parseread1 },\n\t/*::[*/0x10/*::]*/: { n:'PtgUnion', f:parseread1 },\n\t/*::[*/0x11/*::]*/: { n:'PtgRange', f:parseread1 },\n\t/*::[*/0x12/*::]*/: { n:'PtgUplus', f:parseread1 },\n\t/*::[*/0x13/*::]*/: { n:'PtgUminus', f:parseread1 },\n\t/*::[*/0x14/*::]*/: { n:'PtgPercent', f:parseread1 },\n\t/*::[*/0x15/*::]*/: { n:'PtgParen', f:parseread1 },\n\t/*::[*/0x16/*::]*/: { n:'PtgMissArg', f:parseread1 },\n\t/*::[*/0x17/*::]*/: { n:'PtgStr', f:parse_PtgStr },\n\t/*::[*/0x1A/*::]*/: { n:'PtgSheet', f:parse_PtgSheet },\n\t/*::[*/0x1B/*::]*/: { n:'PtgEndSheet', f:parse_PtgEndSheet },\n\t/*::[*/0x1C/*::]*/: { n:'PtgErr', f:parse_PtgErr },\n\t/*::[*/0x1D/*::]*/: { n:'PtgBool', f:parse_PtgBool },\n\t/*::[*/0x1E/*::]*/: { n:'PtgInt', f:parse_PtgInt },\n\t/*::[*/0x1F/*::]*/: { n:'PtgNum', f:parse_PtgNum },\n\t/*::[*/0x20/*::]*/: { n:'PtgArray', f:parse_PtgArray },\n\t/*::[*/0x21/*::]*/: { n:'PtgFunc', f:parse_PtgFunc },\n\t/*::[*/0x22/*::]*/: { n:'PtgFuncVar', f:parse_PtgFuncVar },\n\t/*::[*/0x23/*::]*/: { n:'PtgName', f:parse_PtgName },\n\t/*::[*/0x24/*::]*/: { n:'PtgRef', f:parse_PtgRef },\n\t/*::[*/0x25/*::]*/: { n:'PtgArea', f:parse_PtgArea },\n\t/*::[*/0x26/*::]*/: { n:'PtgMemArea', f:parse_PtgMemArea },\n\t/*::[*/0x27/*::]*/: { n:'PtgMemErr', f:parse_PtgMemErr },\n\t/*::[*/0x28/*::]*/: { n:'PtgMemNoMem', f:parse_PtgMemNoMem },\n\t/*::[*/0x29/*::]*/: { n:'PtgMemFunc', f:parse_PtgMemFunc },\n\t/*::[*/0x2A/*::]*/: { n:'PtgRefErr', f:parse_PtgRefErr },\n\t/*::[*/0x2B/*::]*/: { n:'PtgAreaErr', f:parse_PtgAreaErr },\n\t/*::[*/0x2C/*::]*/: { n:'PtgRefN', f:parse_PtgRefN },\n\t/*::[*/0x2D/*::]*/: { n:'PtgAreaN', f:parse_PtgAreaN },\n\t/*::[*/0x2E/*::]*/: { n:'PtgMemAreaN', f:parse_PtgMemAreaN },\n\t/*::[*/0x2F/*::]*/: { n:'PtgMemNoMemN', f:parse_PtgMemNoMemN },\n\t/*::[*/0x39/*::]*/: { n:'PtgNameX', f:parse_PtgNameX },\n\t/*::[*/0x3A/*::]*/: { n:'PtgRef3d', f:parse_PtgRef3d },\n\t/*::[*/0x3B/*::]*/: { n:'PtgArea3d', f:parse_PtgArea3d },\n\t/*::[*/0x3C/*::]*/: { n:'PtgRefErr3d', f:parse_PtgRefErr3d },\n\t/*::[*/0x3D/*::]*/: { n:'PtgAreaErr3d', f:parse_PtgAreaErr3d },\n\t/*::[*/0xFF/*::]*/: {}\n};\n/* These are duplicated in the PtgTypes table */\nvar PtgDupes = {\n\t/*::[*/0x40/*::]*/: 0x20, /*::[*/0x60/*::]*/: 0x20,\n\t/*::[*/0x41/*::]*/: 0x21, /*::[*/0x61/*::]*/: 0x21,\n\t/*::[*/0x42/*::]*/: 0x22, /*::[*/0x62/*::]*/: 0x22,\n\t/*::[*/0x43/*::]*/: 0x23, /*::[*/0x63/*::]*/: 0x23,\n\t/*::[*/0x44/*::]*/: 0x24, /*::[*/0x64/*::]*/: 0x24,\n\t/*::[*/0x45/*::]*/: 0x25, /*::[*/0x65/*::]*/: 0x25,\n\t/*::[*/0x46/*::]*/: 0x26, /*::[*/0x66/*::]*/: 0x26,\n\t/*::[*/0x47/*::]*/: 0x27, /*::[*/0x67/*::]*/: 0x27,\n\t/*::[*/0x48/*::]*/: 0x28, /*::[*/0x68/*::]*/: 0x28,\n\t/*::[*/0x49/*::]*/: 0x29, /*::[*/0x69/*::]*/: 0x29,\n\t/*::[*/0x4A/*::]*/: 0x2A, /*::[*/0x6A/*::]*/: 0x2A,\n\t/*::[*/0x4B/*::]*/: 0x2B, /*::[*/0x6B/*::]*/: 0x2B,\n\t/*::[*/0x4C/*::]*/: 0x2C, /*::[*/0x6C/*::]*/: 0x2C,\n\t/*::[*/0x4D/*::]*/: 0x2D, /*::[*/0x6D/*::]*/: 0x2D,\n\t/*::[*/0x4E/*::]*/: 0x2E, /*::[*/0x6E/*::]*/: 0x2E,\n\t/*::[*/0x4F/*::]*/: 0x2F, /*::[*/0x6F/*::]*/: 0x2F,\n\t/*::[*/0x58/*::]*/: 0x22, /*::[*/0x78/*::]*/: 0x22,\n\t/*::[*/0x59/*::]*/: 0x39, /*::[*/0x79/*::]*/: 0x39,\n\t/*::[*/0x5A/*::]*/: 0x3A, /*::[*/0x7A/*::]*/: 0x3A,\n\t/*::[*/0x5B/*::]*/: 0x3B, /*::[*/0x7B/*::]*/: 0x3B,\n\t/*::[*/0x5C/*::]*/: 0x3C, /*::[*/0x7C/*::]*/: 0x3C,\n\t/*::[*/0x5D/*::]*/: 0x3D, /*::[*/0x7D/*::]*/: 0x3D\n};\n\nvar Ptg18 = {\n\t/*::[*/0x01/*::]*/: { n:'PtgElfLel', f:parse_PtgElfLel },\n\t/*::[*/0x02/*::]*/: { n:'PtgElfRw', f:parse_PtgElfRw },\n\t/*::[*/0x03/*::]*/: { n:'PtgElfCol', f:parse_PtgElfCol },\n\t/*::[*/0x06/*::]*/: { n:'PtgElfRwV', f:parse_PtgElfRwV },\n\t/*::[*/0x07/*::]*/: { n:'PtgElfColV', f:parse_PtgElfColV },\n\t/*::[*/0x0A/*::]*/: { n:'PtgElfRadical', f:parse_PtgElfRadical },\n\t/*::[*/0x0B/*::]*/: { n:'PtgElfRadicalS', f:parse_PtgElfRadicalS },\n\t/*::[*/0x0D/*::]*/: { n:'PtgElfColS', f:parse_PtgElfColS },\n\t/*::[*/0x0F/*::]*/: { n:'PtgElfColSV', f:parse_PtgElfColSV },\n\t/*::[*/0x10/*::]*/: { n:'PtgElfRadicalLel', f:parse_PtgElfRadicalLel },\n\t/*::[*/0x19/*::]*/: { n:'PtgList', f:parse_PtgList },\n\t/*::[*/0x1D/*::]*/: { n:'PtgSxName', f:parse_PtgSxName },\n\t/*::[*/0xFF/*::]*/: {}\n};\nvar Ptg19 = {\n\t/*::[*/0x00/*::]*/: { n:'PtgAttrNoop', f:parse_PtgAttrNoop },\n\t/*::[*/0x01/*::]*/: { n:'PtgAttrSemi', f:parse_PtgAttrSemi },\n\t/*::[*/0x02/*::]*/: { n:'PtgAttrIf', f:parse_PtgAttrIf },\n\t/*::[*/0x04/*::]*/: { n:'PtgAttrChoose', f:parse_PtgAttrChoose },\n\t/*::[*/0x08/*::]*/: { n:'PtgAttrGoto', f:parse_PtgAttrGoto },\n\t/*::[*/0x10/*::]*/: { n:'PtgAttrSum', f:parse_PtgAttrSum },\n\t/*::[*/0x20/*::]*/: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n\t/*::[*/0x21/*::]*/: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n\t/*::[*/0x40/*::]*/: { n:'PtgAttrSpace', f:parse_PtgAttrSpace },\n\t/*::[*/0x41/*::]*/: { n:'PtgAttrSpaceSemi', f:parse_PtgAttrSpaceSemi },\n\t/*::[*/0x80/*::]*/: { n:'PtgAttrIfError', f:parse_PtgAttrIfError },\n\t/*::[*/0xFF/*::]*/: {}\n};\n\n/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\nfunction parse_RgbExtra(blob, length, rgce, opts) {\n\tif(opts.biff < 8) return parsenoop(blob, length);\n\tvar target = blob.l + length;\n\tvar o = [];\n\tfor(var i = 0; i !== rgce.length; ++i) {\n\t\tswitch(rgce[i][0]) {\n\t\t\tcase 'PtgArray': /* PtgArray -> PtgExtraArray */\n\t\t\t\trgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\n\t\t\t\to.push(rgce[i][1]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemArea': /* PtgMemArea -> PtgExtraMem */\n\t\t\t\trgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\n\t\t\t\to.push(rgce[i][2]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgExp': /* PtgExp -> PtgExtraCol */\n\t\t\t\tif(opts && opts.biff == 12) {\n\t\t\t\t\trgce[i][1][1] = blob.read_shift(4);\n\t\t\t\t\to.push(rgce[i][1]);\n\t\t\t\t} break;\n\t\t\tcase 'PtgList': /* TODO: PtgList -> PtgExtraList */\n\t\t\tcase 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColSV': /* TODO: PtgElfColSV -> PtgExtraElf */\n\t\t\t\tthrow \"Unsupported \" + rgce[i][0];\n\t\t\tdefault: break;\n\t\t}\n\t}\n\tlength = target - blob.l;\n\t/* note: this is technically an error but Excel disregards */\n\t//if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\n\tif(length !== 0) o.push(parsenoop(blob, length));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\nfunction parse_Rgce(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar R, id, ptgs = [];\n\twhile(target != blob.l) {\n\t\tlength = target - blob.l;\n\t\tid = blob[blob.l];\n\t\tR = PtgTypes[id] || PtgTypes[PtgDupes[id]];\n\t\tif(id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\n\t\tif(!R || !R.f) { /*ptgs.push*/(parsenoop(blob, length)); }\n\t\telse { ptgs.push([R.n, R.f(blob, length, opts)]); }\n\t}\n\treturn ptgs;\n}\n\nfunction stringify_array(f/*:Array<Array<string>>*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < f.length; ++i) {\n\t\tvar x = f[i], r/*:Array<string>*/ = [];\n\t\tfor(var j = 0; j < x.length; ++j) {\n\t\t\tvar y = x[j];\n\t\t\tif(y) switch(y[0]) {\n\t\t\t\t// TODO: handle embedded quotes\n\t\t\t\tcase 0x02:\n\t\t\t\t\t/*:: if(typeof y[1] != 'string') throw \"unreachable\"; */\n\t\t\t\t\tr.push('\"' + y[1].replace(/\"/g,'\"\"') + '\"'); break;\n\t\t\t\tdefault: r.push(y[1]);\n\t\t\t} else r.push(\"\");\n\t\t}\n\t\to.push(r.join(\",\"));\n\t}\n\treturn o.join(\";\");\n}\n\n/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\nvar PtgBinOp = {\n\tPtgAdd: \"+\",\n\tPtgConcat: \"&\",\n\tPtgDiv: \"/\",\n\tPtgEq: \"=\",\n\tPtgGe: \">=\",\n\tPtgGt: \">\",\n\tPtgLe: \"<=\",\n\tPtgLt: \"<\",\n\tPtgMul: \"*\",\n\tPtgNe: \"<>\",\n\tPtgPower: \"^\",\n\tPtgSub: \"-\"\n};\n\n// List of invalid characters needs to be tested further\nfunction formula_quote_sheet_name(sname/*:string*/, opts)/*:string*/ {\n\tif(!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\n\tif (/[^\\w\\u4E00-\\u9FFF\\u3040-\\u30FF]/.test(sname)) return \"'\" + sname + \"'\";\n\treturn sname;\n}\nfunction get_ixti_raw(supbooks, ixti/*:number*/, opts)/*:string*/ {\n\tif(!supbooks) return \"SH33TJSERR0\";\n\tif(opts.biff > 8 && (!supbooks.XTI || !supbooks.XTI[ixti])) return supbooks.SheetNames[ixti];\n\tif(!supbooks.XTI) return \"SH33TJSERR6\";\n\tvar XTI = supbooks.XTI[ixti];\n\tif(opts.biff < 8) {\n\t\tif(ixti > 10000) ixti-= 65536;\n\t\tif(ixti < 0) ixti = -ixti;\n\t\treturn ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\n\t}\n\tif(!XTI) return \"SH33TJSERR1\";\n\tvar o = \"\";\n\tif(opts.biff > 8) switch(supbooks[XTI[0]][0]) {\n\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\to = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tif(opts.SID != null) return supbooks.SheetNames[opts.SID];\n\t\t\treturn \"SH33TJSSAME\" + supbooks[XTI[0]][0];\n\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\t/* falls through */\n\t\tdefault: return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\n\t}\n\tswitch(supbooks[XTI[0]][0][0]) {\n\t\tcase 0x0401:\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x3A01: return supbooks[XTI[0]].slice(1).map(function(name) { return name.Name; }).join(\";;\"); //return \"SH33TJSERR8\";\n\t\tdefault:\n\t\t\tif(!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\n\t}\n}\nfunction get_ixti(supbooks, ixti/*:number*/, opts)/*:string*/ {\n\tvar ixtiraw = get_ixti_raw(supbooks, ixti, opts);\n\treturn ixtiraw == \"#REF\" ? ixtiraw : formula_quote_sheet_name(ixtiraw, opts);\n}\nfunction stringify_formula(formula/*Array<any>*/, range, cell/*:any*/, supbooks, opts)/*:string*/ {\n\tvar biff = (opts && opts.biff) || 8;\n\tvar _range = /*range != null ? range :*/ {s:{c:0, r:0},e:{c:0, r:0}};\n\tvar stack/*:Array<string>*/ = [], e1, e2, /*::type,*/ c/*:CellAddress*/, ixti=0, nameidx=0, r, sname=\"\";\n\tif(!formula[0] || !formula[0][0]) return \"\";\n\tvar last_sp = -1, sp = \"\";\n\tfor(var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\n\t\tvar f = formula[0][ff];\n\t\tswitch(f[0]) {\n\t\t\tcase 'PtgUminus': /* [MS-XLS] 2.5.198.93 */\n\t\t\t\tstack.push(\"-\" + stack.pop()); break;\n\t\t\tcase 'PtgUplus': /* [MS-XLS] 2.5.198.95 */\n\t\t\t\tstack.push(\"+\" + stack.pop()); break;\n\t\t\tcase 'PtgPercent': /* [MS-XLS] 2.5.198.81 */\n\t\t\t\tstack.push(stack.pop() + \"%\"); break;\n\n\t\t\tcase 'PtgAdd':    /* [MS-XLS] 2.5.198.26 */\n\t\t\tcase 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\n\t\t\tcase 'PtgDiv':    /* [MS-XLS] 2.5.198.45 */\n\t\t\tcase 'PtgEq':     /* [MS-XLS] 2.5.198.56 */\n\t\t\tcase 'PtgGe':     /* [MS-XLS] 2.5.198.64 */\n\t\t\tcase 'PtgGt':     /* [MS-XLS] 2.5.198.65 */\n\t\t\tcase 'PtgLe':     /* [MS-XLS] 2.5.198.68 */\n\t\t\tcase 'PtgLt':     /* [MS-XLS] 2.5.198.69 */\n\t\t\tcase 'PtgMul':    /* [MS-XLS] 2.5.198.75 */\n\t\t\tcase 'PtgNe':     /* [MS-XLS] 2.5.198.78 */\n\t\t\tcase 'PtgPower':  /* [MS-XLS] 2.5.198.82 */\n\t\t\tcase 'PtgSub':    /* [MS-XLS] 2.5.198.90 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\" \", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\"\\r\", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsp = \"\";\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\te2 = e2 + sp;\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(e2+PtgBinOp[f[0]]+e1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgIsect': /* [MS-XLS] 2.5.198.67 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\" \"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgUnion': /* [MS-XLS] 2.5.198.94 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\",\"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRange': /* [MS-XLS] 2.5.198.83 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\":\"+e1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrChoose': /* [MS-XLS] 2.5.198.34 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrGoto': /* [MS-XLS] 2.5.198.35 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIf': /* [MS-XLS] 2.5.198.36 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIfError': /* [MS-XLSB] 2.5.97.28 */\n\t\t\t\tbreak;\n\n\n\t\t\tcase 'PtgRef': /* [MS-XLS] 2.5.198.84 */\n\t\t\t\t/*::type = f[1][0]; */c = shift_cell_xls((f[1][1]/*:any*/), _range, opts);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRefN': /* [MS-XLS] 2.5.198.88 */\n\t\t\t\t/*::type = f[1][0]; */c = cell ? shift_cell_xls((f[1][1]/*:any*/), cell, opts) : (f[1][1]/*:any*/);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRef3d': /* [MS-XLS] 2.5.198.85 */\n\t\t\t\t/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; c = shift_cell_xls((f[1][2]/*:any*/), _range, opts);\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tvar w = sname; /* IE9 fails on defined names */ // eslint-disable-line no-unused-vars\n\t\t\t\tstack.push(sname + \"!\" + encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\n\t\t\tcase 'PtgFuncVar': /* [MS-XLS] 2.5.198.63 */\n\t\t\t\t/* f[1] = [argc, func, type] */\n\t\t\t\tvar argc/*:number*/ = (f[1][0]/*:any*/), func/*:string*/ = (f[1][1]/*:any*/);\n\t\t\t\tif(!argc) argc = 0;\n\t\t\t\targc &= 0x7F;\n\t\t\t\tvar args = argc == 0 ? [] : stack.slice(-argc);\n\t\t\t\tstack.length -= argc;\n\t\t\t\tif(func === 'User') func = args.shift();\n\t\t\t\tstack.push(func + \"(\" + args.join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgBool': /* [MS-XLS] 2.5.198.42 */\n\t\t\t\tstack.push(f[1] ? \"TRUE\" : \"FALSE\"); break;\n\t\t\tcase 'PtgInt': /* [MS-XLS] 2.5.198.66 */\n\t\t\t\tstack.push(/*::String(*/f[1]/*::)*/); break;\n\t\t\tcase 'PtgNum': /* [MS-XLS] 2.5.198.79 TODO: precision? */\n\t\t\t\tstack.push(String(f[1])); break;\n\t\t\tcase 'PtgStr': /* [MS-XLS] 2.5.198.89 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push('\"' + f[1].replace(/\"/g, '\"\"') + '\"'); break;\n\t\t\tcase 'PtgErr': /* [MS-XLS] 2.5.198.57 */\n\t\t\t\tstack.push(/*::String(*/f[1]/*::)*/); break;\n\t\t\tcase 'PtgAreaN': /* [MS-XLS] 2.5.198.31 TODO */\n\t\t\t\t/*::type = f[1][0]; */r = shift_range_xls(f[1][1], cell ? {s:cell} : _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea': /* [MS-XLS] 2.5.198.27 TODO: fixed points */\n\t\t\t\t/*::type = f[1][0]; */r = shift_range_xls(f[1][1], _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea3d': /* [MS-XLS] 2.5.198.28 TODO */\n\t\t\t\t/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; r = f[1][2];\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tstack.push(sname + \"!\" + encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrSum': /* [MS-XLS] 2.5.198.41 */\n\t\t\t\tstack.push(\"SUM(\" + stack.pop() + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\n\t\t\tcase 'PtgAttrSemi': /* [MS-XLS] 2.5.198.37 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgName': /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\n\t\t\t\t/* f[1] = type, 0, nameindex */\n\t\t\t\tnameidx = (f[1][2]/*:any*/);\n\t\t\t\tvar lbl = (supbooks.names||[])[nameidx-1] || (supbooks[0]||[])[nameidx];\n\t\t\t\tvar name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\n\t\t\t\t/* [MS-XLSB] 2.5.97.10 Ftab -- last verified 20220204 */\n\t\t\t\tif(name && name.slice(0,6) == \"_xlfn.\" && !opts.xlfn) name = name.slice(6);\n\t\t\t\tstack.push(name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgNameX': /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\n\t\t\t\t/* f[1] = type, ixti, nameindex */\n\t\t\t\tvar bookidx/*:number*/ = (f[1][1]/*:any*/); nameidx = (f[1][2]/*:any*/); var externbook;\n\t\t\t\t/* TODO: Properly handle missing values -- this should be using get_ixti_raw primarily */\n\t\t\t\tif(opts.biff <= 5) {\n\t\t\t\t\tif(bookidx < 0) bookidx = -bookidx;\n\t\t\t\t\tif(supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\n\t\t\t\t} else {\n\t\t\t\t\tvar o = \"\";\n\t\t\t\t\tif(((supbooks[bookidx]||[])[0]||[])[0] == 0x3A01){/* empty */}\n\t\t\t\t\telse if(((supbooks[bookidx]||[])[0]||[])[0] == 0x0401){\n\t\t\t\t\t\tif(supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\n\t\t\t\t\t\t\to = supbooks.SheetNames[supbooks[bookidx][nameidx].itab-1] + \"!\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse o = supbooks.SheetNames[nameidx-1]+ \"!\";\n\t\t\t\t\tif(supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;\n\t\t\t\t\telse if(supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar ixtidata = (get_ixti_raw(supbooks, bookidx, opts)||\"\").split(\";;\");\n\t\t\t\t\t\tif(ixtidata[nameidx - 1]) o = ixtidata[nameidx - 1]; // TODO: confirm this is correct\n\t\t\t\t\t\telse o += \"SH33TJSERRX\";\n\t\t\t\t\t}\n\t\t\t\t\tstack.push(o);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!externbook) externbook = {Name: \"SH33TJSERRY\"};\n\t\t\t\tstack.push(externbook.Name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgParen': /* [MS-XLS] 2.5.198.80 */\n\t\t\t\tvar lp = '(', rp = ')';\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 2: lp = fill(\" \", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 3: lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 4: rp = fill(\" \", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 5: rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(lp + stack.pop() + rp); break;\n\n\t\t\tcase 'PtgRefErr': /* [MS-XLS] 2.5.198.86 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgRefErr3d': /* [MS-XLS] 2.5.198.87 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgExp': /* [MS-XLS] 2.5.198.58 TODO */\n\t\t\t\tc = {c:(f[1][1]/*:any*/),r:(f[1][0]/*:any*/)};\n\t\t\t\tvar q = ({c: cell.c, r:cell.r}/*:any*/);\n\t\t\t\tif(supbooks.sharedf[encode_cell(c)]) {\n\t\t\t\t\tvar parsedf = (supbooks.sharedf[encode_cell(c)]);\n\t\t\t\t\tstack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\n\t\t\t\t} else {\n\t\t\t\t\tvar fnd = false;\n\t\t\t\t\tfor(e1=0;e1!=supbooks.arrayf.length; ++e1) {\n\t\t\t\t\t\t/* TODO: should be something like range_has */\n\t\t\t\t\t\te2 = supbooks.arrayf[e1];\n\t\t\t\t\t\tif(c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\n\t\t\t\t\t\tif(c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\n\t\t\t\t\t\tstack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\n\t\t\t\t\t\tfnd = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(!fnd) stack.push(/*::String(*/f[1]/*::)*/);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgArray': /* [MS-XLS] 2.5.198.32 TODO */\n\t\t\t\tstack.push(\"{\" + stringify_array(/*::(*/f[1]/*:: :any)*/) + \"}\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemArea': /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\n\t\t\t\t//stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\n\t\t\tcase 'PtgAttrSpaceSemi': /* [MS-XLS] 2.5.198.39 */\n\t\t\t\tlast_sp = ff;\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgTbl': /* [MS-XLS] 2.5.198.92 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemErr': /* [MS-XLS] 2.5.198.71 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMissArg': /* [MS-XLS] 2.5.198.74 */\n\t\t\t\tstack.push(\"\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAreaErr': /* [MS-XLS] 2.5.198.29 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgAreaErr3d': /* [MS-XLS] 2.5.198.30 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgList': /* [MS-XLSB] 2.5.97.52 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemAreaN':\n\t\t\tcase 'PtgMemNoMemN':\n\t\t\tcase 'PtgAttrNoop':\n\t\t\tcase 'PtgSheet':\n\t\t\tcase 'PtgEndSheet':\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemFunc': /* [MS-XLS] 2.5.198.72 TODO */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemNoMem': /* [MS-XLS] 2.5.198.73 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\n\t\t\tcase 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\n\t\t\tcase 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\n\t\t\tcase 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\n\t\t\tcase 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\n\t\t\tcase 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\n\t\t\tcase 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\n\t\t\tcase 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\n\t\t\tcase 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\n\t\t\tcase 'PtgElfRwV': /* [MS-XLS] 2.5.198.55 */\n\t\t\t\tthrow new Error(\"Unsupported ELFs\");\n\n\t\t\tcase 'PtgSxName': /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\n\t\t\t\tthrow new Error('Unrecognized Formula Token: ' + String(f));\n\t\t\tdefault: throw new Error('Unrecognized Formula Token: ' + String(f));\n\t\t}\n\t\tvar PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\n\t\tif(opts.biff != 3) if(last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\n\t\t\tf = formula[0][last_sp];\n\t\t\tvar _left = true;\n\t\t\tswitch(f[1][0]) {\n\t\t\t\t/* note: some bad XLSB files omit the PtgParen */\n\t\t\t\tcase 4: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 0:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\" \", f[1][1]); break;\n\t\t\t\tcase 5: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 1:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\"\\r\", f[1][1]); break;\n\t\t\t\tdefault:\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\n\t\t\t}\n\t\t\tstack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\n\t\t\tlast_sp = -1;\n\t\t}\n\t}\n\tif(stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\n\treturn stack[0];\n}\n\n/* [MS-XLS] 2.5.198.1 TODO */\nfunction parse_ArrayParsedFormula(blob, length, opts/*::, ref*/) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.3 TODO */\nfunction parse_XLSCellParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.21 */\nfunction parse_NameParsedFormula(blob, length, opts, cce) {\n\tvar target = blob.l + length;\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tvar rgcb;\n\tif(target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.118 TODO */\nfunction parse_SharedParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar rgcb, cce = blob.read_shift(2); // length of rgce\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tif(length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\nfunction parse_FormulaValue(blob/*::, length*/) {\n\tvar b;\n\tif(__readUInt16LE(blob,blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob),'n'];\n\tswitch(blob[blob.l]) {\n\t\tcase 0x00: blob.l += 8; return [\"String\", 's'];\n\t\tcase 0x01: b = blob[blob.l+2] === 0x1; blob.l += 8; return [b,'b'];\n\t\tcase 0x02: b = blob[blob.l+2]; blob.l += 8; return [b,'e'];\n\t\tcase 0x03: blob.l += 8; return [\"\",'s'];\n\t}\n\treturn [];\n}\nfunction write_FormulaValue(value) {\n\tif(value == null) {\n\t\t// Blank String Value\n\t\tvar o = new_buf(8);\n\t\to.write_shift(1, 0x03);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0xFFFF);\n\t\treturn o;\n\t} else if(typeof value == \"number\") return write_Xnum(value);\n\treturn write_Xnum(0);\n}\n\n/* [MS-XLS] 2.4.127 TODO */\nfunction parse_Formula(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) ++blob.l;\n\tvar val = parse_FormulaValue(blob,8);\n\tvar flags = blob.read_shift(1);\n\tif(opts.biff != 2) {\n\t\tblob.read_shift(1);\n\t\tif(opts.biff >= 5) {\n\t\t\t/*var chn = */blob.read_shift(4);\n\t\t}\n\t}\n\tvar cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\n\treturn {cell:cell, val:val[0], formula:cbf, shared: (flags >> 3) & 1, tt:val[1]};\n}\nfunction write_Formula(cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, os/*:number*/) {\n\t// Cell\n\tvar o1 = write_XLSCell(R, C, os);\n\n\t// FormulaValue\n\tvar o2 = write_FormulaValue(cell.v);\n\n\t// flags + cache\n\tvar o3 = new_buf(6);\n\tvar flags = 0x01 | 0x20;\n\to3.write_shift(2, flags);\n\to3.write_shift(4, 0);\n\n\t// CellParsedFormula\n\tvar bf = new_buf(cell.bf.length);\n\tfor(var i = 0; i < cell.bf.length; ++i) bf[i] = cell.bf[i];\n\n\tvar out = bconcat([o1, o2, o3, bf]);\n\treturn out;\n}\n\n\n/* XLSB Parsed Formula records have the same shape */\nfunction parse_XLSBParsedFormula(data, length, opts) {\n\tvar cce = data.read_shift(4);\n\tvar rgce = parse_Rgce(data, cce, opts);\n\tvar cb = data.read_shift(4);\n\tvar rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\nvar parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.4 CellParsedFormula */\nvar parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.8 DVParsedFormula */\n//var parse_XLSBDVParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.9 FRTParsedFormula */\n//var parse_XLSBFRTParsedFormula = parse_XLSBParsedFormula2;\n/* [MS-XLSB] 2.5.97.12 NameParsedFormula */\nvar parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\nvar parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\nvar Cetab = {\n  0: \"BEEP\",\n  1: \"OPEN\",\n  2: \"OPEN.LINKS\",\n  3: \"CLOSE.ALL\",\n  4: \"SAVE\",\n  5: \"SAVE.AS\",\n  6: \"FILE.DELETE\",\n  7: \"PAGE.SETUP\",\n  8: \"PRINT\",\n  9: \"PRINTER.SETUP\",\n  10: \"QUIT\",\n  11: \"NEW.WINDOW\",\n  12: \"ARRANGE.ALL\",\n  13: \"WINDOW.SIZE\",\n  14: \"WINDOW.MOVE\",\n  15: \"FULL\",\n  16: \"CLOSE\",\n  17: \"RUN\",\n  22: \"SET.PRINT.AREA\",\n  23: \"SET.PRINT.TITLES\",\n  24: \"SET.PAGE.BREAK\",\n  25: \"REMOVE.PAGE.BREAK\",\n  26: \"FONT\",\n  27: \"DISPLAY\",\n  28: \"PROTECT.DOCUMENT\",\n  29: \"PRECISION\",\n  30: \"A1.R1C1\",\n  31: \"CALCULATE.NOW\",\n  32: \"CALCULATION\",\n  34: \"DATA.FIND\",\n  35: \"EXTRACT\",\n  36: \"DATA.DELETE\",\n  37: \"SET.DATABASE\",\n  38: \"SET.CRITERIA\",\n  39: \"SORT\",\n  40: \"DATA.SERIES\",\n  41: \"TABLE\",\n  42: \"FORMAT.NUMBER\",\n  43: \"ALIGNMENT\",\n  44: \"STYLE\",\n  45: \"BORDER\",\n  46: \"CELL.PROTECTION\",\n  47: \"COLUMN.WIDTH\",\n  48: \"UNDO\",\n  49: \"CUT\",\n  50: \"COPY\",\n  51: \"PASTE\",\n  52: \"CLEAR\",\n  53: \"PASTE.SPECIAL\",\n  54: \"EDIT.DELETE\",\n  55: \"INSERT\",\n  56: \"FILL.RIGHT\",\n  57: \"FILL.DOWN\",\n  61: \"DEFINE.NAME\",\n  62: \"CREATE.NAMES\",\n  63: \"FORMULA.GOTO\",\n  64: \"FORMULA.FIND\",\n  65: \"SELECT.LAST.CELL\",\n  66: \"SHOW.ACTIVE.CELL\",\n  67: \"GALLERY.AREA\",\n  68: \"GALLERY.BAR\",\n  69: \"GALLERY.COLUMN\",\n  70: \"GALLERY.LINE\",\n  71: \"GALLERY.PIE\",\n  72: \"GALLERY.SCATTER\",\n  73: \"COMBINATION\",\n  74: \"PREFERRED\",\n  75: \"ADD.OVERLAY\",\n  76: \"GRIDLINES\",\n  77: \"SET.PREFERRED\",\n  78: \"AXES\",\n  79: \"LEGEND\",\n  80: \"ATTACH.TEXT\",\n  81: \"ADD.ARROW\",\n  82: \"SELECT.CHART\",\n  83: \"SELECT.PLOT.AREA\",\n  84: \"PATTERNS\",\n  85: \"MAIN.CHART\",\n  86: \"OVERLAY\",\n  87: \"SCALE\",\n  88: \"FORMAT.LEGEND\",\n  89: \"FORMAT.TEXT\",\n  90: \"EDIT.REPEAT\",\n  91: \"PARSE\",\n  92: \"JUSTIFY\",\n  93: \"HIDE\",\n  94: \"UNHIDE\",\n  95: \"WORKSPACE\",\n  96: \"FORMULA\",\n  97: \"FORMULA.FILL\",\n  98: \"FORMULA.ARRAY\",\n  99: \"DATA.FIND.NEXT\",\n  100: \"DATA.FIND.PREV\",\n  101: \"FORMULA.FIND.NEXT\",\n  102: \"FORMULA.FIND.PREV\",\n  103: \"ACTIVATE\",\n  104: \"ACTIVATE.NEXT\",\n  105: \"ACTIVATE.PREV\",\n  106: \"UNLOCKED.NEXT\",\n  107: \"UNLOCKED.PREV\",\n  108: \"COPY.PICTURE\",\n  109: \"SELECT\",\n  110: \"DELETE.NAME\",\n  111: \"DELETE.FORMAT\",\n  112: \"VLINE\",\n  113: \"HLINE\",\n  114: \"VPAGE\",\n  115: \"HPAGE\",\n  116: \"VSCROLL\",\n  117: \"HSCROLL\",\n  118: \"ALERT\",\n  119: \"NEW\",\n  120: \"CANCEL.COPY\",\n  121: \"SHOW.CLIPBOARD\",\n  122: \"MESSAGE\",\n  124: \"PASTE.LINK\",\n  125: \"APP.ACTIVATE\",\n  126: \"DELETE.ARROW\",\n  127: \"ROW.HEIGHT\",\n  128: \"FORMAT.MOVE\",\n  129: \"FORMAT.SIZE\",\n  130: \"FORMULA.REPLACE\",\n  131: \"SEND.KEYS\",\n  132: \"SELECT.SPECIAL\",\n  133: \"APPLY.NAMES\",\n  134: \"REPLACE.FONT\",\n  135: \"FREEZE.PANES\",\n  136: \"SHOW.INFO\",\n  137: \"SPLIT\",\n  138: \"ON.WINDOW\",\n  139: \"ON.DATA\",\n  140: \"DISABLE.INPUT\",\n  142: \"OUTLINE\",\n  143: \"LIST.NAMES\",\n  144: \"FILE.CLOSE\",\n  145: \"SAVE.WORKBOOK\",\n  146: \"DATA.FORM\",\n  147: \"COPY.CHART\",\n  148: \"ON.TIME\",\n  149: \"WAIT\",\n  150: \"FORMAT.FONT\",\n  151: \"FILL.UP\",\n  152: \"FILL.LEFT\",\n  153: \"DELETE.OVERLAY\",\n  155: \"SHORT.MENUS\",\n  159: \"SET.UPDATE.STATUS\",\n  161: \"COLOR.PALETTE\",\n  162: \"DELETE.STYLE\",\n  163: \"WINDOW.RESTORE\",\n  164: \"WINDOW.MAXIMIZE\",\n  166: \"CHANGE.LINK\",\n  167: \"CALCULATE.DOCUMENT\",\n  168: \"ON.KEY\",\n  169: \"APP.RESTORE\",\n  170: \"APP.MOVE\",\n  171: \"APP.SIZE\",\n  172: \"APP.MINIMIZE\",\n  173: \"APP.MAXIMIZE\",\n  174: \"BRING.TO.FRONT\",\n  175: \"SEND.TO.BACK\",\n  185: \"MAIN.CHART.TYPE\",\n  186: \"OVERLAY.CHART.TYPE\",\n  187: \"SELECT.END\",\n  188: \"OPEN.MAIL\",\n  189: \"SEND.MAIL\",\n  190: \"STANDARD.FONT\",\n  191: \"CONSOLIDATE\",\n  192: \"SORT.SPECIAL\",\n  193: \"GALLERY.3D.AREA\",\n  194: \"GALLERY.3D.COLUMN\",\n  195: \"GALLERY.3D.LINE\",\n  196: \"GALLERY.3D.PIE\",\n  197: \"VIEW.3D\",\n  198: \"GOAL.SEEK\",\n  199: \"WORKGROUP\",\n  200: \"FILL.GROUP\",\n  201: \"UPDATE.LINK\",\n  202: \"PROMOTE\",\n  203: \"DEMOTE\",\n  204: \"SHOW.DETAIL\",\n  206: \"UNGROUP\",\n  207: \"OBJECT.PROPERTIES\",\n  208: \"SAVE.NEW.OBJECT\",\n  209: \"SHARE\",\n  210: \"SHARE.NAME\",\n  211: \"DUPLICATE\",\n  212: \"APPLY.STYLE\",\n  213: \"ASSIGN.TO.OBJECT\",\n  214: \"OBJECT.PROTECTION\",\n  215: \"HIDE.OBJECT\",\n  216: \"SET.EXTRACT\",\n  217: \"CREATE.PUBLISHER\",\n  218: \"SUBSCRIBE.TO\",\n  219: \"ATTRIBUTES\",\n  220: \"SHOW.TOOLBAR\",\n  222: \"PRINT.PREVIEW\",\n  223: \"EDIT.COLOR\",\n  224: \"SHOW.LEVELS\",\n  225: \"FORMAT.MAIN\",\n  226: \"FORMAT.OVERLAY\",\n  227: \"ON.RECALC\",\n  228: \"EDIT.SERIES\",\n  229: \"DEFINE.STYLE\",\n  240: \"LINE.PRINT\",\n  243: \"ENTER.DATA\",\n  249: \"GALLERY.RADAR\",\n  250: \"MERGE.STYLES\",\n  251: \"EDITION.OPTIONS\",\n  252: \"PASTE.PICTURE\",\n  253: \"PASTE.PICTURE.LINK\",\n  254: \"SPELLING\",\n  256: \"ZOOM\",\n  259: \"INSERT.OBJECT\",\n  260: \"WINDOW.MINIMIZE\",\n  265: \"SOUND.NOTE\",\n  266: \"SOUND.PLAY\",\n  267: \"FORMAT.SHAPE\",\n  268: \"EXTEND.POLYGON\",\n  269: \"FORMAT.AUTO\",\n  272: \"GALLERY.3D.BAR\",\n  273: \"GALLERY.3D.SURFACE\",\n  274: \"FILL.AUTO\",\n  276: \"CUSTOMIZE.TOOLBAR\",\n  277: \"ADD.TOOL\",\n  278: \"EDIT.OBJECT\",\n  279: \"ON.DOUBLECLICK\",\n  280: \"ON.ENTRY\",\n  281: \"WORKBOOK.ADD\",\n  282: \"WORKBOOK.MOVE\",\n  283: \"WORKBOOK.COPY\",\n  284: \"WORKBOOK.OPTIONS\",\n  285: \"SAVE.WORKSPACE\",\n  288: \"CHART.WIZARD\",\n  289: \"DELETE.TOOL\",\n  290: \"MOVE.TOOL\",\n  291: \"WORKBOOK.SELECT\",\n  292: \"WORKBOOK.ACTIVATE\",\n  293: \"ASSIGN.TO.TOOL\",\n  295: \"COPY.TOOL\",\n  296: \"RESET.TOOL\",\n  297: \"CONSTRAIN.NUMERIC\",\n  298: \"PASTE.TOOL\",\n  302: \"WORKBOOK.NEW\",\n  305: \"SCENARIO.CELLS\",\n  306: \"SCENARIO.DELETE\",\n  307: \"SCENARIO.ADD\",\n  308: \"SCENARIO.EDIT\",\n  309: \"SCENARIO.SHOW\",\n  310: \"SCENARIO.SHOW.NEXT\",\n  311: \"SCENARIO.SUMMARY\",\n  312: \"PIVOT.TABLE.WIZARD\",\n  313: \"PIVOT.FIELD.PROPERTIES\",\n  314: \"PIVOT.FIELD\",\n  315: \"PIVOT.ITEM\",\n  316: \"PIVOT.ADD.FIELDS\",\n  318: \"OPTIONS.CALCULATION\",\n  319: \"OPTIONS.EDIT\",\n  320: \"OPTIONS.VIEW\",\n  321: \"ADDIN.MANAGER\",\n  322: \"MENU.EDITOR\",\n  323: \"ATTACH.TOOLBARS\",\n  324: \"VBAActivate\",\n  325: \"OPTIONS.CHART\",\n  328: \"VBA.INSERT.FILE\",\n  330: \"VBA.PROCEDURE.DEFINITION\",\n  336: \"ROUTING.SLIP\",\n  338: \"ROUTE.DOCUMENT\",\n  339: \"MAIL.LOGON\",\n  342: \"INSERT.PICTURE\",\n  343: \"EDIT.TOOL\",\n  344: \"GALLERY.DOUGHNUT\",\n  350: \"CHART.TREND\",\n  352: \"PIVOT.ITEM.PROPERTIES\",\n  354: \"WORKBOOK.INSERT\",\n  355: \"OPTIONS.TRANSITION\",\n  356: \"OPTIONS.GENERAL\",\n  370: \"FILTER.ADVANCED\",\n  373: \"MAIL.ADD.MAILER\",\n  374: \"MAIL.DELETE.MAILER\",\n  375: \"MAIL.REPLY\",\n  376: \"MAIL.REPLY.ALL\",\n  377: \"MAIL.FORWARD\",\n  378: \"MAIL.NEXT.LETTER\",\n  379: \"DATA.LABEL\",\n  380: \"INSERT.TITLE\",\n  381: \"FONT.PROPERTIES\",\n  382: \"MACRO.OPTIONS\",\n  383: \"WORKBOOK.HIDE\",\n  384: \"WORKBOOK.UNHIDE\",\n  385: \"WORKBOOK.DELETE\",\n  386: \"WORKBOOK.NAME\",\n  388: \"GALLERY.CUSTOM\",\n  390: \"ADD.CHART.AUTOFORMAT\",\n  391: \"DELETE.CHART.AUTOFORMAT\",\n  392: \"CHART.ADD.DATA\",\n  393: \"AUTO.OUTLINE\",\n  394: \"TAB.ORDER\",\n  395: \"SHOW.DIALOG\",\n  396: \"SELECT.ALL\",\n  397: \"UNGROUP.SHEETS\",\n  398: \"SUBTOTAL.CREATE\",\n  399: \"SUBTOTAL.REMOVE\",\n  400: \"RENAME.OBJECT\",\n  412: \"WORKBOOK.SCROLL\",\n  413: \"WORKBOOK.NEXT\",\n  414: \"WORKBOOK.PREV\",\n  415: \"WORKBOOK.TAB.SPLIT\",\n  416: \"FULL.SCREEN\",\n  417: \"WORKBOOK.PROTECT\",\n  420: \"SCROLLBAR.PROPERTIES\",\n  421: \"PIVOT.SHOW.PAGES\",\n  422: \"TEXT.TO.COLUMNS\",\n  423: \"FORMAT.CHARTTYPE\",\n  424: \"LINK.FORMAT\",\n  425: \"TRACER.DISPLAY\",\n  430: \"TRACER.NAVIGATE\",\n  431: \"TRACER.CLEAR\",\n  432: \"TRACER.ERROR\",\n  433: \"PIVOT.FIELD.GROUP\",\n  434: \"PIVOT.FIELD.UNGROUP\",\n  435: \"CHECKBOX.PROPERTIES\",\n  436: \"LABEL.PROPERTIES\",\n  437: \"LISTBOX.PROPERTIES\",\n  438: \"EDITBOX.PROPERTIES\",\n  439: \"PIVOT.REFRESH\",\n  440: \"LINK.COMBO\",\n  441: \"OPEN.TEXT\",\n  442: \"HIDE.DIALOG\",\n  443: \"SET.DIALOG.FOCUS\",\n  444: \"ENABLE.OBJECT\",\n  445: \"PUSHBUTTON.PROPERTIES\",\n  446: \"SET.DIALOG.DEFAULT\",\n  447: \"FILTER\",\n  448: \"FILTER.SHOW.ALL\",\n  449: \"CLEAR.OUTLINE\",\n  450: \"FUNCTION.WIZARD\",\n  451: \"ADD.LIST.ITEM\",\n  452: \"SET.LIST.ITEM\",\n  453: \"REMOVE.LIST.ITEM\",\n  454: \"SELECT.LIST.ITEM\",\n  455: \"SET.CONTROL.VALUE\",\n  456: \"SAVE.COPY.AS\",\n  458: \"OPTIONS.LISTS.ADD\",\n  459: \"OPTIONS.LISTS.DELETE\",\n  460: \"SERIES.AXES\",\n  461: \"SERIES.X\",\n  462: \"SERIES.Y\",\n  463: \"ERRORBAR.X\",\n  464: \"ERRORBAR.Y\",\n  465: \"FORMAT.CHART\",\n  466: \"SERIES.ORDER\",\n  467: \"MAIL.LOGOFF\",\n  468: \"CLEAR.ROUTING.SLIP\",\n  469: \"APP.ACTIVATE.MICROSOFT\",\n  470: \"MAIL.EDIT.MAILER\",\n  471: \"ON.SHEET\",\n  472: \"STANDARD.WIDTH\",\n  473: \"SCENARIO.MERGE\",\n  474: \"SUMMARY.INFO\",\n  475: \"FIND.FILE\",\n  476: \"ACTIVE.CELL.FONT\",\n  477: \"ENABLE.TIPWIZARD\",\n  478: \"VBA.MAKE.ADDIN\",\n  480: \"INSERTDATATABLE\",\n  481: \"WORKGROUP.OPTIONS\",\n  482: \"MAIL.SEND.MAILER\",\n  485: \"AUTOCORRECT\",\n  489: \"POST.DOCUMENT\",\n  491: \"PICKLIST\",\n  493: \"VIEW.SHOW\",\n  494: \"VIEW.DEFINE\",\n  495: \"VIEW.DELETE\",\n  509: \"SHEET.BACKGROUND\",\n  510: \"INSERT.MAP.OBJECT\",\n  511: \"OPTIONS.MENONO\",\n  517: \"MSOCHECKS\",\n  518: \"NORMAL\",\n  519: \"LAYOUT\",\n  520: \"RM.PRINT.AREA\",\n  521: \"CLEAR.PRINT.AREA\",\n  522: \"ADD.PRINT.AREA\",\n  523: \"MOVE.BRK\",\n  545: \"HIDECURR.NOTE\",\n  546: \"HIDEALL.NOTES\",\n  547: \"DELETE.NOTE\",\n  548: \"TRAVERSE.NOTES\",\n  549: \"ACTIVATE.NOTES\",\n  620: \"PROTECT.REVISIONS\",\n  621: \"UNPROTECT.REVISIONS\",\n  647: \"OPTIONS.ME\",\n  653: \"WEB.PUBLISH\",\n  667: \"NEWWEBQUERY\",\n  673: \"PIVOT.TABLE.CHART\",\n  753: \"OPTIONS.SAVE\",\n  755: \"OPTIONS.SPELL\",\n  808: \"HIDEALL.INKANNOTS\"\n};\nvar Ftab = {\n  0: \"COUNT\",\n  1: \"IF\",\n  2: \"ISNA\",\n  3: \"ISERROR\",\n  4: \"SUM\",\n  5: \"AVERAGE\",\n  6: \"MIN\",\n  7: \"MAX\",\n  8: \"ROW\",\n  9: \"COLUMN\",\n  10: \"NA\",\n  11: \"NPV\",\n  12: \"STDEV\",\n  13: \"DOLLAR\",\n  14: \"FIXED\",\n  15: \"SIN\",\n  16: \"COS\",\n  17: \"TAN\",\n  18: \"ATAN\",\n  19: \"PI\",\n  20: \"SQRT\",\n  21: \"EXP\",\n  22: \"LN\",\n  23: \"LOG10\",\n  24: \"ABS\",\n  25: \"INT\",\n  26: \"SIGN\",\n  27: \"ROUND\",\n  28: \"LOOKUP\",\n  29: \"INDEX\",\n  30: \"REPT\",\n  31: \"MID\",\n  32: \"LEN\",\n  33: \"VALUE\",\n  34: \"TRUE\",\n  35: \"FALSE\",\n  36: \"AND\",\n  37: \"OR\",\n  38: \"NOT\",\n  39: \"MOD\",\n  40: \"DCOUNT\",\n  41: \"DSUM\",\n  42: \"DAVERAGE\",\n  43: \"DMIN\",\n  44: \"DMAX\",\n  45: \"DSTDEV\",\n  46: \"VAR\",\n  47: \"DVAR\",\n  48: \"TEXT\",\n  49: \"LINEST\",\n  50: \"TREND\",\n  51: \"LOGEST\",\n  52: \"GROWTH\",\n  53: \"GOTO\",\n  54: \"HALT\",\n  55: \"RETURN\",\n  56: \"PV\",\n  57: \"FV\",\n  58: \"NPER\",\n  59: \"PMT\",\n  60: \"RATE\",\n  61: \"MIRR\",\n  62: \"IRR\",\n  63: \"RAND\",\n  64: \"MATCH\",\n  65: \"DATE\",\n  66: \"TIME\",\n  67: \"DAY\",\n  68: \"MONTH\",\n  69: \"YEAR\",\n  70: \"WEEKDAY\",\n  71: \"HOUR\",\n  72: \"MINUTE\",\n  73: \"SECOND\",\n  74: \"NOW\",\n  75: \"AREAS\",\n  76: \"ROWS\",\n  77: \"COLUMNS\",\n  78: \"OFFSET\",\n  79: \"ABSREF\",\n  80: \"RELREF\",\n  81: \"ARGUMENT\",\n  82: \"SEARCH\",\n  83: \"TRANSPOSE\",\n  84: \"ERROR\",\n  85: \"STEP\",\n  86: \"TYPE\",\n  87: \"ECHO\",\n  88: \"SET.NAME\",\n  89: \"CALLER\",\n  90: \"DEREF\",\n  91: \"WINDOWS\",\n  92: \"SERIES\",\n  93: \"DOCUMENTS\",\n  94: \"ACTIVE.CELL\",\n  95: \"SELECTION\",\n  96: \"RESULT\",\n  97: \"ATAN2\",\n  98: \"ASIN\",\n  99: \"ACOS\",\n  100: \"CHOOSE\",\n  101: \"HLOOKUP\",\n  102: \"VLOOKUP\",\n  103: \"LINKS\",\n  104: \"INPUT\",\n  105: \"ISREF\",\n  106: \"GET.FORMULA\",\n  107: \"GET.NAME\",\n  108: \"SET.VALUE\",\n  109: \"LOG\",\n  110: \"EXEC\",\n  111: \"CHAR\",\n  112: \"LOWER\",\n  113: \"UPPER\",\n  114: \"PROPER\",\n  115: \"LEFT\",\n  116: \"RIGHT\",\n  117: \"EXACT\",\n  118: \"TRIM\",\n  119: \"REPLACE\",\n  120: \"SUBSTITUTE\",\n  121: \"CODE\",\n  122: \"NAMES\",\n  123: \"DIRECTORY\",\n  124: \"FIND\",\n  125: \"CELL\",\n  126: \"ISERR\",\n  127: \"ISTEXT\",\n  128: \"ISNUMBER\",\n  129: \"ISBLANK\",\n  130: \"T\",\n  131: \"N\",\n  132: \"FOPEN\",\n  133: \"FCLOSE\",\n  134: \"FSIZE\",\n  135: \"FREADLN\",\n  136: \"FREAD\",\n  137: \"FWRITELN\",\n  138: \"FWRITE\",\n  139: \"FPOS\",\n  140: \"DATEVALUE\",\n  141: \"TIMEVALUE\",\n  142: \"SLN\",\n  143: \"SYD\",\n  144: \"DDB\",\n  145: \"GET.DEF\",\n  146: \"REFTEXT\",\n  147: \"TEXTREF\",\n  148: \"INDIRECT\",\n  149: \"REGISTER\",\n  150: \"CALL\",\n  151: \"ADD.BAR\",\n  152: \"ADD.MENU\",\n  153: \"ADD.COMMAND\",\n  154: \"ENABLE.COMMAND\",\n  155: \"CHECK.COMMAND\",\n  156: \"RENAME.COMMAND\",\n  157: \"SHOW.BAR\",\n  158: \"DELETE.MENU\",\n  159: \"DELETE.COMMAND\",\n  160: \"GET.CHART.ITEM\",\n  161: \"DIALOG.BOX\",\n  162: \"CLEAN\",\n  163: \"MDETERM\",\n  164: \"MINVERSE\",\n  165: \"MMULT\",\n  166: \"FILES\",\n  167: \"IPMT\",\n  168: \"PPMT\",\n  169: \"COUNTA\",\n  170: \"CANCEL.KEY\",\n  171: \"FOR\",\n  172: \"WHILE\",\n  173: \"BREAK\",\n  174: \"NEXT\",\n  175: \"INITIATE\",\n  176: \"REQUEST\",\n  177: \"POKE\",\n  178: \"EXECUTE\",\n  179: \"TERMINATE\",\n  180: \"RESTART\",\n  181: \"HELP\",\n  182: \"GET.BAR\",\n  183: \"PRODUCT\",\n  184: \"FACT\",\n  185: \"GET.CELL\",\n  186: \"GET.WORKSPACE\",\n  187: \"GET.WINDOW\",\n  188: \"GET.DOCUMENT\",\n  189: \"DPRODUCT\",\n  190: \"ISNONTEXT\",\n  191: \"GET.NOTE\",\n  192: \"NOTE\",\n  193: \"STDEVP\",\n  194: \"VARP\",\n  195: \"DSTDEVP\",\n  196: \"DVARP\",\n  197: \"TRUNC\",\n  198: \"ISLOGICAL\",\n  199: \"DCOUNTA\",\n  200: \"DELETE.BAR\",\n  201: \"UNREGISTER\",\n  204: \"USDOLLAR\",\n  205: \"FINDB\",\n  206: \"SEARCHB\",\n  207: \"REPLACEB\",\n  208: \"LEFTB\",\n  209: \"RIGHTB\",\n  210: \"MIDB\",\n  211: \"LENB\",\n  212: \"ROUNDUP\",\n  213: \"ROUNDDOWN\",\n  214: \"ASC\",\n  215: \"DBCS\",\n  216: \"RANK\",\n  219: \"ADDRESS\",\n  220: \"DAYS360\",\n  221: \"TODAY\",\n  222: \"VDB\",\n  223: \"ELSE\",\n  224: \"ELSE.IF\",\n  225: \"END.IF\",\n  226: \"FOR.CELL\",\n  227: \"MEDIAN\",\n  228: \"SUMPRODUCT\",\n  229: \"SINH\",\n  230: \"COSH\",\n  231: \"TANH\",\n  232: \"ASINH\",\n  233: \"ACOSH\",\n  234: \"ATANH\",\n  235: \"DGET\",\n  236: \"CREATE.OBJECT\",\n  237: \"VOLATILE\",\n  238: \"LAST.ERROR\",\n  239: \"CUSTOM.UNDO\",\n  240: \"CUSTOM.REPEAT\",\n  241: \"FORMULA.CONVERT\",\n  242: \"GET.LINK.INFO\",\n  243: \"TEXT.BOX\",\n  244: \"INFO\",\n  245: \"GROUP\",\n  246: \"GET.OBJECT\",\n  247: \"DB\",\n  248: \"PAUSE\",\n  251: \"RESUME\",\n  252: \"FREQUENCY\",\n  253: \"ADD.TOOLBAR\",\n  254: \"DELETE.TOOLBAR\",\n  255: \"User\",\n  256: \"RESET.TOOLBAR\",\n  257: \"EVALUATE\",\n  258: \"GET.TOOLBAR\",\n  259: \"GET.TOOL\",\n  260: \"SPELLING.CHECK\",\n  261: \"ERROR.TYPE\",\n  262: \"APP.TITLE\",\n  263: \"WINDOW.TITLE\",\n  264: \"SAVE.TOOLBAR\",\n  265: \"ENABLE.TOOL\",\n  266: \"PRESS.TOOL\",\n  267: \"REGISTER.ID\",\n  268: \"GET.WORKBOOK\",\n  269: \"AVEDEV\",\n  270: \"BETADIST\",\n  271: \"GAMMALN\",\n  272: \"BETAINV\",\n  273: \"BINOMDIST\",\n  274: \"CHIDIST\",\n  275: \"CHIINV\",\n  276: \"COMBIN\",\n  277: \"CONFIDENCE\",\n  278: \"CRITBINOM\",\n  279: \"EVEN\",\n  280: \"EXPONDIST\",\n  281: \"FDIST\",\n  282: \"FINV\",\n  283: \"FISHER\",\n  284: \"FISHERINV\",\n  285: \"FLOOR\",\n  286: \"GAMMADIST\",\n  287: \"GAMMAINV\",\n  288: \"CEILING\",\n  289: \"HYPGEOMDIST\",\n  290: \"LOGNORMDIST\",\n  291: \"LOGINV\",\n  292: \"NEGBINOMDIST\",\n  293: \"NORMDIST\",\n  294: \"NORMSDIST\",\n  295: \"NORMINV\",\n  296: \"NORMSINV\",\n  297: \"STANDARDIZE\",\n  298: \"ODD\",\n  299: \"PERMUT\",\n  300: \"POISSON\",\n  301: \"TDIST\",\n  302: \"WEIBULL\",\n  303: \"SUMXMY2\",\n  304: \"SUMX2MY2\",\n  305: \"SUMX2PY2\",\n  306: \"CHITEST\",\n  307: \"CORREL\",\n  308: \"COVAR\",\n  309: \"FORECAST\",\n  310: \"FTEST\",\n  311: \"INTERCEPT\",\n  312: \"PEARSON\",\n  313: \"RSQ\",\n  314: \"STEYX\",\n  315: \"SLOPE\",\n  316: \"TTEST\",\n  317: \"PROB\",\n  318: \"DEVSQ\",\n  319: \"GEOMEAN\",\n  320: \"HARMEAN\",\n  321: \"SUMSQ\",\n  322: \"KURT\",\n  323: \"SKEW\",\n  324: \"ZTEST\",\n  325: \"LARGE\",\n  326: \"SMALL\",\n  327: \"QUARTILE\",\n  328: \"PERCENTILE\",\n  329: \"PERCENTRANK\",\n  330: \"MODE\",\n  331: \"TRIMMEAN\",\n  332: \"TINV\",\n  334: \"MOVIE.COMMAND\",\n  335: \"GET.MOVIE\",\n  336: \"CONCATENATE\",\n  337: \"POWER\",\n  338: \"PIVOT.ADD.DATA\",\n  339: \"GET.PIVOT.TABLE\",\n  340: \"GET.PIVOT.FIELD\",\n  341: \"GET.PIVOT.ITEM\",\n  342: \"RADIANS\",\n  343: \"DEGREES\",\n  344: \"SUBTOTAL\",\n  345: \"SUMIF\",\n  346: \"COUNTIF\",\n  347: \"COUNTBLANK\",\n  348: \"SCENARIO.GET\",\n  349: \"OPTIONS.LISTS.GET\",\n  350: \"ISPMT\",\n  351: \"DATEDIF\",\n  352: \"DATESTRING\",\n  353: \"NUMBERSTRING\",\n  354: \"ROMAN\",\n  355: \"OPEN.DIALOG\",\n  356: \"SAVE.DIALOG\",\n  357: \"VIEW.GET\",\n  358: \"GETPIVOTDATA\",\n  359: \"HYPERLINK\",\n  360: \"PHONETIC\",\n  361: \"AVERAGEA\",\n  362: \"MAXA\",\n  363: \"MINA\",\n  364: \"STDEVPA\",\n  365: \"VARPA\",\n  366: \"STDEVA\",\n  367: \"VARA\",\n  368: \"BAHTTEXT\",\n  369: \"THAIDAYOFWEEK\",\n  370: \"THAIDIGIT\",\n  371: \"THAIMONTHOFYEAR\",\n  372: \"THAINUMSOUND\",\n  373: \"THAINUMSTRING\",\n  374: \"THAISTRINGLENGTH\",\n  375: \"ISTHAIDIGIT\",\n  376: \"ROUNDBAHTDOWN\",\n  377: \"ROUNDBAHTUP\",\n  378: \"THAIYEAR\",\n  379: \"RTD\",\n  380: \"CUBEVALUE\",\n  381: \"CUBEMEMBER\",\n  382: \"CUBEMEMBERPROPERTY\",\n  383: \"CUBERANKEDMEMBER\",\n  384: \"HEX2BIN\",\n  385: \"HEX2DEC\",\n  386: \"HEX2OCT\",\n  387: \"DEC2BIN\",\n  388: \"DEC2HEX\",\n  389: \"DEC2OCT\",\n  390: \"OCT2BIN\",\n  391: \"OCT2HEX\",\n  392: \"OCT2DEC\",\n  393: \"BIN2DEC\",\n  394: \"BIN2OCT\",\n  395: \"BIN2HEX\",\n  396: \"IMSUB\",\n  397: \"IMDIV\",\n  398: \"IMPOWER\",\n  399: \"IMABS\",\n  400: \"IMSQRT\",\n  401: \"IMLN\",\n  402: \"IMLOG2\",\n  403: \"IMLOG10\",\n  404: \"IMSIN\",\n  405: \"IMCOS\",\n  406: \"IMEXP\",\n  407: \"IMARGUMENT\",\n  408: \"IMCONJUGATE\",\n  409: \"IMAGINARY\",\n  410: \"IMREAL\",\n  411: \"COMPLEX\",\n  412: \"IMSUM\",\n  413: \"IMPRODUCT\",\n  414: \"SERIESSUM\",\n  415: \"FACTDOUBLE\",\n  416: \"SQRTPI\",\n  417: \"QUOTIENT\",\n  418: \"DELTA\",\n  419: \"GESTEP\",\n  420: \"ISEVEN\",\n  421: \"ISODD\",\n  422: \"MROUND\",\n  423: \"ERF\",\n  424: \"ERFC\",\n  425: \"BESSELJ\",\n  426: \"BESSELK\",\n  427: \"BESSELY\",\n  428: \"BESSELI\",\n  429: \"XIRR\",\n  430: \"XNPV\",\n  431: \"PRICEMAT\",\n  432: \"YIELDMAT\",\n  433: \"INTRATE\",\n  434: \"RECEIVED\",\n  435: \"DISC\",\n  436: \"PRICEDISC\",\n  437: \"YIELDDISC\",\n  438: \"TBILLEQ\",\n  439: \"TBILLPRICE\",\n  440: \"TBILLYIELD\",\n  441: \"PRICE\",\n  442: \"YIELD\",\n  443: \"DOLLARDE\",\n  444: \"DOLLARFR\",\n  445: \"NOMINAL\",\n  446: \"EFFECT\",\n  447: \"CUMPRINC\",\n  448: \"CUMIPMT\",\n  449: \"EDATE\",\n  450: \"EOMONTH\",\n  451: \"YEARFRAC\",\n  452: \"COUPDAYBS\",\n  453: \"COUPDAYS\",\n  454: \"COUPDAYSNC\",\n  455: \"COUPNCD\",\n  456: \"COUPNUM\",\n  457: \"COUPPCD\",\n  458: \"DURATION\",\n  459: \"MDURATION\",\n  460: \"ODDLPRICE\",\n  461: \"ODDLYIELD\",\n  462: \"ODDFPRICE\",\n  463: \"ODDFYIELD\",\n  464: \"RANDBETWEEN\",\n  465: \"WEEKNUM\",\n  466: \"AMORDEGRC\",\n  467: \"AMORLINC\",\n  468: \"CONVERT\",\n  724: \"SHEETJS\",\n  469: \"ACCRINT\",\n  470: \"ACCRINTM\",\n  471: \"WORKDAY\",\n  472: \"NETWORKDAYS\",\n  473: \"GCD\",\n  474: \"MULTINOMIAL\",\n  475: \"LCM\",\n  476: \"FVSCHEDULE\",\n  477: \"CUBEKPIMEMBER\",\n  478: \"CUBESET\",\n  479: \"CUBESETCOUNT\",\n  480: \"IFERROR\",\n  481: \"COUNTIFS\",\n  482: \"SUMIFS\",\n  483: \"AVERAGEIF\",\n  484: \"AVERAGEIFS\"\n};\nvar FtabArgc = {\n  2: 1,\n  3: 1,\n  10: 0,\n  15: 1,\n  16: 1,\n  17: 1,\n  18: 1,\n  19: 0,\n  20: 1,\n  21: 1,\n  22: 1,\n  23: 1,\n  24: 1,\n  25: 1,\n  26: 1,\n  27: 2,\n  30: 2,\n  31: 3,\n  32: 1,\n  33: 1,\n  34: 0,\n  35: 0,\n  38: 1,\n  39: 2,\n  40: 3,\n  41: 3,\n  42: 3,\n  43: 3,\n  44: 3,\n  45: 3,\n  47: 3,\n  48: 2,\n  53: 1,\n  61: 3,\n  63: 0,\n  65: 3,\n  66: 3,\n  67: 1,\n  68: 1,\n  69: 1,\n  70: 1,\n  71: 1,\n  72: 1,\n  73: 1,\n  74: 0,\n  75: 1,\n  76: 1,\n  77: 1,\n  79: 2,\n  80: 2,\n  83: 1,\n  85: 0,\n  86: 1,\n  89: 0,\n  90: 1,\n  94: 0,\n  95: 0,\n  97: 2,\n  98: 1,\n  99: 1,\n  101: 3,\n  102: 3,\n  105: 1,\n  106: 1,\n  108: 2,\n  111: 1,\n  112: 1,\n  113: 1,\n  114: 1,\n  117: 2,\n  118: 1,\n  119: 4,\n  121: 1,\n  126: 1,\n  127: 1,\n  128: 1,\n  129: 1,\n  130: 1,\n  131: 1,\n  133: 1,\n  134: 1,\n  135: 1,\n  136: 2,\n  137: 2,\n  138: 2,\n  140: 1,\n  141: 1,\n  142: 3,\n  143: 4,\n  144: 4,\n  161: 1,\n  162: 1,\n  163: 1,\n  164: 1,\n  165: 2,\n  172: 1,\n  175: 2,\n  176: 2,\n  177: 3,\n  178: 2,\n  179: 1,\n  184: 1,\n  186: 1,\n  189: 3,\n  190: 1,\n  195: 3,\n  196: 3,\n  197: 1,\n  198: 1,\n  199: 3,\n  201: 1,\n  207: 4,\n  210: 3,\n  211: 1,\n  212: 2,\n  213: 2,\n  214: 1,\n  215: 1,\n  225: 0,\n  229: 1,\n  230: 1,\n  231: 1,\n  232: 1,\n  233: 1,\n  234: 1,\n  235: 3,\n  244: 1,\n  247: 4,\n  252: 2,\n  257: 1,\n  261: 1,\n  271: 1,\n  273: 4,\n  274: 2,\n  275: 2,\n  276: 2,\n  277: 3,\n  278: 3,\n  279: 1,\n  280: 3,\n  281: 3,\n  282: 3,\n  283: 1,\n  284: 1,\n  285: 2,\n  286: 4,\n  287: 3,\n  288: 2,\n  289: 4,\n  290: 3,\n  291: 3,\n  292: 3,\n  293: 4,\n  294: 1,\n  295: 3,\n  296: 1,\n  297: 3,\n  298: 1,\n  299: 2,\n  300: 3,\n  301: 3,\n  302: 4,\n  303: 2,\n  304: 2,\n  305: 2,\n  306: 2,\n  307: 2,\n  308: 2,\n  309: 3,\n  310: 2,\n  311: 2,\n  312: 2,\n  313: 2,\n  314: 2,\n  315: 2,\n  316: 4,\n  325: 2,\n  326: 2,\n  327: 2,\n  328: 2,\n  331: 2,\n  332: 2,\n  337: 2,\n  342: 1,\n  343: 1,\n  346: 2,\n  347: 1,\n  350: 4,\n  351: 3,\n  352: 1,\n  353: 2,\n  360: 1,\n  368: 1,\n  369: 1,\n  370: 1,\n  371: 1,\n  372: 1,\n  373: 1,\n  374: 1,\n  375: 1,\n  376: 1,\n  377: 1,\n  378: 1,\n  382: 3,\n  385: 1,\n  392: 1,\n  393: 1,\n  396: 2,\n  397: 2,\n  398: 2,\n  399: 1,\n  400: 1,\n  401: 1,\n  402: 1,\n  403: 1,\n  404: 1,\n  405: 1,\n  406: 1,\n  407: 1,\n  408: 1,\n  409: 1,\n  410: 1,\n  414: 4,\n  415: 1,\n  416: 1,\n  417: 2,\n  420: 1,\n  421: 1,\n  422: 2,\n  424: 1,\n  425: 2,\n  426: 2,\n  427: 2,\n  428: 2,\n  430: 3,\n  438: 3,\n  439: 3,\n  440: 3,\n  443: 2,\n  444: 2,\n  445: 2,\n  446: 2,\n  447: 6,\n  448: 6,\n  449: 2,\n  450: 2,\n  464: 2,\n  468: 3,\n  476: 2,\n  479: 1,\n  480: 2,\n  65535: 0\n};\n/* Part 3 TODO: actually parse formulae */\nfunction ods_to_csf_formula(f/*:string*/)/*:string*/ {\n\tif(f.slice(0,3) == \"of:\") f = f.slice(3);\n\t/* 5.2 Basic Expressions */\n\tif(f.charCodeAt(0) == 61) {\n\t\tf = f.slice(1);\n\t\tif(f.charCodeAt(0) == 61) f = f.slice(1);\n\t}\n\tf = f.replace(/COM\\.MICROSOFT\\./g, \"\");\n\t/* Part 3 Section 5.8 References */\n\tf = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function($$, $1) { return $1.replace(/\\./g,\"\"); });\n\t/* TODO: something other than this */\n\tf = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\n\treturn f.replace(/[;~]/g,\",\").replace(/\\|/g,\";\");\n}\n\nfunction csf_to_ods_formula(f/*:string*/)/*:string*/ {\n\tvar o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g,\":\");\n\t/* TODO: something other than this */\n\treturn o.replace(/;/g, \"|\").replace(/,/g,\";\");\n}\n\nfunction ods_to_csf_3D(r/*:string*/)/*:[string, string]*/ {\n\tvar a = r.split(\":\");\n\tvar s = a[0].split(\".\")[0];\n\treturn [s, a[0].split(\".\")[1] + (a.length > 1 ? (\":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0])) : \"\")];\n}\n\nfunction csf_to_ods_3D(r/*:string*/)/*:string*/ {\n\treturn r.replace(/\\./,\"!\");\n}\n\nvar strs = {}; // shared strings\nvar _ssfopts = {}; // spreadsheet formatting options\n\n\n/*global Map */\nvar browser_has_Map = typeof Map !== 'undefined';\n\nfunction get_sst_id(sst/*:SST*/, str/*:string*/, rev)/*:number*/ {\n\tvar i = 0, len = sst.length;\n\tif(rev) {\n\t\tif(browser_has_Map ? rev.has(str) : Object.prototype.hasOwnProperty.call(rev, str)) {\n\t\t\tvar revarr = browser_has_Map ? rev.get(str) : rev[str];\n\t\t\tfor(; i < revarr.length; ++i) {\n\t\t\t\tif(sst[revarr[i]].t === str) { sst.Count ++; return revarr[i]; }\n\t\t\t}\n\t\t}\n\t} else for(; i < len; ++i) {\n\t\tif(sst[i].t === str) { sst.Count ++; return i; }\n\t}\n\tsst[len] = ({t:str}/*:any*/); sst.Count ++; sst.Unique ++;\n\tif(rev) {\n\t\tif(browser_has_Map) {\n\t\t\tif(!rev.has(str)) rev.set(str, []);\n\t\t\trev.get(str).push(len);\n\t\t} else {\n\t\t\tif(!Object.prototype.hasOwnProperty.call(rev, str)) rev[str] = [];\n\t\t\trev[str].push(len);\n\t\t}\n\t}\n\treturn len;\n}\n\nfunction col_obj_w(C/*:number*/, col) {\n\tvar p = ({min:C+1,max:C+1}/*:any*/);\n\t/* wch (chars), wpx (pixels) */\n\tvar wch = -1;\n\tif(col.MDW) MDW = col.MDW;\n\tif(col.width != null) p.customWidth = 1;\n\telse if(col.wpx != null) wch = px2char(col.wpx);\n\telse if(col.wch != null) wch = col.wch;\n\tif(wch > -1) { p.width = char2width(wch); p.customWidth = 1; }\n\telse if(col.width != null) p.width = col.width;\n\tif(col.hidden) p.hidden = true;\n\tif(col.level != null) { p.outlineLevel = p.level = col.level; }\n\treturn p;\n}\n\nfunction default_margins(margins/*:Margins*/, mode/*:?string*/) {\n\tif(!margins) return;\n\tvar defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\n\tif(mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\n\tif(margins.left   == null) margins.left   = defs[0];\n\tif(margins.right  == null) margins.right  = defs[1];\n\tif(margins.top    == null) margins.top    = defs[2];\n\tif(margins.bottom == null) margins.bottom = defs[3];\n\tif(margins.header == null) margins.header = defs[4];\n\tif(margins.footer == null) margins.footer = defs[5];\n}\n\nfunction get_cell_style(styles/*:Array<any>*/, cell/*:Cell*/, opts) {\n\tvar z = opts.revssf[cell.z != null ? cell.z : \"General\"];\n\tvar i = 0x3c, len = styles.length;\n\tif(z == null && opts.ssf) {\n\t\tfor(; i < 0x188; ++i) if(opts.ssf[i] == null) {\n\t\t\tSSF_load(cell.z, i);\n\t\t\t// $FlowIgnore\n\t\t\topts.ssf[i] = cell.z;\n\t\t\topts.revssf[cell.z] = z = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i = 0; i != len; ++i) if(styles[i].numFmtId === z) return i;\n\tstyles[len] = {\n\t\tnumFmtId:z,\n\t\tfontId:0,\n\t\tfillId:0,\n\t\tborderId:0,\n\t\txfId:0,\n\t\tapplyNumberFormat:1\n\t};\n\treturn len;\n}\n\nfunction safe_format(p/*:Cell*/, fmtid/*:number*/, fillid/*:?number*/, opts, themes, styles) {\n\ttry {\n\t\tif(opts.cellNF) p.z = table_fmt[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(p.t === 'z' && !opts.cellStyles) return;\n\tif(p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);\n\tif((!opts || opts.cellText !== false) && p.t !== 'z') try {\n\t\tif(table_fmt[fmtid] == null) SSF_load(SSFImplicit[fmtid] || \"General\", fmtid);\n\t\tif(p.t === 'e') p.w = p.w || BErr[p.v];\n\t\telse if(fmtid === 0) {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = p.v.toString(10);\n\t\t\t\telse p.w = SSF_general_num(p.v);\n\t\t\t}\n\t\t\telse if(p.t === 'd') {\n\t\t\t\tvar dd = datenum(p.v);\n\t\t\t\tif((dd|0) === dd) p.w = dd.toString(10);\n\t\t\t\telse p.w = SSF_general_num(dd);\n\t\t\t}\n\t\t\telse if(p.v === undefined) return \"\";\n\t\t\telse p.w = SSF_general(p.v,_ssfopts);\n\t\t}\n\t\telse if(p.t === 'd') p.w = SSF_format(fmtid,datenum(p.v),_ssfopts);\n\t\telse p.w = SSF_format(fmtid,p.v,_ssfopts);\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts.cellStyles) return;\n\tif(fillid != null) try {\n\t\tp.s = styles.Fills[fillid];\n\t\tif (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\n\t\t\tp.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\n\t\t}\n\t\tif (p.s.bgColor && p.s.bgColor.theme) {\n\t\t\tp.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\n\t\t}\n\t} catch(e) { if(opts.WTF && styles.Fills) throw e; }\n}\n\nfunction check_ws(ws/*:Worksheet*/, sname/*:string*/, i/*:number*/) {\n\tif(ws && ws['!ref']) {\n\t\tvar range = safe_decode_range(ws['!ref']);\n\t\tif(range.e.c < range.s.c || range.e.r < range.s.r) throw new Error(\"Bad range (\" + i + \"): \" + ws['!ref']);\n\t}\n}\nfunction parse_ws_xml_dim(ws/*:Worksheet*/, s/*:string*/) {\n\tvar d = safe_decode_range(s);\n\tif(d.s.r<=d.e.r && d.s.c<=d.e.c && d.s.r>=0 && d.s.c>=0) ws[\"!ref\"] = encode_range(d);\n}\nvar mergecregex = /<(?:\\w:)?mergeCell ref=\"[A-Z0-9:]+\"\\s*[\\/]?>/g;\nvar sheetdataregex = /<(?:\\w+:)?sheetData[^>]*>([\\s\\S]*)<\\/(?:\\w+:)?sheetData>/;\nvar hlinkregex = /<(?:\\w:)?hyperlink [^>]*>/mg;\nvar dimregex = /\"(\\w*:\\w*)\"/;\nvar colregex = /<(?:\\w:)?col\\b[^>]*[\\/]?>/g;\nvar afregex = /<(?:\\w:)?autoFilter[^>]*([\\/]|>([\\s\\S]*)<\\/(?:\\w:)?autoFilter)>/g;\nvar marginregex= /<(?:\\w:)?pageMargins[^>]*\\/>/g;\nvar sheetprregex = /<(?:\\w:)?sheetPr\\b(?:[^>a-z][^>]*)?\\/>/;\nvar sheetprregex2= /<(?:\\w:)?sheetPr[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetPr)>/;\nvar svsregex = /<(?:\\w:)?sheetViews[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetViews)>/;\n\n/* 18.3 Worksheets */\nfunction parse_ws_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\n\t/* 18.3.1.99 worksheet CT_Worksheet */\n\tvar s = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\tvar refguess/*:Range*/ = ({s: {r:2000000, c:2000000}, e: {r:0, c:0} }/*:any*/);\n\n\tvar data1 = \"\", data2 = \"\";\n\tvar mtch/*:?any*/ = data.match(sheetdataregex);\n\tif(mtch) {\n\t\tdata1 = data.slice(0, mtch.index);\n\t\tdata2 = data.slice(mtch.index + mtch[0].length);\n\t} else data1 = data2 = data;\n\n\t/* 18.3.1.82 sheetPr CT_SheetPr */\n\tvar sheetPr = data1.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\telse if((sheetPr = data1.match(sheetprregex2))) parse_ws_xml_sheetpr2(sheetPr[0], sheetPr[1]||\"\", s, wb, idx, styles, themes);\n\n\t/* 18.3.1.35 dimension CT_SheetDimension */\n\tvar ridx = (data1.match(/<(?:\\w*:)?dimension/)||{index:-1}).index;\n\tif(ridx > 0) {\n\t\tvar ref = data1.slice(ridx,ridx+50).match(dimregex);\n\t\tif(ref) parse_ws_xml_dim(s, ref[1]);\n\t}\n\n\t/* 18.3.1.88 sheetViews CT_SheetViews */\n\tvar svs = data1.match(svsregex);\n\tif(svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\n\n\t/* 18.3.1.17 cols CT_Cols */\n\tvar columns/*:Array<ColInfo>*/ = [];\n\tif(opts.cellStyles) {\n\t\t/* 18.3.1.13 col CT_Col */\n\t\tvar cols = data1.match(colregex);\n\t\tif(cols) parse_ws_xml_cols(columns, cols);\n\t}\n\n\t/* 18.3.1.80 sheetData CT_SheetData ? */\n\tif(mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles);\n\n\t/* 18.3.1.2  autoFilter CT_AutoFilter */\n\tvar afilter = data2.match(afregex);\n\tif(afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\n\n\t/* 18.3.1.55 mergeCells CT_MergeCells */\n\tvar merges/*:Array<Range>*/ = [];\n\tvar _merge = data2.match(mergecregex);\n\tif(_merge) for(ridx = 0; ridx != _merge.length; ++ridx)\n\t\tmerges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\")+1));\n\n\t/* 18.3.1.48 hyperlinks CT_Hyperlinks */\n\tvar hlink = data2.match(hlinkregex);\n\tif(hlink) parse_ws_xml_hlinks(s, hlink, rels);\n\n\t/* 18.3.1.62 pageMargins CT_PageMargins */\n\tvar margins = data2.match(marginregex);\n\tif(margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\n\n\tif(!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\n\tif(opts.sheetRows > 0 && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(columns.length > 0) s[\"!cols\"] = columns;\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\treturn s;\n}\n\nfunction write_ws_xml_merges(merges/*:Array<Range>*/)/*:string*/ {\n\tif(merges.length === 0) return \"\";\n\tvar o = '<mergeCells count=\"' + merges.length + '\">';\n\tfor(var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\n\treturn o + '</mergeCells>';\n}\n\n/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\nfunction parse_ws_xml_sheetpr(sheetPr/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {\n\tvar data = parsexmltag(sheetPr);\n\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\tif(data.codeName) wb.Sheets[idx].CodeName = unescapexml(utf8read(data.codeName));\n}\nfunction parse_ws_xml_sheetpr2(sheetPr/*:string*/, body/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {\n\tparse_ws_xml_sheetpr(sheetPr.slice(0, sheetPr.indexOf(\">\")), s, wb, idx);\n}\nfunction write_ws_xml_sheetpr(ws, wb, idx, opts, o) {\n\tvar needed = false;\n\tvar props = {}, payload = null;\n\tif(opts.bookType !== 'xlsx' && wb.vbaraw) {\n\t\tvar cname = wb.SheetNames[idx];\n\t\ttry { if(wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname; } catch(e) {}\n\t\tneeded = true;\n\t\tprops.codeName = utf8write(escapexml(cname));\n\t}\n\n\tif(ws && ws[\"!outline\"]) {\n\t\tvar outlineprops = {summaryBelow:1, summaryRight:1};\n\t\tif(ws[\"!outline\"].above) outlineprops.summaryBelow = 0;\n\t\tif(ws[\"!outline\"].left) outlineprops.summaryRight = 0;\n\t\tpayload = (payload||\"\") + writextag('outlinePr', null, outlineprops);\n\t}\n\n\tif(!needed && !payload) return;\n\to[o.length] = (writextag('sheetPr', payload, props));\n}\n\n/* 18.3.1.85 sheetProtection CT_SheetProtection */\nvar sheetprot_deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\nvar sheetprot_deftrue = [\n\t\"formatColumns\", \"formatRows\", \"formatCells\",\n\t\"insertColumns\", \"insertRows\", \"insertHyperlinks\",\n\t\"deleteColumns\", \"deleteRows\",\n\t\"sort\", \"autoFilter\", \"pivotTables\"\n];\nfunction write_ws_xml_protection(sp)/*:string*/ {\n\t// algorithmName, hashValue, saltValue, spinCount\n\tvar o = ({sheet:1}/*:any*/);\n\tsheetprot_deffalse.forEach(function(n) { if(sp[n] != null && sp[n]) o[n] = \"1\"; });\n\tsheetprot_deftrue.forEach(function(n) { if(sp[n] != null && !sp[n]) o[n] = \"0\"; });\n\t/* TODO: algorithm */\n\tif(sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\n\treturn writextag('sheetProtection', null, o);\n}\n\nfunction parse_ws_xml_hlinks(s, data/*:Array<string>*/, rels) {\n\tvar dense = Array.isArray(s);\n\tfor(var i = 0; i != data.length; ++i) {\n\t\tvar val = parsexmltag(utf8read(data[i]), true);\n\t\tif(!val.ref) return;\n\t\tvar rel = ((rels || {})['!id']||[])[val.id];\n\t\tif(rel) {\n\t\t\tval.Target = rel.Target;\n\t\t\tif(val.location) val.Target += \"#\"+unescapexml(val.location);\n\t\t} else {\n\t\t\tval.Target = \"#\" + unescapexml(val.location);\n\t\t\trel = {Target: val.Target, TargetMode: 'Internal'};\n\t\t}\n\t\tval.Rel = rel;\n\t\tif(val.tooltip) { val.Tooltip = val.tooltip; delete val.tooltip; }\n\t\tvar rng = safe_decode_range(val.ref);\n\t\tfor(var R=rng.s.r;R<=rng.e.r;++R) for(var C=rng.s.c;C<=rng.e.c;++C) {\n\t\t\tvar addr = encode_cell({c:C,r:R});\n\t\t\tif(dense) {\n\t\t\t\tif(!s[R]) s[R] = [];\n\t\t\t\tif(!s[R][C]) s[R][C] = {t:\"z\",v:undefined};\n\t\t\t\ts[R][C].l = val;\n\t\t\t} else {\n\t\t\t\tif(!s[addr]) s[addr] = {t:\"z\",v:undefined};\n\t\t\t\ts[addr].l = val;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction parse_ws_xml_margins(margin) {\n\tvar o = {};\n\t[\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function(k) {\n\t\tif(margin[k]) o[k] = parseFloat(margin[k]);\n\t});\n\treturn o;\n}\nfunction write_ws_xml_margins(margin)/*:string*/ {\n\tdefault_margins(margin);\n\treturn writextag('pageMargins', null, margin);\n}\n\nfunction parse_ws_xml_cols(columns, cols) {\n\tvar seencol = false;\n\tfor(var coli = 0; coli != cols.length; ++coli) {\n\t\tvar coll = parsexmltag(cols[coli], true);\n\t\tif(coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\n\t\tvar colm=parseInt(coll.min, 10)-1, colM=parseInt(coll.max,10)-1;\n\t\tif(coll.outlineLevel) coll.level = (+coll.outlineLevel || 0);\n\t\tdelete coll.min; delete coll.max; coll.width = +coll.width;\n\t\tif(!seencol && coll.width) { seencol = true; find_mdw_colw(coll.width); }\n\t\tprocess_col(coll);\n\t\twhile(colm <= colM) columns[colm++] = dup(coll);\n\t}\n}\nfunction write_ws_xml_cols(ws, cols)/*:string*/ {\n\tvar o = [\"<cols>\"], col;\n\tfor(var i = 0; i != cols.length; ++i) {\n\t\tif(!(col = cols[i])) continue;\n\t\to[o.length] = (writextag('col', null, col_obj_w(i, col)));\n\t}\n\to[o.length] = \"</cols>\";\n\treturn o.join(\"\");\n}\n\nfunction parse_ws_xml_autofilter(data/*:string*/) {\n\tvar o = { ref: (data.match(/ref=\"([^\"]*)\"/)||[])[1]};\n\treturn o;\n}\nfunction write_ws_xml_autofilter(data, ws, wb, idx)/*:string*/ {\n\tvar ref = typeof data.ref == \"string\" ? data.ref : encode_range(data.ref);\n\tif(!wb.Workbook) wb.Workbook = ({Sheets:[]}/*:any*/);\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names/*: Array<any> */ = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = \"'\" + wb.SheetNames[idx] + \"'!\" + ref; break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref  });\n\treturn writextag(\"autoFilter\", null, {ref:ref});\n}\n\n/* 18.3.1.88 sheetViews CT_SheetViews */\n/* 18.3.1.87 sheetView CT_SheetView */\nvar sviewregex = /<(?:\\w:)?sheetView(?:[^>a-z][^>]*)?\\/?>/;\nfunction parse_ws_xml_sheetviews(data, wb/*:WBWBProps*/) {\n\tif(!wb.Views) wb.Views = [{}];\n\t(data.match(sviewregex)||[]).forEach(function(r/*:string*/, i/*:number*/) {\n\t\tvar tag = parsexmltag(r);\n\t\t// $FlowIgnore\n\t\tif(!wb.Views[i]) wb.Views[i] = {};\n\t\t// $FlowIgnore\n\t\tif(+tag.zoomScale) wb.Views[i].zoom = +tag.zoomScale;\n\t\t// $FlowIgnore\n\t\tif(parsexmlbool(tag.rightToLeft)) wb.Views[i].RTL = true;\n\t});\n}\nfunction write_ws_xml_sheetviews(ws, opts, idx, wb)/*:string*/ {\n\tvar sview = ({workbookViewId:\"0\"}/*:any*/);\n\t// $FlowIgnore\n\tif((((wb||{}).Workbook||{}).Views||[])[0]) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\n\treturn writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\n}\n\nfunction write_ws_xml_cell(cell/*:Cell*/, ref, ws, opts/*::, idx, wb*/)/*:string*/ {\n\tif(cell.c) ws['!comments'].push([ref, cell.c]);\n\tif(cell.v === undefined && typeof cell.f !== \"string\" || cell.t === 'z' && !cell.f) return \"\";\n\tvar vv = \"\";\n\tvar oldt = cell.t, oldv = cell.v;\n\tif(cell.t !== \"z\") switch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'n': vv = ''+cell.v; break;\n\t\tcase 'e': vv = BErr[cell.v]; break;\n\t\tcase 'd':\n\t\t\tif(opts && opts.cellDates) vv = parseDate(cell.v, -1).toISOString();\n\t\t\telse {\n\t\t\t\tcell = dup(cell);\n\t\t\t\tcell.t = 'n';\n\t\t\t\tvv = ''+(cell.v = datenum(parseDate(cell.v)));\n\t\t\t}\n\t\t\tif(typeof cell.z === 'undefined') cell.z = table_fmt[14];\n\t\t\tbreak;\n\t\tdefault: vv = cell.v; break;\n\t}\n\tvar v = writetag('v', escapexml(vv)), o = ({r:ref}/*:any*/);\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tif(os !== 0) o.s = os;\n\tswitch(cell.t) {\n\t\tcase 'n': break;\n\t\tcase 'd': o.t = \"d\"; break;\n\t\tcase 'b': o.t = \"b\"; break;\n\t\tcase 'e': o.t = \"e\"; break;\n\t\tcase 'z': break;\n\t\tdefault: if(cell.v == null) { delete cell.t; break; }\n\t\t\tif(cell.v.length > 32767) throw new Error(\"Text length must not exceed 32767 characters\");\n\t\t\tif(opts && opts.bookSST) {\n\t\t\t\tv = writetag('v', ''+get_sst_id(opts.Strings, cell.v, opts.revStrings));\n\t\t\t\to.t = \"s\"; break;\n\t\t\t}\n\t\t\to.t = \"str\"; break;\n\t}\n\tif(cell.t != oldt) { cell.t = oldt; cell.v = oldv; }\n\tif(typeof cell.f == \"string\" && cell.f) {\n\t\tvar ff = cell.F && cell.F.slice(0, ref.length) == ref ? {t:\"array\", ref:cell.F} : null;\n\t\tv = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\n\t}\n\tif(cell.l) ws['!links'].push([ref, cell.l]);\n\tif(cell.D) o.cm = 1;\n\treturn writextag('c', v, o);\n}\n\nvar parse_ws_xml_data = /*#__PURE__*/(function() {\n\tvar cellregex = /<(?:\\w+:)?c[ \\/>]/, rowregex = /<\\/(?:\\w+:)?row>/;\n\tvar rregex = /r=[\"']([^\"']*)[\"']/, isregex = /<(?:\\w+:)?is>([\\S\\s]*?)<\\/(?:\\w+:)?is>/;\n\tvar refregex = /ref=[\"']([^\"']*)[\"']/;\n\tvar match_v = matchtag(\"v\"), match_f = matchtag(\"f\");\n\nreturn function parse_ws_xml_data(sdata/*:string*/, s, opts, guess/*:Range*/, themes, styles) {\n\tvar ri = 0, x = \"\", cells/*:Array<string>*/ = [], cref/*:?Array<string>*/ = [], idx=0, i=0, cc=0, d=\"\", p/*:any*/;\n\tvar tag, tagr = 0, tagc = 0;\n\tvar sstr, ftag;\n\tvar fmtid = 0, fillid = 0;\n\tvar do_format = Array.isArray(styles.CellXf), cf;\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar sharedf = [];\n\tvar dense = Array.isArray(s);\n\tvar rows/*:Array<RowInfo>*/ = [], rowobj = {}, rowrite = false;\n\tvar sheetStubs = !!opts.sheetStubs;\n\tfor(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\n\t\tx = marr[mt].trim();\n\t\tvar xlen = x.length;\n\t\tif(xlen === 0) continue;\n\n\t\t/* 18.3.1.73 row CT_Row */\n\t\tvar rstarti = 0;\n\t\touta: for(ri = 0; ri < xlen; ++ri) switch(/*x.charCodeAt(ri)*/x[ri]) {\n\t\t\tcase \">\" /*62*/:\n\t\t\t\tif(/*x.charCodeAt(ri-1) != 47*/x[ri-1] != \"/\") { ++ri; break outa; }\n\t\t\t\tif(opts && opts.cellStyles) {\n\t\t\t\t\t// TODO: avoid duplication\n\t\t\t\t\ttag = parsexmltag(x.slice(rstarti,ri), true);\n\t\t\t\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\t\t\t\trowobj = {}; rowrite = false;\n\t\t\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\t\t\tif(tag.hidden == \"1\") { rowrite = true; rowobj.hidden = true; }\n\t\t\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"<\" /*60*/: rstarti = ri; break;\n\t\t}\n\t\tif(rstarti >= ri) break;\n\t\ttag = parsexmltag(x.slice(rstarti,ri), true);\n\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\tif(guess.s.r > tagr - 1) guess.s.r = tagr - 1;\n\t\tif(guess.e.r < tagr - 1) guess.e.r = tagr - 1;\n\n\t\tif(opts && opts.cellStyles) {\n\t\t\trowobj = {}; rowrite = false;\n\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\tif(tag.hidden == \"1\") { rowrite = true; rowobj.hidden = true; }\n\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t}\n\n\t\t/* 18.3.1.4 c CT_Cell */\n\t\tcells = x.slice(ri).split(cellregex);\n\t\tfor(var rslice = 0; rslice != cells.length; ++rslice) if(cells[rslice].trim().charAt(0) != \"<\") break;\n\t\tcells = cells.slice(rslice);\n\t\tfor(ri = 0; ri != cells.length; ++ri) {\n\t\t\tx = cells[ri].trim();\n\t\t\tif(x.length === 0) continue;\n\t\t\tcref = x.match(rregex); idx = ri; i=0; cc=0;\n\t\t\tx = \"<c \" + (x.slice(0,1)==\"<\"?\">\":\"\") + x;\n\t\t\tif(cref != null && cref.length === 2) {\n\t\t\t\tidx = 0; d=cref[1];\n\t\t\t\tfor(i=0; i != d.length; ++i) {\n\t\t\t\t\tif((cc=d.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\t\t\t\tidx = 26*idx + cc;\n\t\t\t\t}\n\t\t\t\t--idx;\n\t\t\t\ttagc = idx;\n\t\t\t} else ++tagc;\n\t\t\tfor(i = 0; i != x.length; ++i) if(x.charCodeAt(i) === 62) break; ++i;\n\t\t\ttag = parsexmltag(x.slice(0,i), true);\n\t\t\tif(!tag.r) tag.r = encode_cell({r:tagr-1, c:tagc});\n\t\t\td = x.slice(i);\n\t\t\tp = ({t:\"\"}/*:any*/);\n\n\t\t\tif((cref=d.match(match_v))!= null && /*::cref != null && */cref[1] !== '') p.v=unescapexml(cref[1]);\n\t\t\tif(opts.cellFormula) {\n\t\t\t\tif((cref=d.match(match_f))!= null && /*::cref != null && */cref[1] !== '') {\n\t\t\t\t\t/* TODO: match against XLSXFutureFunctions */\n\t\t\t\t\tp.f=unescapexml(utf8read(cref[1])).replace(/\\r\\n/g, \"\\n\");\n\t\t\t\t\tif(!opts.xlfn) p.f = _xlfn(p.f);\n\t\t\t\t\tif(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"array\"') > -1) {\n\t\t\t\t\t\tp.F = (d.match(refregex)||[])[1];\n\t\t\t\t\t\tif(p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\n\t\t\t\t\t} else if(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n\t\t\t\t\t\t// TODO: parse formula\n\t\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\t\tvar ___f = unescapexml(utf8read(cref[1]));\n\t\t\t\t\t\tif(!opts.xlfn) ___f = _xlfn(___f);\n\t\t\t\t\t\tsharedf[parseInt(ftag.si, 10)] = [ftag, ___f, tag.r];\n\t\t\t\t\t}\n\t\t\t\t} else if((cref=d.match(/<f[^>]*\\/>/))) {\n\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\tif(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2]/*[0].ref*/, tag.r);\n\t\t\t\t}\n\t\t\t\t/* TODO: factor out contains logic */\n\t\t\t\tvar _tag = decode_cell(tag.r);\n\t\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\tif(_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r)\n\t\t\t\t\t\tif(_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\tp.F = arrayf[i][1];\n\t\t\t}\n\n\t\t\tif(tag.t == null && p.v === undefined) {\n\t\t\t\tif(p.f || p.F) {\n\t\t\t\t\tp.v = 0; p.t = \"n\";\n\t\t\t\t} else if(!sheetStubs) continue;\n\t\t\t\telse p.t = \"z\";\n\t\t\t}\n\t\t\telse p.t = tag.t || \"n\";\n\t\t\tif(guess.s.c > tagc) guess.s.c = tagc;\n\t\t\tif(guess.e.c < tagc) guess.e.c = tagc;\n\t\t\t/* 18.18.11 t ST_CellType */\n\t\t\tswitch(p.t) {\n\t\t\t\tcase 'n':\n\t\t\t\t\tif(p.v == \"\" || p.v == null) {\n\t\t\t\t\t\tif(!sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else p.v = parseFloat(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 's':\n\t\t\t\t\tif(typeof p.v == 'undefined') {\n\t\t\t\t\t\tif(!sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsstr = strs[parseInt(p.v, 10)];\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tp.r = sstr.r;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'str':\n\t\t\t\t\tp.t = \"s\";\n\t\t\t\t\tp.v = (p.v!=null) ? utf8read(p.v) : '';\n\t\t\t\t\tif(opts.cellHTML) p.h = escapehtml(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'inlineStr':\n\t\t\t\t\tcref = d.match(isregex);\n\t\t\t\t\tp.t = 's';\n\t\t\t\t\tif(cref != null && (sstr = parse_si(cref[1]))) {\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t} else p.v = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'b': p.v = parsexmlbool(p.v); break;\n\t\t\t\tcase 'd':\n\t\t\t\t\tif(opts.cellDates) p.v = parseDate(p.v, 1);\n\t\t\t\t\telse { p.v = datenum(parseDate(p.v, 1)); p.t = 'n'; }\n\t\t\t\t\tbreak;\n\t\t\t\t/* error string in .w, number in .v */\n\t\t\t\tcase 'e':\n\t\t\t\t\tif(!opts || opts.cellText !== false) p.w = p.v;\n\t\t\t\t\tp.v = RBErr[p.v]; break;\n\t\t\t}\n\t\t\t/* formatting */\n\t\t\tfmtid = fillid = 0;\n\t\t\tcf = null;\n\t\t\tif(do_format && tag.s !== undefined) {\n\t\t\t\tcf = styles.CellXf[tag.s];\n\t\t\t\tif(cf != null) {\n\t\t\t\t\tif(cf.numFmtId != null) fmtid = cf.numFmtId;\n\t\t\t\t\tif(opts.cellStyles) {\n\t\t\t\t\t\tif(cf.fillId != null) fillid = cf.fillId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsafe_format(p, fmtid, fillid, opts, themes, styles);\n\t\t\tif(opts.cellDates && do_format && p.t == 'n' && fmt_is_date(table_fmt[fmtid])) { p.t = 'd'; p.v = numdate(p.v); }\n\t\t\tif(tag.cm && opts.xlmeta) {\n\t\t\t\tvar cm = (opts.xlmeta.Cell||[])[+tag.cm-1];\n\t\t\t\tif(cm && cm.type == 'XLDAPR') p.D = true;\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\tvar _r = decode_cell(tag.r);\n\t\t\t\tif(!s[_r.r]) s[_r.r] = [];\n\t\t\t\ts[_r.r][_r.c] = p;\n\t\t\t} else s[tag.r] = p;\n\t\t}\n\t}\n\tif(rows.length > 0) s['!rows'] = rows;\n}; })();\n\nfunction write_ws_xml_data(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*//*::, rels*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], r/*:Array<string>*/ = [], range = safe_decode_range(ws['!ref']), cell=\"\", ref, rr = \"\", cols/*:Array<string>*/ = [], R=0, C=0, rows = ws['!rows'];\n\tvar dense = Array.isArray(ws);\n\tvar params = ({r:rr}/*:any*/), row/*:RowInfo*/, height = -1;\n\tfor(C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\tfor(R = range.s.r; R <= range.e.r; ++R) {\n\t\tr = [];\n\t\trr = encode_row(R);\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tref = cols[C] + rr;\n\t\t\tvar _cell = dense ? (ws[R]||[])[C]: ws[ref];\n\t\t\tif(_cell === undefined) continue;\n\t\t\tif((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb)) != null) r.push(cell);\n\t\t}\n\t\tif(r.length > 0 || (rows && rows[R])) {\n\t\t\tparams = ({r:rr}/*:any*/);\n\t\t\tif(rows && rows[R]) {\n\t\t\t\trow = rows[R];\n\t\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\t\theight = -1;\n\t\t\t\tif(row.hpx) height = px2pt(row.hpx);\n\t\t\t\telse if(row.hpt) height = row.hpt;\n\t\t\t\tif(height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\t\tif(row.level) { params.outlineLevel = row.level; }\n\t\t\t}\n\t\t\to[o.length] = (writextag('row', r.join(\"\"), params));\n\t\t}\n\t}\n\tif(rows) for(; R < rows.length; ++R) {\n\t\tif(rows && rows[R]) {\n\t\t\tparams = ({r:R+1}/*:any*/);\n\t\t\trow = rows[R];\n\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\theight = -1;\n\t\t\tif (row.hpx) height = px2pt(row.hpx);\n\t\t\telse if (row.hpt) height = row.hpt;\n\t\t\tif (height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\tif (row.level) { params.outlineLevel = row.level; }\n\t\t\to[o.length] = (writextag('row', \"\", params));\n\t\t}\n\t}\n\treturn o.join(\"\");\n}\n\nfunction write_ws_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('worksheet', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t'xmlns:r': XMLNS.r\n\t})];\n\tvar s = wb.SheetNames[idx], sidx = 0, rdata = \"\";\n\tvar ws = wb.Sheets[s];\n\tif(ws == null) ws = {};\n\tvar ref = ws['!ref'] || 'A1';\n\tvar range = safe_decode_range(ref);\n\tif(range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + ref + \" exceeds format limit A1:XFD1048576\");\n\t\trange.e.c = Math.min(range.e.c, 0x3FFF);\n\t\trange.e.r = Math.min(range.e.c, 0xFFFFF);\n\t\tref = encode_range(range);\n\t}\n\tif(!rels) rels = {};\n\tws['!comments'] = [];\n\tvar _drawing = [];\n\n\twrite_ws_xml_sheetpr(ws, wb, idx, opts, o);\n\n\to[o.length] = (writextag('dimension', null, {'ref': ref}));\n\n\to[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\n\n\t/* TODO: store in WB, process styles */\n\tif(opts.sheetFormat) o[o.length] = (writextag('sheetFormatPr', null, {\n\t\tdefaultRowHeight:opts.sheetFormat.defaultRowHeight||'16',\n\t\tbaseColWidth:opts.sheetFormat.baseColWidth||'10',\n\t\toutlineLevelRow:opts.sheetFormat.outlineLevelRow||'7'\n\t}));\n\n\tif(ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = (write_ws_xml_cols(ws, ws['!cols']));\n\n\to[sidx = o.length] = '<sheetData/>';\n\tws['!links'] = [];\n\tif(ws['!ref'] != null) {\n\t\trdata = write_ws_xml_data(ws, opts, idx, wb, rels);\n\t\tif(rdata.length > 0) o[o.length] = (rdata);\n\t}\n\tif(o.length>sidx+1) { o[o.length] = ('</sheetData>'); o[sidx]=o[sidx].replace(\"/>\",\">\"); }\n\n\t/* sheetCalcPr */\n\n\tif(ws['!protect']) o[o.length] = write_ws_xml_protection(ws['!protect']);\n\n\t/* protectedRanges */\n\t/* scenarios */\n\n\tif(ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);\n\n\t/* sortState */\n\t/* dataConsolidate */\n\t/* customSheetViews */\n\n\tif(ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = (write_ws_xml_merges(ws['!merges']));\n\n\t/* phoneticPr */\n\t/* conditionalFormatting */\n\t/* dataValidations */\n\n\tvar relc = -1, rel, rId = -1;\n\tif(/*::(*/ws['!links']/*::||[])*/.length > 0) {\n\t\to[o.length] = \"<hyperlinks>\";\n\t\t/*::(*/ws['!links']/*::||[])*/.forEach(function(l) {\n\t\t\tif(!l[1].Target) return;\n\t\t\trel = ({\"ref\":l[0]}/*:any*/);\n\t\t\tif(l[1].Target.charAt(0) != \"#\") {\n\t\t\t\trId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#.*$/, \"\"), RELS.HLINK);\n\t\t\t\trel[\"r:id\"] = \"rId\"+rId;\n\t\t\t}\n\t\t\tif((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc+1));\n\t\t\tif(l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\n\t\t\to[o.length] = writextag(\"hyperlink\",null,rel);\n\t\t});\n\t\to[o.length] = \"</hyperlinks>\";\n\t}\n\tdelete ws['!links'];\n\n\t/* printOptions */\n\n\tif(ws['!margins'] != null) o[o.length] =  write_ws_xml_margins(ws['!margins']);\n\n\t/* pageSetup */\n\t/* headerFooter */\n\t/* rowBreaks */\n\t/* colBreaks */\n\t/* customProperties */\n\t/* cellWatches */\n\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) o[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {numberStoredAsText:1, sqref:ref}));\n\n\t/* smartTags */\n\n\tif(_drawing.length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n\t\to[o.length] = writextag(\"drawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!drawing'] = _drawing;\n\t}\n\n\tif(ws['!comments'].length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\to[o.length] = writextag(\"legacyDrawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!legacy'] = rId;\n\t}\n\n\t/* legacyDrawingHF */\n\t/* picture */\n\t/* oleObjects */\n\t/* controls */\n\t/* webPublishItems */\n\t/* tableParts */\n\t/* extLst */\n\n\tif(o.length>1) { o[o.length] = ('</worksheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.726 BrtRowHdr */\nfunction parse_BrtRowHdr(data, length) {\n\tvar z = ({}/*:any*/);\n\tvar tgt = data.l + length;\n\tz.r = data.read_shift(4);\n\tdata.l += 4; // TODO: ixfe\n\tvar miyRw = data.read_shift(2);\n\tdata.l += 1; // TODO: top/bot padding\n\tvar flags = data.read_shift(1);\n\tdata.l = tgt;\n\tif(flags & 0x07) z.level = flags & 0x07;\n\tif(flags & 0x10) z.hidden = true;\n\tif(flags & 0x20) z.hpt = miyRw / 20;\n\treturn z;\n}\nfunction write_BrtRowHdr(R/*:number*/, range, ws) {\n\tvar o = new_buf(17+8*16);\n\tvar row = (ws['!rows']||[])[R]||{};\n\to.write_shift(4, R);\n\n\to.write_shift(4, 0); /* TODO: ixfe */\n\n\tvar miyRw = 0x0140;\n\tif(row.hpx) miyRw = px2pt(row.hpx) * 20;\n\telse if(row.hpt) miyRw = row.hpt * 20;\n\to.write_shift(2, miyRw);\n\n\to.write_shift(1, 0); /* top/bot padding */\n\n\tvar flags = 0x0;\n\tif(row.level) flags |= row.level;\n\tif(row.hidden) flags |= 0x10;\n\tif(row.hpx || row.hpt) flags |= 0x20;\n\to.write_shift(1, flags);\n\n\to.write_shift(1, 0); /* phonetic guide */\n\n\t/* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\n\tvar ncolspan = 0, lcs = o.l;\n\to.l += 4;\n\n\tvar caddr = {r:R, c:0};\n\tfor(var i = 0; i < 16; ++i) {\n\t\tif((range.s.c > ((i+1) << 10)) || (range.e.c < (i << 10))) continue;\n\t\tvar first = -1, last = -1;\n\t\tfor(var j = (i<<10); j < ((i+1)<<10); ++j) {\n\t\t\tcaddr.c = j;\n\t\t\tvar cell = Array.isArray(ws) ? (ws[caddr.r]||[])[caddr.c] : ws[encode_cell(caddr)];\n\t\t\tif(cell) { if(first < 0) first = j; last = j; }\n\t\t}\n\t\tif(first < 0) continue;\n\t\t++ncolspan;\n\t\to.write_shift(4, first);\n\t\to.write_shift(4, last);\n\t}\n\n\tvar l = o.l;\n\to.l = lcs;\n\to.write_shift(4, ncolspan);\n\to.l = l;\n\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_row_header(ba, ws, range, R) {\n\tvar o = write_BrtRowHdr(R, range, ws);\n\tif((o.length > 17) || (ws['!rows']||[])[R]) write_record(ba, 0x0000 /* BrtRowHdr */, o);\n}\n\n/* [MS-XLSB] 2.4.820 BrtWsDim */\nvar parse_BrtWsDim = parse_UncheckedRfX;\nvar write_BrtWsDim = write_UncheckedRfX;\n\n/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\nfunction parse_BrtWsFmtInfo(/*::data, length*/) {\n}\n//function write_BrtWsFmtInfo(ws, o) { }\n\n/* [MS-XLSB] 2.4.823 BrtWsProp */\nfunction parse_BrtWsProp(data, length) {\n\tvar z = {};\n\tvar f = data[data.l]; ++data.l;\n\tz.above = !(f & 0x40);\n\tz.left  = !(f & 0x80);\n\t/* TODO: pull flags */\n\tdata.l += 18;\n\tz.name = parse_XLSBCodeName(data, length - 19);\n\treturn z;\n}\nfunction write_BrtWsProp(str, outl, o) {\n\tif(o == null) o = new_buf(84+4*str.length);\n\tvar f = 0xC0;\n\tif(outl) {\n\t\tif(outl.above) f &= ~0x40;\n\t\tif(outl.left)  f &= ~0x80;\n\t}\n\to.write_shift(1, f);\n\tfor(var i = 1; i < 3; ++i) o.write_shift(1,0);\n\twrite_BrtColor({auto:1}, o);\n\to.write_shift(-4,-1);\n\to.write_shift(-4,-1);\n\twrite_XLSBCodeName(str, o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.306 BrtCellBlank */\nfunction parse_BrtCellBlank(data) {\n\tvar cell = parse_XLSBCell(data);\n\treturn [cell];\n}\nfunction write_BrtCellBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\treturn write_XLSBCell(ncell, o);\n}\nfunction parse_BrtShortBlank(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\treturn [cell];\n}\nfunction write_BrtShortBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(4);\n\treturn write_XLSBShortCell(ncell, o);\n}\n\n/* [MS-XLSB] 2.4.307 BrtCellBool */\nfunction parse_BrtCellBool(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtCellBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\nfunction parse_BrtShortBool(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtShortBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(5);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.308 BrtCellError */\nfunction parse_BrtCellError(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\nfunction write_BrtCellError(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v);\n\treturn o;\n}\nfunction parse_BrtShortError(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\nfunction write_BrtShortError(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(1, cell.v);\n\to.write_shift(2, 0);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n\n/* [MS-XLSB] 2.4.311 BrtCellIsst */\nfunction parse_BrtCellIsst(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtCellIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\nfunction parse_BrtShortIsst(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtShortIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.313 BrtCellReal */\nfunction parse_BrtCellReal(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(16);\n\twrite_XLSBCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\nfunction parse_BrtShortReal(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtShortReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.314 BrtCellRk */\nfunction parse_BrtCellRk(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\nfunction parse_BrtShortRk(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtShortRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtCellRString */\nfunction parse_BrtCellRString(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RichStr(data);\n\treturn [cell, value, 'is'];\n}\n\n/* [MS-XLSB] 2.4.317 BrtCellSt */\nfunction parse_BrtCellSt(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtCellSt(cell, ncell, o) {\n\tif(o == null) o = new_buf(12 + 4 * cell.v.length);\n\twrite_XLSBCell(ncell, o);\n\twrite_XLWideString(cell.v, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction parse_BrtShortSt(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtShortSt(cell, ncell, o) {\n\tif(o == null) o = new_buf(8 + 4 * cell.v.length);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_XLWideString(cell.v, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.653 BrtFmlaBool */\nfunction parse_BrtFmlaBool(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'b'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.654 BrtFmlaError */\nfunction parse_BrtFmlaError(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'e'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.655 BrtFmlaNum */\nfunction parse_BrtFmlaNum(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_Xnum(data);\n\tvar o = [cell, value, 'n'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.656 BrtFmlaString */\nfunction parse_BrtFmlaString(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_XLWideString(data);\n\tvar o = [cell, value, 'str'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.682 BrtMergeCell */\nvar parse_BrtMergeCell = parse_UncheckedRfX;\nvar write_BrtMergeCell = write_UncheckedRfX;\n/* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\nfunction write_BrtBeginMergeCells(cnt, o) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(4, cnt);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.662 BrtHLink */\nfunction parse_BrtHLink(data, length/*::, opts*/) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar relId = parse_XLNullableWideString(data);\n\tvar loc = parse_XLWideString(data);\n\tvar tooltip = parse_XLWideString(data);\n\tvar display = parse_XLWideString(data);\n\tdata.l = end;\n\tvar o = ({rfx:rfx, relId:relId, loc:loc, display:display}/*:any*/);\n\tif(tooltip) o.Tooltip = tooltip;\n\treturn o;\n}\nfunction write_BrtHLink(l, rId) {\n\tvar o = new_buf(50+4*(l[1].Target.length + (l[1].Tooltip || \"\").length));\n\twrite_UncheckedRfX({s:decode_cell(l[0]), e:decode_cell(l[0])}, o);\n\twrite_RelID(\"rId\" + rId, o);\n\tvar locidx = l[1].Target.indexOf(\"#\");\n\tvar loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx+1);\n\twrite_XLWideString(loc || \"\", o);\n\twrite_XLWideString(l[1].Tooltip || \"\", o);\n\twrite_XLWideString(\"\", o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.692 BrtPane */\nfunction parse_BrtPane(/*data, length, opts*/) {\n}\n\n/* [MS-XLSB] 2.4.6 BrtArrFmla */\nfunction parse_BrtArrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_RfX(data, 16);\n\tvar fAlwaysCalc = data.read_shift(1);\n\tvar o = [rfx]; o[2] = fAlwaysCalc;\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.750 BrtShrFmla */\nfunction parse_BrtShrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar o = [rfx];\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t\tdata.l = end;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtColInfo */\n/* TODO: once XLS ColInfo is set, combine the functions */\nfunction write_BrtColInfo(C/*:number*/, col, o) {\n\tif(o == null) o = new_buf(18);\n\tvar p = col_obj_w(C, col);\n\to.write_shift(-4, C);\n\to.write_shift(-4, C);\n\to.write_shift(4, (p.width || 10) * 256);\n\to.write_shift(4, 0/*ixfe*/); // style\n\tvar flags = 0;\n\tif(col.hidden) flags |= 0x01;\n\tif(typeof p.width == 'number') flags |= 0x02;\n\tif(col.level) flags |= (col.level << 8);\n\to.write_shift(2, flags); // bit flag\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.678 BrtMargins */\nvar BrtMarginKeys = [\"left\",\"right\",\"top\",\"bottom\",\"header\",\"footer\"];\nfunction parse_BrtMargins(data/*::, length, opts*/)/*:Margins*/ {\n\tvar margins = ({}/*:any*/);\n\tBrtMarginKeys.forEach(function(k) { margins[k] = parse_Xnum(data, 8); });\n\treturn margins;\n}\nfunction write_BrtMargins(margins/*:Margins*/, o) {\n\tif(o == null) o = new_buf(6*8);\n\tdefault_margins(margins);\n\tBrtMarginKeys.forEach(function(k) { write_Xnum((margins/*:any*/)[k], o); });\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.299 BrtBeginWsView */\nfunction parse_BrtBeginWsView(data/*::, length, opts*/) {\n\tvar f = data.read_shift(2);\n\tdata.l += 28;\n\treturn { RTL: f & 0x20 };\n}\nfunction write_BrtBeginWsView(ws, Workbook, o) {\n\tif(o == null) o = new_buf(30);\n\tvar f = 0x39c;\n\tif((((Workbook||{}).Views||[])[0]||{}).RTL) f |= 0x20;\n\to.write_shift(2, f); // bit flag\n\to.write_shift(4, 0);\n\to.write_shift(4, 0); // view first row\n\to.write_shift(4, 0); // view first col\n\to.write_shift(1, 0); // gridline color ICV\n\to.write_shift(1, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 100); // zoom scale\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(4, 0); // workbook view id\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\nfunction write_BrtCellIgnoreEC(ref) {\n\tvar o = new_buf(24);\n\to.write_shift(4, 4);\n\to.write_shift(4, 1);\n\twrite_UncheckedRfX(ref, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.748 BrtSheetProtection */\nfunction write_BrtSheetProtection(sp, o) {\n\tif(o == null) o = new_buf(16*4+2);\n\to.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\n\to.write_shift(4, 1); // this record should not be written if no protection\n\t[\n\t\t[\"objects\",             false], // fObjects\n\t\t[\"scenarios\",           false], // fScenarios\n\t\t[\"formatCells\",          true], // fFormatCells\n\t\t[\"formatColumns\",        true], // fFormatColumns\n\t\t[\"formatRows\",           true], // fFormatRows\n\t\t[\"insertColumns\",        true], // fInsertColumns\n\t\t[\"insertRows\",           true], // fInsertRows\n\t\t[\"insertHyperlinks\",     true], // fInsertHyperlinks\n\t\t[\"deleteColumns\",        true], // fDeleteColumns\n\t\t[\"deleteRows\",           true], // fDeleteRows\n\t\t[\"selectLockedCells\",   false], // fSelLockedCells\n\t\t[\"sort\",                 true], // fSort\n\t\t[\"autoFilter\",           true], // fAutoFilter\n\t\t[\"pivotTables\",          true], // fPivotTables\n\t\t[\"selectUnlockedCells\", false]  // fSelUnlockedCells\n\t].forEach(function(n) {\n\t\t/*:: if(o == null) throw \"unreachable\"; */\n\t\tif(n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);\n\t\telse      o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\n\t});\n\treturn o;\n}\n\nfunction parse_BrtDVal(/*data, length, opts*/) {\n}\nfunction parse_BrtDVal14(/*data, length, opts*/) {\n}\n/* [MS-XLSB] 2.1.7.61 Worksheet */\nfunction parse_ws_bin(data, _opts, idx, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar s/*:Worksheet*/ = (opts.dense ? [] : {});\n\n\tvar ref;\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false, end = false;\n\tvar row, p, cf, R, C, addr, sstr, rr, cell/*:Cell*/;\n\tvar merges/*:Array<Range>*/ = [];\n\topts.biff = 12;\n\topts['!row'] = 0;\n\n\tvar ai = 0, af = false;\n\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar sharedf = {};\n\tvar supbooks = opts.supbooks || /*::(*/wb/*:: :any)*/.supbooks || ([[]]/*:any*/);\n\tsupbooks.sharedf = sharedf;\n\tsupbooks.arrayf = arrayf;\n\tsupbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function(x) { return x.name; });\n\tif(!opts.supbooks) {\n\t\topts.supbooks = supbooks;\n\t\tif(wb.Names) for(var i = 0; i < wb.Names.length; ++i) supbooks[0][i+1] = wb.Names[i];\n\t}\n\n\tvar colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];\n\tvar seencol = false;\n\n\tXLSBRecordEnum[0x0010] = { n:\"BrtShortReal\", f:parse_BrtShortReal };\n\n\tvar cm, vm;\n\n\trecordhopper(data, function ws_parse(val, RR, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0094: /* 'BrtWsDim' */\n\t\t\t\tref = val; break;\n\t\t\tcase 0x0000: /* 'BrtRowHdr' */\n\t\t\t\trow = val;\n\t\t\t\tif(opts.sheetRows && opts.sheetRows <= row.r) end=true;\n\t\t\t\trr = encode_row(R = row.r);\n\t\t\t\topts['!row'] = row.r;\n\t\t\t\tif(val.hidden || val.hpt || val.level != null) {\n\t\t\t\t\tif(val.hpt) val.hpx = pt2px(val.hpt);\n\t\t\t\t\trowinfo[val.r] = val;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0002: /* 'BrtCellRk' */\n\t\t\tcase 0x0003: /* 'BrtCellError' */\n\t\t\tcase 0x0004: /* 'BrtCellBool' */\n\t\t\tcase 0x0005: /* 'BrtCellReal' */\n\t\t\tcase 0x0006: /* 'BrtCellSt' */\n\t\t\tcase 0x0007: /* 'BrtCellIsst' */\n\t\t\tcase 0x0008: /* 'BrtFmlaString' */\n\t\t\tcase 0x0009: /* 'BrtFmlaNum' */\n\t\t\tcase 0x000A: /* 'BrtFmlaBool' */\n\t\t\tcase 0x000B: /* 'BrtFmlaError' */\n\t\t\tcase 0x000D: /* 'BrtShortRk' */\n\t\t\tcase 0x000E: /* 'BrtShortError' */\n\t\t\tcase 0x000F: /* 'BrtShortBool' */\n\t\t\tcase 0x0010: /* 'BrtShortReal' */\n\t\t\tcase 0x0011: /* 'BrtShortSt' */\n\t\t\tcase 0x0012: /* 'BrtShortIsst' */\n\t\t\tcase 0x003E: /* 'BrtCellRString' */\n\t\t\t\tp = ({t:val[2]}/*:any*/);\n\t\t\t\tswitch(val[2]) {\n\t\t\t\t\tcase 'n': p.v = val[1]; break;\n\t\t\t\t\tcase 's': sstr = strs[val[1]]; p.v = sstr.t; p.r = sstr.r; break;\n\t\t\t\t\tcase 'b': p.v = val[1] ? true : false; break;\n\t\t\t\t\tcase 'e': p.v = val[1]; if(opts.cellText !== false) p.w = BErr[p.v]; break;\n\t\t\t\t\tcase 'str': p.t = 's'; p.v = val[1]; break;\n\t\t\t\t\tcase 'is': p.t = 's'; p.v = val[1].t; break;\n\t\t\t\t}\n\t\t\t\tif((cf = styles.CellXf[val[0].iStyleRef])) safe_format(p,cf.numFmtId,null,opts, themes, styles);\n\t\t\t\tC = val[0].c == -1 ? C + 1 : val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\taf = false;\n\t\t\t\t\tfor(ai = 0; ai < arrayf.length; ++ai) {\n\t\t\t\t\t\tvar aii = arrayf[ai];\n\t\t\t\t\t\tif(row.r >= aii[0].s.r && row.r <= aii[0].e.r)\n\t\t\t\t\t\t\tif(C >= aii[0].s.c && C <= aii[0].e.c) {\n\t\t\t\t\t\t\t\tp.F = encode_range(aii[0]); af = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!af && val.length > 3) p.f = val[3];\n\t\t\t\t}\n\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(opts.cellDates && cf && p.t == 'n' && fmt_is_date(table_fmt[cf.numFmtId])) {\n\t\t\t\t\tvar _d = SSF_parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t\t\t\t}\n\t\t\t\tif(cm) {\n\t\t\t\t\tif(cm.type == 'XLDAPR') p.D = true;\n\t\t\t\t\tcm = void 0;\n\t\t\t\t}\n\t\t\t\tif(vm) vm = void 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0001: /* 'BrtCellBlank' */\n\t\t\tcase 0x000C: /* 'BrtShortBlank' */\n\t\t\t\tif(!opts.sheetStubs || pass) break;\n\t\t\t\tp = ({t:'z',v:void 0}/*:any*/);\n\t\t\t\tC = val[0].c == -1 ? C + 1 : val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(cm) {\n\t\t\t\t\tif(cm.type == 'XLDAPR') p.D = true;\n\t\t\t\t\tcm = void 0;\n\t\t\t\t}\n\t\t\t\tif(vm) vm = void 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00B0: /* 'BrtMergeCell' */\n\t\t\t\tmerges.push(val); break;\n\n\t\t\tcase 0x0031: { /* 'BrtCellMeta' */\n\t\t\t\tcm = ((opts.xlmeta||{}).Cell||[])[val-1];\n\t\t\t} break;\n\n\t\t\tcase 0x01EE: /* 'BrtHLink' */\n\t\t\t\tvar rel = rels['!id'][val.relId];\n\t\t\t\tif(rel) {\n\t\t\t\t\tval.Target = rel.Target;\n\t\t\t\t\tif(val.loc) val.Target += \"#\"+val.loc;\n\t\t\t\t\tval.Rel = rel;\n\t\t\t\t} else if(val.relId == '') {\n\t\t\t\t\tval.Target = \"#\" + val.loc;\n\t\t\t\t}\n\t\t\t\tfor(R=val.rfx.s.r;R<=val.rfx.e.r;++R) for(C=val.rfx.s.c;C<=val.rfx.e.c;++C) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!s[R]) s[R] = [];\n\t\t\t\t\t\tif(!s[R][C]) s[R][C] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[R][C].l = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddr = encode_cell({c:C,r:R});\n\t\t\t\t\t\tif(!s[addr]) s[addr] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[addr].l = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01AA: /* 'BrtArrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tarrayf.push(val);\n\t\t\t\tcell = ((opts.dense ? s[R][C] : s[encode_col(C) + rr])/*:any*/);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tcell.F = encode_range(val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x01AB: /* 'BrtShrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tsharedf[encode_cell(val[0].s)] = val[1];\n\t\t\t\tcell = (opts.dense ? s[R][C] : s[encode_col(C) + rr]);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tbreak;\n\n\t\t\t/* identical to 'ColInfo' in XLS */\n\t\t\tcase 0x003C: /* 'BrtColInfo' */\n\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, hidden: !!(val.flags & 0x01), level: val.level };\n\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00A1: /* 'BrtBeginAFilter' */\n\t\t\t\ts['!autofilter'] = { ref:encode_range(val) };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\t\ts['!margins'] = val;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0093: /* 'BrtWsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tif(val.above || val.left) s['!outline'] = { above: val.above, left: val.left };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0089: /* 'BrtBeginWsView' */\n\t\t\t\tif(!wb.Views) wb.Views = [{}];\n\t\t\t\tif(!wb.Views[0]) wb.Views[0] = {};\n\t\t\t\tif(val.RTL) wb.Views[0].RTL = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01E5: /* 'BrtWsFmtInfo' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0040: /* 'BrtDVal' */\n\t\t\tcase 0x041D: /* 'BrtDVal14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0097: /* 'BrtPane' */\n\t\t\t\tbreak;\n\t\t\tcase 0x0098: /* 'BrtSel' */\n\t\t\tcase 0x00AF: /* 'BrtAFilterDateGroupItem' */\n\t\t\tcase 0x0284: /* 'BrtActiveX' */\n\t\t\tcase 0x0271: /* 'BrtBigName' */\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x018C: /* 'BrtBrk' */\n\t\t\tcase 0x0458: /* 'BrtCFIcon' */\n\t\t\tcase 0x047A: /* 'BrtCFRuleExt' */\n\t\t\tcase 0x01D7: /* 'BrtCFVO' */\n\t\t\tcase 0x041A: /* 'BrtCFVO14' */\n\t\t\tcase 0x0289: /* 'BrtCellIgnoreEC' */\n\t\t\tcase 0x0451: /* 'BrtCellIgnoreEC14' */\n\t\t\tcase 0x024D: /* 'BrtCellSmartTagProperty' */\n\t\t\tcase 0x025F: /* 'BrtCellWatch' */\n\t\t\tcase 0x0234: /* 'BrtColor' */\n\t\t\tcase 0x041F: /* 'BrtColor14' */\n\t\t\tcase 0x00A8: /* 'BrtColorFilter' */\n\t\t\tcase 0x00AE: /* 'BrtCustomFilter' */\n\t\t\tcase 0x049C: /* 'BrtCustomFilter14' */\n\t\t\tcase 0x01F3: /* 'BrtDRef' */\n\t\t\tcase 0x01FB: /* 'BrtDXF' */\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\tcase 0x00AB: /* 'BrtDynamicFilter' */\n\t\t\tcase 0x00A7: /* 'BrtFilter' */\n\t\t\tcase 0x0499: /* 'BrtFilter14' */\n\t\t\tcase 0x00A9: /* 'BrtIconFilter' */\n\t\t\tcase 0x049D: /* 'BrtIconFilter14' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x0295: /* 'BrtListPart' */\n\t\t\tcase 0x027F: /* 'BrtOleObject' */\n\t\t\tcase 0x01DE: /* 'BrtPageSetup' */\n\t\t\tcase 0x0219: /* 'BrtPhoneticInfo' */\n\t\t\tcase 0x01DD: /* 'BrtPrintOptions' */\n\t\t\tcase 0x0218: /* 'BrtRangeProtection' */\n\t\t\tcase 0x044F: /* 'BrtRangeProtection14' */\n\t\t\tcase 0x02A8: /* 'BrtRangeProtectionIso' */\n\t\t\tcase 0x0450: /* 'BrtRangeProtectionIso14' */\n\t\t\tcase 0x0400: /* 'BrtRwDescent' */\n\t\t\tcase 0x0297: /* 'BrtSheetCalcProp' */\n\t\t\tcase 0x0217: /* 'BrtSheetProtection' */\n\t\t\tcase 0x02A6: /* 'BrtSheetProtectionIso' */\n\t\t\tcase 0x01F8: /* 'BrtSlc' */\n\t\t\tcase 0x0413: /* 'BrtSparkline' */\n\t\t\tcase 0x01AC: /* 'BrtTable' */\n\t\t\tcase 0x00AA: /* 'BrtTop10Filter' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0032: /* 'BrtValueMeta' */\n\t\t\tcase 0x0816: /* 'BrtWebExtension' */\n\t\t\tcase 0x0415: /* 'BrtWsFmtInfoEx14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(RR.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tdelete opts.supbooks;\n\tdelete opts['!row'];\n\n\tif(!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\n\tif(opts.sheetRows && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\tif(colinfo.length > 0) s[\"!cols\"] = colinfo;\n\tif(rowinfo.length > 0) s[\"!rows\"] = rowinfo;\n\treturn s;\n}\n\n/* TODO: something useful -- this is a stub */\nfunction write_ws_bin_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, ws/*:Worksheet*/, last_seen/*:boolean*/)/*:boolean*/ {\n\tif(cell.v === undefined) return false;\n\tvar vv = \"\";\n\tswitch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'd': // no BrtCellDate :(\n\t\t\tcell = dup(cell);\n\t\t\tcell.z = cell.z || table_fmt[14];\n\t\t\tcell.v = datenum(parseDate(cell.v)); cell.t = 'n';\n\t\t\tbreak;\n\t\t/* falls through */\n\t\tcase 'n': case 'e': vv = ''+cell.v; break;\n\t\tdefault: vv = cell.v; break;\n\t}\n\tvar o/*:any*/ = ({r:R, c:C}/*:any*/);\n\t/* TODO: cell style */\n\to.s = get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.l) ws['!links'].push([encode_cell(o), cell.l]);\n\tif(cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\n\tswitch(cell.t) {\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvv = get_sst_id(opts.Strings, (cell.v/*:any*/), opts.revStrings);\n\t\t\t\to.t = \"s\"; o.v = vv;\n\t\t\t\tif(last_seen) write_record(ba, 0x0012 /* BrtShortIsst */, write_BrtShortIsst(cell, o));\n\t\t\t\telse write_record(ba, 0x0007 /* BrtCellIsst */, write_BrtCellIsst(cell, o));\n\t\t\t} else {\n\t\t\t\to.t = \"str\";\n\t\t\t\tif(last_seen) write_record(ba, 0x0011 /* BrtShortSt */, write_BrtShortSt(cell, o));\n\t\t\t\telse write_record(ba, 0x0006 /* BrtCellSt */, write_BrtCellSt(cell, o));\n\t\t\t}\n\t\t\treturn true;\n\t\tcase 'n':\n\t\t\t/* TODO: determine threshold for Real vs RK */\n\t\t\tif(cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) {\n\t\t\t\tif(last_seen) write_record(ba, 0x000D /* BrtShortRk */, write_BrtShortRk(cell, o));\n\t\t\t\telse write_record(ba, 0x0002 /* BrtCellRk */, write_BrtCellRk(cell, o));\n\t\t\t} else {\n\t\t\t\tif(last_seen) write_record(ba, 0x0010 /* BrtShortReal */, write_BrtShortReal(cell, o));\n\t\t\t\telse write_record(ba, 0x0005 /* BrtCellReal */, write_BrtCellReal(cell, o));\n\t\t\t} return true;\n\t\tcase 'b':\n\t\t\to.t = \"b\";\n\t\t\tif(last_seen) write_record(ba, 0x000F /* BrtShortBool */, write_BrtShortBool(cell, o));\n\t\t\telse write_record(ba, 0x0004 /* BrtCellBool */, write_BrtCellBool(cell, o));\n\t\t\treturn true;\n\t\tcase 'e':\n\t\t\to.t = \"e\";\n\t\t\tif(last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError(cell, o));\n\t\t\telse write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError(cell, o));\n\t\t\treturn true;\n\t}\n\tif(last_seen) write_record(ba, 0x000C /* BrtShortBlank */, write_BrtShortBlank(cell, o));\n\telse write_record(ba, 0x0001 /* BrtCellBlank */, write_BrtCellBlank(cell, o));\n\treturn true;\n}\n\nfunction write_CELLTABLE(ba, ws/*:Worksheet*/, idx/*:number*/, opts/*::, wb:Workbook*/) {\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols/*:Array<string>*/ = [];\n\twrite_record(ba, 0x0091 /* BrtBeginSheetData */);\n\tvar dense = Array.isArray(ws);\n\tvar cap = range.e.r;\n\tif(ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\n\tfor(var R = range.s.r; R <= cap; ++R) {\n\t\trr = encode_row(R);\n\t\t/* [ACCELLTABLE] */\n\t\t/* BrtRowHdr */\n\t\twrite_row_header(ba, ws, range, R);\n\t\tvar last_seen = false;\n\t\tif(R <= range.e.r) for(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t/* *16384CELL */\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) { last_seen = false; continue; }\n\t\t\t/* write cell */\n\t\t\tlast_seen = write_ws_bin_cell(ba, cell, R, C, opts, ws, last_seen);\n\t\t}\n\t}\n\twrite_record(ba, 0x0092 /* BrtEndSheetData */);\n}\n\nfunction write_MERGECELLS(ba, ws/*:Worksheet*/) {\n\tif(!ws || !ws['!merges']) return;\n\twrite_record(ba, 0x00B1 /* BrtBeginMergeCells */, write_BrtBeginMergeCells(ws['!merges'].length));\n\tws['!merges'].forEach(function(m) { write_record(ba, 0x00B0 /* BrtMergeCell */, write_BrtMergeCell(m)); });\n\twrite_record(ba, 0x00B2 /* BrtEndMergeCells */);\n}\n\nfunction write_COLINFOS(ba, ws/*:Worksheet*//*::, idx:number, opts, wb:Workbook*/) {\n\tif(!ws || !ws['!cols']) return;\n\twrite_record(ba, 0x0186 /* BrtBeginColInfos */);\n\tws['!cols'].forEach(function(m, i) { if(m) write_record(ba, 0x003C /* 'BrtColInfo' */, write_BrtColInfo(i, m)); });\n\twrite_record(ba, 0x0187 /* BrtEndColInfos */);\n}\n\nfunction write_IGNOREECS(ba, ws/*:Worksheet*/) {\n\tif(!ws || !ws['!ref']) return;\n\twrite_record(ba, 0x0288 /* BrtBeginCellIgnoreECs */);\n\twrite_record(ba, 0x0289 /* BrtCellIgnoreEC */, write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\n\twrite_record(ba, 0x028A /* BrtEndCellIgnoreECs */);\n}\n\nfunction write_HLINKS(ba, ws/*:Worksheet*/, rels) {\n\t/* *BrtHLink */\n\tws['!links'].forEach(function(l) {\n\t\tif(!l[1].Target) return;\n\t\tvar rId = add_rels(rels, -1, l[1].Target.replace(/#.*$/, \"\"), RELS.HLINK);\n\t\twrite_record(ba, 0x01EE /* BrtHLink */, write_BrtHLink(l, rId));\n\t});\n\tdelete ws['!links'];\n}\nfunction write_LEGACYDRAWING(ba, ws/*:Worksheet*/, idx/*:number*/, rels) {\n\t/* [BrtLegacyDrawing] */\n\tif(ws['!comments'].length > 0) {\n\t\tvar rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\twrite_record(ba, 0x0227 /* BrtLegacyDrawing */, write_RelID(\"rId\" + rId));\n\t\tws['!legacy'] = rId;\n\t}\n}\n\nfunction write_AUTOFILTER(ba, ws, wb, idx) {\n\tif(!ws['!autofilter']) return;\n\tvar data = ws['!autofilter'];\n\tvar ref = typeof data.ref === \"string\" ? data.ref : encode_range(data.ref);\n\n\t/* Update FilterDatabase defined name for the worksheet */\n\tif(!wb.Workbook) wb.Workbook = ({Sheets:[]}/*:any*/);\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names/*: Array<any> */ = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = \"'\" + wb.SheetNames[idx] + \"'!\" + ref; break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref  });\n\n\twrite_record(ba, 0x00A1 /* BrtBeginAFilter */, write_UncheckedRfX(safe_decode_range(ref)));\n\t/* *FILTERCOLUMN */\n\t/* [SORTSTATE] */\n\t/* BrtEndAFilter */\n\twrite_record(ba, 0x00A2 /* BrtEndAFilter */);\n}\n\nfunction write_WSVIEWS2(ba, ws, Workbook) {\n\twrite_record(ba, 0x0085 /* BrtBeginWsViews */);\n\t{ /* 1*WSVIEW2 */\n\t\t/* [ACUID] */\n\t\twrite_record(ba, 0x0089 /* BrtBeginWsView */, write_BrtBeginWsView(ws, Workbook));\n\t\t/* [BrtPane] */\n\t\t/* *4BrtSel */\n\t\t/* *4SXSELECT */\n\t\t/* *FRT */\n\t\twrite_record(ba, 0x008A /* BrtEndWsView */);\n\t}\n\t/* *FRT */\n\twrite_record(ba, 0x0086 /* BrtEndWsViews */);\n}\n\nfunction write_WSFMTINFO(/*::ba, ws*/) {\n\t/* [ACWSFMTINFO] */\n\t// write_record(ba, 0x01E5 /* BrtWsFmtInfo */, write_BrtWsFmtInfo(ws));\n}\n\nfunction write_SHEETPROTECT(ba, ws) {\n\tif(!ws['!protect']) return;\n\t/* [BrtSheetProtectionIso] */\n\twrite_record(ba, 0x0217 /* BrtSheetProtection */, write_BrtSheetProtection(ws['!protect']));\n}\n\nfunction write_ws_bin(idx/*:number*/, opts, wb/*:Workbook*/, rels) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar c/*:string*/ = s; try { if(wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c; } catch(e) {}\n\tvar r = safe_decode_range(ws['!ref'] || \"A1\");\n\tif(r.e.c > 0x3FFF || r.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:XFD1048576\");\n\t\tr.e.c = Math.min(r.e.c, 0x3FFF);\n\t\tr.e.r = Math.min(r.e.c, 0xFFFFF);\n\t}\n\tws['!links'] = [];\n\t/* passed back to write_zip and removed there */\n\tws['!comments'] = [];\n\twrite_record(ba, 0x0081 /* BrtBeginSheet */);\n\tif(wb.vbaraw || ws['!outline']) write_record(ba, 0x0093 /* BrtWsProp */, write_BrtWsProp(c, ws['!outline']));\n\twrite_record(ba, 0x0094 /* BrtWsDim */, write_BrtWsDim(r));\n\twrite_WSVIEWS2(ba, ws, wb.Workbook);\n\twrite_WSFMTINFO(ba, ws);\n\twrite_COLINFOS(ba, ws, idx, opts, wb);\n\twrite_CELLTABLE(ba, ws, idx, opts, wb);\n\t/* [BrtSheetCalcProp] */\n\twrite_SHEETPROTECT(ba, ws);\n\t/* *([BrtRangeProtectionIso] BrtRangeProtection) */\n\t/* [SCENMAN] */\n\twrite_AUTOFILTER(ba, ws, wb, idx);\n\t/* [SORTSTATE] */\n\t/* [DCON] */\n\t/* [USERSHVIEWS] */\n\twrite_MERGECELLS(ba, ws);\n\t/* [BrtPhoneticInfo] */\n\t/* *CONDITIONALFORMATTING */\n\t/* [DVALS] */\n\twrite_HLINKS(ba, ws, rels);\n\t/* [BrtPrintOptions] */\n\tif(ws['!margins']) write_record(ba, 0x01DC /* BrtMargins */, write_BrtMargins(ws['!margins']));\n\t/* [BrtPageSetup] */\n\t/* [HEADERFOOTER] */\n\t/* [RWBRK] */\n\t/* [COLBRK] */\n\t/* *BrtBigName */\n\t/* [CELLWATCHES] */\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) write_IGNOREECS(ba, ws);\n\t/* [SMARTTAGS] */\n\t/* [BrtDrawing] */\n\twrite_LEGACYDRAWING(ba, ws, idx, rels);\n\t/* [BrtLegacyDrawingHF] */\n\t/* [BrtBkHim] */\n\t/* [OLEOBJECTS] */\n\t/* [ACTIVEXCONTROLS] */\n\t/* [WEBPUBITEMS] */\n\t/* [LISTPARTS] */\n\t/* FRTWORKSHEET */\n\twrite_record(ba, 0x0082 /* BrtEndSheet */);\n\treturn ba.end();\n}\nfunction parse_Cache(data/*:string*/)/*:[Array<number|string>, string, ?string]*/ {\n\tvar col/*:Array<number|string>*/ = [];\n\tvar num = data.match(/^<c:numCache>/);\n\tvar f;\n\n\t/* 21.2.2.150 pt CT_NumVal */\n\t(data.match(/<c:pt idx=\"(\\d*)\">(.*?)<\\/c:pt>/mg)||[]).forEach(function(pt) {\n\t\tvar q = pt.match(/<c:pt idx=\"(\\d*?)\"><c:v>(.*)<\\/c:v><\\/c:pt>/);\n\t\tif(!q) return;\n\t\tcol[+q[1]] = num ? +q[2] : q[2];\n\t});\n\n\t/* 21.2.2.71 formatCode CT_Xstring */\n\tvar nf = unescapexml((data.match(/<c:formatCode>([\\s\\S]*?)<\\/c:formatCode>/) || [\"\",\"General\"])[1]);\n\n\t(data.match(/<c:f>(.*?)<\\/c:f>/mg)||[]).forEach(function(F) { f = F.replace(/<.*?>/g,\"\"); });\n\n\treturn [col, nf, f];\n}\n\n/* 21.2 DrawingML - Charts */\nfunction parse_chart(data/*:?string*/, name/*:string*/, opts, rels, wb, csheet) {\n\tvar cs/*:Worksheet*/ = ((csheet || {\"!type\":\"chart\"})/*:any*/);\n\tif(!data) return csheet;\n\t/* 21.2.2.27 chart CT_Chart */\n\n\tvar C = 0, R = 0, col = \"A\";\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\t/* 21.2.2.120 numCache CT_NumData */\n\t(data.match(/<c:numCache>[\\s\\S]*?<\\/c:numCache>/gm)||[]).forEach(function(nc) {\n\t\tvar cache = parse_Cache(nc);\n\t\trefguess.s.r = refguess.s.c = 0;\n\t\trefguess.e.c = C;\n\t\tcol = encode_col(C);\n\t\tcache[0].forEach(function(n,i) {\n\t\t\tcs[col + encode_row(i)] = {t:'n', v:n, z:cache[1] };\n\t\t\tR = i;\n\t\t});\n\t\tif(refguess.e.r < R) refguess.e.r = R;\n\t\t++C;\n\t});\n\tif(C > 0) cs[\"!ref\"] = encode_range(refguess);\n\treturn cs;\n}\n/* 18.3 Worksheets also covers Chartsheets */\nfunction parse_cs_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {\n\tif(!data) return data;\n\t/* 18.3.1.12 chartsheet CT_ChartSheet */\n\tif(!rels) rels = {'!id':{}};\n\tvar s = ({'!type':\"chart\", '!drawel':null, '!rel':\"\"}/*:any*/);\n\tvar m;\n\n\t/* 18.3.1.83 sheetPr CT_ChartsheetPr */\n\tvar sheetPr = data.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n\t/* 18.3.1.36 drawing CT_Drawing */\n\tif((m = data.match(/drawing r:id=\"(.*?)\"/))) s['!rel'] = m[1];\n\n\tif(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n\treturn s;\n}\nfunction write_cs_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('chartsheet', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t'xmlns:r': XMLNS.r\n\t})];\n\to[o.length] = writextag(\"drawing\", null, {\"r:id\": \"rId1\"});\n\tadd_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n\tif(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.331 BrtCsProp */\nfunction parse_BrtCsProp(data, length/*:number*/) {\n\tdata.l += 10;\n\tvar name = parse_XLWideString(data, length - 10);\n\treturn { name: name };\n}\n\n/* [MS-XLSB] 2.1.7.7 Chart Sheet */\nfunction parse_cs_bin(data, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tvar s = {'!type':\"chart\", '!drawel':null, '!rel':\"\"};\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\trecordhopper(data, function cs_parse(val, R, RT) {\n\t\tswitch(RT) {\n\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\t\ts['!rel'] = val; break;\n\n\t\t\tcase 0x028B: /* 'BrtCsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x028C: /* 'BrtCsPageSetup' */\n\t\t\tcase 0x029D: /* 'BrtCsProtection' */\n\t\t\tcase 0x02A7: /* 'BrtCsProtectionIso' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T > 0) state.push(RT);\n\t\t\t\telse if(R.T < 0) state.pop();\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tif(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n\treturn s;\n}\nfunction write_cs_bin(/*::idx:number, opts, wb:Workbook, rels*/) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x0081 /* BrtBeginSheet */);\n\t/* [BrtCsProp] */\n\t/* CSVIEWS */\n\t/* [[BrtCsProtectionIso] BrtCsProtection] */\n\t/* [USERCSVIEWS] */\n\t/* [BrtMargins] */\n\t/* [BrtCsPageSetup] */\n\t/* [HEADERFOOTER] */\n\t/* BrtDrawing */\n\t/* [BrtLegacyDrawing] */\n\t/* [BrtLegacyDrawingHF] */\n\t/* [BrtBkHim] */\n\t/* [WEBPUBITEMS] */\n\t/* FRTCHARTSHEET */\n\twrite_record(ba, 0x0082 /* BrtEndSheet */);\n\treturn ba.end();\n}\n/* 18.2.28 (CT_WorkbookProtection) Defaults */\nvar WBPropsDef = [\n\t['allowRefreshQuery',           false, \"bool\"],\n\t['autoCompressPictures',        true,  \"bool\"],\n\t['backupFile',                  false, \"bool\"],\n\t['checkCompatibility',          false, \"bool\"],\n\t['CodeName',                    ''],\n\t['date1904',                    false, \"bool\"],\n\t['defaultThemeVersion',         0,      \"int\"],\n\t['filterPrivacy',               false, \"bool\"],\n\t['hidePivotFieldList',          false, \"bool\"],\n\t['promptedSolutions',           false, \"bool\"],\n\t['publishItems',                false, \"bool\"],\n\t['refreshAllConnections',       false, \"bool\"],\n\t['saveExternalLinkValues',      true,  \"bool\"],\n\t['showBorderUnselectedTables',  true,  \"bool\"],\n\t['showInkAnnotation',           true,  \"bool\"],\n\t['showObjects',                 'all'],\n\t['showPivotChartFilter',        false, \"bool\"],\n\t['updateLinks', 'userSet']\n];\n\n/* 18.2.30 (CT_BookView) Defaults */\nvar WBViewDef = [\n\t['activeTab',                   0,      \"int\"],\n\t['autoFilterDateGrouping',      true,  \"bool\"],\n\t['firstSheet',                  0,      \"int\"],\n\t['minimized',                   false, \"bool\"],\n\t['showHorizontalScroll',        true,  \"bool\"],\n\t['showSheetTabs',               true,  \"bool\"],\n\t['showVerticalScroll',          true,  \"bool\"],\n\t['tabRatio',                    600,    \"int\"],\n\t['visibility',                  'visible']\n\t//window{Height,Width}, {x,y}Window\n];\n\n/* 18.2.19 (CT_Sheet) Defaults */\nvar SheetDef = [\n\t//['state', 'visible']\n];\n\n/* 18.2.2  (CT_CalcPr) Defaults */\nvar CalcPrDef = [\n\t['calcCompleted', 'true'],\n\t['calcMode', 'auto'],\n\t['calcOnSave', 'true'],\n\t['concurrentCalc', 'true'],\n\t['fullCalcOnLoad', 'false'],\n\t['fullPrecision', 'true'],\n\t['iterate', 'false'],\n\t['iterateCount', '100'],\n\t['iterateDelta', '0.001'],\n\t['refMode', 'A1']\n];\n\n/* 18.2.3 (CT_CustomWorkbookView) Defaults */\n/*var CustomWBViewDef = [\n\t['autoUpdate', 'false'],\n\t['changesSavedWin', 'false'],\n\t['includeHiddenRowCol', 'true'],\n\t['includePrintSettings', 'true'],\n\t['maximized', 'false'],\n\t['minimized', 'false'],\n\t['onlySync', 'false'],\n\t['personalView', 'false'],\n\t['showComments', 'commIndicator'],\n\t['showFormulaBar', 'true'],\n\t['showHorizontalScroll', 'true'],\n\t['showObjects', 'all'],\n\t['showSheetTabs', 'true'],\n\t['showStatusbar', 'true'],\n\t['showVerticalScroll', 'true'],\n\t['tabRatio', '600'],\n\t['xWindow', '0'],\n\t['yWindow', '0']\n];*/\n\nfunction push_defaults_array(target, defaults) {\n\tfor(var j = 0; j != target.length; ++j) { var w = target[j];\n\t\tfor(var i=0; i != defaults.length; ++i) { var z = defaults[i];\n\t\t\tif(w[z[0]] == null) w[z[0]] = z[1];\n\t\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]); break;\n\t\t\tcase \"int\": if(typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10); break;\n\t\t\t}\n\t\t}\n\t}\n}\nfunction push_defaults(target, defaults) {\n\tfor(var i = 0; i != defaults.length; ++i) { var z = defaults[i];\n\t\tif(target[z[0]] == null) target[z[0]] = z[1];\n\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]); break;\n\t\t\tcase \"int\": if(typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10); break;\n\t\t}\n\t}\n}\n\nfunction parse_wb_defaults(wb) {\n\tpush_defaults(wb.WBProps, WBPropsDef);\n\tpush_defaults(wb.CalcPr, CalcPrDef);\n\n\tpush_defaults_array(wb.WBView, WBViewDef);\n\tpush_defaults_array(wb.Sheets, SheetDef);\n\n\t_ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\n}\n\nfunction safe1904(wb/*:Workbook*/)/*:string*/ {\n\t/* TODO: store date1904 somewhere else */\n\tif(!wb.Workbook) return \"false\";\n\tif(!wb.Workbook.WBProps) return \"false\";\n\treturn parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\n}\n\nvar badchars = /*#__PURE__*/\"][*?\\/\\\\\".split(\"\");\nfunction check_ws_name(n/*:string*/, safe/*:?boolean*/)/*:boolean*/ {\n\tif(n.length > 31) { if(safe) return false; throw new Error(\"Sheet names cannot exceed 31 chars\"); }\n\tvar _good = true;\n\tbadchars.forEach(function(c) {\n\t\tif(n.indexOf(c) == -1) return;\n\t\tif(!safe) throw new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\n\t\t_good = false;\n\t});\n\treturn _good;\n}\nfunction check_wb_names(N, S, codes) {\n\tN.forEach(function(n,i) {\n\t\tcheck_ws_name(n);\n\t\tfor(var j = 0; j < i; ++j) if(n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\n\t\tif(codes) {\n\t\t\tvar cn = (S && S[i] && S[i].CodeName) || n;\n\t\t\tif(cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\n\t\t}\n\t});\n}\nfunction check_wb(wb) {\n\tif(!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\n\tif(!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\n\tvar Sheets = (wb.Workbook && wb.Workbook.Sheets) || [];\n\tcheck_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);\n\t/* TODO: validate workbook */\n}\n/* 18.2 Workbook */\nvar wbnsregex = /<\\w+:workbook/;\nfunction parse_wb_xml(data, opts)/*:WorkbookFile*/ {\n\tif(!data) throw new Error(\"Could not find file\");\n\tvar wb = /*::(*/{ AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, Names:[], xmlns: \"\" }/*::)*/;\n\tvar pass = false, xmlns = \"xmlns\";\n\tvar dname = {}, dnstart = 0;\n\tdata.replace(tagregex, function xml_wb(x, idx) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 18.2.27 workbook CT_Workbook 1 */\n\t\t\tcase '<workbook':\n\t\t\t\tif(x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\n\t\t\t\twb.xmlns = y[xmlns];\n\t\t\t\tbreak;\n\t\t\tcase '</workbook>': break;\n\n\t\t\t/* 18.2.13 fileVersion CT_FileVersion ? */\n\t\t\tcase '<fileVersion': delete y[0]; wb.AppVersion = y; break;\n\t\t\tcase '<fileVersion/>': case '</fileVersion>': break;\n\n\t\t\t/* 18.2.12 fileSharing CT_FileSharing ? */\n\t\t\tcase '<fileSharing':\n\t\t\t\tbreak;\n\t\t\tcase '<fileSharing/>': break;\n\n\t\t\t/* 18.2.28 workbookPr CT_WorkbookPr ? */\n\t\t\tcase '<workbookPr':\n\t\t\tcase '<workbookPr/>':\n\t\t\t\tWBPropsDef.forEach(function(w) {\n\t\t\t\t\tif(y[w[0]] == null) return;\n\t\t\t\t\tswitch(w[2]) {\n\t\t\t\t\t\tcase \"bool\": wb.WBProps[w[0]] = parsexmlbool(y[w[0]]); break;\n\t\t\t\t\t\tcase \"int\": wb.WBProps[w[0]] = parseInt(y[w[0]], 10); break;\n\t\t\t\t\t\tdefault: wb.WBProps[w[0]] = y[w[0]];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(y.codeName) wb.WBProps.CodeName = utf8read(y.codeName);\n\t\t\t\tbreak;\n\t\t\tcase '</workbookPr>': break;\n\n\t\t\t/* 18.2.29 workbookProtection CT_WorkbookProtection ? */\n\t\t\tcase '<workbookProtection':\n\t\t\t\tbreak;\n\t\t\tcase '<workbookProtection/>': break;\n\n\t\t\t/* 18.2.1  bookViews CT_BookViews ? */\n\t\t\tcase '<bookViews': case '<bookViews>': case '</bookViews>': break;\n\t\t\t/* 18.2.30   workbookView CT_BookView + */\n\t\t\tcase '<workbookView': case '<workbookView/>': delete y[0]; wb.WBView.push(y); break;\n\t\t\tcase '</workbookView>': break;\n\n\t\t\t/* 18.2.20 sheets CT_Sheets 1 */\n\t\t\tcase '<sheets': case '<sheets>': case '</sheets>': break; // aggregate sheet\n\t\t\t/* 18.2.19   sheet CT_Sheet + */\n\t\t\tcase '<sheet':\n\t\t\t\tswitch(y.state) {\n\t\t\t\t\tcase \"hidden\": y.Hidden = 1; break;\n\t\t\t\t\tcase \"veryHidden\": y.Hidden = 2; break;\n\t\t\t\t\tdefault: y.Hidden = 0;\n\t\t\t\t}\n\t\t\t\tdelete y.state;\n\t\t\t\ty.name = unescapexml(utf8read(y.name));\n\t\t\t\tdelete y[0]; wb.Sheets.push(y); break;\n\t\t\tcase '</sheet>': break;\n\n\t\t\t/* 18.2.15 functionGroups CT_FunctionGroups ? */\n\t\t\tcase '<functionGroups': case '<functionGroups/>': break;\n\t\t\t/* 18.2.14   functionGroup CT_FunctionGroup + */\n\t\t\tcase '<functionGroup': break;\n\n\t\t\t/* 18.2.9  externalReferences CT_ExternalReferences ? */\n\t\t\tcase '<externalReferences': case '</externalReferences>': case '<externalReferences>': break;\n\t\t\t/* 18.2.8    externalReference CT_ExternalReference + */\n\t\t\tcase '<externalReference': break;\n\n\t\t\t/* 18.2.6  definedNames CT_DefinedNames ? */\n\t\t\tcase '<definedNames/>': break;\n\t\t\tcase '<definedNames>': case '<definedNames': pass=true; break;\n\t\t\tcase '</definedNames>': pass=false; break;\n\t\t\t/* 18.2.5    definedName CT_DefinedName + */\n\t\t\tcase '<definedName': {\n\t\t\t\tdname = {};\n\t\t\t\tdname.Name = utf8read(y.name);\n\t\t\t\tif(y.comment) dname.Comment = y.comment;\n\t\t\t\tif(y.localSheetId) dname.Sheet = +y.localSheetId;\n\t\t\t\tif(parsexmlbool(y.hidden||\"0\")) dname.Hidden = true;\n\t\t\t\tdnstart = idx + x.length;\n\t\t\t}\tbreak;\n\t\t\tcase '</definedName>': {\n\t\t\t\tdname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));\n\t\t\t\twb.Names.push(dname);\n\t\t\t} break;\n\t\t\tcase '<definedName/>': break;\n\n\t\t\t/* 18.2.2  calcPr CT_CalcPr ? */\n\t\t\tcase '<calcPr': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '<calcPr/>': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '</calcPr>': break;\n\n\t\t\t/* 18.2.16 oleSize CT_OleSize ? (ref required) */\n\t\t\tcase '<oleSize': break;\n\n\t\t\t/* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\n\t\t\tcase '<customWorkbookViews>': case '</customWorkbookViews>': case '<customWorkbookViews': break;\n\t\t\t/* 18.2.3  customWorkbookView CT_CustomWorkbookView + */\n\t\t\tcase '<customWorkbookView': case '</customWorkbookView>': break;\n\n\t\t\t/* 18.2.18 pivotCaches CT_PivotCaches ? */\n\t\t\tcase '<pivotCaches>': case '</pivotCaches>': case '<pivotCaches': break;\n\t\t\t/* 18.2.17 pivotCache CT_PivotCache ? */\n\t\t\tcase '<pivotCache': break;\n\n\t\t\t/* 18.2.21 smartTagPr CT_SmartTagPr ? */\n\t\t\tcase '<smartTagPr': case '<smartTagPr/>': break;\n\n\t\t\t/* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\n\t\t\tcase '<smartTagTypes': case '<smartTagTypes>': case '</smartTagTypes>': break;\n\t\t\t/* 18.2.22 smartTagType CT_SmartTagType ? */\n\t\t\tcase '<smartTagType': break;\n\n\t\t\t/* 18.2.24 webPublishing CT_WebPublishing ? */\n\t\t\tcase '<webPublishing': case '<webPublishing/>': break;\n\n\t\t\t/* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\n\t\t\tcase '<fileRecoveryPr': case '<fileRecoveryPr/>': break;\n\n\t\t\t/* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\n\t\t\tcase '<webPublishObjects>': case '<webPublishObjects': case '</webPublishObjects>': break;\n\t\t\t/* 18.2.25 webPublishObject CT_WebPublishObject ? */\n\t\t\tcase '<webPublishObject': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break; //TODO: check with versions of excel\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\t/* Others */\n\t\t\tcase '<ArchID': break;\n\t\t\tcase '<AlternateContent':\n\t\t\tcase '<AlternateContent>': pass=true; break;\n\t\t\tcase '</AlternateContent>': pass=false; break;\n\n\t\t\t/* TODO */\n\t\t\tcase '<revisionPtr': break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\n\t\t}\n\t\treturn x;\n\t});\n\tif(XMLNS_main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\n\n\tparse_wb_defaults(wb);\n\n\treturn wb;\n}\n\nfunction write_wb_xml(wb/*:Workbook*//*::, opts:?WriteOpts*/)/*:string*/ {\n\tvar o = [XML_HEADER];\n\to[o.length] = writextag('workbook', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t//'xmlns:mx': XMLNS.mx,\n\t\t//'xmlns:s': XMLNS_main[0],\n\t\t'xmlns:r': XMLNS.r\n\t});\n\n\tvar write_names = (wb.Workbook && (wb.Workbook.Names||[]).length > 0);\n\n\t/* fileVersion */\n\t/* fileSharing */\n\n\tvar workbookPr/*:any*/ = ({codeName:\"ThisWorkbook\"}/*:any*/);\n\tif(wb.Workbook && wb.Workbook.WBProps) {\n\t\tWBPropsDef.forEach(function(x) {\n\t\t\t/*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n\t\t\tif((wb.Workbook.WBProps[x[0]]/*:any*/) == null) return;\n\t\t\tif((wb.Workbook.WBProps[x[0]]/*:any*/) == x[1]) return;\n\t\t\tworkbookPr[x[0]] = (wb.Workbook.WBProps[x[0]]/*:any*/);\n\t\t});\n\t\t/*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n\t\tif(wb.Workbook.WBProps.CodeName) { workbookPr.codeName = wb.Workbook.WBProps.CodeName; delete workbookPr.CodeName; }\n\t}\n\to[o.length] = (writextag('workbookPr', null, workbookPr));\n\n\t/* workbookProtection */\n\n\tvar sheets = wb.Workbook && wb.Workbook.Sheets || [];\n\tvar i = 0;\n\n\t/* bookViews only written if first worksheet is hidden */\n\tif(sheets && sheets[0] && !!sheets[0].Hidden) {\n\t\to[o.length] = \"<bookViews>\";\n\t\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\t\tif(!sheets[i]) break;\n\t\t\tif(!sheets[i].Hidden) break;\n\t\t}\n\t\tif(i == wb.SheetNames.length) i = 0;\n\t\to[o.length] = '<workbookView firstSheet=\"' + i + '\" activeTab=\"' + i + '\"/>';\n\t\to[o.length] = \"</bookViews>\";\n\t}\n\n\to[o.length] = \"<sheets>\";\n\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\tvar sht = ({name:escapexml(wb.SheetNames[i].slice(0,31))}/*:any*/);\n\t\tsht.sheetId = \"\"+(i+1);\n\t\tsht[\"r:id\"] = \"rId\"+(i+1);\n\t\tif(sheets[i]) switch(sheets[i].Hidden) {\n\t\t\tcase 1: sht.state = \"hidden\"; break;\n\t\t\tcase 2: sht.state = \"veryHidden\"; break;\n\t\t}\n\t\to[o.length] = (writextag('sheet',null,sht));\n\t}\n\to[o.length] = \"</sheets>\";\n\n\t/* functionGroups */\n\t/* externalReferences */\n\n\tif(write_names) {\n\t\to[o.length] = \"<definedNames>\";\n\t\tif(wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function(n) {\n\t\t\tvar d/*:any*/ = {name:n.Name};\n\t\t\tif(n.Comment) d.comment = n.Comment;\n\t\t\tif(n.Sheet != null) d.localSheetId = \"\"+n.Sheet;\n\t\t\tif(n.Hidden) d.hidden = \"1\";\n\t\t\tif(!n.Ref) return;\n\t\t\to[o.length] = writextag('definedName', escapexml(n.Ref), d);\n\t\t});\n\t\to[o.length] = \"</definedNames>\";\n\t}\n\n\t/* calcPr */\n\t/* oleSize */\n\t/* customWorkbookViews */\n\t/* pivotCaches */\n\t/* smartTagPr */\n\t/* smartTagTypes */\n\t/* webPublishing */\n\t/* fileRecoveryPr */\n\t/* webPublishObjects */\n\t/* extLst */\n\n\tif(o.length>2){ o[o.length] = '</workbook>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.304 BrtBundleSh */\nfunction parse_BrtBundleSh(data, length/*:number*/) {\n\tvar z = {};\n\tz.Hidden = data.read_shift(4); //hsState ST_SheetState\n\tz.iTabID = data.read_shift(4);\n\tz.strRelID = parse_RelID(data,length-8);\n\tz.name = parse_XLWideString(data);\n\treturn z;\n}\nfunction write_BrtBundleSh(data, o) {\n\tif(!o) o = new_buf(127);\n\to.write_shift(4, data.Hidden);\n\to.write_shift(4, data.iTabID);\n\twrite_RelID(data.strRelID, o);\n\twrite_XLWideString(data.name.slice(0,31), o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.815 BrtWbProp */\nfunction parse_BrtWbProp(data, length)/*:WBProps*/ {\n\tvar o/*:WBProps*/ = ({}/*:any*/);\n\tvar flags = data.read_shift(4);\n\to.defaultThemeVersion = data.read_shift(4);\n\tvar strName = (length > 8) ? parse_XLWideString(data) : \"\";\n\tif(strName.length > 0) o.CodeName = strName;\n\to.autoCompressPictures = !!(flags & 0x10000);\n\to.backupFile = !!(flags & 0x40);\n\to.checkCompatibility = !!(flags & 0x1000);\n\to.date1904 = !!(flags & 0x01);\n\to.filterPrivacy = !!(flags & 0x08);\n\to.hidePivotFieldList = !!(flags & 0x400);\n\to.promptedSolutions = !!(flags & 0x10);\n\to.publishItems = !!(flags & 0x800);\n\to.refreshAllConnections = !!(flags & 0x40000);\n\to.saveExternalLinkValues = !!(flags & 0x80);\n\to.showBorderUnselectedTables = !!(flags & 0x04);\n\to.showInkAnnotation = !!(flags & 0x20);\n\to.showObjects = [\"all\", \"placeholders\", \"none\"][(flags >> 13) & 0x03];\n\to.showPivotChartFilter = !!(flags & 0x8000);\n\to.updateLinks = [\"userSet\", \"never\", \"always\"][(flags >> 8) & 0x03];\n\treturn o;\n}\nfunction write_BrtWbProp(data/*:?WBProps*/, o) {\n\tif(!o) o = new_buf(72);\n\tvar flags = 0;\n\tif(data) {\n\t\t/* TODO: mirror parse_BrtWbProp fields */\n\t\tif(data.filterPrivacy) flags |= 0x08;\n\t}\n\to.write_shift(4, flags);\n\to.write_shift(4, 0);\n\twrite_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\n\treturn o.slice(0, o.l);\n}\n\nfunction parse_BrtFRTArchID$(data, length) {\n\tvar o = {};\n\tdata.read_shift(4);\n\to.ArchID = data.read_shift(4);\n\tdata.l += length - 8;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.687 BrtName */\nfunction parse_BrtName(data, length, opts) {\n\tvar end = data.l + length;\n\tdata.l += 4; //var flags = data.read_shift(4);\n\tdata.l += 1; //var chKey = data.read_shift(1);\n\tvar itab = data.read_shift(4);\n\tvar name = parse_XLNameWideString(data);\n\tvar formula = parse_XLSBNameParsedFormula(data, 0, opts);\n\tvar comment = parse_XLNullableWideString(data);\n\t//if(0 /* fProc */) {\n\t\t// unusedstring1: XLNullableWideString\n\t\t// description: XLNullableWideString\n\t\t// helpTopic: XLNullableWideString\n\t\t// unusedstring2: XLNullableWideString\n\t//}\n\tdata.l = end;\n\tvar out = ({Name:name, Ptg:formula}/*:any*/);\n\tif(itab < 0xFFFFFFF) out.Sheet = itab;\n\tif(comment) out.Comment = comment;\n\treturn out;\n}\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction parse_wb_bin(data, opts)/*:WorkbookFile*/ {\n\tvar wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, xmlns: \"\" };\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\n\tif(!opts) opts = {};\n\topts.biff = 12;\n\n\tvar Names = [];\n\tvar supbooks = ([[]]/*:any*/);\n\tsupbooks.SheetNames = [];\n\tsupbooks.XTI = [];\n\n\tXLSBRecordEnum[0x0010] = { n:\"BrtFRTArchID$\", f:parse_BrtFRTArchID$ };\n\n\trecordhopper(data, function hopper_wb(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009C: /* 'BrtBundleSh' */\n\t\t\t\tsupbooks.SheetNames.push(val.name);\n\t\t\t\twb.Sheets.push(val); break;\n\n\t\t\tcase 0x0099: /* 'BrtWbProp' */\n\t\t\t\twb.WBProps = val; break;\n\n\t\t\tcase 0x0027: /* 'BrtName' */\n\t\t\t\tif(val.Sheet != null) opts.SID = val.Sheet;\n\t\t\t\tval.Ref = stringify_formula(val.Ptg, null, null, supbooks, opts);\n\t\t\t\tdelete opts.SID;\n\t\t\t\tdelete val.Ptg;\n\t\t\t\tNames.push(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x040C: /* 'BrtNameExt' */ break;\n\n\t\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\tcase 0x029B: /* 'BrtSupAddin' */\n\t\t\t\tif(!supbooks[0].length) supbooks[0] = [RT, val];\n\t\t\t\telse supbooks.push([RT, val]);\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = [];\n\t\t\t\tbreak;\n\t\t\tcase 0x016A: /* 'BrtExternSheet' */\n\t\t\t\tif(supbooks.length === 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n\t\t\t\tsupbooks.XTI = supbooks.XTI.concat(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x0169: /* 'BrtPlaceholderName' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0817: /* 'BrtAbsPath15' */\n\t\t\tcase 0x009E: /* 'BrtBookView' */\n\t\t\tcase 0x008F: /* 'BrtBeginBundleShs' */\n\t\t\tcase 0x0298: /* 'BrtBeginFnGroup' */\n\t\t\tcase 0x0161: /* 'BrtBeginExternals' */\n\t\t\t\tbreak;\n\n\t\t\t/* case 'BrtModelTimeGroupingCalcCol' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0C01: /* 'BrtRevisionPtr' */\n\t\t\tcase 0x0216: /* 'BrtBookProtection' */\n\t\t\tcase 0x02A5: /* 'BrtBookProtectionIso' */\n\t\t\tcase 0x009D: /* 'BrtCalcProp' */\n\t\t\tcase 0x0262: /* 'BrtCrashRecErr' */\n\t\t\tcase 0x0802: /* 'BrtDecoupledPivotCacheID' */\n\t\t\tcase 0x009B: /* 'BrtFileRecover' */\n\t\t\tcase 0x0224: /* 'BrtFileSharing' */\n\t\t\tcase 0x02A4: /* 'BrtFileSharingIso' */\n\t\t\tcase 0x0080: /* 'BrtFileVersion' */\n\t\t\tcase 0x0299: /* 'BrtFnGroup' */\n\t\t\tcase 0x0850: /* 'BrtModelRelationship' */\n\t\t\tcase 0x084D: /* 'BrtModelTable' */\n\t\t\tcase 0x0225: /* 'BrtOleSize' */\n\t\t\tcase 0x0805: /* 'BrtPivotTableRef' */\n\t\t\tcase 0x0254: /* 'BrtSmartTagType' */\n\t\t\tcase 0x081C: /* 'BrtTableSlicerCacheID' */\n\t\t\tcase 0x081B: /* 'BrtTableSlicerCacheIDs' */\n\t\t\tcase 0x0822: /* 'BrtTimelineCachePivotCacheID' */\n\t\t\tcase 0x018D: /* 'BrtUserBookView' */\n\t\t\tcase 0x009A: /* 'BrtWbFactoid' */\n\t\t\tcase 0x045D: /* 'BrtWbProp14' */\n\t\t\tcase 0x0229: /* 'BrtWebOpt' */\n\t\t\tcase 0x082B: /* 'BrtWorkBookPr15' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tcase 0x0010: /* 'BrtFRTArchID$' */ break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != 0x0025 /* BrtACBegin */ && state[state.length-1] != 0x0023 /* BrtFRTBegin */)) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tparse_wb_defaults(wb);\n\n\t// $FlowIgnore\n\twb.Names = Names;\n\n\t(wb/*:any*/).supbooks = supbooks;\n\treturn wb;\n}\n\nfunction write_BUNDLESHS(ba, wb/*::, opts*/) {\n\twrite_record(ba, 0x008F /* BrtBeginBundleShs */);\n\tfor(var idx = 0; idx != wb.SheetNames.length; ++idx) {\n\t\tvar viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\n\t\tvar d = { Hidden: viz, iTabID: idx+1, strRelID: 'rId' + (idx+1), name: wb.SheetNames[idx] };\n\t\twrite_record(ba, 0x009C /* BrtBundleSh */, write_BrtBundleSh(d));\n\t}\n\twrite_record(ba, 0x0090 /* BrtEndBundleShs */);\n}\n\n/* [MS-XLSB] 2.4.649 BrtFileVersion */\nfunction write_BrtFileVersion(data, o) {\n\tif(!o) o = new_buf(127);\n\tfor(var i = 0; i != 4; ++i) o.write_shift(4, 0);\n\twrite_XLWideString(\"SheetJS\", o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(\"7262\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.301 BrtBookView */\nfunction write_BrtBookView(idx, o) {\n\tif(!o) o = new_buf(29);\n\to.write_shift(-4, 0);\n\to.write_shift(-4, 460);\n\to.write_shift(4,  28800);\n\to.write_shift(4,  17600);\n\to.write_shift(4,  500);\n\to.write_shift(4,  idx);\n\to.write_shift(4,  idx);\n\tvar flags = 0x78;\n\to.write_shift(1,  flags);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\nfunction write_BOOKVIEWS(ba, wb/*::, opts*/) {\n\t/* required if hidden tab appears before visible tab */\n\tif(!wb.Workbook || !wb.Workbook.Sheets) return;\n\tvar sheets = wb.Workbook.Sheets;\n\tvar i = 0, vistab = -1, hidden = -1;\n\tfor(; i < sheets.length; ++i) {\n\t\tif(!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;\n\t\telse if(sheets[i].Hidden == 1 && hidden == -1) hidden = i;\n\t}\n\tif(hidden > vistab) return;\n\twrite_record(ba, 0x0087 /* BrtBeginBookViews */);\n\twrite_record(ba, 0x009E /* BrtBookView */, write_BrtBookView(vistab));\n\t/* 1*(BrtBookView *FRT) */\n\twrite_record(ba, 0x0088 /* BrtEndBookViews */);\n}\n\n/* [MS-XLSB] 2.4.305 BrtCalcProp */\n/*function write_BrtCalcProp(data, o) {\n\tif(!o) o = new_buf(26);\n\to.write_shift(4,0); // force recalc\n\to.write_shift(4,1);\n\to.write_shift(4,0);\n\twrite_Xnum(0, o);\n\to.write_shift(-4, 1023);\n\to.write_shift(1, 0x33);\n\to.write_shift(1, 0x00);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.4.646 BrtFileRecover */\n/*function write_BrtFileRecover(data, o) {\n\tif(!o) o = new_buf(1);\n\to.write_shift(1,0);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction write_wb_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x0083 /* BrtBeginBook */);\n\twrite_record(ba, 0x0080 /* BrtFileVersion */, write_BrtFileVersion());\n\t/* [[BrtFileSharingIso] BrtFileSharing] */\n\twrite_record(ba, 0x0099 /* BrtWbProp */, write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\n\t/* [ACABSPATH] */\n\t/* [[BrtBookProtectionIso] BrtBookProtection] */\n\twrite_BOOKVIEWS(ba, wb, opts);\n\twrite_BUNDLESHS(ba, wb, opts);\n\t/* [FNGROUP] */\n\t/* [EXTERNALS] */\n\t/* *BrtName */\n\t/* write_record(ba, 0x009D BrtCalcProp, write_BrtCalcProp()); */\n\t/* [BrtOleSize] */\n\t/* *(BrtUserBookView *FRT) */\n\t/* [PIVOTCACHEIDS] */\n\t/* [BrtWbFactoid] */\n\t/* [SMARTTAGTYPES] */\n\t/* [BrtWebOpt] */\n\t/* write_record(ba, 0x009B BrtFileRecover, write_BrtFileRecover()); */\n\t/* [WEBPUBITEMS] */\n\t/* [CRERRS] */\n\t/* FRTWORKBOOK */\n\twrite_record(ba, 0x0084 /* BrtEndBook */);\n\n\treturn ba.end();\n}\nfunction parse_wb(data, name/*:string*/, opts)/*:WorkbookFile*/ {\n\tif(name.slice(-4)===\".bin\") return parse_wb_bin((data/*:any*/), opts);\n\treturn parse_wb_xml((data/*:any*/), opts);\n}\n\nfunction parse_ws(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ws_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ws_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_cs(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_cs_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_cs_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ms(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ms_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ms_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ds(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ds_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ds_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_sty(data, name/*:string*/, themes, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_sty_bin((data/*:any*/), themes, opts);\n\treturn parse_sty_xml((data/*:any*/), themes, opts);\n}\n\nfunction parse_theme(data/*:string*/, name/*:string*/, opts) {\n\treturn parse_theme_xml(data, opts);\n}\n\nfunction parse_sst(data, name/*:string*/, opts)/*:SST*/ {\n\tif(name.slice(-4)===\".bin\") return parse_sst_bin((data/*:any*/), opts);\n\treturn parse_sst_xml((data/*:any*/), opts);\n}\n\nfunction parse_cmnt(data, name/*:string*/, opts)/*:Array<RawComment>*/ {\n\tif(name.slice(-4)===\".bin\") return parse_comments_bin((data/*:any*/), opts);\n\treturn parse_comments_xml((data/*:any*/), opts);\n}\n\nfunction parse_cc(data, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_cc_bin((data/*:any*/), name, opts);\n\treturn parse_cc_xml((data/*:any*/), name, opts);\n}\n\nfunction parse_xlink(data, rel, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlink_bin((data/*:any*/), rel, name, opts);\n\treturn parse_xlink_xml((data/*:any*/), rel, name, opts);\n}\n\nfunction parse_xlmeta(data, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlmeta_bin((data/*:any*/), name, opts);\n\treturn parse_xlmeta_xml((data/*:any*/), name, opts);\n}\n\nfunction write_wb(wb, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_wb_bin : write_wb_xml)(wb, opts);\n}\n\nfunction write_ws(data/*:number*/, name/*:string*/, opts, wb/*:Workbook*/, rels) {\n\treturn (name.slice(-4)===\".bin\" ? write_ws_bin : write_ws_xml)(data, opts, wb, rels);\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction write_cs(data/*:number*/, name/*:string*/, opts, wb/*:Workbook*/, rels) {\n\treturn (name.slice(-4)===\".bin\" ? write_cs_bin : write_cs_xml)(data, opts, wb, rels);\n}\n\nfunction write_sty(data, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_sty_bin : write_sty_xml)(data, opts);\n}\n\nfunction write_sst(data/*:SST*/, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_sst_bin : write_sst_xml)(data, opts);\n}\n\nfunction write_cmnt(data/*:Array<any>*/, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_comments_bin : write_comments_xml)(data, opts);\n}\n/*\nfunction write_cc(data, name:string, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_cc_bin : write_cc_xml)(data, opts);\n}\n*/\n\nfunction write_xlmeta(name/*:string*/) {\n\treturn (name.slice(-4)===\".bin\" ? write_xlmeta_bin : write_xlmeta_xml)();\n}\nvar attregexg2=/([\\w:]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\nvar attregex2=/([\\w:]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\nfunction xlml_parsexmltag(tag/*:string*/, skip_root/*:?boolean*/) {\n\tvar words = tag.split(/\\s+/);\n\tvar z/*:any*/ = ([]/*:any*/); if(!skip_root) z[0] = words[0];\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\n/*:: if(!y || !y[2]) continue; */\n\t\tif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\nfunction xlml_parsexmltagobj(tag/*:string*/) {\n\tvar words = tag.split(/\\s+/);\n\tvar z = {};\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\n/*:: if(!y || !y[2]) continue; */\n\t\tif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\n\n// ----\n\n/* map from xlml named formats to SSF TODO: localize */\nvar XLMLFormatMap/*: {[string]:string}*/;\n\nfunction xlml_format(format, value)/*:string*/ {\n\tvar fmt = XLMLFormatMap[format] || unescapexml(format);\n\tif(fmt === \"General\") return SSF_general(value);\n\treturn SSF_format(fmt, value);\n}\n\nfunction xlml_set_custprop(Custprops, key, cp, val/*:string*/) {\n\tvar oval/*:any*/ = val;\n\tswitch((cp[0].match(/dt:dt=\"([\\w.]+)\"/)||[\"\",\"\"])[1]) {\n\t\tcase \"boolean\": oval = parsexmlbool(val); break;\n\t\tcase \"i2\": case \"int\": oval = parseInt(val, 10); break;\n\t\tcase \"r4\": case \"float\": oval = parseFloat(val); break;\n\t\tcase \"date\": case \"dateTime.tz\": oval = parseDate(val); break;\n\t\tcase \"i8\": case \"string\": case \"fixed\": case \"uuid\": case \"bin.base64\": break;\n\t\tdefault: throw new Error(\"bad custprop:\" + cp[0]);\n\t}\n\tCustprops[unescapexml(key)] = oval;\n}\n\nfunction safe_format_xlml(cell/*:Cell*/, nf, o) {\n\tif(cell.t === 'z') return;\n\tif(!o || o.cellText !== false) try {\n\t\tif(cell.t === 'e') { cell.w = cell.w || BErr[cell.v]; }\n\t\telse if(nf === \"General\") {\n\t\t\tif(cell.t === 'n') {\n\t\t\t\tif((cell.v|0) === cell.v) cell.w = cell.v.toString(10);\n\t\t\t\telse cell.w = SSF_general_num(cell.v);\n\t\t\t}\n\t\t\telse cell.w = SSF_general(cell.v);\n\t\t}\n\t\telse cell.w = xlml_format(nf||\"General\", cell.v);\n\t} catch(e) { if(o.WTF) throw e; }\n\ttry {\n\t\tvar z = XLMLFormatMap[nf]||nf||\"General\";\n\t\tif(o.cellNF) cell.z = z;\n\t\tif(o.cellDates && cell.t == 'n' && fmt_is_date(z)) {\n\t\t\tvar _d = SSF_parse_date_code(cell.v); if(_d) { cell.t = 'd'; cell.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t\t}\n\t} catch(e) { if(o.WTF) throw e; }\n}\n\nfunction process_style_xlml(styles, stag, opts) {\n\tif(opts.cellStyles) {\n\t\tif(stag.Interior) {\n\t\t\tvar I = stag.Interior;\n\t\t\tif(I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\n\t\t}\n\t}\n\tstyles[stag.ID] = stag;\n}\n\n/* TODO: there must exist some form of OSP-blessed spec */\nfunction parse_xlml_data(xml, ss, data, cell/*:any*/, base, styles, csty, row, arrayf, o) {\n\tvar nf = \"General\", sid = cell.StyleID, S = {}; o = o || {};\n\tvar interiors = [];\n\tvar i = 0;\n\tif(sid === undefined && row) sid = row.StyleID;\n\tif(sid === undefined && csty) sid = csty.StyleID;\n\twhile(styles[sid] !== undefined) {\n\t\tif(styles[sid].nf) nf = styles[sid].nf;\n\t\tif(styles[sid].Interior) interiors.push(styles[sid].Interior);\n\t\tif(!styles[sid].Parent) break;\n\t\tsid = styles[sid].Parent;\n\t}\n\tswitch(data.Type) {\n\t\tcase 'Boolean':\n\t\t\tcell.t = 'b';\n\t\t\tcell.v = parsexmlbool(xml);\n\t\t\tbreak;\n\t\tcase 'String':\n\t\t\tcell.t = 's'; cell.r = xlml_fixstr(unescapexml(xml));\n\t\t\tcell.v = (xml.indexOf(\"<\") > -1 ? unescapexml(ss||xml).replace(/<.*?>/g, \"\") : cell.r); // todo: BR etc\n\t\t\tbreak;\n\t\tcase 'DateTime':\n\t\t\tif(xml.slice(-1) != \"Z\") xml += \"Z\";\n\t\t\tcell.v = (parseDate(xml) - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n\t\t\tif(cell.v !== cell.v) cell.v = unescapexml(xml);\n\t\t\telse if(cell.v<60) cell.v = cell.v -1;\n\t\t\tif(!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\n\t\t\t/* falls through */\n\t\tcase 'Number':\n\t\t\tif(cell.v === undefined) cell.v=+xml;\n\t\t\tif(!cell.t) cell.t = 'n';\n\t\t\tbreak;\n\t\tcase 'Error': cell.t = 'e'; cell.v = RBErr[xml]; if(o.cellText !== false) cell.w = xml; break;\n\t\tdefault:\n\t\t\tif(xml == \"\" && ss == \"\") { cell.t = 'z'; }\n\t\t\telse { cell.t = 's'; cell.v = xlml_fixstr(ss||xml); }\n\t\t\tbreak;\n\t}\n\tsafe_format_xlml(cell, nf, o);\n\tif(o.cellFormula !== false) {\n\t\tif(cell.Formula) {\n\t\t\tvar fstr = unescapexml(cell.Formula);\n\t\t\t/* strictly speaking, the leading = is required but some writers omit */\n\t\t\tif(fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\n\t\t\tcell.f = rc_to_a1(fstr, base);\n\t\t\tdelete cell.Formula;\n\t\t\tif(cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);\n\t\t\telse if(cell.ArrayRange) {\n\t\t\t\tcell.F = rc_to_a1(cell.ArrayRange, base);\n\t\t\t\tarrayf.push([safe_decode_range(cell.F), cell.F]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\tif(base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r)\n\t\t\t\t\tif(base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\tcell.F = arrayf[i][1];\n\t\t}\n\t}\n\tif(o.cellStyles) {\n\t\tinteriors.forEach(function(x) {\n\t\t\tif(!S.patternType && x.patternType) S.patternType = x.patternType;\n\t\t});\n\t\tcell.s = S;\n\t}\n\tif(cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\n}\n\nfunction xlml_clean_comment(comment/*:any*/) {\n\tcomment.t = comment.v || \"\";\n\tcomment.t = comment.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\tcomment.v = comment.w = comment.ixfe = undefined;\n}\n\n/* TODO: Everything */\nfunction parse_xlml_xml(d, _opts)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tmake_ssf();\n\tvar str = debom(xlml_normalize(d));\n\tif(opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\n\t\tif(typeof $cptable !== 'undefined') str = $cptable.utils.decode(65001, char_codes(str));\n\t\telse str = utf8read(str);\n\t}\n\tvar opening = str.slice(0, 1024).toLowerCase(), ishtml = false;\n\topening = opening.replace(/\".*?\"/g, \"\");\n\tif((opening.indexOf(\">\") & 1023) > Math.min((opening.indexOf(\",\") & 1023), (opening.indexOf(\";\")&1023))) { var _o = dup(opts); _o.type = \"string\"; return PRN.to_workbook(str, _o); }\n\tif(opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function(tag) { if(opening.indexOf(\"<\" + tag) >= 0) ishtml = true; });\n\tif(ishtml) return html_to_workbook(str, opts);\n\n\tXLMLFormatMap = ({\n\t\t\"General Number\": \"General\",\n\t\t\"General Date\": table_fmt[22],\n\t\t\"Long Date\": \"dddd, mmmm dd, yyyy\",\n\t\t\"Medium Date\": table_fmt[15],\n\t\t\"Short Date\": table_fmt[14],\n\t\t\"Long Time\": table_fmt[19],\n\t\t\"Medium Time\": table_fmt[18],\n\t\t\"Short Time\": table_fmt[20],\n\t\t\"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\t\"Fixed\": table_fmt[2],\n\t\t\"Standard\": table_fmt[4],\n\t\t\"Percent\": table_fmt[10],\n\t\t\"Scientific\": table_fmt[11],\n\t\t\"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\n\t\t\"True/False\": '\"True\";\"True\";\"False\";@',\n\t\t\"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\n\t}/*:any*/);\n\n\n\tvar Rn;\n\tvar state = [], tmp;\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar sheets = {}, sheetnames/*:Array<string>*/ = [], cursheet/*:Worksheet*/ = (opts.dense ? [] : {}), sheetname = \"\";\n\tvar cell = ({}/*:any*/), row = {};// eslint-disable-line no-unused-vars\n\tvar dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'), didx = 0;\n\tvar c = 0, r = 0;\n\tvar refguess/*:Range*/ = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\tvar styles = {}, stag = {};\n\tvar ss = \"\", fidx = 0;\n\tvar merges/*:Array<Range>*/ = [];\n\tvar Props = {}, Custprops = {}, pidx = 0, cp = [];\n\tvar comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);\n\tvar cstys = [], csty, seencol = false;\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar rowinfo/*:Array<RowInfo>*/ = [], rowobj = {}, cc = 0, rr = 0;\n\tvar Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false} }/*:any*/), wsprops = {};\n\txlmlregex.lastIndex = 0;\n\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\");\n\tvar raw_Rn3 = \"\";\n\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3] = (raw_Rn3 = Rn[3]).toLowerCase())) {\n\t\tcase 'data' /*case 'Data'*/:\n\t\t\tif(raw_Rn3 == \"data\") {\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(state[state.length-1][1]) break;\n\t\t\tif(Rn[1]==='/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length-1][0]==/*\"Comment\"*/\"comment\"?comment:cell, {c:c,r:r}, styles, cstys[c], row, arrayf, opts);\n\t\t\telse { ss = \"\"; dtag = xlml_parsexmltag(Rn[0]); didx = Rn.index + Rn[0].length; }\n\t\t\tbreak;\n\t\tcase 'cell' /*case 'Cell'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif(comments.length > 0) cell.c = comments;\n\t\t\t\tif((!opts.sheetRows || opts.sheetRows > r) && cell.v !== undefined) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!cursheet[r]) cursheet[r] = [];\n\t\t\t\t\t\tcursheet[r][c] = cell;\n\t\t\t\t\t} else cursheet[encode_col(c) + encode_row(r)] = cell;\n\t\t\t\t}\n\t\t\t\tif(cell.HRef) {\n\t\t\t\t\tcell.l = ({Target:unescapexml(cell.HRef)}/*:any*/);\n\t\t\t\t\tif(cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\n\t\t\t\t\tdelete cell.HRef; delete cell.HRefScreenTip;\n\t\t\t\t}\n\t\t\t\tif(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\tcc = c + (parseInt(cell.MergeAcross,10)|0);\n\t\t\t\t\trr = r + (parseInt(cell.MergeDown,10)|0);\n\t\t\t\t\tmerges.push({s:{c:c,r:r},e:{c:cc,r:rr}});\n\t\t\t\t}\n\t\t\t\tif(!opts.sheetStubs) { if(cell.MergeAcross) c = cc + 1; else ++c; }\n\t\t\t\telse if(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\t/*:: if(!cc) cc = 0; if(!rr) rr = 0; */\n\t\t\t\t\tfor(var cma = c; cma <= cc; ++cma) {\n\t\t\t\t\t\tfor(var cmd = r; cmd <= rr; ++cmd) {\n\t\t\t\t\t\t\tif(cma > c || cmd > r) {\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!cursheet[cmd]) cursheet[cmd] = [];\n\t\t\t\t\t\t\t\t\tcursheet[cmd][cma] = {t:'z'};\n\t\t\t\t\t\t\t\t} else cursheet[encode_col(cma) + encode_row(cmd)] = {t:'z'};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tc = cc + 1;\n\t\t\t\t}\n\t\t\t\telse ++c;\n\t\t\t} else {\n\t\t\t\tcell = xlml_parsexmltagobj(Rn[0]);\n\t\t\t\tif(cell.Index) c = +cell.Index - 1;\n\t\t\t\tif(c < refguess.s.c) refguess.s.c = c;\n\t\t\t\tif(c > refguess.e.c) refguess.e.c = c;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") ++c;\n\t\t\t\tcomments = [];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'row' /*case 'Row'*/:\n\t\t\tif(Rn[1]==='/' || Rn[0].slice(-2) === \"/>\") {\n\t\t\t\tif(r < refguess.s.r) refguess.s.r = r;\n\t\t\t\tif(r > refguess.e.r) refguess.e.r = r;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") {\n\t\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\t}\n\t\t\t\tc = 0; ++r;\n\t\t\t} else {\n\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\trowobj = {};\n\t\t\t\tif(row.AutoFitHeight == \"0\" || row.Height) {\n\t\t\t\t\trowobj.hpx = parseInt(row.Height, 10); rowobj.hpt = px2pt(rowobj.hpx);\n\t\t\t\t\trowinfo[r] = rowobj;\n\t\t\t\t}\n\t\t\t\tif(row.Hidden == \"1\") { rowobj.hidden = true; rowinfo[r] = rowobj; }\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'worksheet' /*case 'Worksheet'*/: /* TODO: read range from FullRows/FullColumns */\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\tsheetnames.push(sheetname);\n\t\t\t\tif(refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\n\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows <= refguess.e.r) {\n\t\t\t\t\t\tcursheet[\"!fullref\"] = cursheet[\"!ref\"];\n\t\t\t\t\t\trefguess.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(merges.length) cursheet[\"!merges\"] = merges;\n\t\t\t\tif(cstys.length > 0) cursheet[\"!cols\"] = cstys;\n\t\t\t\tif(rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\n\t\t\t\tsheets[sheetname] = cursheet;\n\t\t\t} else {\n\t\t\t\trefguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\t\t\t\tr = c = 0;\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tsheetname = unescapexml(tmp.Name);\n\t\t\t\tcursheet = (opts.dense ? [] : {});\n\t\t\t\tmerges = [];\n\t\t\t\tarrayf = [];\n\t\t\t\trowinfo = [];\n\t\t\t\twsprops = {name:sheetname, Hidden:0};\n\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'table' /*case 'Table'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].slice(-2) == \"/>\") break;\n\t\t\telse {\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\tcstys = []; seencol = false;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'style' /*case 'Style'*/:\n\t\t\tif(Rn[1]==='/') process_style_xlml(styles, stag, opts);\n\t\t\telse stag = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\n\t\tcase 'numberformat' /*case 'NumberFormat'*/:\n\t\t\tstag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\n\t\t\tif(XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\n\t\t\tfor(var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if(table_fmt[ssfidx] == stag.nf) break;\n\t\t\tif(ssfidx == 0x188) for(ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if(table_fmt[ssfidx] == null) { SSF_load(stag.nf, ssfidx); break; }\n\t\t\tbreak;\n\n\t\tcase 'column' /*case 'Column'*/:\n\t\t\tif(state[state.length-1][0] !== /*'Table'*/'table') break;\n\t\t\tcsty = xlml_parsexmltag(Rn[0]);\n\t\t\tif(csty.Hidden) { csty.hidden = true; delete csty.Hidden; }\n\t\t\tif(csty.Width) csty.wpx = parseInt(csty.Width, 10);\n\t\t\tif(!seencol && csty.wpx > 10) {\n\t\t\t\tseencol = true; MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\n\t\t\t\tfor(var _col = 0; _col < cstys.length; ++_col) if(cstys[_col]) process_col(cstys[_col]);\n\t\t\t}\n\t\t\tif(seencol) process_col(csty);\n\t\t\tcstys[(csty.Index-1||cstys.length)] = csty;\n\t\t\tfor(var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\n\t\t\tbreak;\n\n\t\tcase 'namedrange' /*case 'NamedRange'*/:\n\t\t\tif(Rn[1]==='/') break;\n\t\t\tif(!Workbook.Names) Workbook.Names = [];\n\t\t\tvar _NamedRange = parsexmltag(Rn[0]);\n\t\t\tvar _DefinedName/*:DefinedName*/ = ({\n\t\t\t\tName: _NamedRange.Name,\n\t\t\t\tRef: rc_to_a1(_NamedRange.RefersTo.slice(1), {r:0, c:0})\n\t\t\t}/*:any*/);\n\t\t\tif(Workbook.Sheets.length>0) _DefinedName.Sheet=Workbook.Sheets.length-1;\n\t\t\t/*:: if(Workbook.Names) */Workbook.Names.push(_DefinedName);\n\t\t\tbreak;\n\n\t\tcase 'namedcell' /*case 'NamedCell'*/: break;\n\t\tcase 'b' /*case 'B'*/: break;\n\t\tcase 'i' /*case 'I'*/: break;\n\t\tcase 'u' /*case 'U'*/: break;\n\t\tcase 's' /*case 'S'*/: break;\n\t\tcase 'em' /*case 'EM'*/: break;\n\t\tcase 'h2' /*case 'H2'*/: break;\n\t\tcase 'h3' /*case 'H3'*/: break;\n\t\tcase 'sub' /*case 'Sub'*/: break;\n\t\tcase 'sup' /*case 'Sup'*/: break;\n\t\tcase 'span' /*case 'Span'*/: break;\n\t\tcase 'alignment' /*case 'Alignment'*/:\n\t\t\tbreak;\n\t\tcase 'borders' /*case 'Borders'*/: break;\n\t\tcase 'border' /*case 'Border'*/: break;\n\t\tcase 'font' /*case 'Font'*/:\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") ss += str.slice(fidx, Rn.index);\n\t\t\telse fidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'interior' /*case 'Interior'*/:\n\t\t\tif(!opts.cellStyles) break;\n\t\t\tstag.Interior = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\t\tcase 'protection' /*case 'Protection'*/: break;\n\n\t\tcase 'author' /*case 'Author'*/:\n\t\tcase 'title' /*case 'Title'*/:\n\t\tcase 'description' /*case 'Description'*/:\n\t\tcase 'created' /*case 'Created'*/:\n\t\tcase 'keywords' /*case 'Keywords'*/:\n\t\tcase 'subject' /*case 'Subject'*/:\n\t\tcase 'category' /*case 'Category'*/:\n\t\tcase 'company' /*case 'Company'*/:\n\t\tcase 'lastauthor' /*case 'LastAuthor'*/:\n\t\tcase 'lastsaved' /*case 'LastSaved'*/:\n\t\tcase 'lastprinted' /*case 'LastPrinted'*/:\n\t\tcase 'version' /*case 'Version'*/:\n\t\tcase 'revision' /*case 'Revision'*/:\n\t\tcase 'totaltime' /*case 'TotalTime'*/:\n\t\tcase 'hyperlinkbase' /*case 'HyperlinkBase'*/:\n\t\tcase 'manager' /*case 'Manager'*/:\n\t\tcase 'contentstatus' /*case 'ContentStatus'*/:\n\t\tcase 'identifier' /*case 'Identifier'*/:\n\t\tcase 'language' /*case 'Language'*/:\n\t\tcase 'appname' /*case 'AppName'*/:\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") xlml_set_prop(Props, raw_Rn3, str.slice(pidx, Rn.index));\n\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'paragraphs' /*case 'Paragraphs'*/: break;\n\n\t\tcase 'styles' /*case 'Styles'*/:\n\t\tcase 'workbook' /*case 'Workbook'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse state.push([Rn[3], false]);\n\t\t\tbreak;\n\n\t\tcase 'comment' /*case 'Comment'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\txlml_clean_comment(comment);\n\t\t\t\tcomments.push(comment);\n\t\t\t} else {\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcomment = ({a:tmp.Author}/*:any*/);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'autofilter' /*case 'AutoFilter'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\tvar AutoFilter = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcursheet['!autofilter'] = { ref:rc_to_a1(AutoFilter.Range).replace(/\\$/g,\"\") };\n\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'name' /*case 'Name'*/: break;\n\n\t\tcase 'datavalidation' /*case 'DataValidation'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t} else {\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'pixelsperinch' /*case 'PixelsPerInch'*/:\n\t\t\tbreak;\n\t\tcase 'componentoptions' /*case 'ComponentOptions'*/:\n\t\tcase 'documentproperties' /*case 'DocumentProperties'*/:\n\t\tcase 'customdocumentproperties' /*case 'CustomDocumentProperties'*/:\n\t\tcase 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n\t\tcase 'pivottable' /*case 'PivotTable'*/:\n\t\tcase 'pivotcache' /*case 'PivotCache'*/:\n\t\tcase 'names' /*case 'Names'*/:\n\t\tcase 'mapinfo' /*case 'MapInfo'*/:\n\t\tcase 'pagebreaks' /*case 'PageBreaks'*/:\n\t\tcase 'querytable' /*case 'QueryTable'*/:\n\t\tcase 'sorting' /*case 'Sorting'*/:\n\t\tcase 'schema' /*case 'Schema'*/: //case 'data' /*case 'data'*/:\n\t\tcase 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n\t\tcase 'smarttagtype' /*case 'SmartTagType'*/:\n\t\tcase 'smarttags' /*case 'SmartTags'*/:\n\t\tcase 'excelworkbook' /*case 'ExcelWorkbook'*/:\n\t\tcase 'workbookoptions' /*case 'WorkbookOptions'*/:\n\t\tcase 'worksheetoptions' /*case 'WorksheetOptions'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\tbreak;\n\n\t\tcase 'null' /*case 'Null'*/: break;\n\n\t\tdefault:\n\t\t\t/* FODS file root is <office:document> */\n\t\t\tif(state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\n\t\t\t/* UOS file root is <uof:UOF> */\n\t\t\tif(state.length == 0 && Rn[3] == \"uof\"/*\"UOF\"*/) return parse_fods(str, opts);\n\n\t\t\tvar seen = true;\n\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t/* OfficeDocumentSettings */\n\t\t\t\tcase 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'allowpng' /*case 'AllowPNG'*/: break;\n\t\t\t\t\tcase 'removepersonalinformation' /*case 'RemovePersonalInformation'*/: break;\n\t\t\t\t\tcase 'downloadcomponents' /*case 'DownloadComponents'*/: break;\n\t\t\t\t\tcase 'locationofcomponents' /*case 'LocationOfComponents'*/: break;\n\t\t\t\t\tcase 'colors' /*case 'Colors'*/: break;\n\t\t\t\t\tcase 'color' /*case 'Color'*/: break;\n\t\t\t\t\tcase 'index' /*case 'Index'*/: break;\n\t\t\t\t\tcase 'rgb' /*case 'RGB'*/: break;\n\t\t\t\t\tcase 'targetscreensize' /*case 'TargetScreenSize'*/: break;\n\t\t\t\t\tcase 'readonlyrecommended' /*case 'ReadOnlyRecommended'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ComponentOptions */\n\t\t\t\tcase 'componentoptions' /*case 'ComponentOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'toolbar' /*case 'Toolbar'*/: break;\n\t\t\t\t\tcase 'hideofficelogo' /*case 'HideOfficeLogo'*/: break;\n\t\t\t\t\tcase 'spreadsheetautofit' /*case 'SpreadsheetAutoFit'*/: break;\n\t\t\t\t\tcase 'label' /*case 'Label'*/: break;\n\t\t\t\t\tcase 'caption' /*case 'Caption'*/: break;\n\t\t\t\t\tcase 'maxheight' /*case 'MaxHeight'*/: break;\n\t\t\t\t\tcase 'maxwidth' /*case 'MaxWidth'*/: break;\n\t\t\t\t\tcase 'nextsheetnumber' /*case 'NextSheetNumber'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ExcelWorkbook */\n\t\t\t\tcase 'excelworkbook' /*case 'ExcelWorkbook'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'date1904' /*case 'Date1904'*/:\n\t\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\t\tWorkbook.WBProps.date1904 = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'windowheight' /*case 'WindowHeight'*/: break;\n\t\t\t\t\tcase 'windowwidth' /*case 'WindowWidth'*/: break;\n\t\t\t\t\tcase 'windowtopx' /*case 'WindowTopX'*/: break;\n\t\t\t\t\tcase 'windowtopy' /*case 'WindowTopY'*/: break;\n\t\t\t\t\tcase 'tabratio' /*case 'TabRatio'*/: break;\n\t\t\t\t\tcase 'protectstructure' /*case 'ProtectStructure'*/: break;\n\t\t\t\t\tcase 'protectwindow' /*case 'ProtectWindow'*/: break;\n\t\t\t\t\tcase 'protectwindows' /*case 'ProtectWindows'*/: break;\n\t\t\t\t\tcase 'activesheet' /*case 'ActiveSheet'*/: break;\n\t\t\t\t\tcase 'displayinknotes' /*case 'DisplayInkNotes'*/: break;\n\t\t\t\t\tcase 'firstvisiblesheet' /*case 'FirstVisibleSheet'*/: break;\n\t\t\t\t\tcase 'supbook' /*case 'SupBook'*/: break;\n\t\t\t\t\tcase 'sheetname' /*case 'SheetName'*/: break;\n\t\t\t\t\tcase 'sheetindex' /*case 'SheetIndex'*/: break;\n\t\t\t\t\tcase 'sheetindexfirst' /*case 'SheetIndexFirst'*/: break;\n\t\t\t\t\tcase 'sheetindexlast' /*case 'SheetIndexLast'*/: break;\n\t\t\t\t\tcase 'dll' /*case 'Dll'*/: break;\n\t\t\t\t\tcase 'acceptlabelsinformulas' /*case 'AcceptLabelsInFormulas'*/: break;\n\t\t\t\t\tcase 'donotsavelinkvalues' /*case 'DoNotSaveLinkValues'*/: break;\n\t\t\t\t\tcase 'iteration' /*case 'Iteration'*/: break;\n\t\t\t\t\tcase 'maxiterations' /*case 'MaxIterations'*/: break;\n\t\t\t\t\tcase 'maxchange' /*case 'MaxChange'*/: break;\n\t\t\t\t\tcase 'path' /*case 'Path'*/: break;\n\t\t\t\t\tcase 'xct' /*case 'Xct'*/: break;\n\t\t\t\t\tcase 'count' /*case 'Count'*/: break;\n\t\t\t\t\tcase 'selectedsheets' /*case 'SelectedSheets'*/: break;\n\t\t\t\t\tcase 'calculation' /*case 'Calculation'*/: break;\n\t\t\t\t\tcase 'uncalced' /*case 'Uncalced'*/: break;\n\t\t\t\t\tcase 'startupprompt' /*case 'StartupPrompt'*/: break;\n\t\t\t\t\tcase 'crn' /*case 'Crn'*/: break;\n\t\t\t\t\tcase 'externname' /*case 'ExternName'*/: break;\n\t\t\t\t\tcase 'formula' /*case 'Formula'*/: break;\n\t\t\t\t\tcase 'colfirst' /*case 'ColFirst'*/: break;\n\t\t\t\t\tcase 'collast' /*case 'ColLast'*/: break;\n\t\t\t\t\tcase 'wantadvise' /*case 'WantAdvise'*/: break;\n\t\t\t\t\tcase 'boolean' /*case 'Boolean'*/: break;\n\t\t\t\t\tcase 'error' /*case 'Error'*/: break;\n\t\t\t\t\tcase 'text' /*case 'Text'*/: break;\n\t\t\t\t\tcase 'ole' /*case 'OLE'*/: break;\n\t\t\t\t\tcase 'noautorecover' /*case 'NoAutoRecover'*/: break;\n\t\t\t\t\tcase 'publishobjects' /*case 'PublishObjects'*/: break;\n\t\t\t\t\tcase 'donotcalculatebeforesave' /*case 'DoNotCalculateBeforeSave'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'refmoder1c1' /*case 'RefModeR1C1'*/: break;\n\t\t\t\t\tcase 'embedsavesmarttags' /*case 'EmbedSaveSmartTags'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorkbookOptions */\n\t\t\t\tcase 'workbookoptions' /*case 'WorkbookOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'owcversion' /*case 'OWCVersion'*/: break;\n\t\t\t\t\tcase 'height' /*case 'Height'*/: break;\n\t\t\t\t\tcase 'width' /*case 'Width'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorksheetOptions */\n\t\t\t\tcase 'worksheetoptions' /*case 'WorksheetOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'visible' /*case 'Visible'*/:\n\t\t\t\t\t\tif(Rn[0].slice(-2) === \"/>\"){/* empty */}\n\t\t\t\t\t\telse if(Rn[1]===\"/\") switch(str.slice(pidx, Rn.index)) {\n\t\t\t\t\t\t\tcase \"SheetHidden\": wsprops.Hidden = 1; break;\n\t\t\t\t\t\t\tcase \"SheetVeryHidden\": wsprops.Hidden = 2; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'header' /*case 'Header'*/:\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tif(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].header = +parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'footer' /*case 'Footer'*/:\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tif(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].footer = +parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'pagemargins' /*case 'PageMargins'*/:\n\t\t\t\t\t\tvar pagemargins = parsexmltag(Rn[0]);\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={},'xlml');\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Top)) cursheet['!margins'].top = +pagemargins.Top;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Left)) cursheet['!margins'].left = +pagemargins.Left;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Right)) cursheet['!margins'].right = +pagemargins.Right;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Bottom)) cursheet['!margins'].bottom = +pagemargins.Bottom;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'displayrighttoleft' /*case 'DisplayRightToLeft'*/:\n\t\t\t\t\t\tif(!Workbook.Views) Workbook.Views = [];\n\t\t\t\t\t\tif(!Workbook.Views[0]) Workbook.Views[0] = {};\n\t\t\t\t\t\tWorkbook.Views[0].RTL = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'freezepanes' /*case 'FreezePanes'*/: break;\n\t\t\t\t\tcase 'frozennosplit' /*case 'FrozenNoSplit'*/: break;\n\n\t\t\t\t\tcase 'splithorizontal' /*case 'SplitHorizontal'*/:\n\t\t\t\t\tcase 'splitvertical' /*case 'SplitVertical'*/:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'donotdisplaygridlines' /*case 'DoNotDisplayGridlines'*/:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'activerow' /*case 'ActiveRow'*/: break;\n\t\t\t\t\tcase 'activecol' /*case 'ActiveCol'*/: break;\n\t\t\t\t\tcase 'toprowbottompane' /*case 'TopRowBottomPane'*/: break;\n\t\t\t\t\tcase 'leftcolumnrightpane' /*case 'LeftColumnRightPane'*/: break;\n\n\t\t\t\t\tcase 'unsynced' /*case 'Unsynced'*/: break;\n\t\t\t\t\tcase 'print' /*case 'Print'*/: break;\n\t\t\t\t\tcase 'printerrors' /*case 'PrintErrors'*/: break;\n\t\t\t\t\tcase 'panes' /*case 'Panes'*/: break;\n\t\t\t\t\tcase 'scale' /*case 'Scale'*/: break;\n\t\t\t\t\tcase 'pane' /*case 'Pane'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'layout' /*case 'Layout'*/: break;\n\t\t\t\t\tcase 'pagesetup' /*case 'PageSetup'*/: break;\n\t\t\t\t\tcase 'selected' /*case 'Selected'*/: break;\n\t\t\t\t\tcase 'protectobjects' /*case 'ProtectObjects'*/: break;\n\t\t\t\t\tcase 'enableselection' /*case 'EnableSelection'*/: break;\n\t\t\t\t\tcase 'protectscenarios' /*case 'ProtectScenarios'*/: break;\n\t\t\t\t\tcase 'validprinterinfo' /*case 'ValidPrinterInfo'*/: break;\n\t\t\t\t\tcase 'horizontalresolution' /*case 'HorizontalResolution'*/: break;\n\t\t\t\t\tcase 'verticalresolution' /*case 'VerticalResolution'*/: break;\n\t\t\t\t\tcase 'numberofcopies' /*case 'NumberofCopies'*/: break;\n\t\t\t\t\tcase 'activepane' /*case 'ActivePane'*/: break;\n\t\t\t\t\tcase 'toprowvisible' /*case 'TopRowVisible'*/: break;\n\t\t\t\t\tcase 'leftcolumnvisible' /*case 'LeftColumnVisible'*/: break;\n\t\t\t\t\tcase 'fittopage' /*case 'FitToPage'*/: break;\n\t\t\t\t\tcase 'rangeselection' /*case 'RangeSelection'*/: break;\n\t\t\t\t\tcase 'papersizeindex' /*case 'PaperSizeIndex'*/: break;\n\t\t\t\t\tcase 'pagelayoutzoom' /*case 'PageLayoutZoom'*/: break;\n\t\t\t\t\tcase 'pagebreakzoom' /*case 'PageBreakZoom'*/: break;\n\t\t\t\t\tcase 'filteron' /*case 'FilterOn'*/: break;\n\t\t\t\t\tcase 'fitwidth' /*case 'FitWidth'*/: break;\n\t\t\t\t\tcase 'fitheight' /*case 'FitHeight'*/: break;\n\t\t\t\t\tcase 'commentslayout' /*case 'CommentsLayout'*/: break;\n\t\t\t\t\tcase 'zoom' /*case 'Zoom'*/: break;\n\t\t\t\t\tcase 'lefttoright' /*case 'LeftToRight'*/: break;\n\t\t\t\t\tcase 'gridlines' /*case 'Gridlines'*/: break;\n\t\t\t\t\tcase 'allowsort' /*case 'AllowSort'*/: break;\n\t\t\t\t\tcase 'allowfilter' /*case 'AllowFilter'*/: break;\n\t\t\t\t\tcase 'allowinsertrows' /*case 'AllowInsertRows'*/: break;\n\t\t\t\t\tcase 'allowdeleterows' /*case 'AllowDeleteRows'*/: break;\n\t\t\t\t\tcase 'allowinsertcols' /*case 'AllowInsertCols'*/: break;\n\t\t\t\t\tcase 'allowdeletecols' /*case 'AllowDeleteCols'*/: break;\n\t\t\t\t\tcase 'allowinserthyperlinks' /*case 'AllowInsertHyperlinks'*/: break;\n\t\t\t\t\tcase 'allowformatcells' /*case 'AllowFormatCells'*/: break;\n\t\t\t\t\tcase 'allowsizecols' /*case 'AllowSizeCols'*/: break;\n\t\t\t\t\tcase 'allowsizerows' /*case 'AllowSizeRows'*/: break;\n\t\t\t\t\tcase 'nosummaryrowsbelowdetail' /*case 'NoSummaryRowsBelowDetail'*/:\n\t\t\t\t\t\tif(!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n\t\t\t\t\t\tcursheet[\"!outline\"].above = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'tabcolorindex' /*case 'TabColorIndex'*/: break;\n\t\t\t\t\tcase 'donotdisplayheadings' /*case 'DoNotDisplayHeadings'*/: break;\n\t\t\t\t\tcase 'showpagelayoutzoom' /*case 'ShowPageLayoutZoom'*/: break;\n\t\t\t\t\tcase 'nosummarycolumnsrightdetail' /*case 'NoSummaryColumnsRightDetail'*/:\n\t\t\t\t\t\tif(!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n\t\t\t\t\t\tcursheet[\"!outline\"].left = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blackandwhite' /*case 'BlackAndWhite'*/: break;\n\t\t\t\t\tcase 'donotdisplayzeros' /*case 'DoNotDisplayZeros'*/: break;\n\t\t\t\t\tcase 'displaypagebreak' /*case 'DisplayPageBreak'*/: break;\n\t\t\t\t\tcase 'rowcolheadings' /*case 'RowColHeadings'*/: break;\n\t\t\t\t\tcase 'donotdisplayoutline' /*case 'DoNotDisplayOutline'*/: break;\n\t\t\t\t\tcase 'noorientation' /*case 'NoOrientation'*/: break;\n\t\t\t\t\tcase 'allowusepivottables' /*case 'AllowUsePivotTables'*/: break;\n\t\t\t\t\tcase 'zeroheight' /*case 'ZeroHeight'*/: break;\n\t\t\t\t\tcase 'viewablerange' /*case 'ViewableRange'*/: break;\n\t\t\t\t\tcase 'selection' /*case 'Selection'*/: break;\n\t\t\t\t\tcase 'protectcontents' /*case 'ProtectContents'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PivotTable */\n\t\t\t\tcase 'pivottable' /*case 'PivotTable'*/: case 'pivotcache' /*case 'PivotCache'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'immediateitemsondrop' /*case 'ImmediateItemsOnDrop'*/: break;\n\t\t\t\t\tcase 'showpagemultipleitemlabel' /*case 'ShowPageMultipleItemLabel'*/: break;\n\t\t\t\t\tcase 'compactrowindent' /*case 'CompactRowIndent'*/: break;\n\t\t\t\t\tcase 'location' /*case 'Location'*/: break;\n\t\t\t\t\tcase 'pivotfield' /*case 'PivotField'*/: break;\n\t\t\t\t\tcase 'orientation' /*case 'Orientation'*/: break;\n\t\t\t\t\tcase 'layoutform' /*case 'LayoutForm'*/: break;\n\t\t\t\t\tcase 'layoutsubtotallocation' /*case 'LayoutSubtotalLocation'*/: break;\n\t\t\t\t\tcase 'layoutcompactrow' /*case 'LayoutCompactRow'*/: break;\n\t\t\t\t\tcase 'position' /*case 'Position'*/: break;\n\t\t\t\t\tcase 'pivotitem' /*case 'PivotItem'*/: break;\n\t\t\t\t\tcase 'datatype' /*case 'DataType'*/: break;\n\t\t\t\t\tcase 'datafield' /*case 'DataField'*/: break;\n\t\t\t\t\tcase 'sourcename' /*case 'SourceName'*/: break;\n\t\t\t\t\tcase 'parentfield' /*case 'ParentField'*/: break;\n\t\t\t\t\tcase 'ptlineitems' /*case 'PTLineItems'*/: break;\n\t\t\t\t\tcase 'ptlineitem' /*case 'PTLineItem'*/: break;\n\t\t\t\t\tcase 'countofsameitems' /*case 'CountOfSameItems'*/: break;\n\t\t\t\t\tcase 'item' /*case 'Item'*/: break;\n\t\t\t\t\tcase 'itemtype' /*case 'ItemType'*/: break;\n\t\t\t\t\tcase 'ptsource' /*case 'PTSource'*/: break;\n\t\t\t\t\tcase 'cacheindex' /*case 'CacheIndex'*/: break;\n\t\t\t\t\tcase 'consolidationreference' /*case 'ConsolidationReference'*/: break;\n\t\t\t\t\tcase 'filename' /*case 'FileName'*/: break;\n\t\t\t\t\tcase 'reference' /*case 'Reference'*/: break;\n\t\t\t\t\tcase 'nocolumngrand' /*case 'NoColumnGrand'*/: break;\n\t\t\t\t\tcase 'norowgrand' /*case 'NoRowGrand'*/: break;\n\t\t\t\t\tcase 'blanklineafteritems' /*case 'BlankLineAfterItems'*/: break;\n\t\t\t\t\tcase 'hidden' /*case 'Hidden'*/: break;\n\t\t\t\t\tcase 'subtotal' /*case 'Subtotal'*/: break;\n\t\t\t\t\tcase 'basefield' /*case 'BaseField'*/: break;\n\t\t\t\t\tcase 'mapchilditems' /*case 'MapChildItems'*/: break;\n\t\t\t\t\tcase 'function' /*case 'Function'*/: break;\n\t\t\t\t\tcase 'refreshonfileopen' /*case 'RefreshOnFileOpen'*/: break;\n\t\t\t\t\tcase 'printsettitles' /*case 'PrintSetTitles'*/: break;\n\t\t\t\t\tcase 'mergelabels' /*case 'MergeLabels'*/: break;\n\t\t\t\t\tcase 'defaultversion' /*case 'DefaultVersion'*/: break;\n\t\t\t\t\tcase 'refreshname' /*case 'RefreshName'*/: break;\n\t\t\t\t\tcase 'refreshdate' /*case 'RefreshDate'*/: break;\n\t\t\t\t\tcase 'refreshdatecopy' /*case 'RefreshDateCopy'*/: break;\n\t\t\t\t\tcase 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;\n\t\t\t\t\tcase 'versionlastupdate' /*case 'VersionLastUpdate'*/: break;\n\t\t\t\t\tcase 'versionupdateablemin' /*case 'VersionUpdateableMin'*/: break;\n\t\t\t\t\tcase 'versionrefreshablemin' /*case 'VersionRefreshableMin'*/: break;\n\t\t\t\t\tcase 'calculation' /*case 'Calculation'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PageBreaks */\n\t\t\t\tcase 'pagebreaks' /*case 'PageBreaks'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'colbreaks' /*case 'ColBreaks'*/: break;\n\t\t\t\t\tcase 'colbreak' /*case 'ColBreak'*/: break;\n\t\t\t\t\tcase 'rowbreaks' /*case 'RowBreaks'*/: break;\n\t\t\t\t\tcase 'rowbreak' /*case 'RowBreak'*/: break;\n\t\t\t\t\tcase 'colstart' /*case 'ColStart'*/: break;\n\t\t\t\t\tcase 'colend' /*case 'ColEnd'*/: break;\n\t\t\t\t\tcase 'rowend' /*case 'RowEnd'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* AutoFilter */\n\t\t\t\tcase 'autofilter' /*case 'AutoFilter'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'autofiltercolumn' /*case 'AutoFilterColumn'*/: break;\n\t\t\t\t\tcase 'autofiltercondition' /*case 'AutoFilterCondition'*/: break;\n\t\t\t\t\tcase 'autofilterand' /*case 'AutoFilterAnd'*/: break;\n\t\t\t\t\tcase 'autofilteror' /*case 'AutoFilterOr'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* QueryTable */\n\t\t\t\tcase 'querytable' /*case 'QueryTable'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'id' /*case 'Id'*/: break;\n\t\t\t\t\tcase 'autoformatfont' /*case 'AutoFormatFont'*/: break;\n\t\t\t\t\tcase 'autoformatpattern' /*case 'AutoFormatPattern'*/: break;\n\t\t\t\t\tcase 'querysource' /*case 'QuerySource'*/: break;\n\t\t\t\t\tcase 'querytype' /*case 'QueryType'*/: break;\n\t\t\t\t\tcase 'enableredirections' /*case 'EnableRedirections'*/: break;\n\t\t\t\t\tcase 'refreshedinxl9' /*case 'RefreshedInXl9'*/: break;\n\t\t\t\t\tcase 'urlstring' /*case 'URLString'*/: break;\n\t\t\t\t\tcase 'htmltables' /*case 'HTMLTables'*/: break;\n\t\t\t\t\tcase 'connection' /*case 'Connection'*/: break;\n\t\t\t\t\tcase 'commandtext' /*case 'CommandText'*/: break;\n\t\t\t\t\tcase 'refreshinfo' /*case 'RefreshInfo'*/: break;\n\t\t\t\t\tcase 'notitles' /*case 'NoTitles'*/: break;\n\t\t\t\t\tcase 'nextid' /*case 'NextId'*/: break;\n\t\t\t\t\tcase 'columninfo' /*case 'ColumnInfo'*/: break;\n\t\t\t\t\tcase 'overwritecells' /*case 'OverwriteCells'*/: break;\n\t\t\t\t\tcase 'donotpromptforfile' /*case 'DoNotPromptForFile'*/: break;\n\t\t\t\t\tcase 'textwizardsettings' /*case 'TextWizardSettings'*/: break;\n\t\t\t\t\tcase 'source' /*case 'Source'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'decimal' /*case 'Decimal'*/: break;\n\t\t\t\t\tcase 'thousandseparator' /*case 'ThousandSeparator'*/: break;\n\t\t\t\t\tcase 'trailingminusnumbers' /*case 'TrailingMinusNumbers'*/: break;\n\t\t\t\t\tcase 'formatsettings' /*case 'FormatSettings'*/: break;\n\t\t\t\t\tcase 'fieldtype' /*case 'FieldType'*/: break;\n\t\t\t\t\tcase 'delimiters' /*case 'Delimiters'*/: break;\n\t\t\t\t\tcase 'tab' /*case 'Tab'*/: break;\n\t\t\t\t\tcase 'comma' /*case 'Comma'*/: break;\n\t\t\t\t\tcase 'autoformatname' /*case 'AutoFormatName'*/: break;\n\t\t\t\t\tcase 'versionlastedit' /*case 'VersionLastEdit'*/: break;\n\t\t\t\t\tcase 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'datavalidation' /*case 'DataValidation'*/:\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\n\t\t\t\t\tcase 'type' /*case 'Type'*/: break;\n\t\t\t\t\tcase 'min' /*case 'Min'*/: break;\n\t\t\t\t\tcase 'max' /*case 'Max'*/: break;\n\t\t\t\t\tcase 'sort' /*case 'Sort'*/: break;\n\t\t\t\t\tcase 'descending' /*case 'Descending'*/: break;\n\t\t\t\t\tcase 'order' /*case 'Order'*/: break;\n\t\t\t\t\tcase 'casesensitive' /*case 'CaseSensitive'*/: break;\n\t\t\t\t\tcase 'value' /*case 'Value'*/: break;\n\t\t\t\t\tcase 'errorstyle' /*case 'ErrorStyle'*/: break;\n\t\t\t\t\tcase 'errormessage' /*case 'ErrorMessage'*/: break;\n\t\t\t\t\tcase 'errortitle' /*case 'ErrorTitle'*/: break;\n\t\t\t\t\tcase 'inputmessage' /*case 'InputMessage'*/: break;\n\t\t\t\t\tcase 'inputtitle' /*case 'InputTitle'*/: break;\n\t\t\t\t\tcase 'combohide' /*case 'ComboHide'*/: break;\n\t\t\t\t\tcase 'inputhide' /*case 'InputHide'*/: break;\n\t\t\t\t\tcase 'condition' /*case 'Condition'*/: break;\n\t\t\t\t\tcase 'qualifier' /*case 'Qualifier'*/: break;\n\t\t\t\t\tcase 'useblank' /*case 'UseBlank'*/: break;\n\t\t\t\t\tcase 'value1' /*case 'Value1'*/: break;\n\t\t\t\t\tcase 'value2' /*case 'Value2'*/: break;\n\t\t\t\t\tcase 'format' /*case 'Format'*/: break;\n\n\t\t\t\t\tcase 'cellrangelist' /*case 'CellRangeList'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'sorting' /*case 'Sorting'*/:\n\t\t\t\tcase 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\t\t\t\t\tcase 'type' /*case 'Type'*/: break;\n\t\t\t\t\tcase 'min' /*case 'Min'*/: break;\n\t\t\t\t\tcase 'max' /*case 'Max'*/: break;\n\t\t\t\t\tcase 'sort' /*case 'Sort'*/: break;\n\t\t\t\t\tcase 'descending' /*case 'Descending'*/: break;\n\t\t\t\t\tcase 'order' /*case 'Order'*/: break;\n\t\t\t\t\tcase 'casesensitive' /*case 'CaseSensitive'*/: break;\n\t\t\t\t\tcase 'value' /*case 'Value'*/: break;\n\t\t\t\t\tcase 'errorstyle' /*case 'ErrorStyle'*/: break;\n\t\t\t\t\tcase 'errormessage' /*case 'ErrorMessage'*/: break;\n\t\t\t\t\tcase 'errortitle' /*case 'ErrorTitle'*/: break;\n\t\t\t\t\tcase 'cellrangelist' /*case 'CellRangeList'*/: break;\n\t\t\t\t\tcase 'inputmessage' /*case 'InputMessage'*/: break;\n\t\t\t\t\tcase 'inputtitle' /*case 'InputTitle'*/: break;\n\t\t\t\t\tcase 'combohide' /*case 'ComboHide'*/: break;\n\t\t\t\t\tcase 'inputhide' /*case 'InputHide'*/: break;\n\t\t\t\t\tcase 'condition' /*case 'Condition'*/: break;\n\t\t\t\t\tcase 'qualifier' /*case 'Qualifier'*/: break;\n\t\t\t\t\tcase 'useblank' /*case 'UseBlank'*/: break;\n\t\t\t\t\tcase 'value1' /*case 'Value1'*/: break;\n\t\t\t\t\tcase 'value2' /*case 'Value2'*/: break;\n\t\t\t\t\tcase 'format' /*case 'Format'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* MapInfo (schema) */\n\t\t\t\tcase 'mapinfo' /*case 'MapInfo'*/: case 'schema' /*case 'Schema'*/: case 'data' /*case 'data'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'map' /*case 'Map'*/: break;\n\t\t\t\t\tcase 'entry' /*case 'Entry'*/: break;\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\t\t\t\t\tcase 'xpath' /*case 'XPath'*/: break;\n\t\t\t\t\tcase 'field' /*case 'Field'*/: break;\n\t\t\t\t\tcase 'xsdtype' /*case 'XSDType'*/: break;\n\t\t\t\t\tcase 'filteron' /*case 'FilterOn'*/: break;\n\t\t\t\t\tcase 'aggregate' /*case 'Aggregate'*/: break;\n\t\t\t\t\tcase 'elementtype' /*case 'ElementType'*/: break;\n\t\t\t\t\tcase 'attributetype' /*case 'AttributeType'*/: break;\n\t\t\t\t/* These are from xsd (XML Schema Definition) */\n\t\t\t\t\tcase 'schema' /*case 'schema'*/:\n\t\t\t\t\tcase 'element' /*case 'element'*/:\n\t\t\t\t\tcase 'complextype' /*case 'complexType'*/:\n\t\t\t\t\tcase 'datatype' /*case 'datatype'*/:\n\t\t\t\t\tcase 'all' /*case 'all'*/:\n\t\t\t\t\tcase 'attribute' /*case 'attribute'*/:\n\t\t\t\t\tcase 'extends' /*case 'extends'*/: break;\n\n\t\t\t\t\tcase 'row' /*case 'row'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* SmartTags (can be anything) */\n\t\t\t\tcase 'smarttags' /*case 'SmartTags'*/: break;\n\n\t\t\t\tdefault: seen = false; break;\n\t\t\t}\n\t\t\tif(seen) break;\n\t\t\t/* CustomDocumentProperties */\n\t\t\tif(Rn[3].match(/!\\[CDATA/)) break;\n\t\t\tif(!state[state.length-1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t\t\tif(state[state.length-1][0]===/*'CustomDocumentProperties'*/'customdocumentproperties') {\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") xlml_set_custprop(Custprops, raw_Rn3, cp, str.slice(pidx, Rn.index));\n\t\t\t\telse { cp = Rn; pidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t}\n\tvar out = ({}/*:any*/);\n\tif(!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\n\tout.SheetNames = sheetnames;\n\tout.Workbook = Workbook;\n\tout.SSF = dup(table_fmt);\n\tout.Props = Props;\n\tout.Custprops = Custprops;\n\treturn out;\n}\n\nfunction parse_xlml(data/*:RawBytes|string*/, opts)/*:Workbook*/ {\n\tfix_read_opts(opts=opts||{});\n\tswitch(opts.type||\"base64\") {\n\t\tcase \"base64\": return parse_xlml_xml(Base64_decode(data), opts);\n\t\tcase \"binary\": case \"buffer\": case \"file\": return parse_xlml_xml(data, opts);\n\t\tcase \"array\": return parse_xlml_xml(a2s(data), opts);\n\t}\n\t/*:: throw new Error(\"unsupported type \" + opts.type); */\n}\n\n/* TODO */\nfunction write_props_xlml(wb/*:Workbook*/, opts)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\t/* DocumentProperties */\n\tif(wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\n\t/* CustomDocumentProperties */\n\tif(wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops, opts));\n\treturn o.join(\"\");\n}\n/* TODO */\nfunction write_wb_xlml(/*::wb, opts*/)/*:string*/ {\n\t/* OfficeDocumentSettings */\n\t/* ExcelWorkbook */\n\treturn \"\";\n}\n/* TODO */\nfunction write_sty_xlml(wb, opts)/*:string*/ {\n\t/* Styles */\n\tvar styles/*:Array<string>*/ = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\n\topts.cellXfs.forEach(function(xf, id) {\n\t\tvar payload/*:Array<string>*/ = [];\n\t\tpayload.push(writextag('NumberFormat', null, {\"ss:Format\": escapexml(table_fmt[xf.numFmtId])}));\n\n\t\tvar o = /*::(*/{\"ss:ID\": \"s\" + (21+id)}/*:: :any)*/;\n\t\tstyles.push(writextag('Style', payload.join(\"\"), o));\n\t});\n\treturn writextag(\"Styles\", styles.join(\"\"));\n}\nfunction write_name_xlml(n) { return writextag(\"NamedRange\", null, {\"ss:Name\": n.Name, \"ss:RefersTo\":\"=\" + a1_to_rc(n.Ref, {r:0,c:0})}); }\nfunction write_names_xlml(wb/*::, opts*/)/*:string*/ {\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\n\t/*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n\tvar names/*:Array<any>*/ = wb.Workbook.Names;\n\tvar out/*:Array<string>*/ = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != null) continue;\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn writextag(\"Names\", out.join(\"\"));\n}\nfunction write_ws_xlml_names(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws) return \"\";\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\n\t/*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n\tvar names/*:Array<any>*/ = wb.Workbook.Names;\n\tvar out/*:Array<string>*/ = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != idx) continue;\n\t\t/*switch(n.Name) {\n\t\t\tcase \"_\": continue;\n\t\t}*/\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn out.join(\"\");\n}\n/* WorksheetOptions */\nfunction write_ws_xlml_wsopts(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws) return \"\";\n\tvar o/*:Array<string>*/ = [];\n\t/* NOTE: spec technically allows any order, but stick with implied order */\n\n\t/* FitToPage */\n\t/* DoNotDisplayColHeaders */\n\t/* DoNotDisplayRowHeaders */\n\t/* ViewableRange */\n\t/* Selection */\n\t/* GridlineColor */\n\t/* Name */\n\t/* ExcelWorksheetType */\n\t/* IntlMacro */\n\t/* Unsynced */\n\t/* Selected */\n\t/* CodeName */\n\n\tif(ws['!margins']) {\n\t\to.push(\"<PageSetup>\");\n\t\tif(ws['!margins'].header) o.push(writextag(\"Header\", null, {'x:Margin':ws['!margins'].header}));\n\t\tif(ws['!margins'].footer) o.push(writextag(\"Footer\", null, {'x:Margin':ws['!margins'].footer}));\n\t\to.push(writextag(\"PageMargins\", null, {\n\t\t\t'x:Bottom': ws['!margins'].bottom || \"0.75\",\n\t\t\t'x:Left': ws['!margins'].left || \"0.7\",\n\t\t\t'x:Right': ws['!margins'].right || \"0.7\",\n\t\t\t'x:Top': ws['!margins'].top || \"0.75\"\n\t\t}));\n\t\to.push(\"</PageSetup>\");\n\t}\n\n\t/* PageSetup */\n\t/* DisplayPageBreak */\n\t/* TransitionExpressionEvaluation */\n\t/* TransitionFormulaEntry */\n\t/* Print */\n\t/* Zoom */\n\t/* PageLayoutZoom */\n\t/* PageBreakZoom */\n\t/* ShowPageBreakZoom */\n\t/* DefaultRowHeight */\n\t/* DefaultColumnWidth */\n\t/* StandardWidth */\n\n\tif(wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\n\t\t/* Visible */\n\t\tif(wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", (wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\"), {}));\n\t\telse {\n\t\t\t/* Selected */\n\t\t\tfor(var i = 0; i < idx; ++i) if(wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\n\t\t\tif(i == idx) o.push(\"<Selected/>\");\n\t\t}\n\t}\n\n\t/* LeftColumnVisible */\n\n\tif(((((wb||{}).Workbook||{}).Views||[])[0]||{}).RTL) o.push(\"<DisplayRightToLeft/>\");\n\n\t/* GridlineColorIndex */\n\t/* DisplayFormulas */\n\t/* DoNotDisplayGridlines */\n\t/* DoNotDisplayHeadings */\n\t/* DoNotDisplayOutline */\n\t/* ApplyAutomaticOutlineStyles */\n\t/* NoSummaryRowsBelowDetail */\n\t/* NoSummaryColumnsRightDetail */\n\t/* DoNotDisplayZeros */\n\t/* ActiveRow */\n\t/* ActiveColumn */\n\t/* FilterOn */\n\t/* RangeSelection */\n\t/* TopRowVisible */\n\t/* TopRowBottomPane */\n\t/* LeftColumnRightPane */\n\t/* ActivePane */\n\t/* SplitHorizontal */\n\t/* SplitVertical */\n\t/* FreezePanes */\n\t/* FrozenNoSplit */\n\t/* TabColorIndex */\n\t/* Panes */\n\n\t/* NOTE: Password not supported in XLML Format */\n\tif(ws['!protect']) {\n\t\to.push(writetag(\"ProtectContents\", \"True\"));\n\t\tif(ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\n\t\tif(ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\n\t\tif(ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));\n\t\telse if(ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\n\t[\n\t\t[ \"formatCells\", \"AllowFormatCells\" ],\n\t\t[ \"formatColumns\", \"AllowSizeCols\" ],\n\t\t[ \"formatRows\", \"AllowSizeRows\" ],\n\t\t[ \"insertColumns\", \"AllowInsertCols\" ],\n\t\t[ \"insertRows\", \"AllowInsertRows\" ],\n\t\t[ \"insertHyperlinks\", \"AllowInsertHyperlinks\" ],\n\t\t[ \"deleteColumns\", \"AllowDeleteCols\" ],\n\t\t[ \"deleteRows\", \"AllowDeleteRows\" ],\n\t\t[ \"sort\", \"AllowSort\" ],\n\t\t[ \"autoFilter\", \"AllowFilter\" ],\n\t\t[ \"pivotTables\", \"AllowUsePivotTables\" ]\n\t].forEach(function(x) { if(ws['!protect'][x[0]]) o.push(\"<\"+x[1]+\"/>\"); });\n\t}\n\n\tif(o.length == 0) return \"\";\n\treturn writextag(\"WorksheetOptions\", o.join(\"\"), {xmlns:XLMLNS.x});\n}\nfunction write_ws_xlml_comment(comments/*:Array<any>*/)/*:string*/ {\n\treturn comments.map(function(c) {\n\t\t// TODO: formatted text\n\t\tvar t = xlml_unfixstr(c.t||\"\");\n\t\tvar d =writextag(\"ss:Data\", t, {\"xmlns\":\"http://www.w3.org/TR/REC-html40\"});\n\t\treturn writextag(\"Comment\", d, {\"ss:Author\":c.a});\n\t}).join(\"\");\n}\nfunction write_ws_xlml_cell(cell, ref/*:string*/, ws, opts, idx/*:number*/, wb, addr)/*:string*/{\n\tif(!cell || (cell.v == undefined && cell.f == undefined)) return \"\";\n\n\tvar attr = {};\n\tif(cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\n\tif(cell.F && cell.F.slice(0, ref.length) == ref) {\n\t\tvar end = decode_cell(cell.F.slice(ref.length + 1));\n\t\tattr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\n\t}\n\n\tif(cell.l && cell.l.Target) {\n\t\tattr[\"ss:HRef\"] = escapexml(cell.l.Target);\n\t\tif(cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\n\t}\n\n\tif(ws['!merges']) {\n\t\tvar marr = ws['!merges'];\n\t\tfor(var mi = 0; mi != marr.length; ++mi) {\n\t\t\tif(marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\n\t\t\tif(marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\n\t\t\tif(marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\n\t\t}\n\t}\n\n\tvar t = \"\", p = \"\";\n\tswitch(cell.t) {\n\t\tcase 'z': if(!opts.sheetStubs) return \"\"; break;\n\t\tcase 'n': t = 'Number'; p = String(cell.v); break;\n\t\tcase 'b': t = 'Boolean'; p = (cell.v ? \"1\" : \"0\"); break;\n\t\tcase 'e': t = 'Error'; p = BErr[cell.v]; break;\n\t\tcase 'd': t = 'DateTime'; p = new Date(cell.v).toISOString(); if(cell.z == null) cell.z = cell.z || table_fmt[14]; break;\n\t\tcase 's': t = 'String'; p = escapexlml(cell.v||\"\"); break;\n\t}\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tattr[\"ss:StyleID\"] = \"s\" + (21+os);\n\tattr[\"ss:Index\"] = addr.c + 1;\n\tvar _v = (cell.v != null ? p : \"\");\n\tvar m = cell.t == 'z' ? \"\" : ('<Data ss:Type=\"' + t + '\">' + _v + '</Data>');\n\n\tif((cell.c||[]).length > 0) m += write_ws_xlml_comment(cell.c);\n\n\treturn writextag(\"Cell\", m, attr);\n}\nfunction write_ws_xlml_row(R/*:number*/, row)/*:string*/ {\n\tvar o = '<Row ss:Index=\"' + (R+1) + '\"';\n\tif(row) {\n\t\tif(row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\n\t\tif(row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\n\t\tif(row.hidden) o += ' ss:Hidden=\"1\"';\n\t}\n\treturn o + '>';\n}\n/* TODO */\nfunction write_ws_xlml_table(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws['!ref']) return \"\";\n\tvar range/*:Range*/ = safe_decode_range(ws['!ref']);\n\tvar marr/*:Array<Range>*/ = ws['!merges'] || [], mi = 0;\n\tvar o/*:Array<string>*/ = [];\n\tif(ws['!cols']) ws['!cols'].forEach(function(n, i) {\n\t\tprocess_col(n);\n\t\tvar w = !!n.width;\n\t\tvar p = col_obj_w(i, n);\n\t\tvar k/*:any*/ = {\"ss:Index\":i+1};\n\t\tif(w) k['ss:Width'] = width2px(p.width);\n\t\tif(n.hidden) k['ss:Hidden']=\"1\";\n\t\to.push(writextag(\"Column\",null,k));\n\t});\n\tvar dense = Array.isArray(ws);\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\tvar row = [write_ws_xlml_row(R, (ws['!rows']||[])[R])];\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tvar skip = false;\n\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(skip) continue;\n\t\t\tvar addr = {r:R,c:C};\n\t\t\tvar ref = encode_cell(addr), cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\trow.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\n\t\t}\n\t\trow.push(\"</Row>\");\n\t\tif(row.length > 2) o.push(row.join(\"\"));\n\t}\n\treturn o.join(\"\");\n}\nfunction write_ws_xlml(idx/*:number*/, opts, wb/*:Workbook*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tvar s = wb.SheetNames[idx];\n\tvar ws = wb.Sheets[s];\n\n\tvar t/*:string*/ = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\n\n\t/* Table */\n\tt = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\n\n\t/* WorksheetOptions */\n\to.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\n\n\treturn o.join(\"\");\n}\nfunction write_xlml(wb, opts)/*:string*/ {\n\tif(!opts) opts = {};\n\tif(!wb.SSF) wb.SSF = dup(table_fmt);\n\tif(wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t\topts.cellXfs = [];\n\t\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\t}\n\tvar d/*:Array<string>*/ = [];\n\td.push(write_props_xlml(wb, opts));\n\td.push(write_wb_xlml(wb, opts));\n\td.push(\"\");\n\td.push(\"\");\n\tfor(var i = 0; i < wb.SheetNames.length; ++i)\n\t\td.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\"ss:Name\":escapexml(wb.SheetNames[i])}));\n\td[2] = write_sty_xlml(wb, opts);\n\td[3] = write_names_xlml(wb, opts);\n\treturn XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\n\t\t'xmlns':      XLMLNS.ss,\n\t\t'xmlns:o':    XLMLNS.o,\n\t\t'xmlns:x':    XLMLNS.x,\n\t\t'xmlns:ss':   XLMLNS.ss,\n\t\t'xmlns:dt':   XLMLNS.dt,\n\t\t'xmlns:html': XLMLNS.html\n\t});\n}\n/* [MS-OLEDS] 2.3.8 CompObjStream */\nfunction parse_compobj(obj/*:CFBEntry*/) {\n\tvar v = {};\n\tvar o = obj.content;\n\t/*:: if(o == null) return; */\n\n\t/* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\n\to.l = 28;\n\n\tv.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\n\tv.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\n\n\tif(o.length - o.l <= 4) return v;\n\n\tvar m/*:number*/ = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\n\n\tif(o.length - o.l <= 4) return v;\n\tm = o.read_shift(4);\n\tif(m !== 0x71b239f4) return v;\n\tv.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\n\n\tm = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved2 = o.read_shift(0, \"lpwstr\");\n}\n\n/*\n\tContinue logic for:\n\t- 2.4.58 Continue          0x003c\n\t- 2.4.59 ContinueBigName   0x043c\n\t- 2.4.60 ContinueFrt       0x0812\n\t- 2.4.61 ContinueFrt11     0x0875\n\t- 2.4.62 ContinueFrt12     0x087f\n*/\nvar CONTINUE_RT = [ 0x003c, 0x043c, 0x0812, 0x0875, 0x087f ];\nfunction slurp(RecordType, R, blob, length/*:number*/, opts)/*:any*/ {\n\tvar l = length;\n\tvar bufs = [];\n\tvar d = blob.slice(blob.l,blob.l+l);\n\tif(opts && opts.enc && opts.enc.insitu && d.length > 0) switch(RecordType) {\n\tcase 0x0009: case 0x0209: case 0x0409: case 0x0809/* BOF */: case 0x002f /* FilePass */: case 0x0195 /* FileLock */: case 0x00e1 /* InterfaceHdr */: case 0x0196 /* RRDInfo */: case 0x0138 /* RRDHead */: case 0x0194 /* UsrExcl */: case 0x000a /* EOF */:\n\t\tbreak;\n\tcase 0x0085 /* BoundSheet8 */:\n\t\tbreak;\n\tdefault:\n\t\topts.enc.insitu(d);\n\t}\n\tbufs.push(d);\n\tblob.l += l;\n\tvar nextrt = __readUInt16LE(blob,blob.l), next = XLSRecordEnum[nextrt];\n\tvar start = 0;\n\twhile(next != null && CONTINUE_RT.indexOf(nextrt) > -1) {\n\t\tl = __readUInt16LE(blob,blob.l+2);\n\t\tstart = blob.l + 4;\n\t\tif(nextrt == 0x0812 /* ContinueFrt */) start += 4;\n\t\telse if(nextrt == 0x0875 || nextrt == 0x087f) {\n\t\t\tstart += 12;\n\t\t}\n\t\td = blob.slice(start,blob.l+4+l);\n\t\tbufs.push(d);\n\t\tblob.l += 4+l;\n\t\tnext = (XLSRecordEnum[nextrt = __readUInt16LE(blob, blob.l)]);\n\t}\n\tvar b = (bconcat(bufs)/*:any*/);\n\tprep_blob(b, 0);\n\tvar ll = 0; b.lens = [];\n\tfor(var j = 0; j < bufs.length; ++j) { b.lens.push(ll); ll += bufs[j].length; }\n\tif(b.length < length) throw \"XLS Record 0x\" + RecordType.toString(16) + \" Truncated: \" + b.length + \" < \" + length;\n\treturn R.f(b, b.length, opts);\n}\n\nfunction safe_format_xf(p/*:any*/, opts/*:ParseOpts*/, date1904/*:?boolean*/) {\n\tif(p.t === 'z') return;\n\tif(!p.XF) return;\n\tvar fmtid = 0;\n\ttry {\n\t\tfmtid = p.z || p.XF.numFmtId || 0;\n\t\tif(opts.cellNF) p.z = table_fmt[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts || opts.cellText !== false) try {\n\t\tif(p.t === 'e') { p.w = p.w || BErr[p.v]; }\n\t\telse if(fmtid === 0 || fmtid == \"General\") {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = p.v.toString(10);\n\t\t\t\telse p.w = SSF_general_num(p.v);\n\t\t\t}\n\t\t\telse p.w = SSF_general(p.v);\n\t\t}\n\t\telse p.w = SSF_format(fmtid,p.v, {date1904:!!date1904, dateNF: opts && opts.dateNF});\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(opts.cellDates && fmtid && p.t == 'n' && fmt_is_date(table_fmt[fmtid] || String(fmtid))) {\n\t\tvar _d = SSF_parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t}\n}\n\nfunction make_cell(val, ixfe, t)/*:Cell*/ {\n\treturn ({v:val, ixfe:ixfe, t:t}/*:any*/);\n}\n\n// 2.3.2\nfunction parse_workbook(blob, options/*:ParseOpts*/)/*:Workbook*/ {\n\tvar wb = ({opts:{}}/*:any*/);\n\tvar Sheets = {};\n\tif(DENSE != null && options.dense == null) options.dense = DENSE;\n\tvar out/*:Worksheet*/ = ((options.dense ? [] : {})/*:any*/);\n\tvar Directory = {};\n\tvar range/*:Range*/ = ({}/*:any*/);\n\tvar last_formula = null;\n\tvar sst/*:SST*/ = ([]/*:any*/);\n\tvar cur_sheet = \"\";\n\tvar Preamble = {};\n\tvar lastcell, last_cell = \"\", cc/*:Cell*/, cmnt, rngC, rngR;\n\tvar sharedf = {};\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar temp_val/*:Cell*/;\n\tvar country;\n\tvar XFs = []; /* XF records */\n\tvar palette/*:Array<[number, number, number]>*/ = [];\n\tvar Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false}, Views:[{}] }/*:any*/), wsprops = {};\n\tvar get_rgb = function getrgb(icv/*:number*/)/*:[number, number, number]*/ {\n\t\tif(icv < 8) return XLSIcv[icv];\n\t\tif(icv < 64) return palette[icv-8] || XLSIcv[icv];\n\t\treturn XLSIcv[icv];\n\t};\n\tvar process_cell_style = function pcs(cell, line/*:any*/, options) {\n\t\tvar xfd = line.XF.data;\n\t\tif(!xfd || !xfd.patternType || !options || !options.cellStyles) return;\n\t\tline.s = ({}/*:any*/);\n\t\tline.s.patternType = xfd.patternType;\n\t\tvar t;\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvFore)))) { line.s.fgColor = {rgb:t}; }\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvBack)))) { line.s.bgColor = {rgb:t}; }\n\t};\n\tvar addcell = function addcell(cell/*:any*/, line/*:any*/, options/*:any*/) {\n\t\tif(file_depth > 1) return;\n\t\tif(options.sheetRows && cell.r >= options.sheetRows) return;\n\t\tif(options.cellStyles && line.XF && line.XF.data) process_cell_style(cell, line, options);\n\t\tdelete line.ixfe; delete line.XF;\n\t\tlastcell = cell;\n\t\tlast_cell = encode_cell(cell);\n\t\tif(!range || !range.s || !range.e) range = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\tif(cell.r < range.s.r) range.s.r = cell.r;\n\t\tif(cell.c < range.s.c) range.s.c = cell.c;\n\t\tif(cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\n\t\tif(cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\n\t\tif(options.cellFormula && line.f) {\n\t\t\tfor(var afi = 0; afi < arrayf.length; ++afi) {\n\t\t\t\tif(arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\n\t\t\t\tif(arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\n\t\t\t\tline.F = encode_range(arrayf[afi][0]);\n\t\t\t\tif(arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\n\t\t\t\tif(line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tif(options.dense) {\n\t\t\t\tif(!out[cell.r]) out[cell.r] = [];\n\t\t\t\tout[cell.r][cell.c] = line;\n\t\t\t} else out[last_cell] = line;\n\t\t}\n\t};\n\tvar opts = ({\n\t\tenc: false, // encrypted\n\t\tsbcch: 0, // cch in the preceding SupBook\n\t\tsnames: [], // sheetnames\n\t\tsharedf: sharedf, // shared formulae by address\n\t\tarrayf: arrayf, // array formulae array\n\t\trrtabid: [], // RRTabId\n\t\tlastuser: \"\", // Last User from WriteAccess\n\t\tbiff: 8, // BIFF version\n\t\tcodepage: 0, // CP from CodePage record\n\t\twinlocked: 0, // fLockWn from WinProtect\n\t\tcellStyles: !!options && !!options.cellStyles,\n\t\tWTF: !!options && !!options.wtf\n\t}/*:any*/);\n\tif(options.password) opts.password = options.password;\n\tvar themes;\n\tvar merges/*:Array<Range>*/ = [];\n\tvar objects = [];\n\tvar colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];\n\tvar seencol = false;\n\tvar supbooks = ([]/*:any*/); // 1-indexed, will hold extern names\n\tsupbooks.SheetNames = opts.snames;\n\tsupbooks.sharedf = opts.sharedf;\n\tsupbooks.arrayf = opts.arrayf;\n\tsupbooks.names = [];\n\tsupbooks.XTI = [];\n\tvar last_RT = 0;\n\tvar file_depth = 0; /* TODO: make a real stack */\n\tvar BIFF2Fmt = 0, BIFF2FmtTable/*:Array<string>*/ = [];\n\tvar FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\n\tvar last_lbl/*:?DefinedName*/;\n\n\t/* explicit override for some broken writers */\n\topts.codepage = 1200;\n\tset_cp(1200);\n\tvar seen_codepage = false;\n\twhile(blob.l < blob.length - 1) {\n\t\tvar s = blob.l;\n\t\tvar RecordType = blob.read_shift(2);\n\t\tif(RecordType === 0 && last_RT === 0x000a /* EOF */) break;\n\t\tvar length = (blob.l === blob.length ? 0 : blob.read_shift(2));\n\t\tvar R = XLSRecordEnum[RecordType];\n\t\t//console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\n\t\t//if(!R) console.log(blob.slice(blob.l, blob.l + length));\n\t\tif(R && R.f) {\n\t\t\tif(options.bookSheets) {\n\t\t\t\tif(last_RT === 0x0085 /* BoundSheet8 */ && RecordType !== 0x0085 /* R.n !== 'BoundSheet8' */) break;\n\t\t\t}\n\t\t\tlast_RT = RecordType;\n\t\t\tif(R.r === 2 || R.r == 12) {\n\t\t\t\tvar rt = blob.read_shift(2); length -= 2;\n\t\t\t\tif(!opts.enc && rt !== RecordType && (((rt&0xFF)<<8)|(rt>>8)) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\n\t\t\t\tif(R.r == 12){\n\t\t\t\t\tblob.l += 10; length -= 10;\n\t\t\t\t} // skip FRT\n\t\t\t}\n\t\t\t//console.error(R,blob.l,length,blob.length);\n\t\t\tvar val/*:any*/ = ({}/*:any*/);\n\t\t\tif(RecordType === 0x000a /* EOF */) val = /*::(*/R.f(blob, length, opts)/*:: :any)*/;\n\t\t\telse val = /*::(*/slurp(RecordType, R, blob, length, opts)/*:: :any)*/;\n\t\t\t/*:: val = (val:any); */\n\t\t\tif(file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(last_RT) === -1 /* 'BOF' */) continue;\n\t\t\tswitch(RecordType) {\n\t\t\t\tcase 0x0022 /* Date1904 */:\n\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\twb.opts.Date1904 = Workbook.WBProps.date1904 = val; break;\n\t\t\t\tcase 0x0086 /* WriteProtect */: wb.opts.WriteProtect = true; break;\n\t\t\t\tcase 0x002f /* FilePass */:\n\t\t\t\t\tif(!opts.enc) blob.l = 0;\n\t\t\t\t\topts.enc = val;\n\t\t\t\t\tif(!options.password) throw new Error(\"File is password-protected\");\n\t\t\t\t\tif(val.valid == null) throw new Error(\"Encryption scheme unsupported\");\n\t\t\t\t\tif(!val.valid) throw new Error(\"Password is incorrect\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x005c /* WriteAccess */: opts.lastuser = val; break;\n\t\t\t\tcase 0x0042 /* CodePage */:\n\t\t\t\t\tvar cpval = Number(val);\n\t\t\t\t\t/* overrides based on test cases */\n\t\t\t\t\tswitch(cpval) {\n\t\t\t\t\t\tcase 0x5212: cpval =  1200; break;\n\t\t\t\t\t\tcase 0x8000: cpval = 10000; break;\n\t\t\t\t\t\tcase 0x8001: cpval =  1252; break;\n\t\t\t\t\t}\n\t\t\t\t\tset_cp(opts.codepage = cpval);\n\t\t\t\t\tseen_codepage = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x013d /* RRTabId */: opts.rrtabid = val; break;\n\t\t\t\tcase 0x0019 /* WinProtect */: opts.winlocked = val; break;\n\t\t\t\tcase 0x01b7 /* RefreshAll */: wb.opts[\"RefreshAll\"] = val; break;\n\t\t\t\tcase 0x000c /* CalcCount */: wb.opts[\"CalcCount\"] = val; break;\n\t\t\t\tcase 0x0010 /* CalcDelta */: wb.opts[\"CalcDelta\"] = val; break;\n\t\t\t\tcase 0x0011 /* CalcIter */: wb.opts[\"CalcIter\"] = val; break;\n\t\t\t\tcase 0x000d /* CalcMode */: wb.opts[\"CalcMode\"] = val; break;\n\t\t\t\tcase 0x000e /* CalcPrecision */: wb.opts[\"CalcPrecision\"] = val; break;\n\t\t\t\tcase 0x005f /* CalcSaveRecalc */: wb.opts[\"CalcSaveRecalc\"] = val; break;\n\t\t\t\tcase 0x000f /* CalcRefMode */: opts.CalcRefMode = val; break; // TODO: implement R1C1\n\t\t\t\tcase 0x08a3 /* ForceFullCalculation */: wb.opts.FullCalc = val; break;\n\t\t\t\tcase 0x0081 /* WsBool */:\n\t\t\t\t\tif(val.fDialog) out[\"!type\"] = \"dialog\";\n\t\t\t\t\tif(!val.fBelow) (out[\"!outline\"] || (out[\"!outline\"] = {})).above = true;\n\t\t\t\t\tif(!val.fRight) (out[\"!outline\"] || (out[\"!outline\"] = {})).left = true;\n\t\t\t\t\tbreak; // TODO\n\t\t\t\tcase 0x00e0 /* XF */:\n\t\t\t\t\tXFs.push(val); break;\n\t\t\t\tcase 0x01ae /* SupBook */:\n\t\t\t\t\tsupbooks.push([val]);\n\t\t\t\t\tsupbooks[supbooks.length-1].XTI = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0023: case 0x0223 /* ExternName */:\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0018: case 0x0218 /* Lbl */:\n\t\t\t\t\tlast_lbl = ({\n\t\t\t\t\t\tName: val.Name,\n\t\t\t\t\t\tRef: stringify_formula(val.rgce,range,null,supbooks,opts)\n\t\t\t\t\t}/*:DefinedName*/);\n\t\t\t\t\tif(val.itab > 0) last_lbl.Sheet = val.itab - 1;\n\t\t\t\t\tsupbooks.names.push(last_lbl);\n\t\t\t\t\tif(!supbooks[0]) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tif(val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0)\n\t\t\t\t\t\tif(val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d')\n\t\t\t\t\t\t\tFilterDatabases[val.itab - 1] = { ref: encode_range(val.rgce[0][0][1][2]) };\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0016 /* ExternCount */: opts.ExternCount = val; break;\n\t\t\t\tcase 0x0017 /* ExternSheet */:\n\t\t\t\t\tif(supbooks.length == 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val); supbooks.XTI = supbooks.XTI.concat(val); break;\n\t\t\t\tcase 0x0894 /* NameCmt */:\n\t\t\t\t\t/* TODO: search for correct name */\n\t\t\t\t\tif(opts.biff < 8) break;\n\t\t\t\t\tif(last_lbl != null) last_lbl.Comment = val[1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0012 /* Protect */: out[\"!protect\"] = val; break; /* for sheet or book */\n\t\t\t\tcase 0x0013 /* Password */: if(val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val); break;\n\t\t\t\tcase 0x0085 /* BoundSheet8 */: {\n\t\t\t\t\tDirectory[val.pos] = val;\n\t\t\t\t\topts.snames.push(val.name);\n\t\t\t\t} break;\n\t\t\t\tcase 0x000a /* EOF */: {\n\t\t\t\t\tif(--file_depth) break;\n\t\t\t\t\tif(range.e) {\n\t\t\t\t\t\tif(range.e.r > 0 && range.e.c > 0) {\n\t\t\t\t\t\t\trange.e.r--; range.e.c--;\n\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\tif(options.sheetRows && options.sheetRows <= range.e.r) {\n\t\t\t\t\t\t\t\tvar tmpri = range.e.r;\n\t\t\t\t\t\t\t\trange.e.r = options.sheetRows - 1;\n\t\t\t\t\t\t\t\tout[\"!fullref\"] = out[\"!ref\"];\n\t\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\t\trange.e.r = tmpri;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trange.e.r++; range.e.c++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(merges.length > 0) out[\"!merges\"] = merges;\n\t\t\t\t\t\tif(objects.length > 0) out[\"!objects\"] = objects;\n\t\t\t\t\t\tif(colinfo.length > 0) out[\"!cols\"] = colinfo;\n\t\t\t\t\t\tif(rowinfo.length > 0) out[\"!rows\"] = rowinfo;\n\t\t\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t\t\t}\n\t\t\t\t\tif(cur_sheet === \"\") Preamble = out; else Sheets[cur_sheet] = out;\n\t\t\t\t\tout = ((options.dense ? [] : {})/*:any*/);\n\t\t\t\t} break;\n\t\t\t\tcase 0x0009: case 0x0209: case 0x0409: case 0x0809 /* BOF */: {\n\t\t\t\t\tif(opts.biff === 8) opts.biff = {\n\t\t\t\t\t\t/*::[*/0x0009/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0209/*::]*/:3,\n\t\t\t\t\t\t/*::[*/0x0409/*::]*/:4\n\t\t\t\t\t}[RecordType] || {\n\t\t\t\t\t\t/*::[*/0x0200/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0300/*::]*/:3,\n\t\t\t\t\t\t/*::[*/0x0400/*::]*/:4,\n\t\t\t\t\t\t/*::[*/0x0500/*::]*/:5,\n\t\t\t\t\t\t/*::[*/0x0600/*::]*/:8,\n\t\t\t\t\t\t/*::[*/0x0002/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0007/*::]*/:2\n\t\t\t\t\t}[val.BIFFVer] || 8;\n\t\t\t\t\topts.biffguess = val.BIFFVer == 0;\n\t\t\t\t\tif(val.BIFFVer == 0 && val.dt == 0x1000) { opts.biff = 5; seen_codepage = true; set_cp(opts.codepage = 28591); }\n\t\t\t\t\tif(opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;\n\t\t\t\t\tif(file_depth++) break;\n\t\t\t\t\tout = ((options.dense ? [] : {})/*:any*/);\n\n\t\t\t\t\tif(opts.biff < 8 && !seen_codepage) { seen_codepage = true; set_cp(opts.codepage = options.codepage || 1252); }\n\n\t\t\t\t\tif(opts.biff < 5 || val.BIFFVer == 0 && val.dt == 0x1000) {\n\t\t\t\t\t\tif(cur_sheet === \"\") cur_sheet = \"Sheet1\";\n\t\t\t\t\t\trange = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\t\t\t\t\t/* fake BoundSheet8 */\n\t\t\t\t\t\tvar fakebs8 = {pos: blob.l - length, name:cur_sheet};\n\t\t\t\t\t\tDirectory[fakebs8.pos] = fakebs8;\n\t\t\t\t\t\topts.snames.push(cur_sheet);\n\t\t\t\t\t}\n\t\t\t\t\telse cur_sheet = (Directory[s] || {name:\"\"}).name;\n\t\t\t\t\tif(val.dt == 0x20) out[\"!type\"] = \"chart\";\n\t\t\t\t\tif(val.dt == 0x40) out[\"!type\"] = \"macro\";\n\t\t\t\t\tmerges = [];\n\t\t\t\t\tobjects = [];\n\t\t\t\t\topts.arrayf = arrayf = [];\n\t\t\t\t\tcolinfo = []; rowinfo = [];\n\t\t\t\t\tseencol = false;\n\t\t\t\t\twsprops = {Hidden:(Directory[s]||{hs:0}).hs, name:cur_sheet };\n\t\t\t\t} break;\n\t\t\t\tcase 0x0203 /* Number */: case 0x0003 /* BIFF2NUM */: case 0x0002 /* BIFF2INT */: {\n\t\t\t\t\tif(out[\"!type\"] == \"chart\") if(options.dense ? (out[val.r]||[])[val.c]: out[encode_cell({c:val.c, r:val.r})]) ++val.c;\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe]||{}, v:val.val, t:'n'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x0005: case 0x0205 /* BoolErr */: {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.val, t:val.t}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x027e /* RK */: {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.rknum, t:'n'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x00bd /* MulRk */: {\n\t\t\t\t\tfor(var j = val.c; j <= val.C; ++j) {\n\t\t\t\t\t\tvar ixfe = val.rkrec[j-val.c][0];\n\t\t\t\t\t\ttemp_val= ({ixfe:ixfe, XF:XFs[ixfe], v:val.rkrec[j-val.c][1], t:'n'}/*:any*/);\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0006: case 0x0206: case 0x0406 /* Formula */: {\n\t\t\t\t\tif(val.val == 'String') { last_formula = val; break; }\n\t\t\t\t\ttemp_val = make_cell(val.val, val.cell.ixfe, val.tt);\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\tvar _f = val.formula;\n\t\t\t\t\t\tif(_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\n\t\t\t\t\t\t\tvar _fr = _f[0][0][1][0], _fc = _f[0][0][1][1];\n\t\t\t\t\t\t\tvar _fe = encode_cell({r:_fr, c:_fc});\n\t\t\t\t\t\t\tif(sharedf[_fe]) temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t\t\telse temp_val.F = ((options.dense ? (out[_fr]||[])[_fc]: out[_fe]) || {}).F;\n\t\t\t\t\t\t} else temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell(val.cell, temp_val, options);\n\t\t\t\t\tlast_formula = val;\n\t\t\t\t} break;\n\t\t\t\tcase 0x0007: case 0x0207 /* String */: {\n\t\t\t\t\tif(last_formula) { /* technically always true */\n\t\t\t\t\t\tlast_formula.val = val;\n\t\t\t\t\t\ttemp_val = make_cell(val, last_formula.cell.ixfe, 's');\n\t\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\t\ttemp_val.f = \"\"+stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell(last_formula.cell, temp_val, options);\n\t\t\t\t\t\tlast_formula = null;\n\t\t\t\t\t} else throw new Error(\"String record expects Formula\");\n\t\t\t\t} break;\n\t\t\t\tcase 0x0021: case 0x0221 /* Array */: {\n\t\t\t\t\tarrayf.push(val);\n\t\t\t\t\tvar _arraystart = encode_cell(val[0].s);\n\t\t\t\t\tcc = options.dense ? (out[val[0].s.r]||[])[val[0].s.c] : out[_arraystart];\n\t\t\t\t\tif(options.cellFormula && cc) {\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tif(!_arraystart || !cc) break;\n\t\t\t\t\t\tcc.f = \"\"+stringify_formula(val[1], range, val[0], supbooks, opts);\n\t\t\t\t\t\tcc.F = encode_range(val[0]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x04bc /* ShrFmla */: {\n\t\t\t\t\tif(!options.cellFormula) break;\n\t\t\t\t\tif(last_cell) {\n\t\t\t\t\t\t/* TODO: capture range */\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tsharedf[encode_cell(last_formula.cell)]= val[0];\n\t\t\t\t\t\tcc = options.dense ? (out[last_formula.cell.r]||[])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\n\t\t\t\t\t\t(cc||{}).f = \"\"+stringify_formula(val[0], range, lastcell, supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x00fd /* LabelSst */:\n\t\t\t\t\ttemp_val=make_cell(sst[val.isst].t, val.ixfe, 's');\n\t\t\t\t\tif(sst[val.isst].h) temp_val.h = sst[val.isst].h;\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0201 /* Blank */: if(options.sheetStubs) {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], t:'z'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x00be /* MulBlank */: if(options.sheetStubs) {\n\t\t\t\t\tfor(var _j = val.c; _j <= val.C; ++_j) {\n\t\t\t\t\t\tvar _ixfe = val.ixfe[_j-val.c];\n\t\t\t\t\t\ttemp_val= ({ixfe:_ixfe, XF:XFs[_ixfe], t:'z'}/*:any*/);\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:_j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x00d6 /* RString */:\n\t\t\t\tcase 0x0204 /* Label */: case 0x0004 /* BIFF2STR */:\n\t\t\t\t\ttemp_val=make_cell(val.val, val.ixfe, 's');\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0x0000: case 0x0200 /* Dimensions */: {\n\t\t\t\t\tif(file_depth === 1) range = val; /* TODO: stack */\n\t\t\t\t} break;\n\t\t\t\tcase 0x00fc /* SST */: {\n\t\t\t\t\tsst = val;\n\t\t\t\t} break;\n\t\t\t\tcase 0x041e /* Format */: { /* val = [id, fmt] */\n\t\t\t\t\tif(opts.biff == 4) {\n\t\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val[1];\n\t\t\t\t\t\tfor(var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if(table_fmt[b4idx] == val[1]) break;\n\t\t\t\t\t\tif(b4idx >= 163) SSF_load(val[1], BIFF2Fmt + 163);\n\t\t\t\t\t}\n\t\t\t\t\telse SSF_load(val[1], val[0]);\n\t\t\t\t} break;\n\t\t\t\tcase 0x001e /* BIFF2FORMAT */: {\n\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val;\n\t\t\t\t\tfor(var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if(table_fmt[b2idx] == val) break;\n\t\t\t\t\tif(b2idx >= 163) SSF_load(val, BIFF2Fmt + 163);\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x00e5 /* MergeCells */: merges = merges.concat(val); break;\n\n\t\t\t\tcase 0x005d /* Obj */: objects[val.cmo[0]] = opts.lastobj = val; break;\n\t\t\t\tcase 0x01b6 /* TxO */: opts.lastobj.TxO = val; break;\n\t\t\t\tcase 0x007f /* ImData */: opts.lastobj.ImData = val; break;\n\n\t\t\t\tcase 0x01b8 /* HLink */: {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc) cc.l = val[1];\n\t\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0800 /* HLinkTooltip */: {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc && cc.l) cc.l.Tooltip = val[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x001c /* Note */: {\n\t\t\t\t\tif(opts.biff <= 5 && opts.biff >= 2) break; /* TODO: BIFF5 */\n\t\t\t\t\tcc = options.dense ? (out[val[0].r]||[])[val[0].c] : out[encode_cell(val[0])];\n\t\t\t\t\tvar noteobj = objects[val[2]];\n\t\t\t\t\tif(!cc) {\n\t\t\t\t\t\tif(options.dense) {\n\t\t\t\t\t\t\tif(!out[val[0].r]) out[val[0].r] = [];\n\t\t\t\t\t\t\tcc = out[val[0].r][val[0].c] = ({t:\"z\"}/*:any*/);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcc = out[encode_cell(val[0])] = ({t:\"z\"}/*:any*/);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trange.e.r = Math.max(range.e.r, val[0].r);\n\t\t\t\t\t\trange.s.r = Math.min(range.s.r, val[0].r);\n\t\t\t\t\t\trange.e.c = Math.max(range.e.c, val[0].c);\n\t\t\t\t\t\trange.s.c = Math.min(range.s.c, val[0].c);\n\t\t\t\t\t}\n\t\t\t\t\tif(!cc.c) cc.c = [];\n\t\t\t\t\tcmnt = {a:val[1],t:noteobj.TxO.t};\n\t\t\t\t\tcc.c.push(cmnt);\n\t\t\t\t} break;\n\t\t\t\tcase 0x087d /* XFExt */: update_xfext(XFs[val.ixfe], val.ext); break;\n\t\t\t\tcase 0x007d /* ColInfo */: {\n\t\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, level: (val.level || 0), hidden: !!(val.flags & 1) };\n\t\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0208 /* Row */: {\n\t\t\t\t\tvar rowobj = {};\n\t\t\t\t\tif(val.level != null) { rowinfo[val.r] = rowobj; rowobj.level = val.level; }\n\t\t\t\t\tif(val.hidden) { rowinfo[val.r] = rowobj; rowobj.hidden = true; }\n\t\t\t\t\tif(val.hpt) {\n\t\t\t\t\t\trowinfo[val.r] = rowobj;\n\t\t\t\t\t\trowobj.hpt = val.hpt; rowobj.hpx = pt2px(val.hpt);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0026 /* LeftMargin */:\n\t\t\t\tcase 0x0027 /* RightMargin */:\n\t\t\t\tcase 0x0028 /* TopMargin */:\n\t\t\t\tcase 0x0029 /* BottomMargin */:\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'][({0x26: \"left\", 0x27:\"right\", 0x28:\"top\", 0x29:\"bottom\"})[RecordType]] = val;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x00a1 /* Setup */: // TODO\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'].header = val.header;\n\t\t\t\t\tout['!margins'].footer = val.footer;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x023e /* Window2 */: // TODO\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(val.RTL) Workbook.Views[0].RTL = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0092 /* Palette */: palette = val; break;\n\t\t\t\tcase 0x0896 /* Theme */: themes = val; break;\n\t\t\t\tcase 0x008c /* Country */: country = val; break;\n\t\t\t\tcase 0x01ba /* CodeName */: {\n\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\tif(!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";\n\t\t\t\t\telse wsprops.CodeName = val || wsprops.name;\n\t\t\t\t} break;\n\t\t\t}\n\t\t} else {\n\t\t\tif(!R) console.error(\"Missing Info for XLS Record 0x\" + RecordType.toString(16));\n\t\t\tblob.l += length;\n\t\t}\n\t}\n\twb.SheetNames=keys(Directory).sort(function(a,b) { return Number(a) - Number(b); }).map(function(x){return Directory[x].name;});\n\tif(!options.bookSheets) wb.Sheets=Sheets;\n\tif(!wb.SheetNames.length && Preamble[\"!ref\"]) {\n\t\twb.SheetNames.push(\"Sheet1\");\n\t\t/*jshint -W069 */\n\t\tif(wb.Sheets) wb.Sheets[\"Sheet1\"] = Preamble;\n\t\t/*jshint +W069 */\n\t} else wb.Preamble=Preamble;\n\tif(wb.Sheets) FilterDatabases.forEach(function(r,i) { wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r; });\n\twb.Strings = sst;\n\twb.SSF = dup(table_fmt);\n\tif(opts.enc) wb.Encryption = opts.enc;\n\tif(themes) wb.Themes = themes;\n\twb.Metadata = {};\n\tif(country !== undefined) wb.Metadata.Country = country;\n\tif(supbooks.names.length > 0) Workbook.Names = supbooks.names;\n\twb.Workbook = Workbook;\n\treturn wb;\n}\n\n/* TODO: split props*/\nvar PSCLSID = {\n\tSI: \"e0859ff2f94f6810ab9108002b27b3d9\",\n\tDSI: \"02d5cdd59c2e1b10939708002b2cf9ae\",\n\tUDI: \"05d5cdd59c2e1b10939708002b2cf9ae\"\n};\nfunction parse_xls_props(cfb/*:CFBContainer*/, props, o) {\n\t/* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\n\tvar DSI = CFB.find(cfb, '/!DocumentSummaryInformation');\n\tif(DSI && DSI.size > 0) try {\n\t\tvar DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);\n\t\tfor(var d in DocSummary) props[d] = DocSummary[d];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\t/* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\n\tvar SI = CFB.find(cfb, '/!SummaryInformation');\n\tif(SI && SI.size > 0) try {\n\t\tvar Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);\n\t\tfor(var s in Summary) if(props[s] == null) props[s] = Summary[s];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\tif(props.HeadingPairs && props.TitlesOfParts) {\n\t\tload_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);\n\t\tdelete props.HeadingPairs; delete props.TitlesOfParts;\n\t}\n}\nfunction write_xls_props(wb/*:Workbook*/, cfb/*:CFBContainer*/) {\n\tvar DSEntries = [], SEntries = [], CEntries = [];\n\tvar i = 0, Keys;\n\tvar DocSummaryRE/*:{[key:string]:string}*/ = evert_key(DocSummaryPIDDSI, \"n\");\n\tvar SummaryRE/*:{[key:string]:string}*/ = evert_key(SummaryPIDSI, \"n\");\n\tif(wb.Props) {\n\t\tKeys = keys(wb.Props);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Props[Keys[i]]]);\n\t}\n\tif(wb.Custprops) {\n\t\tKeys = keys(wb.Custprops);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) if(!Object.prototype.hasOwnProperty.call((wb.Props||{}), Keys[i])) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Custprops[Keys[i]]]);\n\t}\n\tvar CEntries2 = [];\n\tfor(i = 0; i < CEntries.length; ++i) {\n\t\tif(XLSPSSkip.indexOf(CEntries[i][0]) > -1 || PseudoPropsPairs.indexOf(CEntries[i][0]) > -1) continue;\n\t\tif(CEntries[i][1] == null) continue;\n\t\tCEntries2.push(CEntries[i]);\n\t}\n\tif(SEntries.length) CFB.utils.cfb_add(cfb, \"/\\u0005SummaryInformation\", write_PropertySetStream(SEntries, PSCLSID.SI, SummaryRE, SummaryPIDSI));\n\tif(DSEntries.length || CEntries2.length) CFB.utils.cfb_add(cfb, \"/\\u0005DocumentSummaryInformation\", write_PropertySetStream(DSEntries, PSCLSID.DSI, DocSummaryRE, DocSummaryPIDDSI, CEntries2.length ? CEntries2 : null, PSCLSID.UDI));\n}\n\nfunction parse_xlscfb(cfb/*:any*/, options/*:?ParseOpts*/)/*:Workbook*/ {\nif(!options) options = {};\nfix_read_opts(options);\nreset_cp();\nif(options.codepage) set_ansi(options.codepage);\nvar CompObj/*:?CFBEntry*/, WB/*:?any*/;\nif(cfb.FullPaths) {\n\tif(CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\n\tCompObj = CFB.find(cfb, '!CompObj');\n\tWB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\n} else {\n\tswitch(options.type) {\n\t\tcase 'base64': cfb = s2a(Base64_decode(cfb)); break;\n\t\tcase 'binary': cfb = s2a(cfb); break;\n\t\tcase 'buffer': break;\n\t\tcase 'array': if(!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb); break;\n\t}\n\tprep_blob(cfb, 0);\n\tWB = ({content: cfb}/*:any*/);\n}\nvar /*::CompObjP, */WorkbookP/*:: :Workbook = XLSX.utils.book_new(); */;\n\nvar _data/*:?any*/;\nif(CompObj) /*::CompObjP = */parse_compobj(CompObj);\nif(options.bookProps && !options.bookSheets) WorkbookP = ({}/*:any*/);\nelse/*:: if(cfb instanceof CFBContainer) */ {\n\tvar T = has_buf ? 'buffer' : 'array';\n\tif(WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\n\t/* Quattro Pro 7-8 */\n\telse if((_data=CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Quattro Pro 9 */\n\telse if((_data=CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Works 4 for Mac */\n\telse if((_data=CFB.find(cfb, 'MN0')) && _data.content) throw new Error(\"Unsupported Works 4 for Mac file\");\n\telse throw new Error(\"Cannot find Workbook stream\");\n\tif(options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\n}\n\nvar props = {};\nif(cfb.FullPaths) parse_xls_props(/*::((*/cfb/*:: :any):CFBContainer)*/, props, options);\n\nWorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\nif(options.bookFiles) WorkbookP.cfb = cfb;\n/*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\nreturn WorkbookP;\n}\n\n\nfunction write_xlscfb(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:CFBContainer*/ {\n\tvar o = opts || {};\n\tvar cfb = CFB.utils.cfb_new({root:\"R\"});\n\tvar wbpath = \"/Workbook\";\n\tswitch(o.bookType || \"xls\") {\n\t\tcase \"xls\": o.bookType = \"biff8\";\n\t\t/* falls through */\n\t\tcase \"xla\": if(!o.bookType) o.bookType = \"xla\";\n\t\t/* falls through */\n\t\tcase \"biff8\": wbpath = \"/Workbook\"; o.biff = 8; break;\n\t\tcase \"biff5\": wbpath = \"/Book\"; o.biff = 5; break;\n\t\tdefault: throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\n\t}\n\tCFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\n\tif(o.biff == 8 && (wb.Props || wb.Custprops)) write_xls_props(wb, cfb);\n\t// TODO: SI, DSI, CO\n\tif(o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"}));\n\treturn cfb;\n}\n/* [MS-XLSB] 2.3 Record Enumeration */\nvar XLSBRecordEnum = {\n\t/*::[*/0x0000/*::]*/: { /* n:\"BrtRowHdr\", */ f:parse_BrtRowHdr },\n\t/*::[*/0x0001/*::]*/: { /* n:\"BrtCellBlank\", */ f:parse_BrtCellBlank },\n\t/*::[*/0x0002/*::]*/: { /* n:\"BrtCellRk\", */ f:parse_BrtCellRk },\n\t/*::[*/0x0003/*::]*/: { /* n:\"BrtCellError\", */ f:parse_BrtCellError },\n\t/*::[*/0x0004/*::]*/: { /* n:\"BrtCellBool\", */ f:parse_BrtCellBool },\n\t/*::[*/0x0005/*::]*/: { /* n:\"BrtCellReal\", */ f:parse_BrtCellReal },\n\t/*::[*/0x0006/*::]*/: { /* n:\"BrtCellSt\", */ f:parse_BrtCellSt },\n\t/*::[*/0x0007/*::]*/: { /* n:\"BrtCellIsst\", */ f:parse_BrtCellIsst },\n\t/*::[*/0x0008/*::]*/: { /* n:\"BrtFmlaString\", */ f:parse_BrtFmlaString },\n\t/*::[*/0x0009/*::]*/: { /* n:\"BrtFmlaNum\", */ f:parse_BrtFmlaNum },\n\t/*::[*/0x000A/*::]*/: { /* n:\"BrtFmlaBool\", */ f:parse_BrtFmlaBool },\n\t/*::[*/0x000B/*::]*/: { /* n:\"BrtFmlaError\", */ f:parse_BrtFmlaError },\n\t/*::[*/0x000C/*::]*/: { /* n:\"BrtShortBlank\", */ f:parse_BrtShortBlank },\n\t/*::[*/0x000D/*::]*/: { /* n:\"BrtShortRk\", */ f:parse_BrtShortRk },\n\t/*::[*/0x000E/*::]*/: { /* n:\"BrtShortError\", */ f:parse_BrtShortError },\n\t/*::[*/0x000F/*::]*/: { /* n:\"BrtShortBool\", */ f:parse_BrtShortBool },\n\t/*::[*/0x0010/*::]*/: { /* n:\"BrtShortReal\", */ f:parse_BrtShortReal },\n\t/*::[*/0x0011/*::]*/: { /* n:\"BrtShortSt\", */ f:parse_BrtShortSt },\n\t/*::[*/0x0012/*::]*/: { /* n:\"BrtShortIsst\", */ f:parse_BrtShortIsst },\n\t/*::[*/0x0013/*::]*/: { /* n:\"BrtSSTItem\", */ f:parse_RichStr },\n\t/*::[*/0x0014/*::]*/: { /* n:\"BrtPCDIMissing\" */ },\n\t/*::[*/0x0015/*::]*/: { /* n:\"BrtPCDINumber\" */ },\n\t/*::[*/0x0016/*::]*/: { /* n:\"BrtPCDIBoolean\" */ },\n\t/*::[*/0x0017/*::]*/: { /* n:\"BrtPCDIError\" */ },\n\t/*::[*/0x0018/*::]*/: { /* n:\"BrtPCDIString\" */ },\n\t/*::[*/0x0019/*::]*/: { /* n:\"BrtPCDIDatetime\" */ },\n\t/*::[*/0x001A/*::]*/: { /* n:\"BrtPCDIIndex\" */ },\n\t/*::[*/0x001B/*::]*/: { /* n:\"BrtPCDIAMissing\" */ },\n\t/*::[*/0x001C/*::]*/: { /* n:\"BrtPCDIANumber\" */ },\n\t/*::[*/0x001D/*::]*/: { /* n:\"BrtPCDIABoolean\" */ },\n\t/*::[*/0x001E/*::]*/: { /* n:\"BrtPCDIAError\" */ },\n\t/*::[*/0x001F/*::]*/: { /* n:\"BrtPCDIAString\" */ },\n\t/*::[*/0x0020/*::]*/: { /* n:\"BrtPCDIADatetime\" */ },\n\t/*::[*/0x0021/*::]*/: { /* n:\"BrtPCRRecord\" */ },\n\t/*::[*/0x0022/*::]*/: { /* n:\"BrtPCRRecordDt\" */ },\n\t/*::[*/0x0023/*::]*/: { /* n:\"BrtFRTBegin\", */ T:1 },\n\t/*::[*/0x0024/*::]*/: { /* n:\"BrtFRTEnd\", */ T:-1 },\n\t/*::[*/0x0025/*::]*/: { /* n:\"BrtACBegin\", */ T:1 },\n\t/*::[*/0x0026/*::]*/: { /* n:\"BrtACEnd\", */ T:-1 },\n\t/*::[*/0x0027/*::]*/: { /* n:\"BrtName\", */ f:parse_BrtName },\n\t/*::[*/0x0028/*::]*/: { /* n:\"BrtIndexRowBlock\" */ },\n\t/*::[*/0x002A/*::]*/: { /* n:\"BrtIndexBlock\" */ },\n\t/*::[*/0x002B/*::]*/: { /* n:\"BrtFont\", */ f:parse_BrtFont },\n\t/*::[*/0x002C/*::]*/: { /* n:\"BrtFmt\", */ f:parse_BrtFmt },\n\t/*::[*/0x002D/*::]*/: { /* n:\"BrtFill\", */ f:parse_BrtFill },\n\t/*::[*/0x002E/*::]*/: { /* n:\"BrtBorder\", */ f:parse_BrtBorder },\n\t/*::[*/0x002F/*::]*/: { /* n:\"BrtXF\", */ f:parse_BrtXF },\n\t/*::[*/0x0030/*::]*/: { /* n:\"BrtStyle\" */ },\n\t/*::[*/0x0031/*::]*/: { /* n:\"BrtCellMeta\", */ f:parse_Int32LE },\n\t/*::[*/0x0032/*::]*/: { /* n:\"BrtValueMeta\" */ },\n\t/*::[*/0x0033/*::]*/: { /* n:\"BrtMdb\" */ f:parse_BrtMdb },\n\t/*::[*/0x0034/*::]*/: { /* n:\"BrtBeginFmd\", */ T:1 },\n\t/*::[*/0x0035/*::]*/: { /* n:\"BrtEndFmd\", */ T:-1 },\n\t/*::[*/0x0036/*::]*/: { /* n:\"BrtBeginMdx\", */ T:1 },\n\t/*::[*/0x0037/*::]*/: { /* n:\"BrtEndMdx\", */ T:-1 },\n\t/*::[*/0x0038/*::]*/: { /* n:\"BrtBeginMdxTuple\", */ T:1 },\n\t/*::[*/0x0039/*::]*/: { /* n:\"BrtEndMdxTuple\", */ T:-1 },\n\t/*::[*/0x003A/*::]*/: { /* n:\"BrtMdxMbrIstr\" */ },\n\t/*::[*/0x003B/*::]*/: { /* n:\"BrtStr\" */ },\n\t/*::[*/0x003C/*::]*/: { /* n:\"BrtColInfo\", */ f:parse_ColInfo },\n\t/*::[*/0x003E/*::]*/: { /* n:\"BrtCellRString\", */ f:parse_BrtCellRString },\n\t/*::[*/0x003F/*::]*/: { /* n:\"BrtCalcChainItem$\", */ f:parse_BrtCalcChainItem$ },\n\t/*::[*/0x0040/*::]*/: { /* n:\"BrtDVal\", */ f:parse_BrtDVal },\n\t/*::[*/0x0041/*::]*/: { /* n:\"BrtSxvcellNum\" */ },\n\t/*::[*/0x0042/*::]*/: { /* n:\"BrtSxvcellStr\" */ },\n\t/*::[*/0x0043/*::]*/: { /* n:\"BrtSxvcellBool\" */ },\n\t/*::[*/0x0044/*::]*/: { /* n:\"BrtSxvcellErr\" */ },\n\t/*::[*/0x0045/*::]*/: { /* n:\"BrtSxvcellDate\" */ },\n\t/*::[*/0x0046/*::]*/: { /* n:\"BrtSxvcellNil\" */ },\n\t/*::[*/0x0080/*::]*/: { /* n:\"BrtFileVersion\" */ },\n\t/*::[*/0x0081/*::]*/: { /* n:\"BrtBeginSheet\", */ T:1 },\n\t/*::[*/0x0082/*::]*/: { /* n:\"BrtEndSheet\", */ T:-1 },\n\t/*::[*/0x0083/*::]*/: { /* n:\"BrtBeginBook\", */ T:1, f:parsenoop, p:0 },\n\t/*::[*/0x0084/*::]*/: { /* n:\"BrtEndBook\", */ T:-1 },\n\t/*::[*/0x0085/*::]*/: { /* n:\"BrtBeginWsViews\", */ T:1 },\n\t/*::[*/0x0086/*::]*/: { /* n:\"BrtEndWsViews\", */ T:-1 },\n\t/*::[*/0x0087/*::]*/: { /* n:\"BrtBeginBookViews\", */ T:1 },\n\t/*::[*/0x0088/*::]*/: { /* n:\"BrtEndBookViews\", */ T:-1 },\n\t/*::[*/0x0089/*::]*/: { /* n:\"BrtBeginWsView\", */ T:1, f:parse_BrtBeginWsView },\n\t/*::[*/0x008A/*::]*/: { /* n:\"BrtEndWsView\", */ T:-1 },\n\t/*::[*/0x008B/*::]*/: { /* n:\"BrtBeginCsViews\", */ T:1 },\n\t/*::[*/0x008C/*::]*/: { /* n:\"BrtEndCsViews\", */ T:-1 },\n\t/*::[*/0x008D/*::]*/: { /* n:\"BrtBeginCsView\", */ T:1 },\n\t/*::[*/0x008E/*::]*/: { /* n:\"BrtEndCsView\", */ T:-1 },\n\t/*::[*/0x008F/*::]*/: { /* n:\"BrtBeginBundleShs\", */ T:1 },\n\t/*::[*/0x0090/*::]*/: { /* n:\"BrtEndBundleShs\", */ T:-1 },\n\t/*::[*/0x0091/*::]*/: { /* n:\"BrtBeginSheetData\", */ T:1 },\n\t/*::[*/0x0092/*::]*/: { /* n:\"BrtEndSheetData\", */ T:-1 },\n\t/*::[*/0x0093/*::]*/: { /* n:\"BrtWsProp\", */ f:parse_BrtWsProp },\n\t/*::[*/0x0094/*::]*/: { /* n:\"BrtWsDim\", */ f:parse_BrtWsDim, p:16 },\n\t/*::[*/0x0097/*::]*/: { /* n:\"BrtPane\", */ f:parse_BrtPane },\n\t/*::[*/0x0098/*::]*/: { /* n:\"BrtSel\" */ },\n\t/*::[*/0x0099/*::]*/: { /* n:\"BrtWbProp\", */ f:parse_BrtWbProp },\n\t/*::[*/0x009A/*::]*/: { /* n:\"BrtWbFactoid\" */ },\n\t/*::[*/0x009B/*::]*/: { /* n:\"BrtFileRecover\" */ },\n\t/*::[*/0x009C/*::]*/: { /* n:\"BrtBundleSh\", */ f:parse_BrtBundleSh },\n\t/*::[*/0x009D/*::]*/: { /* n:\"BrtCalcProp\" */ },\n\t/*::[*/0x009E/*::]*/: { /* n:\"BrtBookView\" */ },\n\t/*::[*/0x009F/*::]*/: { /* n:\"BrtBeginSst\", */ T:1, f:parse_BrtBeginSst },\n\t/*::[*/0x00A0/*::]*/: { /* n:\"BrtEndSst\", */ T:-1 },\n\t/*::[*/0x00A1/*::]*/: { /* n:\"BrtBeginAFilter\", */ T:1, f:parse_UncheckedRfX },\n\t/*::[*/0x00A2/*::]*/: { /* n:\"BrtEndAFilter\", */ T:-1 },\n\t/*::[*/0x00A3/*::]*/: { /* n:\"BrtBeginFilterColumn\", */ T:1 },\n\t/*::[*/0x00A4/*::]*/: { /* n:\"BrtEndFilterColumn\", */ T:-1 },\n\t/*::[*/0x00A5/*::]*/: { /* n:\"BrtBeginFilters\", */ T:1 },\n\t/*::[*/0x00A6/*::]*/: { /* n:\"BrtEndFilters\", */ T:-1 },\n\t/*::[*/0x00A7/*::]*/: { /* n:\"BrtFilter\" */ },\n\t/*::[*/0x00A8/*::]*/: { /* n:\"BrtColorFilter\" */ },\n\t/*::[*/0x00A9/*::]*/: { /* n:\"BrtIconFilter\" */ },\n\t/*::[*/0x00AA/*::]*/: { /* n:\"BrtTop10Filter\" */ },\n\t/*::[*/0x00AB/*::]*/: { /* n:\"BrtDynamicFilter\" */ },\n\t/*::[*/0x00AC/*::]*/: { /* n:\"BrtBeginCustomFilters\", */ T:1 },\n\t/*::[*/0x00AD/*::]*/: { /* n:\"BrtEndCustomFilters\", */ T:-1 },\n\t/*::[*/0x00AE/*::]*/: { /* n:\"BrtCustomFilter\" */ },\n\t/*::[*/0x00AF/*::]*/: { /* n:\"BrtAFilterDateGroupItem\" */ },\n\t/*::[*/0x00B0/*::]*/: { /* n:\"BrtMergeCell\", */ f:parse_BrtMergeCell },\n\t/*::[*/0x00B1/*::]*/: { /* n:\"BrtBeginMergeCells\", */ T:1 },\n\t/*::[*/0x00B2/*::]*/: { /* n:\"BrtEndMergeCells\", */ T:-1 },\n\t/*::[*/0x00B3/*::]*/: { /* n:\"BrtBeginPivotCacheDef\", */ T:1 },\n\t/*::[*/0x00B4/*::]*/: { /* n:\"BrtEndPivotCacheDef\", */ T:-1 },\n\t/*::[*/0x00B5/*::]*/: { /* n:\"BrtBeginPCDFields\", */ T:1 },\n\t/*::[*/0x00B6/*::]*/: { /* n:\"BrtEndPCDFields\", */ T:-1 },\n\t/*::[*/0x00B7/*::]*/: { /* n:\"BrtBeginPCDField\", */ T:1 },\n\t/*::[*/0x00B8/*::]*/: { /* n:\"BrtEndPCDField\", */ T:-1 },\n\t/*::[*/0x00B9/*::]*/: { /* n:\"BrtBeginPCDSource\", */ T:1 },\n\t/*::[*/0x00BA/*::]*/: { /* n:\"BrtEndPCDSource\", */ T:-1 },\n\t/*::[*/0x00BB/*::]*/: { /* n:\"BrtBeginPCDSRange\", */ T:1 },\n\t/*::[*/0x00BC/*::]*/: { /* n:\"BrtEndPCDSRange\", */ T:-1 },\n\t/*::[*/0x00BD/*::]*/: { /* n:\"BrtBeginPCDFAtbl\", */ T:1 },\n\t/*::[*/0x00BE/*::]*/: { /* n:\"BrtEndPCDFAtbl\", */ T:-1 },\n\t/*::[*/0x00BF/*::]*/: { /* n:\"BrtBeginPCDIRun\", */ T:1 },\n\t/*::[*/0x00C0/*::]*/: { /* n:\"BrtEndPCDIRun\", */ T:-1 },\n\t/*::[*/0x00C1/*::]*/: { /* n:\"BrtBeginPivotCacheRecords\", */ T:1 },\n\t/*::[*/0x00C2/*::]*/: { /* n:\"BrtEndPivotCacheRecords\", */ T:-1 },\n\t/*::[*/0x00C3/*::]*/: { /* n:\"BrtBeginPCDHierarchies\", */ T:1 },\n\t/*::[*/0x00C4/*::]*/: { /* n:\"BrtEndPCDHierarchies\", */ T:-1 },\n\t/*::[*/0x00C5/*::]*/: { /* n:\"BrtBeginPCDHierarchy\", */ T:1 },\n\t/*::[*/0x00C6/*::]*/: { /* n:\"BrtEndPCDHierarchy\", */ T:-1 },\n\t/*::[*/0x00C7/*::]*/: { /* n:\"BrtBeginPCDHFieldsUsage\", */ T:1 },\n\t/*::[*/0x00C8/*::]*/: { /* n:\"BrtEndPCDHFieldsUsage\", */ T:-1 },\n\t/*::[*/0x00C9/*::]*/: { /* n:\"BrtBeginExtConnection\", */ T:1 },\n\t/*::[*/0x00CA/*::]*/: { /* n:\"BrtEndExtConnection\", */ T:-1 },\n\t/*::[*/0x00CB/*::]*/: { /* n:\"BrtBeginECDbProps\", */ T:1 },\n\t/*::[*/0x00CC/*::]*/: { /* n:\"BrtEndECDbProps\", */ T:-1 },\n\t/*::[*/0x00CD/*::]*/: { /* n:\"BrtBeginECOlapProps\", */ T:1 },\n\t/*::[*/0x00CE/*::]*/: { /* n:\"BrtEndECOlapProps\", */ T:-1 },\n\t/*::[*/0x00CF/*::]*/: { /* n:\"BrtBeginPCDSConsol\", */ T:1 },\n\t/*::[*/0x00D0/*::]*/: { /* n:\"BrtEndPCDSConsol\", */ T:-1 },\n\t/*::[*/0x00D1/*::]*/: { /* n:\"BrtBeginPCDSCPages\", */ T:1 },\n\t/*::[*/0x00D2/*::]*/: { /* n:\"BrtEndPCDSCPages\", */ T:-1 },\n\t/*::[*/0x00D3/*::]*/: { /* n:\"BrtBeginPCDSCPage\", */ T:1 },\n\t/*::[*/0x00D4/*::]*/: { /* n:\"BrtEndPCDSCPage\", */ T:-1 },\n\t/*::[*/0x00D5/*::]*/: { /* n:\"BrtBeginPCDSCPItem\", */ T:1 },\n\t/*::[*/0x00D6/*::]*/: { /* n:\"BrtEndPCDSCPItem\", */ T:-1 },\n\t/*::[*/0x00D7/*::]*/: { /* n:\"BrtBeginPCDSCSets\", */ T:1 },\n\t/*::[*/0x00D8/*::]*/: { /* n:\"BrtEndPCDSCSets\", */ T:-1 },\n\t/*::[*/0x00D9/*::]*/: { /* n:\"BrtBeginPCDSCSet\", */ T:1 },\n\t/*::[*/0x00DA/*::]*/: { /* n:\"BrtEndPCDSCSet\", */ T:-1 },\n\t/*::[*/0x00DB/*::]*/: { /* n:\"BrtBeginPCDFGroup\", */ T:1 },\n\t/*::[*/0x00DC/*::]*/: { /* n:\"BrtEndPCDFGroup\", */ T:-1 },\n\t/*::[*/0x00DD/*::]*/: { /* n:\"BrtBeginPCDFGItems\", */ T:1 },\n\t/*::[*/0x00DE/*::]*/: { /* n:\"BrtEndPCDFGItems\", */ T:-1 },\n\t/*::[*/0x00DF/*::]*/: { /* n:\"BrtBeginPCDFGRange\", */ T:1 },\n\t/*::[*/0x00E0/*::]*/: { /* n:\"BrtEndPCDFGRange\", */ T:-1 },\n\t/*::[*/0x00E1/*::]*/: { /* n:\"BrtBeginPCDFGDiscrete\", */ T:1 },\n\t/*::[*/0x00E2/*::]*/: { /* n:\"BrtEndPCDFGDiscrete\", */ T:-1 },\n\t/*::[*/0x00E3/*::]*/: { /* n:\"BrtBeginPCDSDTupleCache\", */ T:1 },\n\t/*::[*/0x00E4/*::]*/: { /* n:\"BrtEndPCDSDTupleCache\", */ T:-1 },\n\t/*::[*/0x00E5/*::]*/: { /* n:\"BrtBeginPCDSDTCEntries\", */ T:1 },\n\t/*::[*/0x00E6/*::]*/: { /* n:\"BrtEndPCDSDTCEntries\", */ T:-1 },\n\t/*::[*/0x00E7/*::]*/: { /* n:\"BrtBeginPCDSDTCEMembers\", */ T:1 },\n\t/*::[*/0x00E8/*::]*/: { /* n:\"BrtEndPCDSDTCEMembers\", */ T:-1 },\n\t/*::[*/0x00E9/*::]*/: { /* n:\"BrtBeginPCDSDTCEMember\", */ T:1 },\n\t/*::[*/0x00EA/*::]*/: { /* n:\"BrtEndPCDSDTCEMember\", */ T:-1 },\n\t/*::[*/0x00EB/*::]*/: { /* n:\"BrtBeginPCDSDTCQueries\", */ T:1 },\n\t/*::[*/0x00EC/*::]*/: { /* n:\"BrtEndPCDSDTCQueries\", */ T:-1 },\n\t/*::[*/0x00ED/*::]*/: { /* n:\"BrtBeginPCDSDTCQuery\", */ T:1 },\n\t/*::[*/0x00EE/*::]*/: { /* n:\"BrtEndPCDSDTCQuery\", */ T:-1 },\n\t/*::[*/0x00EF/*::]*/: { /* n:\"BrtBeginPCDSDTCSets\", */ T:1 },\n\t/*::[*/0x00F0/*::]*/: { /* n:\"BrtEndPCDSDTCSets\", */ T:-1 },\n\t/*::[*/0x00F1/*::]*/: { /* n:\"BrtBeginPCDSDTCSet\", */ T:1 },\n\t/*::[*/0x00F2/*::]*/: { /* n:\"BrtEndPCDSDTCSet\", */ T:-1 },\n\t/*::[*/0x00F3/*::]*/: { /* n:\"BrtBeginPCDCalcItems\", */ T:1 },\n\t/*::[*/0x00F4/*::]*/: { /* n:\"BrtEndPCDCalcItems\", */ T:-1 },\n\t/*::[*/0x00F5/*::]*/: { /* n:\"BrtBeginPCDCalcItem\", */ T:1 },\n\t/*::[*/0x00F6/*::]*/: { /* n:\"BrtEndPCDCalcItem\", */ T:-1 },\n\t/*::[*/0x00F7/*::]*/: { /* n:\"BrtBeginPRule\", */ T:1 },\n\t/*::[*/0x00F8/*::]*/: { /* n:\"BrtEndPRule\", */ T:-1 },\n\t/*::[*/0x00F9/*::]*/: { /* n:\"BrtBeginPRFilters\", */ T:1 },\n\t/*::[*/0x00FA/*::]*/: { /* n:\"BrtEndPRFilters\", */ T:-1 },\n\t/*::[*/0x00FB/*::]*/: { /* n:\"BrtBeginPRFilter\", */ T:1 },\n\t/*::[*/0x00FC/*::]*/: { /* n:\"BrtEndPRFilter\", */ T:-1 },\n\t/*::[*/0x00FD/*::]*/: { /* n:\"BrtBeginPNames\", */ T:1 },\n\t/*::[*/0x00FE/*::]*/: { /* n:\"BrtEndPNames\", */ T:-1 },\n\t/*::[*/0x00FF/*::]*/: { /* n:\"BrtBeginPName\", */ T:1 },\n\t/*::[*/0x0100/*::]*/: { /* n:\"BrtEndPName\", */ T:-1 },\n\t/*::[*/0x0101/*::]*/: { /* n:\"BrtBeginPNPairs\", */ T:1 },\n\t/*::[*/0x0102/*::]*/: { /* n:\"BrtEndPNPairs\", */ T:-1 },\n\t/*::[*/0x0103/*::]*/: { /* n:\"BrtBeginPNPair\", */ T:1 },\n\t/*::[*/0x0104/*::]*/: { /* n:\"BrtEndPNPair\", */ T:-1 },\n\t/*::[*/0x0105/*::]*/: { /* n:\"BrtBeginECWebProps\", */ T:1 },\n\t/*::[*/0x0106/*::]*/: { /* n:\"BrtEndECWebProps\", */ T:-1 },\n\t/*::[*/0x0107/*::]*/: { /* n:\"BrtBeginEcWpTables\", */ T:1 },\n\t/*::[*/0x0108/*::]*/: { /* n:\"BrtEndECWPTables\", */ T:-1 },\n\t/*::[*/0x0109/*::]*/: { /* n:\"BrtBeginECParams\", */ T:1 },\n\t/*::[*/0x010A/*::]*/: { /* n:\"BrtEndECParams\", */ T:-1 },\n\t/*::[*/0x010B/*::]*/: { /* n:\"BrtBeginECParam\", */ T:1 },\n\t/*::[*/0x010C/*::]*/: { /* n:\"BrtEndECParam\", */ T:-1 },\n\t/*::[*/0x010D/*::]*/: { /* n:\"BrtBeginPCDKPIs\", */ T:1 },\n\t/*::[*/0x010E/*::]*/: { /* n:\"BrtEndPCDKPIs\", */ T:-1 },\n\t/*::[*/0x010F/*::]*/: { /* n:\"BrtBeginPCDKPI\", */ T:1 },\n\t/*::[*/0x0110/*::]*/: { /* n:\"BrtEndPCDKPI\", */ T:-1 },\n\t/*::[*/0x0111/*::]*/: { /* n:\"BrtBeginDims\", */ T:1 },\n\t/*::[*/0x0112/*::]*/: { /* n:\"BrtEndDims\", */ T:-1 },\n\t/*::[*/0x0113/*::]*/: { /* n:\"BrtBeginDim\", */ T:1 },\n\t/*::[*/0x0114/*::]*/: { /* n:\"BrtEndDim\", */ T:-1 },\n\t/*::[*/0x0115/*::]*/: { /* n:\"BrtIndexPartEnd\" */ },\n\t/*::[*/0x0116/*::]*/: { /* n:\"BrtBeginStyleSheet\", */ T:1 },\n\t/*::[*/0x0117/*::]*/: { /* n:\"BrtEndStyleSheet\", */ T:-1 },\n\t/*::[*/0x0118/*::]*/: { /* n:\"BrtBeginSXView\", */ T:1 },\n\t/*::[*/0x0119/*::]*/: { /* n:\"BrtEndSXVI\", */ T:-1 },\n\t/*::[*/0x011A/*::]*/: { /* n:\"BrtBeginSXVI\", */ T:1 },\n\t/*::[*/0x011B/*::]*/: { /* n:\"BrtBeginSXVIs\", */ T:1 },\n\t/*::[*/0x011C/*::]*/: { /* n:\"BrtEndSXVIs\", */ T:-1 },\n\t/*::[*/0x011D/*::]*/: { /* n:\"BrtBeginSXVD\", */ T:1 },\n\t/*::[*/0x011E/*::]*/: { /* n:\"BrtEndSXVD\", */ T:-1 },\n\t/*::[*/0x011F/*::]*/: { /* n:\"BrtBeginSXVDs\", */ T:1 },\n\t/*::[*/0x0120/*::]*/: { /* n:\"BrtEndSXVDs\", */ T:-1 },\n\t/*::[*/0x0121/*::]*/: { /* n:\"BrtBeginSXPI\", */ T:1 },\n\t/*::[*/0x0122/*::]*/: { /* n:\"BrtEndSXPI\", */ T:-1 },\n\t/*::[*/0x0123/*::]*/: { /* n:\"BrtBeginSXPIs\", */ T:1 },\n\t/*::[*/0x0124/*::]*/: { /* n:\"BrtEndSXPIs\", */ T:-1 },\n\t/*::[*/0x0125/*::]*/: { /* n:\"BrtBeginSXDI\", */ T:1 },\n\t/*::[*/0x0126/*::]*/: { /* n:\"BrtEndSXDI\", */ T:-1 },\n\t/*::[*/0x0127/*::]*/: { /* n:\"BrtBeginSXDIs\", */ T:1 },\n\t/*::[*/0x0128/*::]*/: { /* n:\"BrtEndSXDIs\", */ T:-1 },\n\t/*::[*/0x0129/*::]*/: { /* n:\"BrtBeginSXLI\", */ T:1 },\n\t/*::[*/0x012A/*::]*/: { /* n:\"BrtEndSXLI\", */ T:-1 },\n\t/*::[*/0x012B/*::]*/: { /* n:\"BrtBeginSXLIRws\", */ T:1 },\n\t/*::[*/0x012C/*::]*/: { /* n:\"BrtEndSXLIRws\", */ T:-1 },\n\t/*::[*/0x012D/*::]*/: { /* n:\"BrtBeginSXLICols\", */ T:1 },\n\t/*::[*/0x012E/*::]*/: { /* n:\"BrtEndSXLICols\", */ T:-1 },\n\t/*::[*/0x012F/*::]*/: { /* n:\"BrtBeginSXFormat\", */ T:1 },\n\t/*::[*/0x0130/*::]*/: { /* n:\"BrtEndSXFormat\", */ T:-1 },\n\t/*::[*/0x0131/*::]*/: { /* n:\"BrtBeginSXFormats\", */ T:1 },\n\t/*::[*/0x0132/*::]*/: { /* n:\"BrtEndSxFormats\", */ T:-1 },\n\t/*::[*/0x0133/*::]*/: { /* n:\"BrtBeginSxSelect\", */ T:1 },\n\t/*::[*/0x0134/*::]*/: { /* n:\"BrtEndSxSelect\", */ T:-1 },\n\t/*::[*/0x0135/*::]*/: { /* n:\"BrtBeginISXVDRws\", */ T:1 },\n\t/*::[*/0x0136/*::]*/: { /* n:\"BrtEndISXVDRws\", */ T:-1 },\n\t/*::[*/0x0137/*::]*/: { /* n:\"BrtBeginISXVDCols\", */ T:1 },\n\t/*::[*/0x0138/*::]*/: { /* n:\"BrtEndISXVDCols\", */ T:-1 },\n\t/*::[*/0x0139/*::]*/: { /* n:\"BrtEndSXLocation\", */ T:-1 },\n\t/*::[*/0x013A/*::]*/: { /* n:\"BrtBeginSXLocation\", */ T:1 },\n\t/*::[*/0x013B/*::]*/: { /* n:\"BrtEndSXView\", */ T:-1 },\n\t/*::[*/0x013C/*::]*/: { /* n:\"BrtBeginSXTHs\", */ T:1 },\n\t/*::[*/0x013D/*::]*/: { /* n:\"BrtEndSXTHs\", */ T:-1 },\n\t/*::[*/0x013E/*::]*/: { /* n:\"BrtBeginSXTH\", */ T:1 },\n\t/*::[*/0x013F/*::]*/: { /* n:\"BrtEndSXTH\", */ T:-1 },\n\t/*::[*/0x0140/*::]*/: { /* n:\"BrtBeginISXTHRws\", */ T:1 },\n\t/*::[*/0x0141/*::]*/: { /* n:\"BrtEndISXTHRws\", */ T:-1 },\n\t/*::[*/0x0142/*::]*/: { /* n:\"BrtBeginISXTHCols\", */ T:1 },\n\t/*::[*/0x0143/*::]*/: { /* n:\"BrtEndISXTHCols\", */ T:-1 },\n\t/*::[*/0x0144/*::]*/: { /* n:\"BrtBeginSXTDMPS\", */ T:1 },\n\t/*::[*/0x0145/*::]*/: { /* n:\"BrtEndSXTDMPs\", */ T:-1 },\n\t/*::[*/0x0146/*::]*/: { /* n:\"BrtBeginSXTDMP\", */ T:1 },\n\t/*::[*/0x0147/*::]*/: { /* n:\"BrtEndSXTDMP\", */ T:-1 },\n\t/*::[*/0x0148/*::]*/: { /* n:\"BrtBeginSXTHItems\", */ T:1 },\n\t/*::[*/0x0149/*::]*/: { /* n:\"BrtEndSXTHItems\", */ T:-1 },\n\t/*::[*/0x014A/*::]*/: { /* n:\"BrtBeginSXTHItem\", */ T:1 },\n\t/*::[*/0x014B/*::]*/: { /* n:\"BrtEndSXTHItem\", */ T:-1 },\n\t/*::[*/0x014C/*::]*/: { /* n:\"BrtBeginMetadata\", */ T:1 },\n\t/*::[*/0x014D/*::]*/: { /* n:\"BrtEndMetadata\", */ T:-1 },\n\t/*::[*/0x014E/*::]*/: { /* n:\"BrtBeginEsmdtinfo\", */ T:1 },\n\t/*::[*/0x014F/*::]*/: { /* n:\"BrtMdtinfo\", */ f:parse_BrtMdtinfo },\n\t/*::[*/0x0150/*::]*/: { /* n:\"BrtEndEsmdtinfo\", */ T:-1 },\n\t/*::[*/0x0151/*::]*/: { /* n:\"BrtBeginEsmdb\", */ f:parse_BrtBeginEsmdb, T:1 },\n\t/*::[*/0x0152/*::]*/: { /* n:\"BrtEndEsmdb\", */ T:-1 },\n\t/*::[*/0x0153/*::]*/: { /* n:\"BrtBeginEsfmd\", */ T:1 },\n\t/*::[*/0x0154/*::]*/: { /* n:\"BrtEndEsfmd\", */ T:-1 },\n\t/*::[*/0x0155/*::]*/: { /* n:\"BrtBeginSingleCells\", */ T:1 },\n\t/*::[*/0x0156/*::]*/: { /* n:\"BrtEndSingleCells\", */ T:-1 },\n\t/*::[*/0x0157/*::]*/: { /* n:\"BrtBeginList\", */ T:1 },\n\t/*::[*/0x0158/*::]*/: { /* n:\"BrtEndList\", */ T:-1 },\n\t/*::[*/0x0159/*::]*/: { /* n:\"BrtBeginListCols\", */ T:1 },\n\t/*::[*/0x015A/*::]*/: { /* n:\"BrtEndListCols\", */ T:-1 },\n\t/*::[*/0x015B/*::]*/: { /* n:\"BrtBeginListCol\", */ T:1 },\n\t/*::[*/0x015C/*::]*/: { /* n:\"BrtEndListCol\", */ T:-1 },\n\t/*::[*/0x015D/*::]*/: { /* n:\"BrtBeginListXmlCPr\", */ T:1 },\n\t/*::[*/0x015E/*::]*/: { /* n:\"BrtEndListXmlCPr\", */ T:-1 },\n\t/*::[*/0x015F/*::]*/: { /* n:\"BrtListCCFmla\" */ },\n\t/*::[*/0x0160/*::]*/: { /* n:\"BrtListTrFmla\" */ },\n\t/*::[*/0x0161/*::]*/: { /* n:\"BrtBeginExternals\", */ T:1 },\n\t/*::[*/0x0162/*::]*/: { /* n:\"BrtEndExternals\", */ T:-1 },\n\t/*::[*/0x0163/*::]*/: { /* n:\"BrtSupBookSrc\", */ f:parse_RelID},\n\t/*::[*/0x0165/*::]*/: { /* n:\"BrtSupSelf\" */ },\n\t/*::[*/0x0166/*::]*/: { /* n:\"BrtSupSame\" */ },\n\t/*::[*/0x0167/*::]*/: { /* n:\"BrtSupTabs\" */ },\n\t/*::[*/0x0168/*::]*/: { /* n:\"BrtBeginSupBook\", */ T:1 },\n\t/*::[*/0x0169/*::]*/: { /* n:\"BrtPlaceholderName\" */ },\n\t/*::[*/0x016A/*::]*/: { /* n:\"BrtExternSheet\", */ f:parse_ExternSheet },\n\t/*::[*/0x016B/*::]*/: { /* n:\"BrtExternTableStart\" */ },\n\t/*::[*/0x016C/*::]*/: { /* n:\"BrtExternTableEnd\" */ },\n\t/*::[*/0x016E/*::]*/: { /* n:\"BrtExternRowHdr\" */ },\n\t/*::[*/0x016F/*::]*/: { /* n:\"BrtExternCellBlank\" */ },\n\t/*::[*/0x0170/*::]*/: { /* n:\"BrtExternCellReal\" */ },\n\t/*::[*/0x0171/*::]*/: { /* n:\"BrtExternCellBool\" */ },\n\t/*::[*/0x0172/*::]*/: { /* n:\"BrtExternCellError\" */ },\n\t/*::[*/0x0173/*::]*/: { /* n:\"BrtExternCellString\" */ },\n\t/*::[*/0x0174/*::]*/: { /* n:\"BrtBeginEsmdx\", */ T:1 },\n\t/*::[*/0x0175/*::]*/: { /* n:\"BrtEndEsmdx\", */ T:-1 },\n\t/*::[*/0x0176/*::]*/: { /* n:\"BrtBeginMdxSet\", */ T:1 },\n\t/*::[*/0x0177/*::]*/: { /* n:\"BrtEndMdxSet\", */ T:-1 },\n\t/*::[*/0x0178/*::]*/: { /* n:\"BrtBeginMdxMbrProp\", */ T:1 },\n\t/*::[*/0x0179/*::]*/: { /* n:\"BrtEndMdxMbrProp\", */ T:-1 },\n\t/*::[*/0x017A/*::]*/: { /* n:\"BrtBeginMdxKPI\", */ T:1 },\n\t/*::[*/0x017B/*::]*/: { /* n:\"BrtEndMdxKPI\", */ T:-1 },\n\t/*::[*/0x017C/*::]*/: { /* n:\"BrtBeginEsstr\", */ T:1 },\n\t/*::[*/0x017D/*::]*/: { /* n:\"BrtEndEsstr\", */ T:-1 },\n\t/*::[*/0x017E/*::]*/: { /* n:\"BrtBeginPRFItem\", */ T:1 },\n\t/*::[*/0x017F/*::]*/: { /* n:\"BrtEndPRFItem\", */ T:-1 },\n\t/*::[*/0x0180/*::]*/: { /* n:\"BrtBeginPivotCacheIDs\", */ T:1 },\n\t/*::[*/0x0181/*::]*/: { /* n:\"BrtEndPivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x0182/*::]*/: { /* n:\"BrtBeginPivotCacheID\", */ T:1 },\n\t/*::[*/0x0183/*::]*/: { /* n:\"BrtEndPivotCacheID\", */ T:-1 },\n\t/*::[*/0x0184/*::]*/: { /* n:\"BrtBeginISXVIs\", */ T:1 },\n\t/*::[*/0x0185/*::]*/: { /* n:\"BrtEndISXVIs\", */ T:-1 },\n\t/*::[*/0x0186/*::]*/: { /* n:\"BrtBeginColInfos\", */ T:1 },\n\t/*::[*/0x0187/*::]*/: { /* n:\"BrtEndColInfos\", */ T:-1 },\n\t/*::[*/0x0188/*::]*/: { /* n:\"BrtBeginRwBrk\", */ T:1 },\n\t/*::[*/0x0189/*::]*/: { /* n:\"BrtEndRwBrk\", */ T:-1 },\n\t/*::[*/0x018A/*::]*/: { /* n:\"BrtBeginColBrk\", */ T:1 },\n\t/*::[*/0x018B/*::]*/: { /* n:\"BrtEndColBrk\", */ T:-1 },\n\t/*::[*/0x018C/*::]*/: { /* n:\"BrtBrk\" */ },\n\t/*::[*/0x018D/*::]*/: { /* n:\"BrtUserBookView\" */ },\n\t/*::[*/0x018E/*::]*/: { /* n:\"BrtInfo\" */ },\n\t/*::[*/0x018F/*::]*/: { /* n:\"BrtCUsr\" */ },\n\t/*::[*/0x0190/*::]*/: { /* n:\"BrtUsr\" */ },\n\t/*::[*/0x0191/*::]*/: { /* n:\"BrtBeginUsers\", */ T:1 },\n\t/*::[*/0x0193/*::]*/: { /* n:\"BrtEOF\" */ },\n\t/*::[*/0x0194/*::]*/: { /* n:\"BrtUCR\" */ },\n\t/*::[*/0x0195/*::]*/: { /* n:\"BrtRRInsDel\" */ },\n\t/*::[*/0x0196/*::]*/: { /* n:\"BrtRREndInsDel\" */ },\n\t/*::[*/0x0197/*::]*/: { /* n:\"BrtRRMove\" */ },\n\t/*::[*/0x0198/*::]*/: { /* n:\"BrtRREndMove\" */ },\n\t/*::[*/0x0199/*::]*/: { /* n:\"BrtRRChgCell\" */ },\n\t/*::[*/0x019A/*::]*/: { /* n:\"BrtRREndChgCell\" */ },\n\t/*::[*/0x019B/*::]*/: { /* n:\"BrtRRHeader\" */ },\n\t/*::[*/0x019C/*::]*/: { /* n:\"BrtRRUserView\" */ },\n\t/*::[*/0x019D/*::]*/: { /* n:\"BrtRRRenSheet\" */ },\n\t/*::[*/0x019E/*::]*/: { /* n:\"BrtRRInsertSh\" */ },\n\t/*::[*/0x019F/*::]*/: { /* n:\"BrtRRDefName\" */ },\n\t/*::[*/0x01A0/*::]*/: { /* n:\"BrtRRNote\" */ },\n\t/*::[*/0x01A1/*::]*/: { /* n:\"BrtRRConflict\" */ },\n\t/*::[*/0x01A2/*::]*/: { /* n:\"BrtRRTQSIF\" */ },\n\t/*::[*/0x01A3/*::]*/: { /* n:\"BrtRRFormat\" */ },\n\t/*::[*/0x01A4/*::]*/: { /* n:\"BrtRREndFormat\" */ },\n\t/*::[*/0x01A5/*::]*/: { /* n:\"BrtRRAutoFmt\" */ },\n\t/*::[*/0x01A6/*::]*/: { /* n:\"BrtBeginUserShViews\", */ T:1 },\n\t/*::[*/0x01A7/*::]*/: { /* n:\"BrtBeginUserShView\", */ T:1 },\n\t/*::[*/0x01A8/*::]*/: { /* n:\"BrtEndUserShView\", */ T:-1 },\n\t/*::[*/0x01A9/*::]*/: { /* n:\"BrtEndUserShViews\", */ T:-1 },\n\t/*::[*/0x01AA/*::]*/: { /* n:\"BrtArrFmla\", */ f:parse_BrtArrFmla },\n\t/*::[*/0x01AB/*::]*/: { /* n:\"BrtShrFmla\", */ f:parse_BrtShrFmla },\n\t/*::[*/0x01AC/*::]*/: { /* n:\"BrtTable\" */ },\n\t/*::[*/0x01AD/*::]*/: { /* n:\"BrtBeginExtConnections\", */ T:1 },\n\t/*::[*/0x01AE/*::]*/: { /* n:\"BrtEndExtConnections\", */ T:-1 },\n\t/*::[*/0x01AF/*::]*/: { /* n:\"BrtBeginPCDCalcMems\", */ T:1 },\n\t/*::[*/0x01B0/*::]*/: { /* n:\"BrtEndPCDCalcMems\", */ T:-1 },\n\t/*::[*/0x01B1/*::]*/: { /* n:\"BrtBeginPCDCalcMem\", */ T:1 },\n\t/*::[*/0x01B2/*::]*/: { /* n:\"BrtEndPCDCalcMem\", */ T:-1 },\n\t/*::[*/0x01B3/*::]*/: { /* n:\"BrtBeginPCDHGLevels\", */ T:1 },\n\t/*::[*/0x01B4/*::]*/: { /* n:\"BrtEndPCDHGLevels\", */ T:-1 },\n\t/*::[*/0x01B5/*::]*/: { /* n:\"BrtBeginPCDHGLevel\", */ T:1 },\n\t/*::[*/0x01B6/*::]*/: { /* n:\"BrtEndPCDHGLevel\", */ T:-1 },\n\t/*::[*/0x01B7/*::]*/: { /* n:\"BrtBeginPCDHGLGroups\", */ T:1 },\n\t/*::[*/0x01B8/*::]*/: { /* n:\"BrtEndPCDHGLGroups\", */ T:-1 },\n\t/*::[*/0x01B9/*::]*/: { /* n:\"BrtBeginPCDHGLGroup\", */ T:1 },\n\t/*::[*/0x01BA/*::]*/: { /* n:\"BrtEndPCDHGLGroup\", */ T:-1 },\n\t/*::[*/0x01BB/*::]*/: { /* n:\"BrtBeginPCDHGLGMembers\", */ T:1 },\n\t/*::[*/0x01BC/*::]*/: { /* n:\"BrtEndPCDHGLGMembers\", */ T:-1 },\n\t/*::[*/0x01BD/*::]*/: { /* n:\"BrtBeginPCDHGLGMember\", */ T:1 },\n\t/*::[*/0x01BE/*::]*/: { /* n:\"BrtEndPCDHGLGMember\", */ T:-1 },\n\t/*::[*/0x01BF/*::]*/: { /* n:\"BrtBeginQSI\", */ T:1 },\n\t/*::[*/0x01C0/*::]*/: { /* n:\"BrtEndQSI\", */ T:-1 },\n\t/*::[*/0x01C1/*::]*/: { /* n:\"BrtBeginQSIR\", */ T:1 },\n\t/*::[*/0x01C2/*::]*/: { /* n:\"BrtEndQSIR\", */ T:-1 },\n\t/*::[*/0x01C3/*::]*/: { /* n:\"BrtBeginDeletedNames\", */ T:1 },\n\t/*::[*/0x01C4/*::]*/: { /* n:\"BrtEndDeletedNames\", */ T:-1 },\n\t/*::[*/0x01C5/*::]*/: { /* n:\"BrtBeginDeletedName\", */ T:1 },\n\t/*::[*/0x01C6/*::]*/: { /* n:\"BrtEndDeletedName\", */ T:-1 },\n\t/*::[*/0x01C7/*::]*/: { /* n:\"BrtBeginQSIFs\", */ T:1 },\n\t/*::[*/0x01C8/*::]*/: { /* n:\"BrtEndQSIFs\", */ T:-1 },\n\t/*::[*/0x01C9/*::]*/: { /* n:\"BrtBeginQSIF\", */ T:1 },\n\t/*::[*/0x01CA/*::]*/: { /* n:\"BrtEndQSIF\", */ T:-1 },\n\t/*::[*/0x01CB/*::]*/: { /* n:\"BrtBeginAutoSortScope\", */ T:1 },\n\t/*::[*/0x01CC/*::]*/: { /* n:\"BrtEndAutoSortScope\", */ T:-1 },\n\t/*::[*/0x01CD/*::]*/: { /* n:\"BrtBeginConditionalFormatting\", */ T:1 },\n\t/*::[*/0x01CE/*::]*/: { /* n:\"BrtEndConditionalFormatting\", */ T:-1 },\n\t/*::[*/0x01CF/*::]*/: { /* n:\"BrtBeginCFRule\", */ T:1 },\n\t/*::[*/0x01D0/*::]*/: { /* n:\"BrtEndCFRule\", */ T:-1 },\n\t/*::[*/0x01D1/*::]*/: { /* n:\"BrtBeginIconSet\", */ T:1 },\n\t/*::[*/0x01D2/*::]*/: { /* n:\"BrtEndIconSet\", */ T:-1 },\n\t/*::[*/0x01D3/*::]*/: { /* n:\"BrtBeginDatabar\", */ T:1 },\n\t/*::[*/0x01D4/*::]*/: { /* n:\"BrtEndDatabar\", */ T:-1 },\n\t/*::[*/0x01D5/*::]*/: { /* n:\"BrtBeginColorScale\", */ T:1 },\n\t/*::[*/0x01D6/*::]*/: { /* n:\"BrtEndColorScale\", */ T:-1 },\n\t/*::[*/0x01D7/*::]*/: { /* n:\"BrtCFVO\" */ },\n\t/*::[*/0x01D8/*::]*/: { /* n:\"BrtExternValueMeta\" */ },\n\t/*::[*/0x01D9/*::]*/: { /* n:\"BrtBeginColorPalette\", */ T:1 },\n\t/*::[*/0x01DA/*::]*/: { /* n:\"BrtEndColorPalette\", */ T:-1 },\n\t/*::[*/0x01DB/*::]*/: { /* n:\"BrtIndexedColor\" */ },\n\t/*::[*/0x01DC/*::]*/: { /* n:\"BrtMargins\", */ f:parse_BrtMargins },\n\t/*::[*/0x01DD/*::]*/: { /* n:\"BrtPrintOptions\" */ },\n\t/*::[*/0x01DE/*::]*/: { /* n:\"BrtPageSetup\" */ },\n\t/*::[*/0x01DF/*::]*/: { /* n:\"BrtBeginHeaderFooter\", */ T:1 },\n\t/*::[*/0x01E0/*::]*/: { /* n:\"BrtEndHeaderFooter\", */ T:-1 },\n\t/*::[*/0x01E1/*::]*/: { /* n:\"BrtBeginSXCrtFormat\", */ T:1 },\n\t/*::[*/0x01E2/*::]*/: { /* n:\"BrtEndSXCrtFormat\", */ T:-1 },\n\t/*::[*/0x01E3/*::]*/: { /* n:\"BrtBeginSXCrtFormats\", */ T:1 },\n\t/*::[*/0x01E4/*::]*/: { /* n:\"BrtEndSXCrtFormats\", */ T:-1 },\n\t/*::[*/0x01E5/*::]*/: { /* n:\"BrtWsFmtInfo\", */ f:parse_BrtWsFmtInfo },\n\t/*::[*/0x01E6/*::]*/: { /* n:\"BrtBeginMgs\", */ T:1 },\n\t/*::[*/0x01E7/*::]*/: { /* n:\"BrtEndMGs\", */ T:-1 },\n\t/*::[*/0x01E8/*::]*/: { /* n:\"BrtBeginMGMaps\", */ T:1 },\n\t/*::[*/0x01E9/*::]*/: { /* n:\"BrtEndMGMaps\", */ T:-1 },\n\t/*::[*/0x01EA/*::]*/: { /* n:\"BrtBeginMG\", */ T:1 },\n\t/*::[*/0x01EB/*::]*/: { /* n:\"BrtEndMG\", */ T:-1 },\n\t/*::[*/0x01EC/*::]*/: { /* n:\"BrtBeginMap\", */ T:1 },\n\t/*::[*/0x01ED/*::]*/: { /* n:\"BrtEndMap\", */ T:-1 },\n\t/*::[*/0x01EE/*::]*/: { /* n:\"BrtHLink\", */ f:parse_BrtHLink },\n\t/*::[*/0x01EF/*::]*/: { /* n:\"BrtBeginDCon\", */ T:1 },\n\t/*::[*/0x01F0/*::]*/: { /* n:\"BrtEndDCon\", */ T:-1 },\n\t/*::[*/0x01F1/*::]*/: { /* n:\"BrtBeginDRefs\", */ T:1 },\n\t/*::[*/0x01F2/*::]*/: { /* n:\"BrtEndDRefs\", */ T:-1 },\n\t/*::[*/0x01F3/*::]*/: { /* n:\"BrtDRef\" */ },\n\t/*::[*/0x01F4/*::]*/: { /* n:\"BrtBeginScenMan\", */ T:1 },\n\t/*::[*/0x01F5/*::]*/: { /* n:\"BrtEndScenMan\", */ T:-1 },\n\t/*::[*/0x01F6/*::]*/: { /* n:\"BrtBeginSct\", */ T:1 },\n\t/*::[*/0x01F7/*::]*/: { /* n:\"BrtEndSct\", */ T:-1 },\n\t/*::[*/0x01F8/*::]*/: { /* n:\"BrtSlc\" */ },\n\t/*::[*/0x01F9/*::]*/: { /* n:\"BrtBeginDXFs\", */ T:1 },\n\t/*::[*/0x01FA/*::]*/: { /* n:\"BrtEndDXFs\", */ T:-1 },\n\t/*::[*/0x01FB/*::]*/: { /* n:\"BrtDXF\" */ },\n\t/*::[*/0x01FC/*::]*/: { /* n:\"BrtBeginTableStyles\", */ T:1 },\n\t/*::[*/0x01FD/*::]*/: { /* n:\"BrtEndTableStyles\", */ T:-1 },\n\t/*::[*/0x01FE/*::]*/: { /* n:\"BrtBeginTableStyle\", */ T:1 },\n\t/*::[*/0x01FF/*::]*/: { /* n:\"BrtEndTableStyle\", */ T:-1 },\n\t/*::[*/0x0200/*::]*/: { /* n:\"BrtTableStyleElement\" */ },\n\t/*::[*/0x0201/*::]*/: { /* n:\"BrtTableStyleClient\" */ },\n\t/*::[*/0x0202/*::]*/: { /* n:\"BrtBeginVolDeps\", */ T:1 },\n\t/*::[*/0x0203/*::]*/: { /* n:\"BrtEndVolDeps\", */ T:-1 },\n\t/*::[*/0x0204/*::]*/: { /* n:\"BrtBeginVolType\", */ T:1 },\n\t/*::[*/0x0205/*::]*/: { /* n:\"BrtEndVolType\", */ T:-1 },\n\t/*::[*/0x0206/*::]*/: { /* n:\"BrtBeginVolMain\", */ T:1 },\n\t/*::[*/0x0207/*::]*/: { /* n:\"BrtEndVolMain\", */ T:-1 },\n\t/*::[*/0x0208/*::]*/: { /* n:\"BrtBeginVolTopic\", */ T:1 },\n\t/*::[*/0x0209/*::]*/: { /* n:\"BrtEndVolTopic\", */ T:-1 },\n\t/*::[*/0x020A/*::]*/: { /* n:\"BrtVolSubtopic\" */ },\n\t/*::[*/0x020B/*::]*/: { /* n:\"BrtVolRef\" */ },\n\t/*::[*/0x020C/*::]*/: { /* n:\"BrtVolNum\" */ },\n\t/*::[*/0x020D/*::]*/: { /* n:\"BrtVolErr\" */ },\n\t/*::[*/0x020E/*::]*/: { /* n:\"BrtVolStr\" */ },\n\t/*::[*/0x020F/*::]*/: { /* n:\"BrtVolBool\" */ },\n\t/*::[*/0x0210/*::]*/: { /* n:\"BrtBeginCalcChain$\", */ T:1 },\n\t/*::[*/0x0211/*::]*/: { /* n:\"BrtEndCalcChain$\", */ T:-1 },\n\t/*::[*/0x0212/*::]*/: { /* n:\"BrtBeginSortState\", */ T:1 },\n\t/*::[*/0x0213/*::]*/: { /* n:\"BrtEndSortState\", */ T:-1 },\n\t/*::[*/0x0214/*::]*/: { /* n:\"BrtBeginSortCond\", */ T:1 },\n\t/*::[*/0x0215/*::]*/: { /* n:\"BrtEndSortCond\", */ T:-1 },\n\t/*::[*/0x0216/*::]*/: { /* n:\"BrtBookProtection\" */ },\n\t/*::[*/0x0217/*::]*/: { /* n:\"BrtSheetProtection\" */ },\n\t/*::[*/0x0218/*::]*/: { /* n:\"BrtRangeProtection\" */ },\n\t/*::[*/0x0219/*::]*/: { /* n:\"BrtPhoneticInfo\" */ },\n\t/*::[*/0x021A/*::]*/: { /* n:\"BrtBeginECTxtWiz\", */ T:1 },\n\t/*::[*/0x021B/*::]*/: { /* n:\"BrtEndECTxtWiz\", */ T:-1 },\n\t/*::[*/0x021C/*::]*/: { /* n:\"BrtBeginECTWFldInfoLst\", */ T:1 },\n\t/*::[*/0x021D/*::]*/: { /* n:\"BrtEndECTWFldInfoLst\", */ T:-1 },\n\t/*::[*/0x021E/*::]*/: { /* n:\"BrtBeginECTwFldInfo\", */ T:1 },\n\t/*::[*/0x0224/*::]*/: { /* n:\"BrtFileSharing\" */ },\n\t/*::[*/0x0225/*::]*/: { /* n:\"BrtOleSize\" */ },\n\t/*::[*/0x0226/*::]*/: { /* n:\"BrtDrawing\", */ f:parse_RelID },\n\t/*::[*/0x0227/*::]*/: { /* n:\"BrtLegacyDrawing\" */ },\n\t/*::[*/0x0228/*::]*/: { /* n:\"BrtLegacyDrawingHF\" */ },\n\t/*::[*/0x0229/*::]*/: { /* n:\"BrtWebOpt\" */ },\n\t/*::[*/0x022A/*::]*/: { /* n:\"BrtBeginWebPubItems\", */ T:1 },\n\t/*::[*/0x022B/*::]*/: { /* n:\"BrtEndWebPubItems\", */ T:-1 },\n\t/*::[*/0x022C/*::]*/: { /* n:\"BrtBeginWebPubItem\", */ T:1 },\n\t/*::[*/0x022D/*::]*/: { /* n:\"BrtEndWebPubItem\", */ T:-1 },\n\t/*::[*/0x022E/*::]*/: { /* n:\"BrtBeginSXCondFmt\", */ T:1 },\n\t/*::[*/0x022F/*::]*/: { /* n:\"BrtEndSXCondFmt\", */ T:-1 },\n\t/*::[*/0x0230/*::]*/: { /* n:\"BrtBeginSXCondFmts\", */ T:1 },\n\t/*::[*/0x0231/*::]*/: { /* n:\"BrtEndSXCondFmts\", */ T:-1 },\n\t/*::[*/0x0232/*::]*/: { /* n:\"BrtBkHim\" */ },\n\t/*::[*/0x0234/*::]*/: { /* n:\"BrtColor\" */ },\n\t/*::[*/0x0235/*::]*/: { /* n:\"BrtBeginIndexedColors\", */ T:1 },\n\t/*::[*/0x0236/*::]*/: { /* n:\"BrtEndIndexedColors\", */ T:-1 },\n\t/*::[*/0x0239/*::]*/: { /* n:\"BrtBeginMRUColors\", */ T:1 },\n\t/*::[*/0x023A/*::]*/: { /* n:\"BrtEndMRUColors\", */ T:-1 },\n\t/*::[*/0x023C/*::]*/: { /* n:\"BrtMRUColor\" */ },\n\t/*::[*/0x023D/*::]*/: { /* n:\"BrtBeginDVals\", */ T:1 },\n\t/*::[*/0x023E/*::]*/: { /* n:\"BrtEndDVals\", */ T:-1 },\n\t/*::[*/0x0241/*::]*/: { /* n:\"BrtSupNameStart\" */ },\n\t/*::[*/0x0242/*::]*/: { /* n:\"BrtSupNameValueStart\" */ },\n\t/*::[*/0x0243/*::]*/: { /* n:\"BrtSupNameValueEnd\" */ },\n\t/*::[*/0x0244/*::]*/: { /* n:\"BrtSupNameNum\" */ },\n\t/*::[*/0x0245/*::]*/: { /* n:\"BrtSupNameErr\" */ },\n\t/*::[*/0x0246/*::]*/: { /* n:\"BrtSupNameSt\" */ },\n\t/*::[*/0x0247/*::]*/: { /* n:\"BrtSupNameNil\" */ },\n\t/*::[*/0x0248/*::]*/: { /* n:\"BrtSupNameBool\" */ },\n\t/*::[*/0x0249/*::]*/: { /* n:\"BrtSupNameFmla\" */ },\n\t/*::[*/0x024A/*::]*/: { /* n:\"BrtSupNameBits\" */ },\n\t/*::[*/0x024B/*::]*/: { /* n:\"BrtSupNameEnd\" */ },\n\t/*::[*/0x024C/*::]*/: { /* n:\"BrtEndSupBook\", */ T:-1 },\n\t/*::[*/0x024D/*::]*/: { /* n:\"BrtCellSmartTagProperty\" */ },\n\t/*::[*/0x024E/*::]*/: { /* n:\"BrtBeginCellSmartTag\", */ T:1 },\n\t/*::[*/0x024F/*::]*/: { /* n:\"BrtEndCellSmartTag\", */ T:-1 },\n\t/*::[*/0x0250/*::]*/: { /* n:\"BrtBeginCellSmartTags\", */ T:1 },\n\t/*::[*/0x0251/*::]*/: { /* n:\"BrtEndCellSmartTags\", */ T:-1 },\n\t/*::[*/0x0252/*::]*/: { /* n:\"BrtBeginSmartTags\", */ T:1 },\n\t/*::[*/0x0253/*::]*/: { /* n:\"BrtEndSmartTags\", */ T:-1 },\n\t/*::[*/0x0254/*::]*/: { /* n:\"BrtSmartTagType\" */ },\n\t/*::[*/0x0255/*::]*/: { /* n:\"BrtBeginSmartTagTypes\", */ T:1 },\n\t/*::[*/0x0256/*::]*/: { /* n:\"BrtEndSmartTagTypes\", */ T:-1 },\n\t/*::[*/0x0257/*::]*/: { /* n:\"BrtBeginSXFilters\", */ T:1 },\n\t/*::[*/0x0258/*::]*/: { /* n:\"BrtEndSXFilters\", */ T:-1 },\n\t/*::[*/0x0259/*::]*/: { /* n:\"BrtBeginSXFILTER\", */ T:1 },\n\t/*::[*/0x025A/*::]*/: { /* n:\"BrtEndSXFilter\", */ T:-1 },\n\t/*::[*/0x025B/*::]*/: { /* n:\"BrtBeginFills\", */ T:1 },\n\t/*::[*/0x025C/*::]*/: { /* n:\"BrtEndFills\", */ T:-1 },\n\t/*::[*/0x025D/*::]*/: { /* n:\"BrtBeginCellWatches\", */ T:1 },\n\t/*::[*/0x025E/*::]*/: { /* n:\"BrtEndCellWatches\", */ T:-1 },\n\t/*::[*/0x025F/*::]*/: { /* n:\"BrtCellWatch\" */ },\n\t/*::[*/0x0260/*::]*/: { /* n:\"BrtBeginCRErrs\", */ T:1 },\n\t/*::[*/0x0261/*::]*/: { /* n:\"BrtEndCRErrs\", */ T:-1 },\n\t/*::[*/0x0262/*::]*/: { /* n:\"BrtCrashRecErr\" */ },\n\t/*::[*/0x0263/*::]*/: { /* n:\"BrtBeginFonts\", */ T:1 },\n\t/*::[*/0x0264/*::]*/: { /* n:\"BrtEndFonts\", */ T:-1 },\n\t/*::[*/0x0265/*::]*/: { /* n:\"BrtBeginBorders\", */ T:1 },\n\t/*::[*/0x0266/*::]*/: { /* n:\"BrtEndBorders\", */ T:-1 },\n\t/*::[*/0x0267/*::]*/: { /* n:\"BrtBeginFmts\", */ T:1 },\n\t/*::[*/0x0268/*::]*/: { /* n:\"BrtEndFmts\", */ T:-1 },\n\t/*::[*/0x0269/*::]*/: { /* n:\"BrtBeginCellXFs\", */ T:1 },\n\t/*::[*/0x026A/*::]*/: { /* n:\"BrtEndCellXFs\", */ T:-1 },\n\t/*::[*/0x026B/*::]*/: { /* n:\"BrtBeginStyles\", */ T:1 },\n\t/*::[*/0x026C/*::]*/: { /* n:\"BrtEndStyles\", */ T:-1 },\n\t/*::[*/0x0271/*::]*/: { /* n:\"BrtBigName\" */ },\n\t/*::[*/0x0272/*::]*/: { /* n:\"BrtBeginCellStyleXFs\", */ T:1 },\n\t/*::[*/0x0273/*::]*/: { /* n:\"BrtEndCellStyleXFs\", */ T:-1 },\n\t/*::[*/0x0274/*::]*/: { /* n:\"BrtBeginComments\", */ T:1 },\n\t/*::[*/0x0275/*::]*/: { /* n:\"BrtEndComments\", */ T:-1 },\n\t/*::[*/0x0276/*::]*/: { /* n:\"BrtBeginCommentAuthors\", */ T:1 },\n\t/*::[*/0x0277/*::]*/: { /* n:\"BrtEndCommentAuthors\", */ T:-1 },\n\t/*::[*/0x0278/*::]*/: { /* n:\"BrtCommentAuthor\", */ f:parse_BrtCommentAuthor },\n\t/*::[*/0x0279/*::]*/: { /* n:\"BrtBeginCommentList\", */ T:1 },\n\t/*::[*/0x027A/*::]*/: { /* n:\"BrtEndCommentList\", */ T:-1 },\n\t/*::[*/0x027B/*::]*/: { /* n:\"BrtBeginComment\", */ T:1, f:parse_BrtBeginComment},\n\t/*::[*/0x027C/*::]*/: { /* n:\"BrtEndComment\", */ T:-1 },\n\t/*::[*/0x027D/*::]*/: { /* n:\"BrtCommentText\", */ f:parse_BrtCommentText },\n\t/*::[*/0x027E/*::]*/: { /* n:\"BrtBeginOleObjects\", */ T:1 },\n\t/*::[*/0x027F/*::]*/: { /* n:\"BrtOleObject\" */ },\n\t/*::[*/0x0280/*::]*/: { /* n:\"BrtEndOleObjects\", */ T:-1 },\n\t/*::[*/0x0281/*::]*/: { /* n:\"BrtBeginSxrules\", */ T:1 },\n\t/*::[*/0x0282/*::]*/: { /* n:\"BrtEndSxRules\", */ T:-1 },\n\t/*::[*/0x0283/*::]*/: { /* n:\"BrtBeginActiveXControls\", */ T:1 },\n\t/*::[*/0x0284/*::]*/: { /* n:\"BrtActiveX\" */ },\n\t/*::[*/0x0285/*::]*/: { /* n:\"BrtEndActiveXControls\", */ T:-1 },\n\t/*::[*/0x0286/*::]*/: { /* n:\"BrtBeginPCDSDTCEMembersSortBy\", */ T:1 },\n\t/*::[*/0x0288/*::]*/: { /* n:\"BrtBeginCellIgnoreECs\", */ T:1 },\n\t/*::[*/0x0289/*::]*/: { /* n:\"BrtCellIgnoreEC\" */ },\n\t/*::[*/0x028A/*::]*/: { /* n:\"BrtEndCellIgnoreECs\", */ T:-1 },\n\t/*::[*/0x028B/*::]*/: { /* n:\"BrtCsProp\", */ f:parse_BrtCsProp },\n\t/*::[*/0x028C/*::]*/: { /* n:\"BrtCsPageSetup\" */ },\n\t/*::[*/0x028D/*::]*/: { /* n:\"BrtBeginUserCsViews\", */ T:1 },\n\t/*::[*/0x028E/*::]*/: { /* n:\"BrtEndUserCsViews\", */ T:-1 },\n\t/*::[*/0x028F/*::]*/: { /* n:\"BrtBeginUserCsView\", */ T:1 },\n\t/*::[*/0x0290/*::]*/: { /* n:\"BrtEndUserCsView\", */ T:-1 },\n\t/*::[*/0x0291/*::]*/: { /* n:\"BrtBeginPcdSFCIEntries\", */ T:1 },\n\t/*::[*/0x0292/*::]*/: { /* n:\"BrtEndPCDSFCIEntries\", */ T:-1 },\n\t/*::[*/0x0293/*::]*/: { /* n:\"BrtPCDSFCIEntry\" */ },\n\t/*::[*/0x0294/*::]*/: { /* n:\"BrtBeginListParts\", */ T:1 },\n\t/*::[*/0x0295/*::]*/: { /* n:\"BrtListPart\" */ },\n\t/*::[*/0x0296/*::]*/: { /* n:\"BrtEndListParts\", */ T:-1 },\n\t/*::[*/0x0297/*::]*/: { /* n:\"BrtSheetCalcProp\" */ },\n\t/*::[*/0x0298/*::]*/: { /* n:\"BrtBeginFnGroup\", */ T:1 },\n\t/*::[*/0x0299/*::]*/: { /* n:\"BrtFnGroup\" */ },\n\t/*::[*/0x029A/*::]*/: { /* n:\"BrtEndFnGroup\", */ T:-1 },\n\t/*::[*/0x029B/*::]*/: { /* n:\"BrtSupAddin\" */ },\n\t/*::[*/0x029C/*::]*/: { /* n:\"BrtSXTDMPOrder\" */ },\n\t/*::[*/0x029D/*::]*/: { /* n:\"BrtCsProtection\" */ },\n\t/*::[*/0x029F/*::]*/: { /* n:\"BrtBeginWsSortMap\", */ T:1 },\n\t/*::[*/0x02A0/*::]*/: { /* n:\"BrtEndWsSortMap\", */ T:-1 },\n\t/*::[*/0x02A1/*::]*/: { /* n:\"BrtBeginRRSort\", */ T:1 },\n\t/*::[*/0x02A2/*::]*/: { /* n:\"BrtEndRRSort\", */ T:-1 },\n\t/*::[*/0x02A3/*::]*/: { /* n:\"BrtRRSortItem\" */ },\n\t/*::[*/0x02A4/*::]*/: { /* n:\"BrtFileSharingIso\" */ },\n\t/*::[*/0x02A5/*::]*/: { /* n:\"BrtBookProtectionIso\" */ },\n\t/*::[*/0x02A6/*::]*/: { /* n:\"BrtSheetProtectionIso\" */ },\n\t/*::[*/0x02A7/*::]*/: { /* n:\"BrtCsProtectionIso\" */ },\n\t/*::[*/0x02A8/*::]*/: { /* n:\"BrtRangeProtectionIso\" */ },\n\t/*::[*/0x02A9/*::]*/: { /* n:\"BrtDValList\" */ },\n\t/*::[*/0x0400/*::]*/: { /* n:\"BrtRwDescent\" */ },\n\t/*::[*/0x0401/*::]*/: { /* n:\"BrtKnownFonts\" */ },\n\t/*::[*/0x0402/*::]*/: { /* n:\"BrtBeginSXTupleSet\", */ T:1 },\n\t/*::[*/0x0403/*::]*/: { /* n:\"BrtEndSXTupleSet\", */ T:-1 },\n\t/*::[*/0x0404/*::]*/: { /* n:\"BrtBeginSXTupleSetHeader\", */ T:1 },\n\t/*::[*/0x0405/*::]*/: { /* n:\"BrtEndSXTupleSetHeader\", */ T:-1 },\n\t/*::[*/0x0406/*::]*/: { /* n:\"BrtSXTupleSetHeaderItem\" */ },\n\t/*::[*/0x0407/*::]*/: { /* n:\"BrtBeginSXTupleSetData\", */ T:1 },\n\t/*::[*/0x0408/*::]*/: { /* n:\"BrtEndSXTupleSetData\", */ T:-1 },\n\t/*::[*/0x0409/*::]*/: { /* n:\"BrtBeginSXTupleSetRow\", */ T:1 },\n\t/*::[*/0x040A/*::]*/: { /* n:\"BrtEndSXTupleSetRow\", */ T:-1 },\n\t/*::[*/0x040B/*::]*/: { /* n:\"BrtSXTupleSetRowItem\" */ },\n\t/*::[*/0x040C/*::]*/: { /* n:\"BrtNameExt\" */ },\n\t/*::[*/0x040D/*::]*/: { /* n:\"BrtPCDH14\" */ },\n\t/*::[*/0x040E/*::]*/: { /* n:\"BrtBeginPCDCalcMem14\", */ T:1 },\n\t/*::[*/0x040F/*::]*/: { /* n:\"BrtEndPCDCalcMem14\", */ T:-1 },\n\t/*::[*/0x0410/*::]*/: { /* n:\"BrtSXTH14\" */ },\n\t/*::[*/0x0411/*::]*/: { /* n:\"BrtBeginSparklineGroup\", */ T:1 },\n\t/*::[*/0x0412/*::]*/: { /* n:\"BrtEndSparklineGroup\", */ T:-1 },\n\t/*::[*/0x0413/*::]*/: { /* n:\"BrtSparkline\" */ },\n\t/*::[*/0x0414/*::]*/: { /* n:\"BrtSXDI14\" */ },\n\t/*::[*/0x0415/*::]*/: { /* n:\"BrtWsFmtInfoEx14\" */ },\n\t/*::[*/0x0416/*::]*/: { /* n:\"BrtBeginConditionalFormatting14\", */ T:1 },\n\t/*::[*/0x0417/*::]*/: { /* n:\"BrtEndConditionalFormatting14\", */ T:-1 },\n\t/*::[*/0x0418/*::]*/: { /* n:\"BrtBeginCFRule14\", */ T:1 },\n\t/*::[*/0x0419/*::]*/: { /* n:\"BrtEndCFRule14\", */ T:-1 },\n\t/*::[*/0x041A/*::]*/: { /* n:\"BrtCFVO14\" */ },\n\t/*::[*/0x041B/*::]*/: { /* n:\"BrtBeginDatabar14\", */ T:1 },\n\t/*::[*/0x041C/*::]*/: { /* n:\"BrtBeginIconSet14\", */ T:1 },\n\t/*::[*/0x041D/*::]*/: { /* n:\"BrtDVal14\", */ f: parse_BrtDVal14 },\n\t/*::[*/0x041E/*::]*/: { /* n:\"BrtBeginDVals14\", */ T:1 },\n\t/*::[*/0x041F/*::]*/: { /* n:\"BrtColor14\" */ },\n\t/*::[*/0x0420/*::]*/: { /* n:\"BrtBeginSparklines\", */ T:1 },\n\t/*::[*/0x0421/*::]*/: { /* n:\"BrtEndSparklines\", */ T:-1 },\n\t/*::[*/0x0422/*::]*/: { /* n:\"BrtBeginSparklineGroups\", */ T:1 },\n\t/*::[*/0x0423/*::]*/: { /* n:\"BrtEndSparklineGroups\", */ T:-1 },\n\t/*::[*/0x0425/*::]*/: { /* n:\"BrtSXVD14\" */ },\n\t/*::[*/0x0426/*::]*/: { /* n:\"BrtBeginSXView14\", */ T:1 },\n\t/*::[*/0x0427/*::]*/: { /* n:\"BrtEndSXView14\", */ T:-1 },\n\t/*::[*/0x0428/*::]*/: { /* n:\"BrtBeginSXView16\", */ T:1 },\n\t/*::[*/0x0429/*::]*/: { /* n:\"BrtEndSXView16\", */ T:-1 },\n\t/*::[*/0x042A/*::]*/: { /* n:\"BrtBeginPCD14\", */ T:1 },\n\t/*::[*/0x042B/*::]*/: { /* n:\"BrtEndPCD14\", */ T:-1 },\n\t/*::[*/0x042C/*::]*/: { /* n:\"BrtBeginExtConn14\", */ T:1 },\n\t/*::[*/0x042D/*::]*/: { /* n:\"BrtEndExtConn14\", */ T:-1 },\n\t/*::[*/0x042E/*::]*/: { /* n:\"BrtBeginSlicerCacheIDs\", */ T:1 },\n\t/*::[*/0x042F/*::]*/: { /* n:\"BrtEndSlicerCacheIDs\", */ T:-1 },\n\t/*::[*/0x0430/*::]*/: { /* n:\"BrtBeginSlicerCacheID\", */ T:1 },\n\t/*::[*/0x0431/*::]*/: { /* n:\"BrtEndSlicerCacheID\", */ T:-1 },\n\t/*::[*/0x0433/*::]*/: { /* n:\"BrtBeginSlicerCache\", */ T:1 },\n\t/*::[*/0x0434/*::]*/: { /* n:\"BrtEndSlicerCache\", */ T:-1 },\n\t/*::[*/0x0435/*::]*/: { /* n:\"BrtBeginSlicerCacheDef\", */ T:1 },\n\t/*::[*/0x0436/*::]*/: { /* n:\"BrtEndSlicerCacheDef\", */ T:-1 },\n\t/*::[*/0x0437/*::]*/: { /* n:\"BrtBeginSlicersEx\", */ T:1 },\n\t/*::[*/0x0438/*::]*/: { /* n:\"BrtEndSlicersEx\", */ T:-1 },\n\t/*::[*/0x0439/*::]*/: { /* n:\"BrtBeginSlicerEx\", */ T:1 },\n\t/*::[*/0x043A/*::]*/: { /* n:\"BrtEndSlicerEx\", */ T:-1 },\n\t/*::[*/0x043B/*::]*/: { /* n:\"BrtBeginSlicer\", */ T:1 },\n\t/*::[*/0x043C/*::]*/: { /* n:\"BrtEndSlicer\", */ T:-1 },\n\t/*::[*/0x043D/*::]*/: { /* n:\"BrtSlicerCachePivotTables\" */ },\n\t/*::[*/0x043E/*::]*/: { /* n:\"BrtBeginSlicerCacheOlapImpl\", */ T:1 },\n\t/*::[*/0x043F/*::]*/: { /* n:\"BrtEndSlicerCacheOlapImpl\", */ T:-1 },\n\t/*::[*/0x0440/*::]*/: { /* n:\"BrtBeginSlicerCacheLevelsData\", */ T:1 },\n\t/*::[*/0x0441/*::]*/: { /* n:\"BrtEndSlicerCacheLevelsData\", */ T:-1 },\n\t/*::[*/0x0442/*::]*/: { /* n:\"BrtBeginSlicerCacheLevelData\", */ T:1 },\n\t/*::[*/0x0443/*::]*/: { /* n:\"BrtEndSlicerCacheLevelData\", */ T:-1 },\n\t/*::[*/0x0444/*::]*/: { /* n:\"BrtBeginSlicerCacheSiRanges\", */ T:1 },\n\t/*::[*/0x0445/*::]*/: { /* n:\"BrtEndSlicerCacheSiRanges\", */ T:-1 },\n\t/*::[*/0x0446/*::]*/: { /* n:\"BrtBeginSlicerCacheSiRange\", */ T:1 },\n\t/*::[*/0x0447/*::]*/: { /* n:\"BrtEndSlicerCacheSiRange\", */ T:-1 },\n\t/*::[*/0x0448/*::]*/: { /* n:\"BrtSlicerCacheOlapItem\" */ },\n\t/*::[*/0x0449/*::]*/: { /* n:\"BrtBeginSlicerCacheSelections\", */ T:1 },\n\t/*::[*/0x044A/*::]*/: { /* n:\"BrtSlicerCacheSelection\" */ },\n\t/*::[*/0x044B/*::]*/: { /* n:\"BrtEndSlicerCacheSelections\", */ T:-1 },\n\t/*::[*/0x044C/*::]*/: { /* n:\"BrtBeginSlicerCacheNative\", */ T:1 },\n\t/*::[*/0x044D/*::]*/: { /* n:\"BrtEndSlicerCacheNative\", */ T:-1 },\n\t/*::[*/0x044E/*::]*/: { /* n:\"BrtSlicerCacheNativeItem\" */ },\n\t/*::[*/0x044F/*::]*/: { /* n:\"BrtRangeProtection14\" */ },\n\t/*::[*/0x0450/*::]*/: { /* n:\"BrtRangeProtectionIso14\" */ },\n\t/*::[*/0x0451/*::]*/: { /* n:\"BrtCellIgnoreEC14\" */ },\n\t/*::[*/0x0457/*::]*/: { /* n:\"BrtList14\" */ },\n\t/*::[*/0x0458/*::]*/: { /* n:\"BrtCFIcon\" */ },\n\t/*::[*/0x0459/*::]*/: { /* n:\"BrtBeginSlicerCachesPivotCacheIDs\", */ T:1 },\n\t/*::[*/0x045A/*::]*/: { /* n:\"BrtEndSlicerCachesPivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x045B/*::]*/: { /* n:\"BrtBeginSlicers\", */ T:1 },\n\t/*::[*/0x045C/*::]*/: { /* n:\"BrtEndSlicers\", */ T:-1 },\n\t/*::[*/0x045D/*::]*/: { /* n:\"BrtWbProp14\" */ },\n\t/*::[*/0x045E/*::]*/: { /* n:\"BrtBeginSXEdit\", */ T:1 },\n\t/*::[*/0x045F/*::]*/: { /* n:\"BrtEndSXEdit\", */ T:-1 },\n\t/*::[*/0x0460/*::]*/: { /* n:\"BrtBeginSXEdits\", */ T:1 },\n\t/*::[*/0x0461/*::]*/: { /* n:\"BrtEndSXEdits\", */ T:-1 },\n\t/*::[*/0x0462/*::]*/: { /* n:\"BrtBeginSXChange\", */ T:1 },\n\t/*::[*/0x0463/*::]*/: { /* n:\"BrtEndSXChange\", */ T:-1 },\n\t/*::[*/0x0464/*::]*/: { /* n:\"BrtBeginSXChanges\", */ T:1 },\n\t/*::[*/0x0465/*::]*/: { /* n:\"BrtEndSXChanges\", */ T:-1 },\n\t/*::[*/0x0466/*::]*/: { /* n:\"BrtSXTupleItems\" */ },\n\t/*::[*/0x0468/*::]*/: { /* n:\"BrtBeginSlicerStyle\", */ T:1 },\n\t/*::[*/0x0469/*::]*/: { /* n:\"BrtEndSlicerStyle\", */ T:-1 },\n\t/*::[*/0x046A/*::]*/: { /* n:\"BrtSlicerStyleElement\" */ },\n\t/*::[*/0x046B/*::]*/: { /* n:\"BrtBeginStyleSheetExt14\", */ T:1 },\n\t/*::[*/0x046C/*::]*/: { /* n:\"BrtEndStyleSheetExt14\", */ T:-1 },\n\t/*::[*/0x046D/*::]*/: { /* n:\"BrtBeginSlicerCachesPivotCacheID\", */ T:1 },\n\t/*::[*/0x046E/*::]*/: { /* n:\"BrtEndSlicerCachesPivotCacheID\", */ T:-1 },\n\t/*::[*/0x046F/*::]*/: { /* n:\"BrtBeginConditionalFormattings\", */ T:1 },\n\t/*::[*/0x0470/*::]*/: { /* n:\"BrtEndConditionalFormattings\", */ T:-1 },\n\t/*::[*/0x0471/*::]*/: { /* n:\"BrtBeginPCDCalcMemExt\", */ T:1 },\n\t/*::[*/0x0472/*::]*/: { /* n:\"BrtEndPCDCalcMemExt\", */ T:-1 },\n\t/*::[*/0x0473/*::]*/: { /* n:\"BrtBeginPCDCalcMemsExt\", */ T:1 },\n\t/*::[*/0x0474/*::]*/: { /* n:\"BrtEndPCDCalcMemsExt\", */ T:-1 },\n\t/*::[*/0x0475/*::]*/: { /* n:\"BrtPCDField14\" */ },\n\t/*::[*/0x0476/*::]*/: { /* n:\"BrtBeginSlicerStyles\", */ T:1 },\n\t/*::[*/0x0477/*::]*/: { /* n:\"BrtEndSlicerStyles\", */ T:-1 },\n\t/*::[*/0x0478/*::]*/: { /* n:\"BrtBeginSlicerStyleElements\", */ T:1 },\n\t/*::[*/0x0479/*::]*/: { /* n:\"BrtEndSlicerStyleElements\", */ T:-1 },\n\t/*::[*/0x047A/*::]*/: { /* n:\"BrtCFRuleExt\" */ },\n\t/*::[*/0x047B/*::]*/: { /* n:\"BrtBeginSXCondFmt14\", */ T:1 },\n\t/*::[*/0x047C/*::]*/: { /* n:\"BrtEndSXCondFmt14\", */ T:-1 },\n\t/*::[*/0x047D/*::]*/: { /* n:\"BrtBeginSXCondFmts14\", */ T:1 },\n\t/*::[*/0x047E/*::]*/: { /* n:\"BrtEndSXCondFmts14\", */ T:-1 },\n\t/*::[*/0x0480/*::]*/: { /* n:\"BrtBeginSortCond14\", */ T:1 },\n\t/*::[*/0x0481/*::]*/: { /* n:\"BrtEndSortCond14\", */ T:-1 },\n\t/*::[*/0x0482/*::]*/: { /* n:\"BrtEndDVals14\", */ T:-1 },\n\t/*::[*/0x0483/*::]*/: { /* n:\"BrtEndIconSet14\", */ T:-1 },\n\t/*::[*/0x0484/*::]*/: { /* n:\"BrtEndDatabar14\", */ T:-1 },\n\t/*::[*/0x0485/*::]*/: { /* n:\"BrtBeginColorScale14\", */ T:1 },\n\t/*::[*/0x0486/*::]*/: { /* n:\"BrtEndColorScale14\", */ T:-1 },\n\t/*::[*/0x0487/*::]*/: { /* n:\"BrtBeginSxrules14\", */ T:1 },\n\t/*::[*/0x0488/*::]*/: { /* n:\"BrtEndSxrules14\", */ T:-1 },\n\t/*::[*/0x0489/*::]*/: { /* n:\"BrtBeginPRule14\", */ T:1 },\n\t/*::[*/0x048A/*::]*/: { /* n:\"BrtEndPRule14\", */ T:-1 },\n\t/*::[*/0x048B/*::]*/: { /* n:\"BrtBeginPRFilters14\", */ T:1 },\n\t/*::[*/0x048C/*::]*/: { /* n:\"BrtEndPRFilters14\", */ T:-1 },\n\t/*::[*/0x048D/*::]*/: { /* n:\"BrtBeginPRFilter14\", */ T:1 },\n\t/*::[*/0x048E/*::]*/: { /* n:\"BrtEndPRFilter14\", */ T:-1 },\n\t/*::[*/0x048F/*::]*/: { /* n:\"BrtBeginPRFItem14\", */ T:1 },\n\t/*::[*/0x0490/*::]*/: { /* n:\"BrtEndPRFItem14\", */ T:-1 },\n\t/*::[*/0x0491/*::]*/: { /* n:\"BrtBeginCellIgnoreECs14\", */ T:1 },\n\t/*::[*/0x0492/*::]*/: { /* n:\"BrtEndCellIgnoreECs14\", */ T:-1 },\n\t/*::[*/0x0493/*::]*/: { /* n:\"BrtDxf14\" */ },\n\t/*::[*/0x0494/*::]*/: { /* n:\"BrtBeginDxF14s\", */ T:1 },\n\t/*::[*/0x0495/*::]*/: { /* n:\"BrtEndDxf14s\", */ T:-1 },\n\t/*::[*/0x0499/*::]*/: { /* n:\"BrtFilter14\" */ },\n\t/*::[*/0x049A/*::]*/: { /* n:\"BrtBeginCustomFilters14\", */ T:1 },\n\t/*::[*/0x049C/*::]*/: { /* n:\"BrtCustomFilter14\" */ },\n\t/*::[*/0x049D/*::]*/: { /* n:\"BrtIconFilter14\" */ },\n\t/*::[*/0x049E/*::]*/: { /* n:\"BrtPivotCacheConnectionName\" */ },\n\t/*::[*/0x0800/*::]*/: { /* n:\"BrtBeginDecoupledPivotCacheIDs\", */ T:1 },\n\t/*::[*/0x0801/*::]*/: { /* n:\"BrtEndDecoupledPivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x0802/*::]*/: { /* n:\"BrtDecoupledPivotCacheID\" */ },\n\t/*::[*/0x0803/*::]*/: { /* n:\"BrtBeginPivotTableRefs\", */ T:1 },\n\t/*::[*/0x0804/*::]*/: { /* n:\"BrtEndPivotTableRefs\", */ T:-1 },\n\t/*::[*/0x0805/*::]*/: { /* n:\"BrtPivotTableRef\" */ },\n\t/*::[*/0x0806/*::]*/: { /* n:\"BrtSlicerCacheBookPivotTables\" */ },\n\t/*::[*/0x0807/*::]*/: { /* n:\"BrtBeginSxvcells\", */ T:1 },\n\t/*::[*/0x0808/*::]*/: { /* n:\"BrtEndSxvcells\", */ T:-1 },\n\t/*::[*/0x0809/*::]*/: { /* n:\"BrtBeginSxRow\", */ T:1 },\n\t/*::[*/0x080A/*::]*/: { /* n:\"BrtEndSxRow\", */ T:-1 },\n\t/*::[*/0x080C/*::]*/: { /* n:\"BrtPcdCalcMem15\" */ },\n\t/*::[*/0x0813/*::]*/: { /* n:\"BrtQsi15\" */ },\n\t/*::[*/0x0814/*::]*/: { /* n:\"BrtBeginWebExtensions\", */ T:1 },\n\t/*::[*/0x0815/*::]*/: { /* n:\"BrtEndWebExtensions\", */ T:-1 },\n\t/*::[*/0x0816/*::]*/: { /* n:\"BrtWebExtension\" */ },\n\t/*::[*/0x0817/*::]*/: { /* n:\"BrtAbsPath15\" */ },\n\t/*::[*/0x0818/*::]*/: { /* n:\"BrtBeginPivotTableUISettings\", */ T:1 },\n\t/*::[*/0x0819/*::]*/: { /* n:\"BrtEndPivotTableUISettings\", */ T:-1 },\n\t/*::[*/0x081B/*::]*/: { /* n:\"BrtTableSlicerCacheIDs\" */ },\n\t/*::[*/0x081C/*::]*/: { /* n:\"BrtTableSlicerCacheID\" */ },\n\t/*::[*/0x081D/*::]*/: { /* n:\"BrtBeginTableSlicerCache\", */ T:1 },\n\t/*::[*/0x081E/*::]*/: { /* n:\"BrtEndTableSlicerCache\", */ T:-1 },\n\t/*::[*/0x081F/*::]*/: { /* n:\"BrtSxFilter15\" */ },\n\t/*::[*/0x0820/*::]*/: { /* n:\"BrtBeginTimelineCachePivotCacheIDs\", */ T:1 },\n\t/*::[*/0x0821/*::]*/: { /* n:\"BrtEndTimelineCachePivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x0822/*::]*/: { /* n:\"BrtTimelineCachePivotCacheID\" */ },\n\t/*::[*/0x0823/*::]*/: { /* n:\"BrtBeginTimelineCacheIDs\", */ T:1 },\n\t/*::[*/0x0824/*::]*/: { /* n:\"BrtEndTimelineCacheIDs\", */ T:-1 },\n\t/*::[*/0x0825/*::]*/: { /* n:\"BrtBeginTimelineCacheID\", */ T:1 },\n\t/*::[*/0x0826/*::]*/: { /* n:\"BrtEndTimelineCacheID\", */ T:-1 },\n\t/*::[*/0x0827/*::]*/: { /* n:\"BrtBeginTimelinesEx\", */ T:1 },\n\t/*::[*/0x0828/*::]*/: { /* n:\"BrtEndTimelinesEx\", */ T:-1 },\n\t/*::[*/0x0829/*::]*/: { /* n:\"BrtBeginTimelineEx\", */ T:1 },\n\t/*::[*/0x082A/*::]*/: { /* n:\"BrtEndTimelineEx\", */ T:-1 },\n\t/*::[*/0x082B/*::]*/: { /* n:\"BrtWorkBookPr15\" */ },\n\t/*::[*/0x082C/*::]*/: { /* n:\"BrtPCDH15\" */ },\n\t/*::[*/0x082D/*::]*/: { /* n:\"BrtBeginTimelineStyle\", */ T:1 },\n\t/*::[*/0x082E/*::]*/: { /* n:\"BrtEndTimelineStyle\", */ T:-1 },\n\t/*::[*/0x082F/*::]*/: { /* n:\"BrtTimelineStyleElement\" */ },\n\t/*::[*/0x0830/*::]*/: { /* n:\"BrtBeginTimelineStylesheetExt15\", */ T:1 },\n\t/*::[*/0x0831/*::]*/: { /* n:\"BrtEndTimelineStylesheetExt15\", */ T:-1 },\n\t/*::[*/0x0832/*::]*/: { /* n:\"BrtBeginTimelineStyles\", */ T:1 },\n\t/*::[*/0x0833/*::]*/: { /* n:\"BrtEndTimelineStyles\", */ T:-1 },\n\t/*::[*/0x0834/*::]*/: { /* n:\"BrtBeginTimelineStyleElements\", */ T:1 },\n\t/*::[*/0x0835/*::]*/: { /* n:\"BrtEndTimelineStyleElements\", */ T:-1 },\n\t/*::[*/0x0836/*::]*/: { /* n:\"BrtDxf15\" */ },\n\t/*::[*/0x0837/*::]*/: { /* n:\"BrtBeginDxfs15\", */ T:1 },\n\t/*::[*/0x0838/*::]*/: { /* n:\"BrtEndDxfs15\", */ T:-1 },\n\t/*::[*/0x0839/*::]*/: { /* n:\"BrtSlicerCacheHideItemsWithNoData\" */ },\n\t/*::[*/0x083A/*::]*/: { /* n:\"BrtBeginItemUniqueNames\", */ T:1 },\n\t/*::[*/0x083B/*::]*/: { /* n:\"BrtEndItemUniqueNames\", */ T:-1 },\n\t/*::[*/0x083C/*::]*/: { /* n:\"BrtItemUniqueName\" */ },\n\t/*::[*/0x083D/*::]*/: { /* n:\"BrtBeginExtConn15\", */ T:1 },\n\t/*::[*/0x083E/*::]*/: { /* n:\"BrtEndExtConn15\", */ T:-1 },\n\t/*::[*/0x083F/*::]*/: { /* n:\"BrtBeginOledbPr15\", */ T:1 },\n\t/*::[*/0x0840/*::]*/: { /* n:\"BrtEndOledbPr15\", */ T:-1 },\n\t/*::[*/0x0841/*::]*/: { /* n:\"BrtBeginDataFeedPr15\", */ T:1 },\n\t/*::[*/0x0842/*::]*/: { /* n:\"BrtEndDataFeedPr15\", */ T:-1 },\n\t/*::[*/0x0843/*::]*/: { /* n:\"BrtTextPr15\" */ },\n\t/*::[*/0x0844/*::]*/: { /* n:\"BrtRangePr15\" */ },\n\t/*::[*/0x0845/*::]*/: { /* n:\"BrtDbCommand15\" */ },\n\t/*::[*/0x0846/*::]*/: { /* n:\"BrtBeginDbTables15\", */ T:1 },\n\t/*::[*/0x0847/*::]*/: { /* n:\"BrtEndDbTables15\", */ T:-1 },\n\t/*::[*/0x0848/*::]*/: { /* n:\"BrtDbTable15\" */ },\n\t/*::[*/0x0849/*::]*/: { /* n:\"BrtBeginDataModel\", */ T:1 },\n\t/*::[*/0x084A/*::]*/: { /* n:\"BrtEndDataModel\", */ T:-1 },\n\t/*::[*/0x084B/*::]*/: { /* n:\"BrtBeginModelTables\", */ T:1 },\n\t/*::[*/0x084C/*::]*/: { /* n:\"BrtEndModelTables\", */ T:-1 },\n\t/*::[*/0x084D/*::]*/: { /* n:\"BrtModelTable\" */ },\n\t/*::[*/0x084E/*::]*/: { /* n:\"BrtBeginModelRelationships\", */ T:1 },\n\t/*::[*/0x084F/*::]*/: { /* n:\"BrtEndModelRelationships\", */ T:-1 },\n\t/*::[*/0x0850/*::]*/: { /* n:\"BrtModelRelationship\" */ },\n\t/*::[*/0x0851/*::]*/: { /* n:\"BrtBeginECTxtWiz15\", */ T:1 },\n\t/*::[*/0x0852/*::]*/: { /* n:\"BrtEndECTxtWiz15\", */ T:-1 },\n\t/*::[*/0x0853/*::]*/: { /* n:\"BrtBeginECTWFldInfoLst15\", */ T:1 },\n\t/*::[*/0x0854/*::]*/: { /* n:\"BrtEndECTWFldInfoLst15\", */ T:-1 },\n\t/*::[*/0x0855/*::]*/: { /* n:\"BrtBeginECTWFldInfo15\", */ T:1 },\n\t/*::[*/0x0856/*::]*/: { /* n:\"BrtFieldListActiveItem\" */ },\n\t/*::[*/0x0857/*::]*/: { /* n:\"BrtPivotCacheIdVersion\" */ },\n\t/*::[*/0x0858/*::]*/: { /* n:\"BrtSXDI15\" */ },\n\t/*::[*/0x0859/*::]*/: { /* n:\"BrtBeginModelTimeGroupings\", */ T:1 },\n\t/*::[*/0x085A/*::]*/: { /* n:\"BrtEndModelTimeGroupings\", */ T:-1 },\n\t/*::[*/0x085B/*::]*/: { /* n:\"BrtBeginModelTimeGrouping\", */ T:1 },\n\t/*::[*/0x085C/*::]*/: { /* n:\"BrtEndModelTimeGrouping\", */ T:-1 },\n\t/*::[*/0x085D/*::]*/: { /* n:\"BrtModelTimeGroupingCalcCol\" */ },\n\t/*::[*/0x0C00/*::]*/: { /* n:\"BrtUid\" */ },\n\t/*::[*/0x0C01/*::]*/: { /* n:\"BrtRevisionPtr\" */ },\n\t/*::[*/0x1000/*::]*/: { /* n:\"BrtBeginDynamicArrayPr\", */ T:1 },\n\t/*::[*/0x1001/*::]*/: { /* n:\"BrtEndDynamicArrayPr\", */ T:-1 },\n\t/*::[*/0x138A/*::]*/: { /* n:\"BrtBeginRichValueBlock\", */ T:1 },\n\t/*::[*/0x138B/*::]*/: { /* n:\"BrtEndRichValueBlock\", */ T:-1 },\n\t/*::[*/0x13D9/*::]*/: { /* n:\"BrtBeginRichFilters\", */ T:1 },\n\t/*::[*/0x13DA/*::]*/: { /* n:\"BrtEndRichFilters\", */ T:-1 },\n\t/*::[*/0x13DB/*::]*/: { /* n:\"BrtRichFilter\" */ },\n\t/*::[*/0x13DC/*::]*/: { /* n:\"BrtBeginRichFilterColumn\", */ T:1 },\n\t/*::[*/0x13DD/*::]*/: { /* n:\"BrtEndRichFilterColumn\", */ T:-1 },\n\t/*::[*/0x13DE/*::]*/: { /* n:\"BrtBeginCustomRichFilters\", */ T:1 },\n\t/*::[*/0x13DF/*::]*/: { /* n:\"BrtEndCustomRichFilters\", */ T:-1 },\n\t/*::[*/0x13E0/*::]*/: { /* n:\"BrtCustomRichFilter\" */ },\n\t/*::[*/0x13E1/*::]*/: { /* n:\"BrtTop10RichFilter\" */ },\n\t/*::[*/0x13E2/*::]*/: { /* n:\"BrtDynamicRichFilter\" */ },\n\t/*::[*/0x13E4/*::]*/: { /* n:\"BrtBeginRichSortCondition\", */ T:1 },\n\t/*::[*/0x13E5/*::]*/: { /* n:\"BrtEndRichSortCondition\", */ T:-1 },\n\t/*::[*/0x13E6/*::]*/: { /* n:\"BrtRichFilterDateGroupItem\" */ },\n\t/*::[*/0x13E7/*::]*/: { /* n:\"BrtBeginCalcFeatures\", */ T:1 },\n\t/*::[*/0x13E8/*::]*/: { /* n:\"BrtEndCalcFeatures\", */ T:-1 },\n\t/*::[*/0x13E9/*::]*/: { /* n:\"BrtCalcFeature\" */ },\n\t/*::[*/0x13EB/*::]*/: { /* n:\"BrtExternalLinksPr\" */ },\n\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n};\n\n/* [MS-XLS] 2.3 Record Enumeration (and other sources) */\nvar XLSRecordEnum = {\n\t/* [MS-XLS] 2.3 Record Enumeration 2021-08-17 */\n\t/*::[*/0x0006/*::]*/: { /* n:\"Formula\", */ f:parse_Formula },\n\t/*::[*/0x000a/*::]*/: { /* n:\"EOF\", */ f:parsenoop2 },\n\t/*::[*/0x000c/*::]*/: { /* n:\"CalcCount\", */ f:parseuint16 }, //\n\t/*::[*/0x000d/*::]*/: { /* n:\"CalcMode\", */ f:parseuint16 }, //\n\t/*::[*/0x000e/*::]*/: { /* n:\"CalcPrecision\", */ f:parsebool }, //\n\t/*::[*/0x000f/*::]*/: { /* n:\"CalcRefMode\", */ f:parsebool }, //\n\t/*::[*/0x0010/*::]*/: { /* n:\"CalcDelta\", */ f:parse_Xnum }, //\n\t/*::[*/0x0011/*::]*/: { /* n:\"CalcIter\", */ f:parsebool }, //\n\t/*::[*/0x0012/*::]*/: { /* n:\"Protect\", */ f:parsebool },\n\t/*::[*/0x0013/*::]*/: { /* n:\"Password\", */ f:parseuint16 },\n\t/*::[*/0x0014/*::]*/: { /* n:\"Header\", */ f:parse_XLHeaderFooter },\n\t/*::[*/0x0015/*::]*/: { /* n:\"Footer\", */ f:parse_XLHeaderFooter },\n\t/*::[*/0x0017/*::]*/: { /* n:\"ExternSheet\", */ f:parse_ExternSheet },\n\t/*::[*/0x0018/*::]*/: { /* n:\"Lbl\", */ f:parse_Lbl },\n\t/*::[*/0x0019/*::]*/: { /* n:\"WinProtect\", */ f:parsebool },\n\t/*::[*/0x001a/*::]*/: { /* n:\"VerticalPageBreaks\", */ },\n\t/*::[*/0x001b/*::]*/: { /* n:\"HorizontalPageBreaks\", */ },\n\t/*::[*/0x001c/*::]*/: { /* n:\"Note\", */ f:parse_Note },\n\t/*::[*/0x001d/*::]*/: { /* n:\"Selection\", */ },\n\t/*::[*/0x0022/*::]*/: { /* n:\"Date1904\", */ f:parsebool },\n\t/*::[*/0x0023/*::]*/: { /* n:\"ExternName\", */ f:parse_ExternName },\n\t/*::[*/0x0026/*::]*/: { /* n:\"LeftMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x0027/*::]*/: { /* n:\"RightMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x0028/*::]*/: { /* n:\"TopMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x0029/*::]*/: { /* n:\"BottomMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x002a/*::]*/: { /* n:\"PrintRowCol\", */ f:parsebool },\n\t/*::[*/0x002b/*::]*/: { /* n:\"PrintGrid\", */ f:parsebool },\n\t/*::[*/0x002f/*::]*/: { /* n:\"FilePass\", */ f:parse_FilePass },\n\t/*::[*/0x0031/*::]*/: { /* n:\"Font\", */ f:parse_Font },\n\t/*::[*/0x0033/*::]*/: { /* n:\"PrintSize\", */ f:parseuint16 },\n\t/*::[*/0x003c/*::]*/: { /* n:\"Continue\", */ },\n\t/*::[*/0x003d/*::]*/: { /* n:\"Window1\", */ f:parse_Window1 },\n\t/*::[*/0x0040/*::]*/: { /* n:\"Backup\", */ f:parsebool },\n\t/*::[*/0x0041/*::]*/: { /* n:\"Pane\", */ f:parse_Pane },\n\t/*::[*/0x0042/*::]*/: { /* n:\"CodePage\", */ f:parseuint16 },\n\t/*::[*/0x004d/*::]*/: { /* n:\"Pls\", */ },\n\t/*::[*/0x0050/*::]*/: { /* n:\"DCon\", */ },\n\t/*::[*/0x0051/*::]*/: { /* n:\"DConRef\", */ },\n\t/*::[*/0x0052/*::]*/: { /* n:\"DConName\", */ },\n\t/*::[*/0x0055/*::]*/: { /* n:\"DefColWidth\", */ f:parseuint16 },\n\t/*::[*/0x0059/*::]*/: { /* n:\"XCT\", */ },\n\t/*::[*/0x005a/*::]*/: { /* n:\"CRN\", */ },\n\t/*::[*/0x005b/*::]*/: { /* n:\"FileSharing\", */ },\n\t/*::[*/0x005c/*::]*/: { /* n:\"WriteAccess\", */ f:parse_WriteAccess },\n\t/*::[*/0x005d/*::]*/: { /* n:\"Obj\", */ f:parse_Obj },\n\t/*::[*/0x005e/*::]*/: { /* n:\"Uncalced\", */ },\n\t/*::[*/0x005f/*::]*/: { /* n:\"CalcSaveRecalc\", */ f:parsebool }, //\n\t/*::[*/0x0060/*::]*/: { /* n:\"Template\", */ },\n\t/*::[*/0x0061/*::]*/: { /* n:\"Intl\", */ },\n\t/*::[*/0x0063/*::]*/: { /* n:\"ObjProtect\", */ f:parsebool },\n\t/*::[*/0x007d/*::]*/: { /* n:\"ColInfo\", */ f:parse_ColInfo },\n\t/*::[*/0x0080/*::]*/: { /* n:\"Guts\", */ f:parse_Guts },\n\t/*::[*/0x0081/*::]*/: { /* n:\"WsBool\", */ f:parse_WsBool },\n\t/*::[*/0x0082/*::]*/: { /* n:\"GridSet\", */ f:parseuint16 },\n\t/*::[*/0x0083/*::]*/: { /* n:\"HCenter\", */ f:parsebool },\n\t/*::[*/0x0084/*::]*/: { /* n:\"VCenter\", */ f:parsebool },\n\t/*::[*/0x0085/*::]*/: { /* n:\"BoundSheet8\", */ f:parse_BoundSheet8 },\n\t/*::[*/0x0086/*::]*/: { /* n:\"WriteProtect\", */ },\n\t/*::[*/0x008c/*::]*/: { /* n:\"Country\", */ f:parse_Country },\n\t/*::[*/0x008d/*::]*/: { /* n:\"HideObj\", */ f:parseuint16 },\n\t/*::[*/0x0090/*::]*/: { /* n:\"Sort\", */ },\n\t/*::[*/0x0092/*::]*/: { /* n:\"Palette\", */ f:parse_Palette },\n\t/*::[*/0x0097/*::]*/: { /* n:\"Sync\", */ },\n\t/*::[*/0x0098/*::]*/: { /* n:\"LPr\", */ },\n\t/*::[*/0x0099/*::]*/: { /* n:\"DxGCol\", */ },\n\t/*::[*/0x009a/*::]*/: { /* n:\"FnGroupName\", */ },\n\t/*::[*/0x009b/*::]*/: { /* n:\"FilterMode\", */ },\n\t/*::[*/0x009c/*::]*/: { /* n:\"BuiltInFnGroupCount\", */ f:parseuint16 },\n\t/*::[*/0x009d/*::]*/: { /* n:\"AutoFilterInfo\", */ },\n\t/*::[*/0x009e/*::]*/: { /* n:\"AutoFilter\", */ },\n\t/*::[*/0x00a0/*::]*/: { /* n:\"Scl\", */ f:parse_Scl },\n\t/*::[*/0x00a1/*::]*/: { /* n:\"Setup\", */ f:parse_Setup },\n\t/*::[*/0x00ae/*::]*/: { /* n:\"ScenMan\", */ },\n\t/*::[*/0x00af/*::]*/: { /* n:\"SCENARIO\", */ },\n\t/*::[*/0x00b0/*::]*/: { /* n:\"SxView\", */ },\n\t/*::[*/0x00b1/*::]*/: { /* n:\"Sxvd\", */ },\n\t/*::[*/0x00b2/*::]*/: { /* n:\"SXVI\", */ },\n\t/*::[*/0x00b4/*::]*/: { /* n:\"SxIvd\", */ },\n\t/*::[*/0x00b5/*::]*/: { /* n:\"SXLI\", */ },\n\t/*::[*/0x00b6/*::]*/: { /* n:\"SXPI\", */ },\n\t/*::[*/0x00b8/*::]*/: { /* n:\"DocRoute\", */ },\n\t/*::[*/0x00b9/*::]*/: { /* n:\"RecipName\", */ },\n\t/*::[*/0x00bd/*::]*/: { /* n:\"MulRk\", */ f:parse_MulRk },\n\t/*::[*/0x00be/*::]*/: { /* n:\"MulBlank\", */ f:parse_MulBlank },\n\t/*::[*/0x00c1/*::]*/: { /* n:\"Mms\", */ f:parsenoop2 },\n\t/*::[*/0x00c5/*::]*/: { /* n:\"SXDI\", */ },\n\t/*::[*/0x00c6/*::]*/: { /* n:\"SXDB\", */ },\n\t/*::[*/0x00c7/*::]*/: { /* n:\"SXFDB\", */ },\n\t/*::[*/0x00c8/*::]*/: { /* n:\"SXDBB\", */ },\n\t/*::[*/0x00c9/*::]*/: { /* n:\"SXNum\", */ },\n\t/*::[*/0x00ca/*::]*/: { /* n:\"SxBool\", */ f:parsebool },\n\t/*::[*/0x00cb/*::]*/: { /* n:\"SxErr\", */ },\n\t/*::[*/0x00cc/*::]*/: { /* n:\"SXInt\", */ },\n\t/*::[*/0x00cd/*::]*/: { /* n:\"SXString\", */ },\n\t/*::[*/0x00ce/*::]*/: { /* n:\"SXDtr\", */ },\n\t/*::[*/0x00cf/*::]*/: { /* n:\"SxNil\", */ },\n\t/*::[*/0x00d0/*::]*/: { /* n:\"SXTbl\", */ },\n\t/*::[*/0x00d1/*::]*/: { /* n:\"SXTBRGIITM\", */ },\n\t/*::[*/0x00d2/*::]*/: { /* n:\"SxTbpg\", */ },\n\t/*::[*/0x00d3/*::]*/: { /* n:\"ObProj\", */ },\n\t/*::[*/0x00d5/*::]*/: { /* n:\"SXStreamID\", */ },\n\t/*::[*/0x00d7/*::]*/: { /* n:\"DBCell\", */ },\n\t/*::[*/0x00d8/*::]*/: { /* n:\"SXRng\", */ },\n\t/*::[*/0x00d9/*::]*/: { /* n:\"SxIsxoper\", */ },\n\t/*::[*/0x00da/*::]*/: { /* n:\"BookBool\", */ f:parseuint16 },\n\t/*::[*/0x00dc/*::]*/: { /* n:\"DbOrParamQry\", */ },\n\t/*::[*/0x00dd/*::]*/: { /* n:\"ScenarioProtect\", */ f:parsebool },\n\t/*::[*/0x00de/*::]*/: { /* n:\"OleObjectSize\", */ },\n\t/*::[*/0x00e0/*::]*/: { /* n:\"XF\", */ f:parse_XF },\n\t/*::[*/0x00e1/*::]*/: { /* n:\"InterfaceHdr\", */ f:parse_InterfaceHdr },\n\t/*::[*/0x00e2/*::]*/: { /* n:\"InterfaceEnd\", */ f:parsenoop2 },\n\t/*::[*/0x00e3/*::]*/: { /* n:\"SXVS\", */ },\n\t/*::[*/0x00e5/*::]*/: { /* n:\"MergeCells\", */ f:parse_MergeCells },\n\t/*::[*/0x00e9/*::]*/: { /* n:\"BkHim\", */ },\n\t/*::[*/0x00eb/*::]*/: { /* n:\"MsoDrawingGroup\", */ },\n\t/*::[*/0x00ec/*::]*/: { /* n:\"MsoDrawing\", */ },\n\t/*::[*/0x00ed/*::]*/: { /* n:\"MsoDrawingSelection\", */ },\n\t/*::[*/0x00ef/*::]*/: { /* n:\"PhoneticInfo\", */ },\n\t/*::[*/0x00f0/*::]*/: { /* n:\"SxRule\", */ },\n\t/*::[*/0x00f1/*::]*/: { /* n:\"SXEx\", */ },\n\t/*::[*/0x00f2/*::]*/: { /* n:\"SxFilt\", */ },\n\t/*::[*/0x00f4/*::]*/: { /* n:\"SxDXF\", */ },\n\t/*::[*/0x00f5/*::]*/: { /* n:\"SxItm\", */ },\n\t/*::[*/0x00f6/*::]*/: { /* n:\"SxName\", */ },\n\t/*::[*/0x00f7/*::]*/: { /* n:\"SxSelect\", */ },\n\t/*::[*/0x00f8/*::]*/: { /* n:\"SXPair\", */ },\n\t/*::[*/0x00f9/*::]*/: { /* n:\"SxFmla\", */ },\n\t/*::[*/0x00fb/*::]*/: { /* n:\"SxFormat\", */ },\n\t/*::[*/0x00fc/*::]*/: { /* n:\"SST\", */ f:parse_SST },\n\t/*::[*/0x00fd/*::]*/: { /* n:\"LabelSst\", */ f:parse_LabelSst },\n\t/*::[*/0x00ff/*::]*/: { /* n:\"ExtSST\", */ f:parse_ExtSST },\n\t/*::[*/0x0100/*::]*/: { /* n:\"SXVDEx\", */ },\n\t/*::[*/0x0103/*::]*/: { /* n:\"SXFormula\", */ },\n\t/*::[*/0x0122/*::]*/: { /* n:\"SXDBEx\", */ },\n\t/*::[*/0x0137/*::]*/: { /* n:\"RRDInsDel\", */ },\n\t/*::[*/0x0138/*::]*/: { /* n:\"RRDHead\", */ },\n\t/*::[*/0x013b/*::]*/: { /* n:\"RRDChgCell\", */ },\n\t/*::[*/0x013d/*::]*/: { /* n:\"RRTabId\", */ f:parseuint16a },\n\t/*::[*/0x013e/*::]*/: { /* n:\"RRDRenSheet\", */ },\n\t/*::[*/0x013f/*::]*/: { /* n:\"RRSort\", */ },\n\t/*::[*/0x0140/*::]*/: { /* n:\"RRDMove\", */ },\n\t/*::[*/0x014a/*::]*/: { /* n:\"RRFormat\", */ },\n\t/*::[*/0x014b/*::]*/: { /* n:\"RRAutoFmt\", */ },\n\t/*::[*/0x014d/*::]*/: { /* n:\"RRInsertSh\", */ },\n\t/*::[*/0x014e/*::]*/: { /* n:\"RRDMoveBegin\", */ },\n\t/*::[*/0x014f/*::]*/: { /* n:\"RRDMoveEnd\", */ },\n\t/*::[*/0x0150/*::]*/: { /* n:\"RRDInsDelBegin\", */ },\n\t/*::[*/0x0151/*::]*/: { /* n:\"RRDInsDelEnd\", */ },\n\t/*::[*/0x0152/*::]*/: { /* n:\"RRDConflict\", */ },\n\t/*::[*/0x0153/*::]*/: { /* n:\"RRDDefName\", */ },\n\t/*::[*/0x0154/*::]*/: { /* n:\"RRDRstEtxp\", */ },\n\t/*::[*/0x015f/*::]*/: { /* n:\"LRng\", */ },\n\t/*::[*/0x0160/*::]*/: { /* n:\"UsesELFs\", */ f:parsebool },\n\t/*::[*/0x0161/*::]*/: { /* n:\"DSF\", */ f:parsenoop2 },\n\t/*::[*/0x0191/*::]*/: { /* n:\"CUsr\", */ },\n\t/*::[*/0x0192/*::]*/: { /* n:\"CbUsr\", */ },\n\t/*::[*/0x0193/*::]*/: { /* n:\"UsrInfo\", */ },\n\t/*::[*/0x0194/*::]*/: { /* n:\"UsrExcl\", */ },\n\t/*::[*/0x0195/*::]*/: { /* n:\"FileLock\", */ },\n\t/*::[*/0x0196/*::]*/: { /* n:\"RRDInfo\", */ },\n\t/*::[*/0x0197/*::]*/: { /* n:\"BCUsrs\", */ },\n\t/*::[*/0x0198/*::]*/: { /* n:\"UsrChk\", */ },\n\t/*::[*/0x01a9/*::]*/: { /* n:\"UserBView\", */ },\n\t/*::[*/0x01aa/*::]*/: { /* n:\"UserSViewBegin\", */ },\n\t/*::[*/0x01ab/*::]*/: { /* n:\"UserSViewEnd\", */ },\n\t/*::[*/0x01ac/*::]*/: { /* n:\"RRDUserView\", */ },\n\t/*::[*/0x01ad/*::]*/: { /* n:\"Qsi\", */ },\n\t/*::[*/0x01ae/*::]*/: { /* n:\"SupBook\", */ f:parse_SupBook },\n\t/*::[*/0x01af/*::]*/: { /* n:\"Prot4Rev\", */ f:parsebool },\n\t/*::[*/0x01b0/*::]*/: { /* n:\"CondFmt\", */ },\n\t/*::[*/0x01b1/*::]*/: { /* n:\"CF\", */ },\n\t/*::[*/0x01b2/*::]*/: { /* n:\"DVal\", */ },\n\t/*::[*/0x01b5/*::]*/: { /* n:\"DConBin\", */ },\n\t/*::[*/0x01b6/*::]*/: { /* n:\"TxO\", */ f:parse_TxO },\n\t/*::[*/0x01b7/*::]*/: { /* n:\"RefreshAll\", */ f:parsebool }, //\n\t/*::[*/0x01b8/*::]*/: { /* n:\"HLink\", */ f:parse_HLink },\n\t/*::[*/0x01b9/*::]*/: { /* n:\"Lel\", */ },\n\t/*::[*/0x01ba/*::]*/: { /* n:\"CodeName\", */ f:parse_XLUnicodeString },\n\t/*::[*/0x01bb/*::]*/: { /* n:\"SXFDBType\", */ },\n\t/*::[*/0x01bc/*::]*/: { /* n:\"Prot4RevPass\", */ f:parseuint16 },\n\t/*::[*/0x01bd/*::]*/: { /* n:\"ObNoMacros\", */ },\n\t/*::[*/0x01be/*::]*/: { /* n:\"Dv\", */ },\n\t/*::[*/0x01c0/*::]*/: { /* n:\"Excel9File\", */ f:parsenoop2 },\n\t/*::[*/0x01c1/*::]*/: { /* n:\"RecalcId\", */ f:parse_RecalcId, r:2},\n\t/*::[*/0x01c2/*::]*/: { /* n:\"EntExU2\", */ f:parsenoop2 },\n\t/*::[*/0x0200/*::]*/: { /* n:\"Dimensions\", */ f:parse_Dimensions },\n\t/*::[*/0x0201/*::]*/: { /* n:\"Blank\", */ f:parse_Blank },\n\t/*::[*/0x0203/*::]*/: { /* n:\"Number\", */ f:parse_Number },\n\t/*::[*/0x0204/*::]*/: { /* n:\"Label\", */ f:parse_Label },\n\t/*::[*/0x0205/*::]*/: { /* n:\"BoolErr\", */ f:parse_BoolErr },\n\t/*::[*/0x0207/*::]*/: { /* n:\"String\", */ f:parse_String },\n\t/*::[*/0x0208/*::]*/: { /* n:\"Row\", */ f:parse_Row },\n\t/*::[*/0x020b/*::]*/: { /* n:\"Index\", */ },\n\t/*::[*/0x0221/*::]*/: { /* n:\"Array\", */ f:parse_Array },\n\t/*::[*/0x0225/*::]*/: { /* n:\"DefaultRowHeight\", */ f:parse_DefaultRowHeight },\n\t/*::[*/0x0236/*::]*/: { /* n:\"Table\", */ },\n\t/*::[*/0x023e/*::]*/: { /* n:\"Window2\", */ f:parse_Window2 },\n\t/*::[*/0x027e/*::]*/: { /* n:\"RK\", */ f:parse_RK },\n\t/*::[*/0x0293/*::]*/: { /* n:\"Style\", */ },\n\t/*::[*/0x0418/*::]*/: { /* n:\"BigName\", */ },\n\t/*::[*/0x041e/*::]*/: { /* n:\"Format\", */ f:parse_Format },\n\t/*::[*/0x043c/*::]*/: { /* n:\"ContinueBigName\", */ },\n\t/*::[*/0x04bc/*::]*/: { /* n:\"ShrFmla\", */ f:parse_ShrFmla },\n\t/*::[*/0x0800/*::]*/: { /* n:\"HLinkTooltip\", */ f:parse_HLinkTooltip },\n\t/*::[*/0x0801/*::]*/: { /* n:\"WebPub\", */ },\n\t/*::[*/0x0802/*::]*/: { /* n:\"QsiSXTag\", */ },\n\t/*::[*/0x0803/*::]*/: { /* n:\"DBQueryExt\", */ },\n\t/*::[*/0x0804/*::]*/: { /* n:\"ExtString\", */ },\n\t/*::[*/0x0805/*::]*/: { /* n:\"TxtQry\", */ },\n\t/*::[*/0x0806/*::]*/: { /* n:\"Qsir\", */ },\n\t/*::[*/0x0807/*::]*/: { /* n:\"Qsif\", */ },\n\t/*::[*/0x0808/*::]*/: { /* n:\"RRDTQSIF\", */ },\n\t/*::[*/0x0809/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x080a/*::]*/: { /* n:\"OleDbConn\", */ },\n\t/*::[*/0x080b/*::]*/: { /* n:\"WOpt\", */ },\n\t/*::[*/0x080c/*::]*/: { /* n:\"SXViewEx\", */ },\n\t/*::[*/0x080d/*::]*/: { /* n:\"SXTH\", */ },\n\t/*::[*/0x080e/*::]*/: { /* n:\"SXPIEx\", */ },\n\t/*::[*/0x080f/*::]*/: { /* n:\"SXVDTEx\", */ },\n\t/*::[*/0x0810/*::]*/: { /* n:\"SXViewEx9\", */ },\n\t/*::[*/0x0812/*::]*/: { /* n:\"ContinueFrt\", */ },\n\t/*::[*/0x0813/*::]*/: { /* n:\"RealTimeData\", */ },\n\t/*::[*/0x0850/*::]*/: { /* n:\"ChartFrtInfo\", */ },\n\t/*::[*/0x0851/*::]*/: { /* n:\"FrtWrapper\", */ },\n\t/*::[*/0x0852/*::]*/: { /* n:\"StartBlock\", */ },\n\t/*::[*/0x0853/*::]*/: { /* n:\"EndBlock\", */ },\n\t/*::[*/0x0854/*::]*/: { /* n:\"StartObject\", */ },\n\t/*::[*/0x0855/*::]*/: { /* n:\"EndObject\", */ },\n\t/*::[*/0x0856/*::]*/: { /* n:\"CatLab\", */ },\n\t/*::[*/0x0857/*::]*/: { /* n:\"YMult\", */ },\n\t/*::[*/0x0858/*::]*/: { /* n:\"SXViewLink\", */ },\n\t/*::[*/0x0859/*::]*/: { /* n:\"PivotChartBits\", */ },\n\t/*::[*/0x085a/*::]*/: { /* n:\"FrtFontList\", */ },\n\t/*::[*/0x0862/*::]*/: { /* n:\"SheetExt\", */ },\n\t/*::[*/0x0863/*::]*/: { /* n:\"BookExt\", */ r:12},\n\t/*::[*/0x0864/*::]*/: { /* n:\"SXAddl\", */ },\n\t/*::[*/0x0865/*::]*/: { /* n:\"CrErr\", */ },\n\t/*::[*/0x0866/*::]*/: { /* n:\"HFPicture\", */ },\n\t/*::[*/0x0867/*::]*/: { /* n:\"FeatHdr\", */ f:parsenoop2 },\n\t/*::[*/0x0868/*::]*/: { /* n:\"Feat\", */ },\n\t/*::[*/0x086a/*::]*/: { /* n:\"DataLabExt\", */ },\n\t/*::[*/0x086b/*::]*/: { /* n:\"DataLabExtContents\", */ },\n\t/*::[*/0x086c/*::]*/: { /* n:\"CellWatch\", */ },\n\t/*::[*/0x0871/*::]*/: { /* n:\"FeatHdr11\", */ },\n\t/*::[*/0x0872/*::]*/: { /* n:\"Feature11\", */ },\n\t/*::[*/0x0874/*::]*/: { /* n:\"DropDownObjIds\", */ },\n\t/*::[*/0x0875/*::]*/: { /* n:\"ContinueFrt11\", */ },\n\t/*::[*/0x0876/*::]*/: { /* n:\"DConn\", */ },\n\t/*::[*/0x0877/*::]*/: { /* n:\"List12\", */ },\n\t/*::[*/0x0878/*::]*/: { /* n:\"Feature12\", */ },\n\t/*::[*/0x0879/*::]*/: { /* n:\"CondFmt12\", */ },\n\t/*::[*/0x087a/*::]*/: { /* n:\"CF12\", */ },\n\t/*::[*/0x087b/*::]*/: { /* n:\"CFEx\", */ },\n\t/*::[*/0x087c/*::]*/: { /* n:\"XFCRC\", */ f:parse_XFCRC, r:12 },\n\t/*::[*/0x087d/*::]*/: { /* n:\"XFExt\", */ f:parse_XFExt, r:12 },\n\t/*::[*/0x087e/*::]*/: { /* n:\"AutoFilter12\", */ },\n\t/*::[*/0x087f/*::]*/: { /* n:\"ContinueFrt12\", */ },\n\t/*::[*/0x0884/*::]*/: { /* n:\"MDTInfo\", */ },\n\t/*::[*/0x0885/*::]*/: { /* n:\"MDXStr\", */ },\n\t/*::[*/0x0886/*::]*/: { /* n:\"MDXTuple\", */ },\n\t/*::[*/0x0887/*::]*/: { /* n:\"MDXSet\", */ },\n\t/*::[*/0x0888/*::]*/: { /* n:\"MDXProp\", */ },\n\t/*::[*/0x0889/*::]*/: { /* n:\"MDXKPI\", */ },\n\t/*::[*/0x088a/*::]*/: { /* n:\"MDB\", */ },\n\t/*::[*/0x088b/*::]*/: { /* n:\"PLV\", */ },\n\t/*::[*/0x088c/*::]*/: { /* n:\"Compat12\", */ f:parsebool, r:12 },\n\t/*::[*/0x088d/*::]*/: { /* n:\"DXF\", */ },\n\t/*::[*/0x088e/*::]*/: { /* n:\"TableStyles\", */ r:12 },\n\t/*::[*/0x088f/*::]*/: { /* n:\"TableStyle\", */ },\n\t/*::[*/0x0890/*::]*/: { /* n:\"TableStyleElement\", */ },\n\t/*::[*/0x0892/*::]*/: { /* n:\"StyleExt\", */ },\n\t/*::[*/0x0893/*::]*/: { /* n:\"NamePublish\", */ },\n\t/*::[*/0x0894/*::]*/: { /* n:\"NameCmt\", */ f:parse_NameCmt, r:12 },\n\t/*::[*/0x0895/*::]*/: { /* n:\"SortData\", */ },\n\t/*::[*/0x0896/*::]*/: { /* n:\"Theme\", */ f:parse_Theme, r:12 },\n\t/*::[*/0x0897/*::]*/: { /* n:\"GUIDTypeLib\", */ },\n\t/*::[*/0x0898/*::]*/: { /* n:\"FnGrp12\", */ },\n\t/*::[*/0x0899/*::]*/: { /* n:\"NameFnGrp12\", */ },\n\t/*::[*/0x089a/*::]*/: { /* n:\"MTRSettings\", */ f:parse_MTRSettings, r:12 },\n\t/*::[*/0x089b/*::]*/: { /* n:\"CompressPictures\", */ f:parsenoop2 },\n\t/*::[*/0x089c/*::]*/: { /* n:\"HeaderFooter\", */ },\n\t/*::[*/0x089d/*::]*/: { /* n:\"CrtLayout12\", */ },\n\t/*::[*/0x089e/*::]*/: { /* n:\"CrtMlFrt\", */ },\n\t/*::[*/0x089f/*::]*/: { /* n:\"CrtMlFrtContinue\", */ },\n\t/*::[*/0x08a3/*::]*/: { /* n:\"ForceFullCalculation\", */ f:parse_ForceFullCalculation },\n\t/*::[*/0x08a4/*::]*/: { /* n:\"ShapePropsStream\", */ },\n\t/*::[*/0x08a5/*::]*/: { /* n:\"TextPropsStream\", */ },\n\t/*::[*/0x08a6/*::]*/: { /* n:\"RichTextStream\", */ },\n\t/*::[*/0x08a7/*::]*/: { /* n:\"CrtLayout12A\", */ },\n\t/*::[*/0x1001/*::]*/: { /* n:\"Units\", */ },\n\t/*::[*/0x1002/*::]*/: { /* n:\"Chart\", */ },\n\t/*::[*/0x1003/*::]*/: { /* n:\"Series\", */ },\n\t/*::[*/0x1006/*::]*/: { /* n:\"DataFormat\", */ },\n\t/*::[*/0x1007/*::]*/: { /* n:\"LineFormat\", */ },\n\t/*::[*/0x1009/*::]*/: { /* n:\"MarkerFormat\", */ },\n\t/*::[*/0x100a/*::]*/: { /* n:\"AreaFormat\", */ },\n\t/*::[*/0x100b/*::]*/: { /* n:\"PieFormat\", */ },\n\t/*::[*/0x100c/*::]*/: { /* n:\"AttachedLabel\", */ },\n\t/*::[*/0x100d/*::]*/: { /* n:\"SeriesText\", */ },\n\t/*::[*/0x1014/*::]*/: { /* n:\"ChartFormat\", */ },\n\t/*::[*/0x1015/*::]*/: { /* n:\"Legend\", */ },\n\t/*::[*/0x1016/*::]*/: { /* n:\"SeriesList\", */ },\n\t/*::[*/0x1017/*::]*/: { /* n:\"Bar\", */ },\n\t/*::[*/0x1018/*::]*/: { /* n:\"Line\", */ },\n\t/*::[*/0x1019/*::]*/: { /* n:\"Pie\", */ },\n\t/*::[*/0x101a/*::]*/: { /* n:\"Area\", */ },\n\t/*::[*/0x101b/*::]*/: { /* n:\"Scatter\", */ },\n\t/*::[*/0x101c/*::]*/: { /* n:\"CrtLine\", */ },\n\t/*::[*/0x101d/*::]*/: { /* n:\"Axis\", */ },\n\t/*::[*/0x101e/*::]*/: { /* n:\"Tick\", */ },\n\t/*::[*/0x101f/*::]*/: { /* n:\"ValueRange\", */ },\n\t/*::[*/0x1020/*::]*/: { /* n:\"CatSerRange\", */ },\n\t/*::[*/0x1021/*::]*/: { /* n:\"AxisLine\", */ },\n\t/*::[*/0x1022/*::]*/: { /* n:\"CrtLink\", */ },\n\t/*::[*/0x1024/*::]*/: { /* n:\"DefaultText\", */ },\n\t/*::[*/0x1025/*::]*/: { /* n:\"Text\", */ },\n\t/*::[*/0x1026/*::]*/: { /* n:\"FontX\", */ f:parseuint16 },\n\t/*::[*/0x1027/*::]*/: { /* n:\"ObjectLink\", */ },\n\t/*::[*/0x1032/*::]*/: { /* n:\"Frame\", */ },\n\t/*::[*/0x1033/*::]*/: { /* n:\"Begin\", */ },\n\t/*::[*/0x1034/*::]*/: { /* n:\"End\", */ },\n\t/*::[*/0x1035/*::]*/: { /* n:\"PlotArea\", */ },\n\t/*::[*/0x103a/*::]*/: { /* n:\"Chart3d\", */ },\n\t/*::[*/0x103c/*::]*/: { /* n:\"PicF\", */ },\n\t/*::[*/0x103d/*::]*/: { /* n:\"DropBar\", */ },\n\t/*::[*/0x103e/*::]*/: { /* n:\"Radar\", */ },\n\t/*::[*/0x103f/*::]*/: { /* n:\"Surf\", */ },\n\t/*::[*/0x1040/*::]*/: { /* n:\"RadarArea\", */ },\n\t/*::[*/0x1041/*::]*/: { /* n:\"AxisParent\", */ },\n\t/*::[*/0x1043/*::]*/: { /* n:\"LegendException\", */ },\n\t/*::[*/0x1044/*::]*/: { /* n:\"ShtProps\", */ f:parse_ShtProps },\n\t/*::[*/0x1045/*::]*/: { /* n:\"SerToCrt\", */ },\n\t/*::[*/0x1046/*::]*/: { /* n:\"AxesUsed\", */ },\n\t/*::[*/0x1048/*::]*/: { /* n:\"SBaseRef\", */ },\n\t/*::[*/0x104a/*::]*/: { /* n:\"SerParent\", */ },\n\t/*::[*/0x104b/*::]*/: { /* n:\"SerAuxTrend\", */ },\n\t/*::[*/0x104e/*::]*/: { /* n:\"IFmtRecord\", */ },\n\t/*::[*/0x104f/*::]*/: { /* n:\"Pos\", */ },\n\t/*::[*/0x1050/*::]*/: { /* n:\"AlRuns\", */ },\n\t/*::[*/0x1051/*::]*/: { /* n:\"BRAI\", */ },\n\t/*::[*/0x105b/*::]*/: { /* n:\"SerAuxErrBar\", */ },\n\t/*::[*/0x105c/*::]*/: { /* n:\"ClrtClient\", */ f:parse_ClrtClient },\n\t/*::[*/0x105d/*::]*/: { /* n:\"SerFmt\", */ },\n\t/*::[*/0x105f/*::]*/: { /* n:\"Chart3DBarShape\", */ },\n\t/*::[*/0x1060/*::]*/: { /* n:\"Fbi\", */ },\n\t/*::[*/0x1061/*::]*/: { /* n:\"BopPop\", */ },\n\t/*::[*/0x1062/*::]*/: { /* n:\"AxcExt\", */ },\n\t/*::[*/0x1063/*::]*/: { /* n:\"Dat\", */ },\n\t/*::[*/0x1064/*::]*/: { /* n:\"PlotGrowth\", */ },\n\t/*::[*/0x1065/*::]*/: { /* n:\"SIIndex\", */ },\n\t/*::[*/0x1066/*::]*/: { /* n:\"GelFrame\", */ },\n\t/*::[*/0x1067/*::]*/: { /* n:\"BopPopCustom\", */ },\n\t/*::[*/0x1068/*::]*/: { /* n:\"Fbi2\", */ },\n\n\t/*::[*/0x0000/*::]*/: { /* n:\"Dimensions\", */ f:parse_Dimensions },\n\t/*::[*/0x0001/*::]*/: { /* n:\"BIFF2BLANK\", */ },\n\t/*::[*/0x0002/*::]*/: { /* n:\"BIFF2INT\", */ f:parse_BIFF2INT },\n\t/*::[*/0x0003/*::]*/: { /* n:\"BIFF2NUM\", */ f:parse_BIFF2NUM },\n\t/*::[*/0x0004/*::]*/: { /* n:\"BIFF2STR\", */ f:parse_BIFF2STR },\n\t/*::[*/0x0005/*::]*/: { /* n:\"BoolErr\", */ f:parse_BoolErr },\n\t/*::[*/0x0007/*::]*/: { /* n:\"String\", */ f:parse_BIFF2STRING },\n\t/*::[*/0x0008/*::]*/: { /* n:\"BIFF2ROW\", */ },\n\t/*::[*/0x0009/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x000b/*::]*/: { /* n:\"Index\", */ },\n\t/*::[*/0x0016/*::]*/: { /* n:\"ExternCount\", */ f:parseuint16 },\n\t/*::[*/0x001e/*::]*/: { /* n:\"BIFF2FORMAT\", */ f:parse_BIFF2Format },\n\t/*::[*/0x001f/*::]*/: { /* n:\"BIFF2FMTCNT\", */ }, /* 16-bit cnt of BIFF2FORMAT records */\n\t/*::[*/0x0020/*::]*/: { /* n:\"BIFF2COLINFO\", */ },\n\t/*::[*/0x0021/*::]*/: { /* n:\"Array\", */ f:parse_Array },\n\t/*::[*/0x0024/*::]*/: { /* n:\"COLWIDTH\", */ },\n\t/*::[*/0x0025/*::]*/: { /* n:\"DefaultRowHeight\", */ f:parse_DefaultRowHeight },\n\t// 0x2c ??\n\t// 0x2d ??\n\t// 0x2e ??\n\t// 0x30 FONTCOUNT: number of fonts\n\t/*::[*/0x0032/*::]*/: { /* n:\"BIFF2FONTXTRA\", */ f:parse_BIFF2FONTXTRA },\n\t// 0x35: INFOOPTS\n\t// 0x36: TABLE (BIFF2 only)\n\t// 0x37: TABLE2 (BIFF2 only)\n\t// 0x38: WNDESK\n\t// 0x39 ??\n\t// 0x3a: BEGINPREF\n\t// 0x3b: ENDPREF\n\t/*::[*/0x003e/*::]*/: { /* n:\"BIFF2WINDOW2\", */ },\n\t// 0x3f ??\n\t// 0x46: SHOWSCROLL\n\t// 0x47: SHOWFORMULA\n\t// 0x48: STATUSBAR\n\t// 0x49: SHORTMENUS\n\t// 0x4A:\n\t// 0x4B:\n\t// 0x4C:\n\t// 0x4E:\n\t// 0x4F:\n\t// 0x58: TOOLBAR (BIFF3)\n\n\t/* - - - */\n\t/*::[*/0x0034/*::]*/: { /* n:\"DDEObjName\", */ },\n\t/*::[*/0x0043/*::]*/: { /* n:\"BIFF2XF\", */ },\n\t/*::[*/0x0044/*::]*/: { /* n:\"BIFF2XFINDEX\", */ f:parseuint16 },\n\t/*::[*/0x0045/*::]*/: { /* n:\"BIFF2FONTCLR\", */ },\n\t/*::[*/0x0056/*::]*/: { /* n:\"BIFF4FMTCNT\", */ }, /* 16-bit cnt, similar to BIFF2 */\n\t/*::[*/0x007e/*::]*/: { /* n:\"RK\", */ }, /* Not necessarily same as 0x027e */\n\t/*::[*/0x007f/*::]*/: { /* n:\"ImData\", */ f:parse_ImData },\n\t/*::[*/0x0087/*::]*/: { /* n:\"Addin\", */ },\n\t/*::[*/0x0088/*::]*/: { /* n:\"Edg\", */ },\n\t/*::[*/0x0089/*::]*/: { /* n:\"Pub\", */ },\n\t// 0x8A\n\t// 0x8B LH: alternate menu key flag (BIFF3/4)\n\t// 0x8E\n\t// 0x8F\n\t/*::[*/0x0091/*::]*/: { /* n:\"Sub\", */ },\n\t// 0x93 STYLE\n\t/*::[*/0x0094/*::]*/: { /* n:\"LHRecord\", */ },\n\t/*::[*/0x0095/*::]*/: { /* n:\"LHNGraph\", */ },\n\t/*::[*/0x0096/*::]*/: { /* n:\"Sound\", */ },\n\t// 0xA2 FNPROTO: function prototypes (BIFF4)\n\t// 0xA3\n\t// 0xA8\n\t/*::[*/0x00a9/*::]*/: { /* n:\"CoordList\", */ },\n\t/*::[*/0x00ab/*::]*/: { /* n:\"GCW\", */ },\n\t/*::[*/0x00bc/*::]*/: { /* n:\"ShrFmla\", */ }, /* Not necessarily same as 0x04bc */\n\t/*::[*/0x00bf/*::]*/: { /* n:\"ToolbarHdr\", */ },\n\t/*::[*/0x00c0/*::]*/: { /* n:\"ToolbarEnd\", */ },\n\t/*::[*/0x00c2/*::]*/: { /* n:\"AddMenu\", */ },\n\t/*::[*/0x00c3/*::]*/: { /* n:\"DelMenu\", */ },\n\t/*::[*/0x00d6/*::]*/: { /* n:\"RString\", */ f:parse_RString },\n\t/*::[*/0x00df/*::]*/: { /* n:\"UDDesc\", */ },\n\t/*::[*/0x00ea/*::]*/: { /* n:\"TabIdConf\", */ },\n\t/*::[*/0x0162/*::]*/: { /* n:\"XL5Modify\", */ },\n\t/*::[*/0x01a5/*::]*/: { /* n:\"FileSharing2\", */ },\n\t/*::[*/0x0206/*::]*/: { /* n:\"Formula\", */ f:parse_Formula },\n\t/*::[*/0x0209/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x0218/*::]*/: { /* n:\"Lbl\", */ f:parse_Lbl },\n\t/*::[*/0x0223/*::]*/: { /* n:\"ExternName\", */ f:parse_ExternName },\n\t/*::[*/0x0231/*::]*/: { /* n:\"Font\", */ },\n\t/*::[*/0x0243/*::]*/: { /* n:\"BIFF3XF\", */ },\n\t/*::[*/0x0406/*::]*/: { /* n:\"Formula\", */ f:parse_Formula },\n\t/*::[*/0x0409/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x0443/*::]*/: { /* n:\"BIFF4XF\", */ },\n\t/*::[*/0x086d/*::]*/: { /* n:\"FeatInfo\", */ },\n\t/*::[*/0x0873/*::]*/: { /* n:\"FeatInfo11\", */ },\n\t/*::[*/0x0881/*::]*/: { /* n:\"SXAddl12\", */ },\n\t/*::[*/0x08c0/*::]*/: { /* n:\"AutoWebPub\", */ },\n\t/*::[*/0x08c1/*::]*/: { /* n:\"ListObj\", */ },\n\t/*::[*/0x08c2/*::]*/: { /* n:\"ListField\", */ },\n\t/*::[*/0x08c3/*::]*/: { /* n:\"ListDV\", */ },\n\t/*::[*/0x08c4/*::]*/: { /* n:\"ListCondFmt\", */ },\n\t/*::[*/0x08c5/*::]*/: { /* n:\"ListCF\", */ },\n\t/*::[*/0x08c6/*::]*/: { /* n:\"FMQry\", */ },\n\t/*::[*/0x08c7/*::]*/: { /* n:\"FMSQry\", */ },\n\t/*::[*/0x08c8/*::]*/: { /* n:\"PLV\", */ },\n\t/*::[*/0x08c9/*::]*/: { /* n:\"LnExt\", */ },\n\t/*::[*/0x08ca/*::]*/: { /* n:\"MkrExt\", */ },\n\t/*::[*/0x08cb/*::]*/: { /* n:\"CrtCoopt\", */ },\n\t/*::[*/0x08d6/*::]*/: { /* n:\"FRTArchId$\", */ r:12 },\n\n\t/*::[*/0x7262/*::]*/: {}\n};\n\nfunction write_biff_rec(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/)/*:void*/ {\n\tvar t/*:number*/ = type;\n\tif(isNaN(t)) return;\n\tvar len = length || (payload||[]).length || 0;\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, len);\n\tif(/*:: len != null &&*/len > 0 && is_buf(payload)) ba.push(payload);\n}\n\nfunction write_biff_continue(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/)/*:void*/ {\n\tvar len = length || (payload||[]).length || 0;\n\tif(len <= 8224) return write_biff_rec(ba, type, payload, len);\n\tvar t = type;\n\tif(isNaN(t)) return;\n\tvar parts = payload.parts || [], sidx = 0;\n\tvar i = 0, w = 0;\n\twhile(w + (parts[sidx] || 8224) <= 8224) { w+= (parts[sidx] || 8224); sidx++; }\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, w);\n\tba.push(payload.slice(i, i + w));\n\ti += w;\n\twhile(i < len) {\n\t\to = ba.next(4);\n\t\to.write_shift(2, 0x3c); // TODO: figure out correct continue type\n\t\tw = 0;\n\t\twhile(w + (parts[sidx] || 8224) <= 8224) { w+= (parts[sidx] || 8224); sidx++; }\n\t\to.write_shift(2, w);\n\t\tba.push(payload.slice(i, i+w)); i+= w;\n\t}\n}\n\nfunction write_BIFF2Cell(out, r/*:number*/, c/*:number*/) {\n\tif(!out) out = new_buf(7);\n\tout.write_shift(2, r);\n\tout.write_shift(2, c);\n\tout.write_shift(2, 0);\n\tout.write_shift(1, 0);\n\treturn out;\n}\n\nfunction write_BIFF2BERR(r/*:number*/, c/*:number*/, val, t/*:?string*/) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\twrite_Bes(val, t || 'b', out);\n\treturn out;\n}\n\n/* TODO: codepage, large strings */\nfunction write_BIFF2LABEL(r/*:number*/, c/*:number*/, val) {\n\tvar out = new_buf(8 + 2*val.length);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(1, val.length);\n\tout.write_shift(val.length, val, 'sbcs');\n\treturn out.l < out.length ? out.slice(0, out.l) : out;\n}\n\nfunction write_ws_biff2_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*//*::, opts*/) {\n\tif(cell.v != null) switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n\t\t\tif((v == (v|0)) && (v >= 0) && (v < 65536))\n\t\t\t\twrite_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v));\n\t\t\telse\n\t\t\t\twrite_biff_rec(ba, 0x0003, write_BIFF2NUM(R,C, v));\n\t\t\treturn;\n\t\tcase 'b': case 'e': write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t)); return;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\twrite_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, (cell.v||\"\").slice(0,255)));\n\t\t\treturn;\n\t}\n\twrite_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\n}\n\nfunction write_ws_biff2(ba/*:BufArray*/, ws/*:Worksheet*/, idx/*:number*/, opts/*::, wb:Workbook*/) {\n\tvar dense = Array.isArray(ws);\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref/*:string*/, rr = \"\", cols/*:Array<string>*/ = [];\n\tif(range.e.c > 0xFF || range.e.r > 0x3FFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, 0x3FFF);\n\t\tref = encode_range(range);\n\t}\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff2_cell(ba, cell, R, C, opts);\n\t\t}\n\t}\n}\n\n/* Based on test files */\nfunction write_biff2_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\tvar ba = buf_array();\n\tvar idx = 0;\n\tfor(var i=0;i<wb.SheetNames.length;++i) if(wb.SheetNames[i] == o.sheet) idx=i;\n\tif(idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\n\twrite_biff_rec(ba, (o.biff == 4 ? 0x0409 : (o.biff == 3 ? 0x0209 : 0x0009)), write_BOF(wb, 0x10, o));\n\t/* ... */\n\twrite_ws_biff2(ba, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\n\t/* ... */\n\twrite_biff_rec(ba, 0x000A);\n\treturn ba.end();\n}\n\nfunction write_FONTS_biff8(ba, data, opts) {\n\twrite_biff_rec(ba, 0x0031 /* Font */, write_Font({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Arial\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}, opts));\n}\n\n\nfunction write_FMTS_biff8(ba, NF/*:?SSFTable*/, opts) {\n\tif(!NF) return;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_biff_rec(ba, 0x041E /* Format */, write_Format(i, NF[i], opts));\n\t});\n}\n\nfunction write_FEAT(ba, ws) {\n\t/* [MS-XLS] 2.4.112 */\n\tvar o = new_buf(19);\n\to.write_shift(4, 0x867); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 1); o.write_shift(4, 0);\n\twrite_biff_rec(ba, 0x0867 /* FeatHdr */, o);\n\t/* [MS-XLS] 2.4.111 */\n\to = new_buf(39);\n\to.write_shift(4, 0x868); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 0); o.write_shift(4, 0);\n\to.write_shift(2, 1); o.write_shift(4, 4); o.write_shift(2, 0);\n\twrite_Ref8U(safe_decode_range(ws['!ref']||\"A1\"), o);\n\to.write_shift(4, 4);\n\twrite_biff_rec(ba, 0x0868 /* Feat */, o);\n}\n\nfunction write_CELLXFS_biff8(ba, opts) {\n\tfor(var i = 0; i < 16; ++i) write_biff_rec(ba, 0x00e0 /* XF */, write_XF({numFmtId:0, style:true}, 0, opts));\n\topts.cellXfs.forEach(function(c) {\n\t\twrite_biff_rec(ba, 0x00e0 /* XF */, write_XF(c, 0, opts));\n\t});\n}\n\nfunction write_ws_biff8_hlinks(ba/*:BufArray*/, ws) {\n\tfor(var R=0; R<ws['!links'].length; ++R) {\n\t\tvar HL = ws['!links'][R];\n\t\twrite_biff_rec(ba, 0x01b8 /* HLink */, write_HLink(HL));\n\t\tif(HL[1].Tooltip) write_biff_rec(ba, 0x0800 /* HLinkTooltip */, write_HLinkTooltip(HL));\n\t}\n\tdelete ws['!links'];\n}\n\nfunction write_ws_cols_biff8(ba, cols) {\n\tif(!cols) return;\n\tvar cnt = 0;\n\tcols.forEach(function(col, idx) {\n\t\tif(++cnt <= 256 && col) {\n\t\t\twrite_biff_rec(ba, 0x007d /* ColInfo */, write_ColInfo(col_obj_w(idx, col), idx));\n\t\t}\n\t});\n}\n\nfunction write_ws_biff8_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts) {\n\tvar os = 16 + get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.v == null && !cell.bf) {\n\t\twrite_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n\t\treturn;\n\t}\n\tif(cell.bf) write_biff_rec(ba, 0x0006 /* Formula */, write_Formula(cell, R, C, opts, os));\n\telse switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n\t\t\t/* TODO: emit RK as appropriate */\n\t\t\twrite_biff_rec(ba, 0x0203 /* Number */, write_Number(R, C, v, os, opts));\n\t\t\tbreak;\n\t\tcase 'b': case 'e':\n\t\t\twrite_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, cell.v, os, opts, cell.t));\n\t\t\tbreak;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvar isst = get_sst_id(opts.Strings, cell.v, opts.revStrings);\n\t\t\t\twrite_biff_rec(ba, 0x00fd /* LabelSst */, write_LabelSst(R, C, isst, os, opts));\n\t\t\t} else write_biff_rec(ba, 0x0204 /* Label */, write_Label(R, C, (cell.v||\"\").slice(0,255), os, opts));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\twrite_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n\t}\n}\n\n/* [MS-XLS] 2.1.7.20.5 */\nfunction write_ws_biff8(idx/*:number*/, opts, wb/*:Workbook*/) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar _WB/*:WBWBProps*/ = ((wb||{}).Workbook||{}/*:any*/);\n\tvar _sheet/*:WBWSProp*/ = ((_WB.Sheets||[])[idx]||{}/*:any*/);\n\tvar dense = Array.isArray(ws);\n\tvar b8 = opts.biff == 8;\n\tvar ref/*:string*/, rr = \"\", cols/*:Array<string>*/ = [];\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\");\n\tvar MAX_ROWS = b8 ? 65536 : 16384;\n\tif(range.e.c > 0xFF || range.e.r >= MAX_ROWS) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, MAX_ROWS-1);\n\t}\n\n\twrite_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\n\t/* [Uncalced] Index */\n\twrite_biff_rec(ba, 0x000d /* CalcMode */, writeuint16(1));\n\twrite_biff_rec(ba, 0x000c /* CalcCount */, writeuint16(100));\n\twrite_biff_rec(ba, 0x000f /* CalcRefMode */, writebool(true));\n\twrite_biff_rec(ba, 0x0011 /* CalcIter */, writebool(false));\n\twrite_biff_rec(ba, 0x0010 /* CalcDelta */, write_Xnum(0.001));\n\twrite_biff_rec(ba, 0x005f /* CalcSaveRecalc */, writebool(true));\n\twrite_biff_rec(ba, 0x002a /* PrintRowCol */, writebool(false));\n\twrite_biff_rec(ba, 0x002b /* PrintGrid */, writebool(false));\n\twrite_biff_rec(ba, 0x0082 /* GridSet */, writeuint16(1));\n\twrite_biff_rec(ba, 0x0080 /* Guts */, write_Guts([0,0]));\n\t/* DefaultRowHeight WsBool [Sync] [LPr] [HorizontalPageBreaks] [VerticalPageBreaks] */\n\t/* Header (string) */\n\t/* Footer (string) */\n\twrite_biff_rec(ba, 0x0083 /* HCenter */, writebool(false));\n\twrite_biff_rec(ba, 0x0084 /* VCenter */, writebool(false));\n\t/* ... */\n\tif(b8) write_ws_cols_biff8(ba, ws[\"!cols\"]);\n\t/* ... */\n\twrite_biff_rec(ba, 0x200, write_Dimensions(range, opts));\n\t/* ... */\n\n\tif(b8) ws['!links'] = [];\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff8_cell(ba, cell, R, C, opts);\n\t\t\tif(b8 && cell.l) ws['!links'].push([ref, cell.l]);\n\t\t}\n\t}\n\tvar cname/*:string*/ = _sheet.CodeName || _sheet.name || s;\n\t/* ... */\n\tif(b8) write_biff_rec(ba, 0x023e /* Window2 */, write_Window2((_WB.Views||[])[0]));\n\t/* ... */\n\tif(b8 && (ws['!merges']||[]).length) write_biff_rec(ba, 0x00e5 /* MergeCells */, write_MergeCells(ws['!merges']));\n\t/* [LRng] *QUERYTABLE [PHONETICINFO] CONDFMTS */\n\tif(b8) write_ws_biff8_hlinks(ba, ws);\n\t/* [DVAL] */\n\twrite_biff_rec(ba, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n\t/* *WebPub *CellWatch [SheetExt] */\n\tif(b8) write_FEAT(ba, ws);\n\t/* *FEAT11 *RECORD12 */\n\twrite_biff_rec(ba, 0x000a /* EOF */);\n\treturn ba.end();\n}\n\n/* [MS-XLS] 2.1.7.20.3 */\nfunction write_biff8_global(wb/*:Workbook*/, bufs, opts/*:WriteOpts*/) {\n\tvar A = buf_array();\n\tvar _WB/*:WBWBProps*/ = ((wb||{}).Workbook||{}/*:any*/);\n\tvar _sheets/*:Array<WBWSProp>*/ = (_WB.Sheets||[]);\n\tvar _wb/*:WBProps*/ = /*::((*/_WB.WBProps||{/*::CodeName:\"ThisWorkbook\"*/}/*:: ):any)*/;\n\tvar b8 = opts.biff == 8, b5 = opts.biff == 5;\n\twrite_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\n\tif(opts.bookType == \"xla\") write_biff_rec(A, 0x0087 /* Addin */);\n\twrite_biff_rec(A, 0x00e1 /* InterfaceHdr */, b8 ? writeuint16(0x04b0) : null);\n\twrite_biff_rec(A, 0x00c1 /* Mms */, writezeroes(2));\n\tif(b5) write_biff_rec(A, 0x00bf /* ToolbarHdr */);\n\tif(b5) write_biff_rec(A, 0x00c0 /* ToolbarEnd */);\n\twrite_biff_rec(A, 0x00e2 /* InterfaceEnd */);\n\twrite_biff_rec(A, 0x005c /* WriteAccess */, write_WriteAccess(\"SheetJS\", opts));\n\t/* [FileSharing] */\n\twrite_biff_rec(A, 0x0042 /* CodePage */, writeuint16(b8 ? 0x04b0 : 0x04E4));\n\t/* *2047 Lel */\n\tif(b8) write_biff_rec(A, 0x0161 /* DSF */, writeuint16(0));\n\tif(b8) write_biff_rec(A, 0x01c0 /* Excel9File */);\n\twrite_biff_rec(A, 0x013d /* RRTabId */, write_RRTabId(wb.SheetNames.length));\n\tif(b8 && wb.vbaraw) write_biff_rec(A, 0x00d3 /* ObProj */);\n\t/* [ObNoMacros] */\n\tif(b8 && wb.vbaraw) {\n\t\tvar cname/*:string*/ = _wb.CodeName || \"ThisWorkbook\";\n\t\twrite_biff_rec(A, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n\t}\n\twrite_biff_rec(A, 0x009c /* BuiltInFnGroupCount */, writeuint16(0x11));\n\t/* *FnGroupName *FnGrp12 */\n\t/* *Lbl */\n\t/* [OleObjectSize] */\n\twrite_biff_rec(A, 0x0019 /* WinProtect */, writebool(false));\n\twrite_biff_rec(A, 0x0012 /* Protect */, writebool(false));\n\twrite_biff_rec(A, 0x0013 /* Password */, writeuint16(0));\n\tif(b8) write_biff_rec(A, 0x01af /* Prot4Rev */, writebool(false));\n\tif(b8) write_biff_rec(A, 0x01bc /* Prot4RevPass */, writeuint16(0));\n\twrite_biff_rec(A, 0x003d /* Window1 */, write_Window1(opts));\n\twrite_biff_rec(A, 0x0040 /* Backup */, writebool(false));\n\twrite_biff_rec(A, 0x008d /* HideObj */, writeuint16(0));\n\twrite_biff_rec(A, 0x0022 /* Date1904 */, writebool(safe1904(wb)==\"true\"));\n\twrite_biff_rec(A, 0x000e /* CalcPrecision */, writebool(true));\n\tif(b8) write_biff_rec(A, 0x01b7 /* RefreshAll */, writebool(false));\n\twrite_biff_rec(A, 0x00DA /* BookBool */, writeuint16(0));\n\t/* ... */\n\twrite_FONTS_biff8(A, wb, opts);\n\twrite_FMTS_biff8(A, wb.SSF, opts);\n\twrite_CELLXFS_biff8(A, opts);\n\t/* ... */\n\tif(b8) write_biff_rec(A, 0x0160 /* UsesELFs */, writebool(false));\n\tvar a = A.end();\n\n\tvar C = buf_array();\n\t/* METADATA [MTRSettings] [ForceFullCalculation] */\n\tif(b8) write_biff_rec(C, 0x008C, write_Country());\n\t/* *SUPBOOK *LBL *RTD [RecalcId] *HFPicture *MSODRAWINGGROUP */\n\n\t/* BIFF8: [SST *Continue] ExtSST */\n\tif(b8 && opts.Strings) write_biff_continue(C, 0x00FC, write_SST(opts.Strings, opts));\n\n\t/* *WebPub [WOpt] [CrErr] [BookExt] *FeatHdr *DConn [THEME] [CompressPictures] [Compat12] [GUIDTypeLib] */\n\twrite_biff_rec(C, 0x000A /* EOF */);\n\tvar c = C.end();\n\n\tvar B = buf_array();\n\tvar blen = 0, j = 0;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\n\tvar start = a.length + blen + c.length;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) {\n\t\tvar _sheet/*:WBWSProp*/ = _sheets[j] || ({}/*:any*/);\n\t\twrite_biff_rec(B, 0x0085 /* BoundSheet8 */, write_BoundSheet8({pos:start, hs:_sheet.Hidden||0, dt:0, name:wb.SheetNames[j]}, opts));\n\t\tstart += bufs[j].length;\n\t}\n\t/* 1*BoundSheet8 */\n\tvar b = B.end();\n\tif(blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\n\n\tvar out = [];\n\tif(a.length) out.push(a);\n\tif(b.length) out.push(b);\n\tif(c.length) out.push(c);\n\treturn bconcat(out);\n}\n\n/* [MS-XLS] 2.1.7.20 Workbook Stream */\nfunction write_biff8_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tvar bufs = [];\n\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\to.revssf = evert_num(wb.SSF); o.revssf[wb.SSF[65535]] = 0;\n\t\to.ssf = wb.SSF;\n\t}\n\n\to.Strings = /*::((*/[]/*:: :any):SST)*/; o.Strings.Count = 0; o.Strings.Unique = 0;\n\tfix_write_opts(o);\n\n\to.cellXfs = [];\n\tget_cell_style(o.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\n\tbufs.unshift(write_biff8_global(wb, bufs, o));\n\treturn bconcat(bufs);\n}\n\nfunction write_biff_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tfor(var i = 0; i <= wb.SheetNames.length; ++i) {\n\t\tvar ws = wb.Sheets[wb.SheetNames[i]];\n\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\tif(range.e.c > 255) { // note: 255 is IV\n\t\tif(typeof console != \"undefined\" && console.error) console.error(\"Worksheet '\" + wb.SheetNames[i] + \"' extends beyond column IV (255).  Data may be lost.\");\n\t\t}\n\t}\n\n\tvar o = opts || {};\n\tswitch(o.biff || 2) {\n\t\tcase 8: case 5: return write_biff8_buf(wb, opts);\n\t\tcase 4: case 3: case 2: return write_biff2_buf(wb, opts);\n\t}\n\tthrow new Error(\"invalid type \" + o.bookType + \" for BIFF\");\n}\n/* note: browser DOM element cannot see mso- style attrs, must parse */\nfunction html_to_sheet(str/*:string*/, _opts)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar ws/*:Worksheet*/ = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\tstr = str.replace(/<!--.*?-->/g, \"\");\n\tvar mtch/*:any*/ = str.match(/<table/i);\n\tif(!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\n\tvar mtch2/*:any*/ = str.match(/<\\/table/i);\n\tvar i/*:number*/ = mtch.index, j/*:number*/ = mtch2 && mtch2.index || str.length;\n\tvar rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, \"<tr>\");\n\tvar R = -1, C = 0, RS = 0, CS = 0;\n\tvar range/*:Range*/ = {s:{r:10000000, c:10000000},e:{r:0,c:0}};\n\tvar merges/*:Array<Range>*/ = [];\n\tfor(i = 0; i < rows.length; ++i) {\n\t\tvar row = rows[i].trim();\n\t\tvar hd = row.slice(0,3).toLowerCase();\n\t\tif(hd == \"<tr\") { ++R; if(opts.sheetRows && opts.sheetRows <= R) { --R; break; } C = 0; continue; }\n\t\tif(hd != \"<td\" && hd != \"<th\") continue;\n\t\tvar cells = row.split(/<\\/t[dh]>/i);\n\t\tfor(j = 0; j < cells.length; ++j) {\n\t\t\tvar cell = cells[j].trim();\n\t\t\tif(!cell.match(/<t[dh]/i)) continue;\n\t\t\tvar m = cell, cc = 0;\n\t\t\t/* TODO: parse styles etc */\n\t\t\twhile(m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc+1);\n\t\t\tfor(var midx = 0; midx < merges.length; ++midx) {\n\t\t\t\tvar _merge/*:Range*/ = merges[midx];\n\t\t\t\tif(_merge.s.c == C && _merge.s.r < R && R <= _merge.e.r) { C = _merge.e.c + 1; midx = -1; }\n\t\t\t}\n\t\t\tvar tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\n\t\t\tCS = tag.colspan ? +tag.colspan : 1;\n\t\t\tif((RS = +tag.rowspan)>1 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\n\t\t\tvar _t/*:string*/ = tag.t || tag[\"data-t\"] || \"\";\n\t\t\t/* TODO: generate stub cells */\n\t\t\tif(!m.length) { C += CS; continue; }\n\t\t\tm = htmldecode(m);\n\t\t\tif(range.s.r > R) range.s.r = R; if(range.e.r < R) range.e.r = R;\n\t\t\tif(range.s.c > C) range.s.c = C; if(range.e.c < C) range.e.c = C;\n\t\t\tif(!m.length) { C += CS; continue; }\n\t\t\tvar o/*:Cell*/ = {t:'s', v:m};\n\t\t\tif(opts.raw || !m.trim().length || _t == 's'){}\n\t\t\telse if(m === 'TRUE') o = {t:'b', v:true};\n\t\t\telse if(m === 'FALSE') o = {t:'b', v:false};\n\t\t\telse if(!isNaN(fuzzynum(m))) o = {t:'n', v:fuzzynum(m)};\n\t\t\telse if(!isNaN(fuzzydate(m).getDate())) {\n\t\t\t\to = ({t:'d', v:parseDate(m)}/*:any*/);\n\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);\n\t\t\t\to.z = opts.dateNF || table_fmt[14];\n\t\t\t}\n\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }\n\t\t\telse ws[encode_cell({r:R, c:C})] = o;\n\t\t\tC += CS;\n\t\t}\n\t}\n\tws['!ref'] = encode_range(range);\n\tif(merges.length) ws[\"!merges\"] = merges;\n\treturn ws;\n}\nfunction make_html_row(ws/*:Worksheet*/, r/*:Range*/, R/*:number*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {\n\tvar M/*:Array<Range>*/ = (ws['!merges'] ||[]);\n\tvar oo/*:Array<string>*/ = [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\tvar RS = 0, CS = 0;\n\t\tfor(var j = 0; j < M.length; ++j) {\n\t\t\tif(M[j].s.r > R || M[j].s.c > C) continue;\n\t\t\tif(M[j].e.r < R || M[j].e.c < C) continue;\n\t\t\tif(M[j].s.r < R || M[j].s.c < C) { RS = -1; break; }\n\t\t\tRS = M[j].e.r - M[j].s.r + 1; CS = M[j].e.c - M[j].s.c + 1; break;\n\t\t}\n\t\tif(RS < 0) continue;\n\t\tvar coord = encode_cell({r:R,c:C});\n\t\tvar cell = o.dense ? (ws[R]||[])[C] : ws[coord];\n\t\t/* TODO: html entities */\n\t\tvar w = (cell && cell.v != null) && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || \"\")) || \"\";\n\t\tvar sp = ({}/*:any*/);\n\t\tif(RS > 1) sp.rowspan = RS;\n\t\tif(CS > 1) sp.colspan = CS;\n\t\tif(o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';\n\t\telse if(cell) {\n\t\t\tsp[\"data-t\"] = cell && cell.t || 'z';\n\t\t\tif(cell.v != null) sp[\"data-v\"] = cell.v;\n\t\t\tif(cell.z != null) sp[\"data-z\"] = cell.z;\n\t\t\tif(cell.l && (cell.l.Target || \"#\").charAt(0) != \"#\") w = '<a href=\"' + cell.l.Target +'\">' + w + '</a>';\n\t\t}\n\t\tsp.id = (o.id || \"sjs\") + \"-\" + coord;\n\t\too.push(writextag('td', w, sp));\n\t}\n\tvar preamble = \"<tr>\";\n\treturn preamble + oo.join(\"\") + \"</tr>\";\n}\n\nvar HTML_BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\nvar HTML_END = '</body></html>';\n\nfunction html_to_workbook(str/*:string*/, opts)/*:Workbook*/ {\n\tvar mtch = str.match(/<table[\\s\\S]*?>[\\s\\S]*?<\\/table>/gi);\n\tif(!mtch || mtch.length == 0) throw new Error(\"Invalid HTML: could not find <table>\");\n\tif(mtch.length == 1) return sheet_to_workbook(html_to_sheet(mtch[0], opts), opts);\n\tvar wb = book_new();\n\tmtch.forEach(function(s, idx) { book_append_sheet(wb, html_to_sheet(s, opts), \"Sheet\" + (idx+1)); });\n\treturn wb;\n}\n\nfunction make_html_preamble(ws/*:Worksheet*/, R/*:Range*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [];\n\treturn out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\n}\n\nfunction sheet_to_html(ws/*:Worksheet*/, opts/*:?Sheet2HTMLOpts*//*, wb:?Workbook*/)/*:string*/ {\n\tvar o = opts || {};\n\tvar header = o.header != null ? o.header : HTML_BEGIN;\n\tvar footer = o.footer != null ? o.footer : HTML_END;\n\tvar out/*:Array<string>*/ = [header];\n\tvar r = decode_range(ws['!ref']);\n\to.dense = Array.isArray(ws);\n\tout.push(make_html_preamble(ws, r, o));\n\tfor(var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\n\tout.push(\"</table>\" + footer);\n\treturn out.join(\"\");\n}\n\nfunction sheet_add_dom(ws/*:Worksheet*/, table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {\n\tvar opts = _opts || {};\n\tif(DENSE != null) opts.dense = DENSE;\n\tvar or_R = 0, or_C = 0;\n\tif(opts.origin != null) {\n\t\tif(typeof opts.origin == 'number') or_R = opts.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof opts.origin == \"string\" ? decode_cell(opts.origin) : opts.origin;\n\t\t\tor_R = _origin.r; or_C = _origin.c;\n\t\t}\n\t}\n\n\tvar rows/*:HTMLCollection<HTMLTableRowElement>*/ = table.getElementsByTagName('tr');\n\tvar sheetRows = Math.min(opts.sheetRows||10000000, rows.length);\n\tvar range/*:Range*/ = {s:{r:0,c:0},e:{r:or_R,c:or_C}};\n\tif(ws[\"!ref\"]) {\n\t\tvar _range/*:Range*/ = decode_range(ws[\"!ref\"]);\n\t\trange.s.r = Math.min(range.s.r, _range.s.r);\n\t\trange.s.c = Math.min(range.s.c, _range.s.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\tif(or_R == -1) range.e.r = or_R = _range.e.r + 1;\n\t}\n\tvar merges/*:Array<Range>*/ = [], midx = 0;\n\tvar rowinfo/*:Array<RowInfo>*/ = ws[\"!rows\"] || (ws[\"!rows\"] = []);\n\tvar _R = 0, R = 0, _C = 0, C = 0, RS = 0, CS = 0;\n\tif(!ws[\"!cols\"]) ws['!cols'] = [];\n\tfor(; _R < rows.length && R < sheetRows; ++_R) {\n\t\tvar row/*:HTMLTableRowElement*/ = rows[_R];\n\t\tif (is_dom_element_hidden(row)) {\n\t\t\tif (opts.display) continue;\n\t\t\trowinfo[R] = {hidden: true};\n\t\t}\n\t\tvar elts/*:HTMLCollection<HTMLTableCellElement>*/ = (row.children/*:any*/);\n\t\tfor(_C = C = 0; _C < elts.length; ++_C) {\n\t\t\tvar elt/*:HTMLTableCellElement*/ = elts[_C];\n\t\t\tif (opts.display && is_dom_element_hidden(elt)) continue;\n\t\t\tvar v/*:?string*/ = elt.hasAttribute('data-v') ? elt.getAttribute('data-v') : elt.hasAttribute('v') ? elt.getAttribute('v') : htmldecode(elt.innerHTML);\n\t\t\tvar z/*:?string*/ = elt.getAttribute('data-z') || elt.getAttribute('z');\n\t\t\tfor(midx = 0; midx < merges.length; ++midx) {\n\t\t\t\tvar m/*:Range*/ = merges[midx];\n\t\t\t\tif(m.s.c == C + or_C && m.s.r < R + or_R && R + or_R <= m.e.r) { C = m.e.c+1 - or_C; midx = -1; }\n\t\t\t}\n\t\t\t/* TODO: figure out how to extract nonstandard mso- style */\n\t\t\tCS = +elt.getAttribute(\"colspan\") || 1;\n\t\t\tif( ((RS = (+elt.getAttribute(\"rowspan\") || 1)))>1 || CS>1) merges.push({s:{r:R + or_R,c:C + or_C},e:{r:R + or_R + (RS||1) - 1, c:C + or_C + (CS||1) - 1}});\n\t\t\tvar o/*:Cell*/ = {t:'s', v:v};\n\t\t\tvar _t/*:string*/ = elt.getAttribute(\"data-t\") || elt.getAttribute(\"t\") || \"\";\n\t\t\tif(v != null) {\n\t\t\t\tif(v.length == 0) o.t = _t || 'z';\n\t\t\t\telse if(opts.raw || v.trim().length == 0 || _t == \"s\"){}\n\t\t\t\telse if(v === 'TRUE') o = {t:'b', v:true};\n\t\t\t\telse if(v === 'FALSE') o = {t:'b', v:false};\n\t\t\t\telse if(!isNaN(fuzzynum(v))) o = {t:'n', v:fuzzynum(v)};\n\t\t\t\telse if(!isNaN(fuzzydate(v).getDate())) {\n\t\t\t\t\to = ({t:'d', v:parseDate(v)}/*:any*/);\n\t\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);\n\t\t\t\t\to.z = opts.dateNF || table_fmt[14];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(o.z === undefined && z != null) o.z = z;\n\t\t\t/* The first link is used.  Links are assumed to be fully specified.\n\t\t\t * TODO: The right way to process relative links is to make a new <a> */\n\t\t\tvar l = \"\", Aelts = elt.getElementsByTagName(\"A\");\n\t\t\tif(Aelts && Aelts.length) for(var Aelti = 0; Aelti < Aelts.length; ++Aelti)\tif(Aelts[Aelti].hasAttribute(\"href\")) {\n\t\t\t\tl = Aelts[Aelti].getAttribute(\"href\"); if(l.charAt(0) != \"#\") break;\n\t\t\t}\n\t\t\tif(l && l.charAt(0) != \"#\") o.l = ({ Target: l });\n\t\t\tif(opts.dense) { if(!ws[R + or_R]) ws[R + or_R] = []; ws[R + or_R][C + or_C] = o; }\n\t\t\telse ws[encode_cell({c:C + or_C, r:R + or_R})] = o;\n\t\t\tif(range.e.c < C + or_C) range.e.c = C + or_C;\n\t\t\tC += CS;\n\t\t}\n\t\t++R;\n\t}\n\tif(merges.length) ws['!merges'] = (ws[\"!merges\"] || []).concat(merges);\n\trange.e.r = Math.max(range.e.r, R - 1 + or_R);\n\tws['!ref'] = encode_range(range);\n\tif(R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length-_R+R-1 + or_R,range)); // We can count the real number of rows to parse but we don't to improve the performance\n\treturn ws;\n}\n\nfunction parse_dom_table(table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {\n\tvar opts = _opts || {};\n\tvar ws/*:Worksheet*/ = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\treturn sheet_add_dom(ws, table, _opts);\n}\n\nfunction table_to_book(table/*:HTMLElement*/, opts/*:?any*/)/*:Workbook*/ {\n\treturn sheet_to_workbook(parse_dom_table(table, opts), opts);\n}\n\nfunction is_dom_element_hidden(element/*:HTMLElement*/)/*:boolean*/ {\n\tvar display/*:string*/ = '';\n\tvar get_computed_style/*:?function*/ = get_get_computed_style_function(element);\n\tif(get_computed_style) display = get_computed_style(element).getPropertyValue('display');\n\tif(!display) display = element.style && element.style.display;\n\treturn display === 'none';\n}\n\n/* global getComputedStyle */\nfunction get_get_computed_style_function(element/*:HTMLElement*/)/*:?function*/ {\n\t// The proper getComputedStyle implementation is the one defined in the element window\n\tif(element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;\n\t// If it is not available, try to get one from the global namespace\n\tif(typeof getComputedStyle === 'function') return getComputedStyle;\n\treturn null;\n}\n/* OpenDocument */\nfunction parse_text_p(text/*:string*//*::, tag*/)/*:Array<any>*/ {\n\t/* 6.1.2 White Space Characters */\n\tvar fixed = text\n\t\t.replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \")\n\t\t.replace(/<text:s\\/>/g,\" \")\n\t\t.replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function($$,$1) { return Array(parseInt($1,10)+1).join(\" \"); })\n\t\t.replace(/<text:tab[^>]*\\/>/g,\"\\t\")\n\t\t.replace(/<text:line-break\\/>/g,\"\\n\");\n\tvar v = unescapexml(fixed.replace(/<[^>]*>/g,\"\"));\n\n\treturn [v];\n}\n\nvar number_formats_ods = {\n\t/* ods name: [short ssf fmt, long ssf fmt] */\n\tday:           [\"d\",   \"dd\"],\n\tmonth:         [\"m\",   \"mm\"],\n\tyear:          [\"y\",   \"yy\"],\n\thours:         [\"h\",   \"hh\"],\n\tminutes:       [\"m\",   \"mm\"],\n\tseconds:       [\"s\",   \"ss\"],\n\t\"am-pm\":       [\"A/P\", \"AM/PM\"],\n\t\"day-of-week\": [\"ddd\", \"dddd\"],\n\tera:           [\"e\",   \"ee\"],\n\t/* there is no native representation of LO \"Q\" format */\n\tquarter:       [\"\\\\Qm\", \"m\\\\\\\"th quarter\\\"\"]\n};\n\n\nfunction parse_content_xml(d/*:string*/, _opts)/*:Workbook*/ {\n\t\tvar opts = _opts || {};\n\t\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\t\tvar str = xlml_normalize(d);\n\t\tvar state/*:Array<any>*/ = [], tmp;\n\t\tvar tag/*:: = {}*/;\n\t\tvar NFtag = {name:\"\"}, NF = \"\", pidx = 0;\n\t\tvar sheetag/*:: = {name:\"\", '名称':\"\"}*/;\n\t\tvar rowtag/*:: = {'行号':\"\"}*/;\n\t\tvar Sheets = {}, SheetNames/*:Array<string>*/ = [];\n\t\tvar ws = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\t\tvar Rn, q/*:: :any = ({t:\"\", v:null, z:null, w:\"\",c:[],}:any)*/;\n\t\tvar ctag = ({value:\"\"}/*:any*/);\n\t\tvar textp = \"\", textpidx = 0, textptag/*:: = {}*/;\n\t\tvar textR = [];\n\t\tvar R = -1, C = -1, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};\n\t\tvar row_ol = 0;\n\t\tvar number_format_map = {};\n\t\tvar merges/*:Array<Range>*/ = [], mrange = {}, mR = 0, mC = 0;\n\t\tvar rowinfo/*:Array<RowInfo>*/ = [], rowpeat = 1, colpeat = 1;\n\t\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\t\tvar WB = {Names:[]};\n\t\tvar atag = ({}/*:any*/);\n\t\tvar _Ref/*:[string, string]*/ = [\"\", \"\"];\n\t\tvar comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);\n\t\tvar creator = \"\", creatoridx = 0;\n\t\tvar isstub = false, intable = false;\n\t\tvar i = 0;\n\t\txlmlregex.lastIndex = 0;\n\t\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\t\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3]=Rn[3].replace(/_.*$/,\"\"))) {\n\n\t\t\tcase 'table': case '工作表': // 9.1.2 <table:table>\n\t\t\t\tif(Rn[1]==='/') {\n\t\t\t\t\tif(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);\n\t\t\t\t\telse ws['!ref'] = \"A1:A1\";\n\t\t\t\t\tif(opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\n\t\t\t\t\t\tws['!fullref'] = ws['!ref'];\n\t\t\t\t\t\trange.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tws['!ref'] = encode_range(range);\n\t\t\t\t\t}\n\t\t\t\t\tif(merges.length) ws['!merges'] = merges;\n\t\t\t\t\tif(rowinfo.length) ws[\"!rows\"] = rowinfo;\n\t\t\t\t\tsheetag.name = sheetag['名称'] || sheetag.name;\n\t\t\t\t\tif(typeof JSON !== 'undefined') JSON.stringify(sheetag);\n\t\t\t\t\tSheetNames.push(sheetag.name);\n\t\t\t\t\tSheets[sheetag.name] = ws;\n\t\t\t\t\tintable = false;\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tsheetag = parsexmltag(Rn[0], false);\n\t\t\t\t\tR = C = -1;\n\t\t\t\t\trange.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;\n\t\t\t\t\tws = opts.dense ? ([]/*:any*/) : ({}/*:any*/); merges = [];\n\t\t\t\t\trowinfo = [];\n\t\t\t\t\tintable = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'table-row-group': // 9.1.9 <table:table-row-group>\n\t\t\t\tif(Rn[1] === \"/\") --row_ol; else ++row_ol;\n\t\t\t\tbreak;\n\t\t\tcase 'table-row': case '行': // 9.1.3 <table:table-row>\n\t\t\t\tif(Rn[1] === '/') { R+=rowpeat; rowpeat = 1; break; }\n\t\t\t\trowtag = parsexmltag(Rn[0], false);\n\t\t\t\tif(rowtag['行号']) R = rowtag['行号'] - 1; else if(R == -1) R = 0;\n\t\t\t\trowpeat = +rowtag['number-rows-repeated'] || 1;\n\t\t\t\t/* TODO: remove magic */\n\t\t\t\tif(rowpeat < 10) for(i = 0; i < rowpeat; ++i) if(row_ol > 0) rowinfo[R + i] = {level: row_ol};\n\t\t\t\tC = -1; break;\n\t\t\tcase 'covered-table-cell': // 9.1.5 <table:covered-table-cell>\n\t\t\t\tif(Rn[1] !== '/') ++C;\n\t\t\t\tif(opts.sheetStubs) {\n\t\t\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = {t:'z'}; }\n\t\t\t\t\telse ws[encode_cell({r:R,c:C})] = {t:'z'};\n\t\t\t\t}\n\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\tbreak; /* stub */\n\t\t\tcase 'table-cell': case '数据':\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) === '/') {\n\t\t\t\t\t++C;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tq = ({t:'z', v:null/*:: , z:null, w:\"\",c:[]*/}/*:any*/);\n\t\t\t\t\tif(ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\n\t\t\t\t\tif((ctag['数据类型'] || ctag['value-type']) == \"string\") {\n\t\t\t\t\t\tq.t = \"s\"; q.v = unescapexml(ctag['string-value'] || \"\");\n\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\tif(!ws[R]) ws[R] = [];\n\t\t\t\t\t\t\tws[R][C] = q;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tws[encode_cell({r:R,c:C})] = q;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tC+= colpeat-1;\n\t\t\t\t} else if(Rn[1]!=='/') {\n\t\t\t\t\t++C;\n\t\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\t\tcolpeat = 1;\n\t\t\t\t\tvar rptR = rowpeat ? R + rowpeat - 1 : R;\n\t\t\t\t\tif(C > range.e.c) range.e.c = C;\n\t\t\t\t\tif(C < range.s.c) range.s.c = C;\n\t\t\t\t\tif(R < range.s.r) range.s.r = R;\n\t\t\t\t\tif(rptR > range.e.r) range.e.r = rptR;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcomments = []; comment = ({}/*:any*/);\n\t\t\t\t\tq = ({t:ctag['数据类型'] || ctag['value-type'], v:null/*:: , z:null, w:\"\",c:[]*/}/*:any*/);\n\t\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\t\tif(ctag.formula) ctag.formula = unescapexml(ctag.formula);\n\t\t\t\t\t\tif(ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\n\t\t\t\t\t\t\tmR = parseInt(ctag['number-matrix-rows-spanned'],10) || 0;\n\t\t\t\t\t\t\tmC = parseInt(ctag['number-matrix-columns-spanned'],10) || 0;\n\t\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\t\tq.F = encode_range(mrange);\n\t\t\t\t\t\t\tarrayf.push([mrange, q.F]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ctag.formula) q.f = ods_to_csf_formula(ctag.formula);\n\t\t\t\t\t\telse for(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\t\t\tif(R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r)\n\t\t\t\t\t\t\t\tif(C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\t\t\tq.F = arrayf[i][1];\n\t\t\t\t\t}\n\t\t\t\t\tif(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n\t\t\t\t\t\tmR = parseInt(ctag['number-rows-spanned'],10) || 0;\n\t\t\t\t\t\tmC = parseInt(ctag['number-columns-spanned'],10) || 0;\n\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\tmerges.push(mrange);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* 19.675.2 table:number-columns-repeated */\n\t\t\t\t\tif(ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\n\n\t\t\t\t\t/* 19.385 office:value-type */\n\t\t\t\t\tswitch(q.t) {\n\t\t\t\t\t\tcase 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']); break;\n\t\t\t\t\t\tcase 'float': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'date': q.t = 'd'; q.v = parseDate(ctag['date-value']);\n\t\t\t\t\t\t\tif(!opts.cellDates) { q.t = 'n'; q.v = datenum(q.v); }\n\t\t\t\t\t\t\tq.z = 'm/d/yy'; break;\n\t\t\t\t\t\tcase 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400;\n\t\t\t\t\t\t\tif(opts.cellDates) { q.t = 'd'; q.v = numdate(q.v); }\n\t\t\t\t\t\t\tq.z = 'HH:MM:SS'; break;\n\t\t\t\t\t\tcase 'number': q.t = 'n'; q.v = parseFloat(ctag['数据数值']); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif(q.t === 'string' || q.t === 'text' || !q.t) {\n\t\t\t\t\t\t\t\tq.t = 's';\n\t\t\t\t\t\t\t\tif(ctag['string-value'] != null) { textp = unescapexml(ctag['string-value']); textR = []; }\n\t\t\t\t\t\t\t} else throw new Error('Unsupported value type ' + q.t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tisstub = false;\n\t\t\t\t\tif(q.t === 's') {\n\t\t\t\t\t\tq.v = textp || '';\n\t\t\t\t\t\tif(textR.length) q.R = textR;\n\t\t\t\t\t\tisstub = textpidx == 0;\n\t\t\t\t\t}\n\t\t\t\t\tif(atag.Target) q.l = atag;\n\t\t\t\t\tif(comments.length > 0) { q.c = comments; comments = []; }\n\t\t\t\t\tif(textp && opts.cellText !== false) q.w = textp;\n\t\t\t\t\tif(isstub) { q.t = \"z\"; delete q.v; }\n\t\t\t\t\tif(!isstub || opts.sheetStubs) {\n\t\t\t\t\t\tif(!(opts.sheetRows && opts.sheetRows <= R)) {\n\t\t\t\t\t\t\tfor(var rpt = 0; rpt < rowpeat; ++rpt) {\n\t\t\t\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!ws[R + rpt]) ws[R + rpt] = [];\n\t\t\t\t\t\t\t\t\tws[R + rpt][C] = rpt == 0 ? q : dup(q);\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[R + rpt][C + colpeat] = dup(q);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tws[encode_cell({r:R + rpt,c:C})] = q;\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[encode_cell({r:R + rpt,c:C + colpeat})] = dup(q);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(range.e.c <= C) range.e.c = C;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tC += colpeat-1; colpeat = 0;\n\t\t\t\t\tq = {/*:: t:\"\", v:null, z:null, w:\"\",c:[]*/};\n\t\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\t}\n\t\t\t\tatag = ({}/*:any*/);\n\t\t\t\tbreak; // 9.1.4 <table:table-cell>\n\n\t\t\t/* pure state */\n\t\t\tcase 'document': // TODO: <office:document> is the root for FODS\n\t\t\tcase 'document-content': case '电子表格文档': // 3.1.3.2 <office:document-content>\n\t\t\tcase 'spreadsheet': case '主体': // 3.7 <office:spreadsheet>\n\t\t\tcase 'scripts': // 3.12 <office:scripts>\n\t\t\tcase 'styles': // TODO <office:styles>\n\t\t\tcase 'font-face-decls': // 3.14 <office:font-face-decls>\n\t\t\tcase 'master-styles': // 3.15.4 <office:master-styles> -- relevant for FODS\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\n\t\t\tcase 'annotation': // 14.1 <office:annotation>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t\tcomment.t = textp;\n\t\t\t\t\tif(textR.length) /*::(*/comment/*:: :any)*/.R = textR;\n\t\t\t\t\tcomment.a = creator;\n\t\t\t\t\tcomments.push(comment);\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {state.push([Rn[3], false]);}\n\t\t\t\tcreator = \"\"; creatoridx = 0;\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'creator': // 4.3.2.7 <dc:creator>\n\t\t\t\tif(Rn[1]==='/') { creator = str.slice(creatoridx,Rn.index); }\n\t\t\t\telse creatoridx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\t/* ignore state */\n\t\t\tcase 'meta': case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\n\t\t\tcase 'settings': // TODO: <office:settings>\n\t\t\tcase 'config-item-set': // TODO: <office:config-item-set>\n\t\t\tcase 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\n\t\t\tcase 'config-item-map-entry': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'config-item-map-named': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'shapes': // 9.2.8 <table:shapes>\n\t\t\tcase 'frame': // 10.4.2 <draw:frame>\n\t\t\tcase 'text-box': // 10.4.3 <draw:text-box>\n\t\t\tcase 'image': // 10.4.4 <draw:image>\n\t\t\tcase 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\n\t\t\tcase 'list-style': // 16.30 <text:list-style>\n\t\t\tcase 'form': // 13.13 <form:form>\n\t\t\tcase 'dde-links': // 9.8 <table:dde-links>\n\t\t\tcase 'event-listeners': // TODO\n\t\t\tcase 'chart': // TODO\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'scientific-number': // TODO: <number:scientific-number>\n\t\t\t\tbreak;\n\t\t\tcase 'currency-symbol': // TODO: <number:currency-symbol>\n\t\t\t\tbreak;\n\t\t\tcase 'currency-style': // TODO: <number:currency-style>\n\t\t\t\tbreak;\n\t\t\tcase 'number-style': // 16.27.2 <number:number-style>\n\t\t\tcase 'percentage-style': // 16.27.9 <number:percentage-style>\n\t\t\tcase 'date-style': // 16.27.10 <number:date-style>\n\t\t\tcase 'time-style': // 16.27.18 <number:time-style>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tnumber_format_map[NFtag.name] = NF;\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tNF = \"\";\n\t\t\t\t\tNFtag = parsexmltag(Rn[0], false);\n\t\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t\t} break;\n\n\t\t\tcase 'script': break; // 3.13 <office:script>\n\t\t\tcase 'libraries': break; // TODO: <ooo:libraries>\n\t\t\tcase 'automatic-styles': break; // 3.15.3 <office:automatic-styles>\n\n\t\t\tcase 'default-style': // TODO: <style:default-style>\n\t\t\tcase 'page-layout': break; // TODO: <style:page-layout>\n\t\t\tcase 'style': // 16.2 <style:style>\n\t\t\t\tbreak;\n\t\t\tcase 'map': break; // 16.3 <style:map>\n\t\t\tcase 'font-face': break; // 16.21 <style:font-face>\n\n\t\t\tcase 'paragraph-properties': break; // 17.6 <style:paragraph-properties>\n\t\t\tcase 'table-properties': break; // 17.15 <style:table-properties>\n\t\t\tcase 'table-column-properties': break; // 17.16 <style:table-column-properties>\n\t\t\tcase 'table-row-properties': break; // 17.17 <style:table-row-properties>\n\t\t\tcase 'table-cell-properties': break; // 17.18 <style:table-cell-properties>\n\n\t\t\tcase 'number': // 16.27.3 <number:number>\n\t\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t\t\tNF += number_formats_ods[Rn[3]][tag.style==='long'?1:0]; break;\n\t\t\t\t} break;\n\n\t\t\tcase 'fraction': break; // TODO 16.27.6 <number:fraction>\n\n\t\t\tcase 'day': // 16.27.11 <number:day>\n\t\t\tcase 'month': // 16.27.12 <number:month>\n\t\t\tcase 'year': // 16.27.13 <number:year>\n\t\t\tcase 'era': // 16.27.14 <number:era>\n\t\t\tcase 'day-of-week': // 16.27.15 <number:day-of-week>\n\t\t\tcase 'week-of-year': // 16.27.16 <number:week-of-year>\n\t\t\tcase 'quarter': // 16.27.17 <number:quarter>\n\t\t\tcase 'hours': // 16.27.19 <number:hours>\n\t\t\tcase 'minutes': // 16.27.20 <number:minutes>\n\t\t\tcase 'seconds': // 16.27.21 <number:seconds>\n\t\t\tcase 'am-pm': // 16.27.22 <number:am-pm>\n\t\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t\t\tNF += number_formats_ods[Rn[3]][tag.style==='long'?1:0]; break;\n\t\t\t\t} break;\n\n\t\t\tcase 'boolean-style': break; // 16.27.23 <number:boolean-style>\n\t\t\tcase 'boolean': break; // 16.27.24 <number:boolean>\n\t\t\tcase 'text-style': break; // 16.27.25 <number:text-style>\n\t\t\tcase 'text': // 16.27.26 <number:text>\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") switch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'number-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\t\tNF += str.slice(pidx, Rn.index);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\tcase 'named-range': // 9.4.12 <table:named-range>\n\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t_Ref = ods_to_csf_3D(tag['cell-range-address']);\n\t\t\t\tvar nrange = ({Name:tag.name, Ref:_Ref[0] + '!' + _Ref[1]}/*:any*/);\n\t\t\t\tif(intable) nrange.Sheet = SheetNames.length;\n\t\t\t\tWB.Names.push(nrange);\n\t\t\t\tbreak;\n\n\t\t\tcase 'text-content': break; // 16.27.27 <number:text-content>\n\t\t\tcase 'text-properties': break; // 16.27.27 <style:text-properties>\n\t\t\tcase 'embedded-text': break; // 16.27.4 <number:embedded-text>\n\n\t\t\tcase 'body': case '电子表格': break; // 3.3 16.9.6 19.726.3\n\n\t\t\tcase 'forms': break; // 12.25.2 13.2\n\t\t\tcase 'table-column': break; // 9.1.6 <table:table-column>\n\t\t\tcase 'table-header-rows': break; // 9.1.7 <table:table-header-rows>\n\t\t\tcase 'table-rows': break; // 9.1.12 <table:table-rows>\n\t\t\t/* TODO: outline levels */\n\t\t\tcase 'table-column-group': break; // 9.1.10 <table:table-column-group>\n\t\t\tcase 'table-header-columns': break; // 9.1.11 <table:table-header-columns>\n\t\t\tcase 'table-columns': break; // 9.1.12 <table:table-columns>\n\n\t\t\tcase 'null-date': break; // 9.4.2 <table:null-date> TODO: date1904\n\n\t\t\tcase 'graphic-properties': break; // 17.21 <style:graphic-properties>\n\t\t\tcase 'calculation-settings': break; // 9.4.1 <table:calculation-settings>\n\t\t\tcase 'named-expressions': break; // 9.4.11 <table:named-expressions>\n\t\t\tcase 'label-range': break; // 9.4.9 <table:label-range>\n\t\t\tcase 'label-ranges': break; // 9.4.10 <table:label-ranges>\n\t\t\tcase 'named-expression': break; // 9.4.13 <table:named-expression>\n\t\t\tcase 'sort': break; // 9.4.19 <table:sort>\n\t\t\tcase 'sort-by': break; // 9.4.20 <table:sort-by>\n\t\t\tcase 'sort-groups': break; // 9.4.22 <table:sort-groups>\n\n\t\t\tcase 'tab': break; // 6.1.4 <text:tab>\n\t\t\tcase 'line-break': break; // 6.1.5 <text:line-break>\n\t\t\tcase 'span': break; // 6.1.7 <text:span>\n\t\t\tcase 'p': case '文本串': // 5.1.3 <text:p>\n\t\t\t\tif(['master-styles'].indexOf(state[state.length-1][0]) > -1) break;\n\t\t\t\tif(Rn[1]==='/' && (!ctag || !ctag['string-value'])) {\n\t\t\t\t\tvar ptp = parse_text_p(str.slice(textpidx,Rn.index), textptag);\n\t\t\t\t\ttextp = (textp.length > 0 ? textp + \"\\n\" : \"\") + ptp[0];\n\t\t\t\t} else { textptag = parsexmltag(Rn[0], false); textpidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak; // <text:p>\n\t\t\tcase 's': break; // <text:s>\n\n\t\t\tcase 'database-range': // 9.4.15 <table:database-range>\n\t\t\t\tif(Rn[1]==='/') break;\n\t\t\t\ttry {\n\t\t\t\t\t_Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\n\t\t\t\t\tSheets[_Ref[0]]['!autofilter'] = { ref:_Ref[1] };\n\t\t\t\t} catch(e) {/* empty */}\n\t\t\t\tbreak;\n\n\t\t\tcase 'date': break; // <*:date>\n\n\t\t\tcase 'object': break; // 10.4.6.2 <draw:object>\n\t\t\tcase 'title': case '标题': break; // <*:title> OR <uof:标题>\n\t\t\tcase 'desc': break; // <*:desc>\n\t\t\tcase 'binary-data': break; // 10.4.5 TODO: b64 blob\n\n\t\t\t/* 9.2 Advanced Tables */\n\t\t\tcase 'table-source': break; // 9.2.6\n\t\t\tcase 'scenario': break; // 9.2.6\n\n\t\t\tcase 'iteration': break; // 9.4.3 <table:iteration>\n\t\t\tcase 'content-validations': break; // 9.4.4 <table:\n\t\t\tcase 'content-validation': break; // 9.4.5 <table:\n\t\t\tcase 'help-message': break; // 9.4.6 <table:\n\t\t\tcase 'error-message': break; // 9.4.7 <table:\n\t\t\tcase 'database-ranges': break; // 9.4.14 <table:database-ranges>\n\t\t\tcase 'filter': break; // 9.5.2 <table:filter>\n\t\t\tcase 'filter-and': break; // 9.5.3 <table:filter-and>\n\t\t\tcase 'filter-or': break; // 9.5.4 <table:filter-or>\n\t\t\tcase 'filter-condition': break; // 9.5.5 <table:filter-condition>\n\n\t\t\tcase 'list-level-style-bullet': break; // 16.31 <text:\n\t\t\tcase 'list-level-style-number': break; // 16.32 <text:\n\t\t\tcase 'list-level-properties': break; // 17.19 <style:\n\n\t\t\t/* 7.3 Document Fields */\n\t\t\tcase 'sender-firstname': // 7.3.6.2\n\t\t\tcase 'sender-lastname': // 7.3.6.3\n\t\t\tcase 'sender-initials': // 7.3.6.4\n\t\t\tcase 'sender-title': // 7.3.6.5\n\t\t\tcase 'sender-position': // 7.3.6.6\n\t\t\tcase 'sender-email': // 7.3.6.7\n\t\t\tcase 'sender-phone-private': // 7.3.6.8\n\t\t\tcase 'sender-fax': // 7.3.6.9\n\t\t\tcase 'sender-company': // 7.3.6.10\n\t\t\tcase 'sender-phone-work': // 7.3.6.11\n\t\t\tcase 'sender-street': // 7.3.6.12\n\t\t\tcase 'sender-city': // 7.3.6.13\n\t\t\tcase 'sender-postal-code': // 7.3.6.14\n\t\t\tcase 'sender-country': // 7.3.6.15\n\t\t\tcase 'sender-state-or-province': // 7.3.6.16\n\t\t\tcase 'author-name': // 7.3.7.1\n\t\t\tcase 'author-initials': // 7.3.7.2\n\t\t\tcase 'chapter': // 7.3.8\n\t\t\tcase 'file-name': // 7.3.9\n\t\t\tcase 'template-name': // 7.3.9\n\t\t\tcase 'sheet-name': // 7.3.9\n\t\t\t\tbreak;\n\n\t\t\tcase 'event-listener':\n\t\t\t\tbreak;\n\t\t\t/* TODO: FODS Properties */\n\t\t\tcase 'initial-creator':\n\t\t\tcase 'creation-date':\n\t\t\tcase 'print-date':\n\t\t\tcase 'generator':\n\t\t\tcase 'document-statistic':\n\t\t\tcase 'user-defined':\n\t\t\tcase 'editing-duration':\n\t\t\tcase 'editing-cycles':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: FODS Config */\n\t\t\tcase 'config-item':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: style tokens */\n\t\t\tcase 'page-number': break; // TODO <text:page-number>\n\t\t\tcase 'page-count': break; // TODO <text:page-count>\n\t\t\tcase 'time': break; // TODO <text:time>\n\n\t\t\t/* 9.3 Advanced Table Cells */\n\t\t\tcase 'cell-range-source': break; // 9.3.1 <table:\n\t\t\tcase 'detective': break; // 9.3.2 <table:\n\t\t\tcase 'operation': break; // 9.3.3 <table:\n\t\t\tcase 'highlighted-range': break; // 9.3.4 <table:\n\n\t\t\t/* 9.6 Data Pilot Tables <table: */\n\t\t\tcase 'data-pilot-table': // 9.6.3\n\t\t\tcase 'source-cell-range': // 9.6.5\n\t\t\tcase 'source-service': // 9.6.6\n\t\t\tcase 'data-pilot-field': // 9.6.7\n\t\t\tcase 'data-pilot-level': // 9.6.8\n\t\t\tcase 'data-pilot-subtotals': // 9.6.9\n\t\t\tcase 'data-pilot-subtotal': // 9.6.10\n\t\t\tcase 'data-pilot-members': // 9.6.11\n\t\t\tcase 'data-pilot-member': // 9.6.12\n\t\t\tcase 'data-pilot-display-info': // 9.6.13\n\t\t\tcase 'data-pilot-sort-info': // 9.6.14\n\t\t\tcase 'data-pilot-layout-info': // 9.6.15\n\t\t\tcase 'data-pilot-field-reference': // 9.6.16\n\t\t\tcase 'data-pilot-groups': // 9.6.17\n\t\t\tcase 'data-pilot-group': // 9.6.18\n\t\t\tcase 'data-pilot-group-member': // 9.6.19\n\t\t\t\tbreak;\n\n\t\t\t/* 10.3 Drawing Shapes */\n\t\t\tcase 'rect': // 10.3.2\n\t\t\t\tbreak;\n\n\t\t\t/* 14.6 DDE Connections */\n\t\t\tcase 'dde-connection-decls': // 14.6.2 <text:\n\t\t\tcase 'dde-connection-decl': // 14.6.3 <text:\n\t\t\tcase 'dde-link': // 14.6.4 <table:\n\t\t\tcase 'dde-source': // 14.6.5 <office:\n\t\t\t\tbreak;\n\n\t\t\tcase 'properties': break; // 13.7 <form:properties>\n\t\t\tcase 'property': break; // 13.8 <form:property>\n\n\t\t\tcase 'a': // 6.1.8 hyperlink\n\t\t\t\tif(Rn[1]!== '/') {\n\t\t\t\t\tatag = parsexmltag(Rn[0], false);\n\t\t\t\t\tif(!atag.href) break;\n\t\t\t\t\tatag.Target = unescapexml(atag.href); delete atag.href;\n\t\t\t\t\tif(atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\n\t\t\t\t\t\t_Ref = ods_to_csf_3D(atag.Target.slice(1));\n\t\t\t\t\t\tatag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\n\t\t\t\t\t} else if(atag.Target.match(/^\\.\\.[\\\\\\/]/)) atag.Target = atag.Target.slice(3);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t/* non-standard */\n\t\t\tcase 'table-protection': break;\n\t\t\tcase 'data-pilot-grand-total': break; // <table:\n\t\t\tcase 'office-document-common-attrs': break; // bare\n\t\t\tdefault: switch(Rn[2]) {\n\t\t\t\tcase 'dc:':       // TODO: properties\n\t\t\t\tcase 'calcext:':  // ignore undocumented extensions\n\t\t\t\tcase 'loext:':    // ignore undocumented extensions\n\t\t\t\tcase 'ooo:':      // ignore undocumented extensions\n\t\t\t\tcase 'chartooo:': // ignore undocumented extensions\n\t\t\t\tcase 'draw:':     // TODO: drawing\n\t\t\t\tcase 'style:':    // TODO: styles\n\t\t\t\tcase 'chart:':    // TODO: charts\n\t\t\t\tcase 'form:':     // TODO: forms\n\t\t\t\tcase 'uof:':      // TODO: uof\n\t\t\t\tcase '表:':       // TODO: uof\n\t\t\t\tcase '字:':       // TODO: uof\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts.WTF) throw new Error(Rn);\n\t\t\t}\n\t\t}\n\t\tvar out/*:Workbook*/ = ({\n\t\t\tSheets: Sheets,\n\t\t\tSheetNames: SheetNames,\n\t\t\tWorkbook: WB\n\t\t}/*:any*/);\n\t\tif(opts.bookSheets) delete /*::(*/out/*:: :any)*/.Sheets;\n\t\treturn out;\n}\n\nfunction parse_ods(zip/*:ZIPFile*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\topts = opts || ({}/*:any*/);\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\n\tvar content = getzipstr(zip, 'content.xml');\n\tif(!content) throw new Error(\"Missing content.xml in ODS / UOF file\");\n\tvar wb = parse_content_xml(utf8read(content), opts);\n\tif(safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\n\treturn wb;\n}\nfunction parse_fods(data/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\treturn parse_content_xml(data, opts);\n}\n\n/* OpenDocument */\nvar write_styles_ods/*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */(function() {\n\tvar master_styles = [\n\t\t'<office:master-styles>',\n\t\t\t'<style:master-page style:name=\"mp1\" style:page-layout-name=\"mp1\">',\n\t\t\t\t'<style:header/>',\n\t\t\t\t'<style:header-left style:display=\"false\"/>',\n\t\t\t\t'<style:footer/>',\n\t\t\t\t'<style:footer-left style:display=\"false\"/>',\n\t\t\t'</style:master-page>',\n\t\t'</office:master-styles>'\n\t].join(\"\");\n\n\tvar payload = '<office:document-styles ' + wxt_helper({\n\t\t'xmlns:office':   \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t'xmlns:table':    \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t'xmlns:style':    \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t'xmlns:text':     \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t'xmlns:draw':     \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t'xmlns:fo':       \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t'xmlns:xlink':    \"http://www.w3.org/1999/xlink\",\n\t\t'xmlns:dc':       \"http://purl.org/dc/elements/1.1/\",\n\t\t'xmlns:number':   \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t'xmlns:svg':      \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t'xmlns:of':       \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t'office:version': \"1.2\"\n\t}) + '>' + master_styles + '</office:document-styles>';\n\n\treturn function wso(/*::wb, opts*/) {\n\t\treturn XML_HEADER + payload;\n\t};\n})();\nvar write_content_ods/*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */(function() {\n\t/* 6.1.2 White Space Characters */\n\tvar write_text_p = function(text/*:string*/)/*:string*/ {\n\t\treturn escapexml(text)\n\t\t\t.replace(/  +/g, function($$){return '<text:s text:c=\"'+$$.length+'\"/>';})\n\t\t\t.replace(/\\t/g, \"<text:tab/>\")\n\t\t\t.replace(/\\n/g, \"</text:p><text:p>\")\n\t\t\t.replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\n\t};\n\n\tvar null_cell_xml = '          <table:table-cell />\\n';\n\tvar covered_cell_xml = '          <table:covered-table-cell/>\\n';\n\tvar write_ws = function(ws, wb/*:Workbook*/, i/*:number*//*::, opts*/)/*:string*/ {\n\t\t/* Section 9 Tables */\n\t\tvar o/*:Array<string>*/ = [];\n\t\to.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\" table:style-name=\"ta1\">\\n');\n\t\tvar R=0,C=0, range = decode_range(ws['!ref']||\"A1\");\n\t\tvar marr/*:Array<Range>*/ = ws['!merges'] || [], mi = 0;\n\t\tvar dense = Array.isArray(ws);\n\t\tif(ws[\"!cols\"]) {\n\t\t\tfor(C = 0; C <= range.e.c; ++C) o.push('        <table:table-column' + (ws[\"!cols\"][C] ? ' table:style-name=\"co' + ws[\"!cols\"][C].ods + '\"' : '') + '></table:table-column>\\n');\n\t\t}\n\t\tvar H = \"\", ROWS = ws[\"!rows\"]||[];\n\t\tfor(R = 0; R < range.s.r; ++R) {\n\t\t\tH = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n\t\t\to.push('        <table:table-row' + H + '></table:table-row>\\n');\n\t\t}\n\t\tfor(; R <= range.e.r; ++R) {\n\t\t\tH = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n\t\t\to.push('        <table:table-row' + H + '>\\n');\n\t\t\tfor(C=0; C < range.s.c; ++C) o.push(null_cell_xml);\n\t\t\tfor(; C <= range.e.c; ++C) {\n\t\t\t\tvar skip = false, ct = {}, textp = \"\";\n\t\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\t\tct['table:number-columns-spanned'] = (marr[mi].e.c - marr[mi].s.c + 1);\n\t\t\t\t\tct['table:number-rows-spanned'] =    (marr[mi].e.r - marr[mi].s.r + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(skip) { o.push(covered_cell_xml); continue; }\n\t\t\t\tvar ref = encode_cell({r:R, c:C}), cell = dense ? (ws[R]||[])[C]: ws[ref];\n\t\t\t\tif(cell && cell.f) {\n\t\t\t\t\tct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\n\t\t\t\t\tif(cell.F) {\n\t\t\t\t\t\tif(cell.F.slice(0, ref.length) == ref) {\n\t\t\t\t\t\t\tvar _Fref = decode_range(cell.F);\n\t\t\t\t\t\t\tct['table:number-matrix-columns-spanned'] = (_Fref.e.c - _Fref.s.c + 1);\n\t\t\t\t\t\t\tct['table:number-matrix-rows-spanned'] =    (_Fref.e.r - _Fref.s.r + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!cell) { o.push(null_cell_xml); continue; }\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\ttextp = (cell.v ? 'TRUE' : 'FALSE');\n\t\t\t\t\t\tct['office:value-type'] = \"boolean\";\n\t\t\t\t\t\tct['office:boolean-value'] = (cell.v ? 'true' : 'false');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\ttextp = (cell.w||String(cell.v||0));\n\t\t\t\t\t\tct['office:value-type'] = \"float\";\n\t\t\t\t\t\tct['office:value'] = (cell.v||0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 's': case 'str':\n\t\t\t\t\t\ttextp = cell.v == null ? \"\" : cell.v;\n\t\t\t\t\t\tct['office:value-type'] = \"string\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\ttextp = (cell.w||(parseDate(cell.v).toISOString()));\n\t\t\t\t\t\tct['office:value-type'] = \"date\";\n\t\t\t\t\t\tct['office:date-value'] = (parseDate(cell.v).toISOString());\n\t\t\t\t\t\tct['table:style-name'] = \"ce1\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t//case 'e':\n\t\t\t\t\tdefault: o.push(null_cell_xml); continue;\n\t\t\t\t}\n\t\t\t\tvar text_p = write_text_p(textp);\n\t\t\t\tif(cell.l && cell.l.Target) {\n\t\t\t\t\tvar _tgt = cell.l.Target;\n\t\t\t\t\t_tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\n\t\t\t\t\t// TODO: choose correct parent path format based on link delimiters\n\t\t\t\t\tif(_tgt.charAt(0) != \"#\" && !_tgt.match(/^\\w+:/)) _tgt = '../' + _tgt;\n\t\t\t\t\ttext_p = writextag('text:a', text_p, {'xlink:href': _tgt.replace(/&/g, \"&amp;\")});\n\t\t\t\t}\n\t\t\t\to.push('          ' + writextag('table:table-cell', writextag('text:p', text_p, {}), ct) + '\\n');\n\t\t\t}\n\t\t\to.push('        </table:table-row>\\n');\n\t\t}\n\t\to.push('      </table:table>\\n');\n\t\treturn o.join(\"\");\n\t};\n\n\tvar write_automatic_styles_ods = function(o/*:Array<string>*/, wb) {\n\t\to.push(' <office:automatic-styles>\\n');\n\n\t\to.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\n\t\to.push('   <number:month number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:day number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:year/>\\n');\n\t\to.push('  </number:date-style>\\n');\n\n\t\t/* column styles */\n\t\tvar cidx = 0;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tif(ws[\"!cols\"]) {\n\t\t\t\tfor(var C = 0; C < ws[\"!cols\"].length; ++C) if(ws[\"!cols\"][C]) {\n\t\t\t\t\tvar colobj = ws[\"!cols\"][C];\n\t\t\t\t\tif(colobj.width == null && colobj.wpx == null && colobj.wch == null) continue;\n\t\t\t\t\tprocess_col(colobj);\n\t\t\t\t\tcolobj.ods = cidx;\n\t\t\t\t\tvar w = ws[\"!cols\"][C].wpx + \"px\";\n\t\t\t\t\to.push('  <style:style style:name=\"co' + cidx + '\" style:family=\"table-column\">\\n');\n\t\t\t\t\to.push('   <style:table-column-properties fo:break-before=\"auto\" style:column-width=\"' + w + '\"/>\\n');\n\t\t\t\t\to.push('  </style:style>\\n');\n\t\t\t\t\t++cidx;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/* row styles */\n\t\tvar ridx = 0;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tif(ws[\"!rows\"]) {\n\t\t\t\tfor(var R = 0; R < ws[\"!rows\"].length; ++R) if(ws[\"!rows\"][R]) {\n\t\t\t\t\tws[\"!rows\"][R].ods = ridx;\n\t\t\t\t\tvar h = ws[\"!rows\"][R].hpx + \"px\";\n\t\t\t\t\to.push('  <style:style style:name=\"ro' + ridx + '\" style:family=\"table-row\">\\n');\n\t\t\t\t\to.push('   <style:table-row-properties fo:break-before=\"auto\" style:row-height=\"' + h + '\"/>\\n');\n\t\t\t\t\to.push('  </style:style>\\n');\n\t\t\t\t\t++ridx;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/* table */\n\t\to.push('  <style:style style:name=\"ta1\" style:family=\"table\" style:master-page-name=\"mp1\">\\n');\n\t\to.push('   <style:table-properties table:display=\"true\" style:writing-mode=\"lr-tb\"/>\\n');\n\t\to.push('  </style:style>\\n');\n\n\t\t/* table cells, text */\n\t\to.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\n\n\t\t/* page-layout */\n\n\t\to.push(' </office:automatic-styles>\\n');\n\t};\n\n\treturn function wcx(wb, opts) {\n\t\tvar o = [XML_HEADER];\n\t\t/* 3.1.3.2 */\n\t\tvar attr = wxt_helper({\n\t\t\t'xmlns:office':       \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t\t'xmlns:table':        \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t\t'xmlns:style':        \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t\t'xmlns:text':         \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t\t'xmlns:draw':         \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t\t'xmlns:fo':           \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t\t'xmlns:xlink':        \"http://www.w3.org/1999/xlink\",\n\t\t\t'xmlns:dc':           \"http://purl.org/dc/elements/1.1/\",\n\t\t\t'xmlns:meta':         \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\n\t\t\t'xmlns:number':       \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t\t'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\n\t\t\t'xmlns:svg':          \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t\t'xmlns:chart':        \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\n\t\t\t'xmlns:dr3d':         \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\n\t\t\t'xmlns:math':         \"http://www.w3.org/1998/Math/MathML\",\n\t\t\t'xmlns:form':         \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\n\t\t\t'xmlns:script':       \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\n\t\t\t'xmlns:ooo':          \"http://openoffice.org/2004/office\",\n\t\t\t'xmlns:ooow':         \"http://openoffice.org/2004/writer\",\n\t\t\t'xmlns:oooc':         \"http://openoffice.org/2004/calc\",\n\t\t\t'xmlns:dom':          \"http://www.w3.org/2001/xml-events\",\n\t\t\t'xmlns:xforms':       \"http://www.w3.org/2002/xforms\",\n\t\t\t'xmlns:xsd':          \"http://www.w3.org/2001/XMLSchema\",\n\t\t\t'xmlns:xsi':          \"http://www.w3.org/2001/XMLSchema-instance\",\n\t\t\t'xmlns:sheet':        \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\n\t\t\t'xmlns:rpt':          \"http://openoffice.org/2005/report\",\n\t\t\t'xmlns:of':           \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t\t'xmlns:xhtml':        \"http://www.w3.org/1999/xhtml\",\n\t\t\t'xmlns:grddl':        \"http://www.w3.org/2003/g/data-view#\",\n\t\t\t'xmlns:tableooo':     \"http://openoffice.org/2009/table\",\n\t\t\t'xmlns:drawooo':      \"http://openoffice.org/2010/draw\",\n\t\t\t'xmlns:calcext':      \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\n\t\t\t'xmlns:loext':        \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\n\t\t\t'xmlns:field':        \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\n\t\t\t'xmlns:formx':        \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\n\t\t\t'xmlns:css3t':        \"http://www.w3.org/TR/css3-text/\",\n\t\t\t'office:version':     \"1.2\"\n\t\t});\n\n\t\tvar fods = wxt_helper({\n\t\t\t'xmlns:config':    \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\n\t\t\t'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\n\t\t});\n\n\t\tif(opts.bookType == \"fods\") {\n\t\t\to.push('<office:document' + attr + fods + '>\\n');\n\t\t\to.push(write_meta_ods().replace(/office:document-meta/g, \"office:meta\"));\n\t\t\t// TODO: settings (equiv of settings.xml for ODS)\n\t\t} else o.push('<office:document-content' + attr  + '>\\n');\n\t\t// o.push('  <office:scripts/>\\n');\n\t\twrite_automatic_styles_ods(o, wb);\n\t\to.push('  <office:body>\\n');\n\t\to.push('    <office:spreadsheet>\\n');\n\t\tfor(var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts));\n\t\to.push('    </office:spreadsheet>\\n');\n\t\to.push('  </office:body>\\n');\n\t\tif(opts.bookType == \"fods\") o.push('</office:document>');\n\t\telse o.push('</office:document-content>');\n\t\treturn o.join(\"\");\n\t};\n})();\n\nfunction write_ods(wb/*:any*/, opts/*:any*/) {\n\tif(opts.bookType == \"fods\") return write_content_ods(wb, opts);\n\n\tvar zip = zip_new();\n\tvar f = \"\";\n\n\tvar manifest/*:Array<Array<string> >*/ = [];\n\tvar rdf/*:Array<[string, string]>*/ = [];\n\n\t/* Part 3 Section 3.3 MIME Media Type */\n\tf = \"mimetype\";\n\tzip_add_file(zip, f, \"application/vnd.oasis.opendocument.spreadsheet\");\n\n\t/* Part 1 Section 2.2 Documents */\n\tf = \"content.xml\";\n\tzip_add_file(zip, f, write_content_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"ContentFile\"]);\n\n\t/* TODO: these are hard-coded styles to satiate excel */\n\tf = \"styles.xml\";\n\tzip_add_file(zip, f, write_styles_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"StylesFile\"]);\n\n\t/* TODO: this is hard-coded to satiate excel */\n\tf = \"meta.xml\";\n\tzip_add_file(zip, f, XML_HEADER + write_meta_ods(/*::wb, opts*/));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"MetadataFile\"]);\n\n\t/* Part 3 Section 6 Metadata Manifest File */\n\tf = \"manifest.rdf\";\n\tzip_add_file(zip, f, write_rdf(rdf/*, opts*/));\n\tmanifest.push([f, \"application/rdf+xml\"]);\n\n\t/* Part 3 Section 4 Manifest File */\n\tf = \"META-INF/manifest.xml\";\n\tzip_add_file(zip, f, write_manifest(manifest/*, opts*/));\n\n\treturn zip;\n}\n\n/*! sheetjs (C) 2013-present SheetJS -- http://sheetjs.com */\nfunction u8_to_dataview(array) {\n  return new DataView(array.buffer, array.byteOffset, array.byteLength);\n}\nfunction u8str(u8) {\n  return typeof TextDecoder != \"undefined\" ? new TextDecoder().decode(u8) : utf8read(a2s(u8));\n}\nfunction stru8(str) {\n  return typeof TextEncoder != \"undefined\" ? new TextEncoder().encode(str) : s2a(utf8write(str));\n}\nfunction u8contains(body, search) {\n  outer:\n    for (var L = 0; L <= body.length - search.length; ++L) {\n      for (var j = 0; j < search.length; ++j)\n        if (body[L + j] != search[j])\n          continue outer;\n      return true;\n    }\n  return false;\n}\nfunction u8concat(u8a) {\n  var len = u8a.reduce(function(acc, x) {\n    return acc + x.length;\n  }, 0);\n  var out = new Uint8Array(len);\n  var off = 0;\n  u8a.forEach(function(u8) {\n    out.set(u8, off);\n    off += u8.length;\n  });\n  return out;\n}\nfunction popcnt(x) {\n  x -= x >> 1 & 1431655765;\n  x = (x & 858993459) + (x >> 2 & 858993459);\n  return (x + (x >> 4) & 252645135) * 16843009 >>> 24;\n}\nfunction readDecimal128LE(buf, offset) {\n  var exp = (buf[offset + 15] & 127) << 7 | buf[offset + 14] >> 1;\n  var mantissa = buf[offset + 14] & 1;\n  for (var j = offset + 13; j >= offset; --j)\n    mantissa = mantissa * 256 + buf[j];\n  return (buf[offset + 15] & 128 ? -mantissa : mantissa) * Math.pow(10, exp - 6176);\n}\nfunction writeDecimal128LE(buf, offset, value) {\n  var exp = Math.floor(value == 0 ? 0 : Math.LOG10E * Math.log(Math.abs(value))) + 6176 - 20;\n  var mantissa = value / Math.pow(10, exp - 6176);\n  buf[offset + 15] |= exp >> 7;\n  buf[offset + 14] |= (exp & 127) << 1;\n  for (var i = 0; mantissa >= 1; ++i, mantissa /= 256)\n    buf[offset + i] = mantissa & 255;\n  buf[offset + 15] |= value >= 0 ? 0 : 128;\n}\nfunction parse_varint49(buf, ptr) {\n  var l = ptr ? ptr[0] : 0;\n  var usz = buf[l] & 127;\n  varint:\n    if (buf[l++] >= 128) {\n      usz |= (buf[l] & 127) << 7;\n      if (buf[l++] < 128)\n        break varint;\n      usz |= (buf[l] & 127) << 14;\n      if (buf[l++] < 128)\n        break varint;\n      usz |= (buf[l] & 127) << 21;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 28);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 35);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 42);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n    }\n  if (ptr)\n    ptr[0] = l;\n  return usz;\n}\nfunction write_varint49(v) {\n  var usz = new Uint8Array(7);\n  usz[0] = v & 127;\n  var L = 1;\n  sz:\n    if (v > 127) {\n      usz[L - 1] |= 128;\n      usz[L] = v >> 7 & 127;\n      ++L;\n      if (v <= 16383)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v >> 14 & 127;\n      ++L;\n      if (v <= 2097151)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v >> 21 & 127;\n      ++L;\n      if (v <= 268435455)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 256 >>> 21 & 127;\n      ++L;\n      if (v <= 34359738367)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 65536 >>> 21 & 127;\n      ++L;\n      if (v <= 4398046511103)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 16777216 >>> 21 & 127;\n      ++L;\n    }\n  return usz.slice(0, L);\n}\nfunction varint_to_i32(buf) {\n  var l = 0, i32 = buf[l] & 127;\n  varint:\n    if (buf[l++] >= 128) {\n      i32 |= (buf[l] & 127) << 7;\n      if (buf[l++] < 128)\n        break varint;\n      i32 |= (buf[l] & 127) << 14;\n      if (buf[l++] < 128)\n        break varint;\n      i32 |= (buf[l] & 127) << 21;\n      if (buf[l++] < 128)\n        break varint;\n      i32 |= (buf[l] & 127) << 28;\n    }\n  return i32;\n}\nfunction parse_shallow(buf) {\n  var out = [], ptr = [0];\n  while (ptr[0] < buf.length) {\n    var off = ptr[0];\n    var num = parse_varint49(buf, ptr);\n    var type = num & 7;\n    num = Math.floor(num / 8);\n    var len = 0;\n    var res;\n    if (num == 0)\n      break;\n    switch (type) {\n      case 0:\n        {\n          var l = ptr[0];\n          while (buf[ptr[0]++] >= 128)\n            ;\n          res = buf.slice(l, ptr[0]);\n        }\n        break;\n      case 5:\n        len = 4;\n        res = buf.slice(ptr[0], ptr[0] + len);\n        ptr[0] += len;\n        break;\n      case 1:\n        len = 8;\n        res = buf.slice(ptr[0], ptr[0] + len);\n        ptr[0] += len;\n        break;\n      case 2:\n        len = parse_varint49(buf, ptr);\n        res = buf.slice(ptr[0], ptr[0] + len);\n        ptr[0] += len;\n        break;\n      case 3:\n      case 4:\n      default:\n        throw new Error(\"PB Type \".concat(type, \" for Field \").concat(num, \" at offset \").concat(off));\n    }\n    var v = { data: res, type: type };\n    if (out[num] == null)\n      out[num] = [v];\n    else\n      out[num].push(v);\n  }\n  return out;\n}\nfunction write_shallow(proto) {\n  var out = [];\n  proto.forEach(function(field, idx) {\n    field.forEach(function(item) {\n      if (!item.data)\n        return;\n      out.push(write_varint49(idx * 8 + item.type));\n      if (item.type == 2)\n        out.push(write_varint49(item.data.length));\n      out.push(item.data);\n    });\n  });\n  return u8concat(out);\n}\nfunction mappa(data, cb) {\n  return (data == null ? void 0 : data.map(function(d) {\n    return cb(d.data);\n  })) || [];\n}\nfunction parse_iwa_file(buf) {\n  var _a;\n  var out = [], ptr = [0];\n  while (ptr[0] < buf.length) {\n    var len = parse_varint49(buf, ptr);\n    var ai = parse_shallow(buf.slice(ptr[0], ptr[0] + len));\n    ptr[0] += len;\n    var res = {\n      id: varint_to_i32(ai[1][0].data),\n      messages: []\n    };\n    ai[2].forEach(function(b) {\n      var mi = parse_shallow(b.data);\n      var fl = varint_to_i32(mi[3][0].data);\n      res.messages.push({\n        meta: mi,\n        data: buf.slice(ptr[0], ptr[0] + fl)\n      });\n      ptr[0] += fl;\n    });\n    if ((_a = ai[3]) == null ? void 0 : _a[0])\n      res.merge = varint_to_i32(ai[3][0].data) >>> 0 > 0;\n    out.push(res);\n  }\n  return out;\n}\nfunction write_iwa_file(ias) {\n  var bufs = [];\n  ias.forEach(function(ia) {\n    var ai = [];\n    ai[1] = [{ data: write_varint49(ia.id), type: 0 }];\n    ai[2] = [];\n    if (ia.merge != null)\n      ai[3] = [{ data: write_varint49(+!!ia.merge), type: 0 }];\n    var midata = [];\n    ia.messages.forEach(function(mi) {\n      midata.push(mi.data);\n      mi.meta[3] = [{ type: 0, data: write_varint49(mi.data.length) }];\n      ai[2].push({ data: write_shallow(mi.meta), type: 2 });\n    });\n    var aipayload = write_shallow(ai);\n    bufs.push(write_varint49(aipayload.length));\n    bufs.push(aipayload);\n    midata.forEach(function(mid) {\n      return bufs.push(mid);\n    });\n  });\n  return u8concat(bufs);\n}\nfunction parse_snappy_chunk(type, buf) {\n  if (type != 0)\n    throw new Error(\"Unexpected Snappy chunk type \".concat(type));\n  var ptr = [0];\n  var usz = parse_varint49(buf, ptr);\n  var chunks = [];\n  while (ptr[0] < buf.length) {\n    var tag = buf[ptr[0]] & 3;\n    if (tag == 0) {\n      var len = buf[ptr[0]++] >> 2;\n      if (len < 60)\n        ++len;\n      else {\n        var c = len - 59;\n        len = buf[ptr[0]];\n        if (c > 1)\n          len |= buf[ptr[0] + 1] << 8;\n        if (c > 2)\n          len |= buf[ptr[0] + 2] << 16;\n        if (c > 3)\n          len |= buf[ptr[0] + 3] << 24;\n        len >>>= 0;\n        len++;\n        ptr[0] += c;\n      }\n      chunks.push(buf.slice(ptr[0], ptr[0] + len));\n      ptr[0] += len;\n      continue;\n    } else {\n      var offset = 0, length = 0;\n      if (tag == 1) {\n        length = (buf[ptr[0]] >> 2 & 7) + 4;\n        offset = (buf[ptr[0]++] & 224) << 3;\n        offset |= buf[ptr[0]++];\n      } else {\n        length = (buf[ptr[0]++] >> 2) + 1;\n        if (tag == 2) {\n          offset = buf[ptr[0]] | buf[ptr[0] + 1] << 8;\n          ptr[0] += 2;\n        } else {\n          offset = (buf[ptr[0]] | buf[ptr[0] + 1] << 8 | buf[ptr[0] + 2] << 16 | buf[ptr[0] + 3] << 24) >>> 0;\n          ptr[0] += 4;\n        }\n      }\n      chunks = [u8concat(chunks)];\n      if (offset == 0)\n        throw new Error(\"Invalid offset 0\");\n      if (offset > chunks[0].length)\n        throw new Error(\"Invalid offset beyond length\");\n      if (length >= offset) {\n        chunks.push(chunks[0].slice(-offset));\n        length -= offset;\n        while (length >= chunks[chunks.length - 1].length) {\n          chunks.push(chunks[chunks.length - 1]);\n          length -= chunks[chunks.length - 1].length;\n        }\n      }\n      chunks.push(chunks[0].slice(-offset, -offset + length));\n    }\n  }\n  var o = u8concat(chunks);\n  if (o.length != usz)\n    throw new Error(\"Unexpected length: \".concat(o.length, \" != \").concat(usz));\n  return o;\n}\nfunction decompress_iwa_file(buf) {\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var t = buf[l++];\n    var len = buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16;\n    l += 3;\n    out.push(parse_snappy_chunk(t, buf.slice(l, l + len)));\n    l += len;\n  }\n  if (l !== buf.length)\n    throw new Error(\"data is not a valid framed stream!\");\n  return u8concat(out);\n}\nfunction compress_iwa_file(buf) {\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var c = Math.min(buf.length - l, 268435455);\n    var frame = new Uint8Array(4);\n    out.push(frame);\n    var usz = write_varint49(c);\n    var L = usz.length;\n    out.push(usz);\n    if (c <= 60) {\n      L++;\n      out.push(new Uint8Array([c - 1 << 2]));\n    } else if (c <= 256) {\n      L += 2;\n      out.push(new Uint8Array([240, c - 1 & 255]));\n    } else if (c <= 65536) {\n      L += 3;\n      out.push(new Uint8Array([244, c - 1 & 255, c - 1 >> 8 & 255]));\n    } else if (c <= 16777216) {\n      L += 4;\n      out.push(new Uint8Array([248, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255]));\n    } else if (c <= 4294967296) {\n      L += 5;\n      out.push(new Uint8Array([252, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255, c - 1 >>> 24 & 255]));\n    }\n    out.push(buf.slice(l, l + c));\n    L += c;\n    frame[0] = 0;\n    frame[1] = L & 255;\n    frame[2] = L >> 8 & 255;\n    frame[3] = L >> 16 & 255;\n    l += c;\n  }\n  return u8concat(out);\n}\nfunction parse_old_storage(buf, sst, rsst, v) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(4, true);\n  var data_offset = (v > 1 ? 12 : 8) + popcnt(flags & (v > 1 ? 3470 : 398)) * 4;\n  var ridx = -1, sidx = -1, ieee = NaN, dt = new Date(2001, 0, 1);\n  if (flags & 512) {\n    ridx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  data_offset += popcnt(flags & (v > 1 ? 12288 : 4096)) * 4;\n  if (flags & 16) {\n    sidx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  if (flags & 32) {\n    ieee = dv.getFloat64(data_offset, true);\n    data_offset += 8;\n  }\n  if (flags & 64) {\n    dt.setTime(dt.getTime() + dv.getFloat64(data_offset, true) * 1e3);\n    data_offset += 8;\n  }\n  var ret;\n  switch (buf[2]) {\n    case 0:\n      break;\n    case 2:\n      ret = { t: \"n\", v: ieee };\n      break;\n    case 3:\n      ret = { t: \"s\", v: sst[sidx] };\n      break;\n    case 5:\n      ret = { t: \"d\", v: dt };\n      break;\n    case 6:\n      ret = { t: \"b\", v: ieee > 0 };\n      break;\n    case 7:\n      ret = { t: \"n\", v: ieee / 86400 };\n      break;\n    case 8:\n      ret = { t: \"e\", v: 0 };\n      break;\n    case 9:\n      {\n        if (ridx > -1)\n          ret = { t: \"s\", v: rsst[ridx] };\n        else if (sidx > -1)\n          ret = { t: \"s\", v: sst[sidx] };\n        else if (!isNaN(ieee))\n          ret = { t: \"n\", v: ieee };\n        else\n          throw new Error(\"Unsupported cell type \".concat(buf.slice(0, 4)));\n      }\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf.slice(0, 4)));\n  }\n  return ret;\n}\nfunction parse_new_storage(buf, sst, rsst) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(8, true);\n  var data_offset = 12;\n  var ridx = -1, sidx = -1, d128 = NaN, ieee = NaN, dt = new Date(2001, 0, 1);\n  if (flags & 1) {\n    d128 = readDecimal128LE(buf, data_offset);\n    data_offset += 16;\n  }\n  if (flags & 2) {\n    ieee = dv.getFloat64(data_offset, true);\n    data_offset += 8;\n  }\n  if (flags & 4) {\n    dt.setTime(dt.getTime() + dv.getFloat64(data_offset, true) * 1e3);\n    data_offset += 8;\n  }\n  if (flags & 8) {\n    sidx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  if (flags & 16) {\n    ridx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  var ret;\n  switch (buf[1]) {\n    case 0:\n      break;\n    case 2:\n      ret = { t: \"n\", v: d128 };\n      break;\n    case 3:\n      ret = { t: \"s\", v: sst[sidx] };\n      break;\n    case 5:\n      ret = { t: \"d\", v: dt };\n      break;\n    case 6:\n      ret = { t: \"b\", v: ieee > 0 };\n      break;\n    case 7:\n      ret = { t: \"n\", v: ieee / 86400 };\n      break;\n    case 8:\n      ret = { t: \"e\", v: 0 };\n      break;\n    case 9:\n      {\n        if (ridx > -1)\n          ret = { t: \"s\", v: rsst[ridx] };\n        else\n          throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(flags & 31, \" : \").concat(buf.slice(0, 4)));\n      }\n      break;\n    case 10:\n      ret = { t: \"n\", v: d128 };\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(flags & 31, \" : \").concat(buf.slice(0, 4)));\n  }\n  return ret;\n}\nfunction write_new_storage(cell, sst) {\n  var out = new Uint8Array(32), dv = u8_to_dataview(out), l = 12, flags = 0;\n  out[0] = 5;\n  switch (cell.t) {\n    case \"n\":\n      out[1] = 2;\n      writeDecimal128LE(out, l, cell.v);\n      flags |= 1;\n      l += 16;\n      break;\n    case \"b\":\n      out[1] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      flags |= 2;\n      l += 8;\n      break;\n    case \"s\":\n      if (sst.indexOf(cell.v) == -1)\n        throw new Error(\"Value \".concat(cell.v, \" missing from SST!\"));\n      out[1] = 3;\n      dv.setUint32(l, sst.indexOf(cell.v), true);\n      flags |= 8;\n      l += 4;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(8, flags, true);\n  return out.slice(0, l);\n}\nfunction write_old_storage(cell, sst) {\n  var out = new Uint8Array(32), dv = u8_to_dataview(out), l = 12, flags = 0;\n  out[0] = 3;\n  switch (cell.t) {\n    case \"n\":\n      out[2] = 2;\n      dv.setFloat64(l, cell.v, true);\n      flags |= 32;\n      l += 8;\n      break;\n    case \"b\":\n      out[2] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      flags |= 32;\n      l += 8;\n      break;\n    case \"s\":\n      if (sst.indexOf(cell.v) == -1)\n        throw new Error(\"Value \".concat(cell.v, \" missing from SST!\"));\n      out[2] = 3;\n      dv.setUint32(l, sst.indexOf(cell.v), true);\n      flags |= 16;\n      l += 4;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(4, flags, true);\n  return out.slice(0, l);\n}\nfunction parse_cell_storage(buf, sst, rsst) {\n  switch (buf[0]) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n      return parse_old_storage(buf, sst, rsst, buf[0]);\n    case 5:\n      return parse_new_storage(buf, sst, rsst);\n    default:\n      throw new Error(\"Unsupported payload version \".concat(buf[0]));\n  }\n}\nfunction parse_TSP_Reference(buf) {\n  var pb = parse_shallow(buf);\n  return parse_varint49(pb[1][0].data);\n}\nfunction write_TSP_Reference(idx) {\n  var out = [];\n  out[1] = [{ type: 0, data: write_varint49(idx) }];\n  return write_shallow(out);\n}\nfunction parse_TST_TableDataList(M, root) {\n  var pb = parse_shallow(root.data);\n  var type = varint_to_i32(pb[1][0].data);\n  var entries = pb[3];\n  var data = [];\n  (entries || []).forEach(function(entry) {\n    var le = parse_shallow(entry.data);\n    var key = varint_to_i32(le[1][0].data) >>> 0;\n    switch (type) {\n      case 1:\n        data[key] = u8str(le[3][0].data);\n        break;\n      case 8:\n        {\n          var rt = M[parse_TSP_Reference(le[9][0].data)][0];\n          var rtp = parse_shallow(rt.data);\n          var rtpref = M[parse_TSP_Reference(rtp[1][0].data)][0];\n          var mtype = varint_to_i32(rtpref.meta[1][0].data);\n          if (mtype != 2001)\n            throw new Error(\"2000 unexpected reference to \".concat(mtype));\n          var tswpsa = parse_shallow(rtpref.data);\n          data[key] = tswpsa[3].map(function(x) {\n            return u8str(x.data);\n          }).join(\"\");\n        }\n        break;\n    }\n  });\n  return data;\n}\nfunction parse_TST_TileRowInfo(u8, type) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;\n  var pb = parse_shallow(u8);\n  var R = varint_to_i32(pb[1][0].data) >>> 0;\n  var cnt = varint_to_i32(pb[2][0].data) >>> 0;\n  var wide_offsets = ((_b = (_a = pb[8]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data) && varint_to_i32(pb[8][0].data) > 0 || false;\n  var used_storage_u8, used_storage;\n  if (((_d = (_c = pb[7]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && type != 0) {\n    used_storage_u8 = (_f = (_e = pb[7]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data;\n    used_storage = (_h = (_g = pb[6]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data;\n  } else if (((_j = (_i = pb[4]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) && type != 1) {\n    used_storage_u8 = (_l = (_k = pb[4]) == null ? void 0 : _k[0]) == null ? void 0 : _l.data;\n    used_storage = (_n = (_m = pb[3]) == null ? void 0 : _m[0]) == null ? void 0 : _n.data;\n  } else\n    throw \"NUMBERS Tile missing \".concat(type, \" cell storage\");\n  var width = wide_offsets ? 4 : 1;\n  var used_storage_offsets = u8_to_dataview(used_storage_u8);\n  var offsets = [];\n  for (var C = 0; C < used_storage_u8.length / 2; ++C) {\n    var off = used_storage_offsets.getUint16(C * 2, true);\n    if (off < 65535)\n      offsets.push([C, off]);\n  }\n  if (offsets.length != cnt)\n    throw \"Expected \".concat(cnt, \" cells, found \").concat(offsets.length);\n  var cells = [];\n  for (C = 0; C < offsets.length - 1; ++C)\n    cells[offsets[C][0]] = used_storage.subarray(offsets[C][1] * width, offsets[C + 1][1] * width);\n  if (offsets.length >= 1)\n    cells[offsets[offsets.length - 1][0]] = used_storage.subarray(offsets[offsets.length - 1][1] * width);\n  return { R: R, cells: cells };\n}\nfunction parse_TST_Tile(M, root) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var storage = ((_a = pb == null ? void 0 : pb[7]) == null ? void 0 : _a[0]) ? varint_to_i32(pb[7][0].data) >>> 0 > 0 ? 1 : 0 : -1;\n  var ri = mappa(pb[5], function(u8) {\n    return parse_TST_TileRowInfo(u8, storage);\n  });\n  return {\n    nrows: varint_to_i32(pb[4][0].data) >>> 0,\n    data: ri.reduce(function(acc, x) {\n      if (!acc[x.R])\n        acc[x.R] = [];\n      x.cells.forEach(function(cell, C) {\n        if (acc[x.R][C])\n          throw new Error(\"Duplicate cell r=\".concat(x.R, \" c=\").concat(C));\n        acc[x.R][C] = cell;\n      });\n      return acc;\n    }, [])\n  };\n}\nfunction parse_TST_TableModelArchive(M, root, ws) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var range = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };\n  range.e.r = (varint_to_i32(pb[6][0].data) >>> 0) - 1;\n  if (range.e.r < 0)\n    throw new Error(\"Invalid row varint \".concat(pb[6][0].data));\n  range.e.c = (varint_to_i32(pb[7][0].data) >>> 0) - 1;\n  if (range.e.c < 0)\n    throw new Error(\"Invalid col varint \".concat(pb[7][0].data));\n  ws[\"!ref\"] = encode_range(range);\n  var store = parse_shallow(pb[4][0].data);\n  var sst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[4][0].data)][0]);\n  var rsst = ((_a = store[17]) == null ? void 0 : _a[0]) ? parse_TST_TableDataList(M, M[parse_TSP_Reference(store[17][0].data)][0]) : [];\n  var tile = parse_shallow(store[3][0].data);\n  var _R = 0;\n  tile[1].forEach(function(t) {\n    var tl = parse_shallow(t.data);\n    var ref = M[parse_TSP_Reference(tl[2][0].data)][0];\n    var mtype = varint_to_i32(ref.meta[1][0].data);\n    if (mtype != 6002)\n      throw new Error(\"6001 unexpected reference to \".concat(mtype));\n    var _tile = parse_TST_Tile(M, ref);\n    _tile.data.forEach(function(row, R) {\n      row.forEach(function(buf, C) {\n        var addr = encode_cell({ r: _R + R, c: C });\n        var res = parse_cell_storage(buf, sst, rsst);\n        if (res)\n          ws[addr] = res;\n      });\n    });\n    _R += _tile.nrows;\n  });\n}\nfunction parse_TST_TableInfoArchive(M, root) {\n  var pb = parse_shallow(root.data);\n  var out = { \"!ref\": \"A1\" };\n  var tableref = M[parse_TSP_Reference(pb[2][0].data)];\n  var mtype = varint_to_i32(tableref[0].meta[1][0].data);\n  if (mtype != 6001)\n    throw new Error(\"6000 unexpected reference to \".concat(mtype));\n  parse_TST_TableModelArchive(M, tableref[0], out);\n  return out;\n}\nfunction parse_TN_SheetArchive(M, root) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var out = {\n    name: ((_a = pb[1]) == null ? void 0 : _a[0]) ? u8str(pb[1][0].data) : \"\",\n    sheets: []\n  };\n  var shapeoffs = mappa(pb[2], parse_TSP_Reference);\n  shapeoffs.forEach(function(off) {\n    M[off].forEach(function(m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 6e3)\n        out.sheets.push(parse_TST_TableInfoArchive(M, m));\n    });\n  });\n  return out;\n}\nfunction parse_TN_DocumentArchive(M, root) {\n  var out = book_new();\n  var pb = parse_shallow(root.data);\n  var sheetoffs = mappa(pb[1], parse_TSP_Reference);\n  sheetoffs.forEach(function(off) {\n    M[off].forEach(function(m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 2) {\n        var root2 = parse_TN_SheetArchive(M, m);\n        root2.sheets.forEach(function(sheet, idx) {\n          book_append_sheet(out, sheet, idx == 0 ? root2.name : root2.name + \"_\" + idx, true);\n        });\n      }\n    });\n  });\n  if (out.SheetNames.length == 0)\n    throw new Error(\"Empty NUMBERS file\");\n  return out;\n}\nfunction parse_numbers_iwa(cfb) {\n  var _a, _b, _c, _d;\n  var M = {}, indices = [];\n  cfb.FullPaths.forEach(function(p) {\n    if (p.match(/\\.iwpv2/))\n      throw new Error(\"Unsupported password protection\");\n  });\n  cfb.FileIndex.forEach(function(s) {\n    if (!s.name.match(/\\.iwa$/))\n      return;\n    var o;\n    try {\n      o = decompress_iwa_file(s.content);\n    } catch (e) {\n      return console.log(\"?? \" + s.content.length + \" \" + (e.message || e));\n    }\n    var packets;\n    try {\n      packets = parse_iwa_file(o);\n    } catch (e) {\n      return console.log(\"## \" + (e.message || e));\n    }\n    packets.forEach(function(packet) {\n      M[packet.id] = packet.messages;\n      indices.push(packet.id);\n    });\n  });\n  if (!indices.length)\n    throw new Error(\"File has no messages\");\n  var docroot = ((_d = (_c = (_b = (_a = M == null ? void 0 : M[1]) == null ? void 0 : _a[0]) == null ? void 0 : _b.meta) == null ? void 0 : _c[1]) == null ? void 0 : _d[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1 && M[1][0];\n  if (!docroot)\n    indices.forEach(function(idx) {\n      M[idx].forEach(function(iwam) {\n        var mtype = varint_to_i32(iwam.meta[1][0].data) >>> 0;\n        if (mtype == 1) {\n          if (!docroot)\n            docroot = iwam;\n          else\n            throw new Error(\"Document has multiple roots\");\n        }\n      });\n    });\n  if (!docroot)\n    throw new Error(\"Cannot find Document root\");\n  return parse_TN_DocumentArchive(M, docroot);\n}\nfunction write_tile_row(tri, data, SST) {\n  var _a, _b, _c, _d;\n  if (!((_a = tri[6]) == null ? void 0 : _a[0]) || !((_b = tri[7]) == null ? void 0 : _b[0]))\n    throw \"Mutation only works on post-BNC storages!\";\n  var wide_offsets = ((_d = (_c = tri[8]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && varint_to_i32(tri[8][0].data) > 0 || false;\n  if (wide_offsets)\n    throw \"Math only works with normal offsets\";\n  var cnt = 0;\n  var dv = u8_to_dataview(tri[7][0].data), last_offset = 0, cell_storage = [];\n  var _dv = u8_to_dataview(tri[4][0].data), _last_offset = 0, _cell_storage = [];\n  for (var C = 0; C < data.length; ++C) {\n    if (data[C] == null) {\n      dv.setUint16(C * 2, 65535, true);\n      _dv.setUint16(C * 2, 65535);\n      continue;\n    }\n    dv.setUint16(C * 2, last_offset, true);\n    _dv.setUint16(C * 2, _last_offset, true);\n    var celload, _celload;\n    switch (typeof data[C]) {\n      case \"string\":\n        celload = write_new_storage({ t: \"s\", v: data[C] }, SST);\n        _celload = write_old_storage({ t: \"s\", v: data[C] }, SST);\n        break;\n      case \"number\":\n        celload = write_new_storage({ t: \"n\", v: data[C] }, SST);\n        _celload = write_old_storage({ t: \"n\", v: data[C] }, SST);\n        break;\n      case \"boolean\":\n        celload = write_new_storage({ t: \"b\", v: data[C] }, SST);\n        _celload = write_old_storage({ t: \"b\", v: data[C] }, SST);\n        break;\n      default:\n        throw new Error(\"Unsupported value \" + data[C]);\n    }\n    cell_storage.push(celload);\n    last_offset += celload.length;\n    _cell_storage.push(_celload);\n    _last_offset += _celload.length;\n    ++cnt;\n  }\n  tri[2][0].data = write_varint49(cnt);\n  for (; C < tri[7][0].data.length / 2; ++C) {\n    dv.setUint16(C * 2, 65535, true);\n    _dv.setUint16(C * 2, 65535, true);\n  }\n  tri[6][0].data = u8concat(cell_storage);\n  tri[3][0].data = u8concat(_cell_storage);\n  return cnt;\n}\nfunction write_numbers_iwa(wb, opts) {\n  if (!opts || !opts.numbers)\n    throw new Error(\"Must pass a `numbers` option -- check the README\");\n  var ws = wb.Sheets[wb.SheetNames[0]];\n  if (wb.SheetNames.length > 1)\n    console.error(\"The Numbers writer currently writes only the first table\");\n  var range = decode_range(ws[\"!ref\"]);\n  range.s.r = range.s.c = 0;\n  var trunc = false;\n  if (range.e.c > 9) {\n    trunc = true;\n    range.e.c = 9;\n  }\n  if (range.e.r > 49) {\n    trunc = true;\n    range.e.r = 49;\n  }\n  if (trunc)\n    console.error(\"The Numbers writer is currently limited to \".concat(encode_range(range)));\n  var data = sheet_to_json(ws, { range: range, header: 1 });\n  var SST = [\"~Sh33tJ5~\"];\n  data.forEach(function(row) {\n    return row.forEach(function(cell) {\n      if (typeof cell == \"string\")\n        SST.push(cell);\n    });\n  });\n  var dependents = {};\n  var indices = [];\n  var cfb = CFB.read(opts.numbers, { type: \"base64\" });\n  cfb.FileIndex.map(function(fi, idx) {\n    return [fi, cfb.FullPaths[idx]];\n  }).forEach(function(row) {\n    var fi = row[0], fp = row[1];\n    if (fi.type != 2)\n      return;\n    if (!fi.name.match(/\\.iwa/))\n      return;\n    var old_content = fi.content;\n    var raw1 = decompress_iwa_file(old_content);\n    var x2 = parse_iwa_file(raw1);\n    x2.forEach(function(packet2) {\n      indices.push(packet2.id);\n      dependents[packet2.id] = { deps: [], location: fp, type: varint_to_i32(packet2.messages[0].meta[1][0].data) };\n    });\n  });\n  indices.sort(function(x2, y2) {\n    return x2 - y2;\n  });\n  var indices_varint = indices.filter(function(x2) {\n    return x2 > 1;\n  }).map(function(x2) {\n    return [x2, write_varint49(x2)];\n  });\n  cfb.FileIndex.map(function(fi, idx) {\n    return [fi, cfb.FullPaths[idx]];\n  }).forEach(function(row) {\n    var fi = row[0], fp = row[1];\n    if (!fi.name.match(/\\.iwa/))\n      return;\n    var x2 = parse_iwa_file(decompress_iwa_file(fi.content));\n    x2.forEach(function(ia) {\n      ia.messages.forEach(function(m) {\n        indices_varint.forEach(function(ivi) {\n          if (ia.messages.some(function(mess) {\n            return varint_to_i32(mess.meta[1][0].data) != 11006 && u8contains(mess.data, ivi[1]);\n          })) {\n            dependents[ivi[0]].deps.push(ia.id);\n          }\n        });\n      });\n    });\n  });\n  function get_unique_msgid() {\n    for (var i = 927262; i < 2e6; ++i)\n      if (!dependents[i])\n        return i;\n    throw new Error(\"Too many messages\");\n  }\n  var entry = CFB.find(cfb, dependents[1].location);\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var docroot;\n  for (var xi = 0; xi < x.length; ++xi) {\n    var packet = x[xi];\n    if (packet.id == 1)\n      docroot = packet;\n  }\n  var sheetrootref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[1][0].data);\n  entry = CFB.find(cfb, dependents[sheetrootref].location);\n  x = parse_iwa_file(decompress_iwa_file(entry.content));\n  for (xi = 0; xi < x.length; ++xi) {\n    packet = x[xi];\n    if (packet.id == sheetrootref)\n      docroot = packet;\n  }\n  sheetrootref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[2][0].data);\n  entry = CFB.find(cfb, dependents[sheetrootref].location);\n  x = parse_iwa_file(decompress_iwa_file(entry.content));\n  for (xi = 0; xi < x.length; ++xi) {\n    packet = x[xi];\n    if (packet.id == sheetrootref)\n      docroot = packet;\n  }\n  sheetrootref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[2][0].data);\n  entry = CFB.find(cfb, dependents[sheetrootref].location);\n  x = parse_iwa_file(decompress_iwa_file(entry.content));\n  for (xi = 0; xi < x.length; ++xi) {\n    packet = x[xi];\n    if (packet.id == sheetrootref)\n      docroot = packet;\n  }\n  var pb = parse_shallow(docroot.messages[0].data);\n  {\n    pb[6][0].data = write_varint49(range.e.r + 1);\n    pb[7][0].data = write_varint49(range.e.c + 1);\n    var cruidsref = parse_TSP_Reference(pb[46][0].data);\n    var oldbucket = CFB.find(cfb, dependents[cruidsref].location);\n    var _x = parse_iwa_file(decompress_iwa_file(oldbucket.content));\n    {\n      for (var j = 0; j < _x.length; ++j) {\n        if (_x[j].id == cruidsref)\n          break;\n      }\n      if (_x[j].id != cruidsref)\n        throw \"Bad ColumnRowUIDMapArchive\";\n      var cruids = parse_shallow(_x[j].messages[0].data);\n      cruids[1] = [];\n      cruids[2] = [], cruids[3] = [];\n      for (var C = 0; C <= range.e.c; ++C) {\n        var uuid = [];\n        uuid[1] = uuid[2] = [{ type: 0, data: write_varint49(C + 420690) }];\n        cruids[1].push({ type: 2, data: write_shallow(uuid) });\n        cruids[2].push({ type: 0, data: write_varint49(C) });\n        cruids[3].push({ type: 0, data: write_varint49(C) });\n      }\n      cruids[4] = [];\n      cruids[5] = [], cruids[6] = [];\n      for (var R = 0; R <= range.e.r; ++R) {\n        uuid = [];\n        uuid[1] = uuid[2] = [{ type: 0, data: write_varint49(R + 726270) }];\n        cruids[4].push({ type: 2, data: write_shallow(uuid) });\n        cruids[5].push({ type: 0, data: write_varint49(R) });\n        cruids[6].push({ type: 0, data: write_varint49(R) });\n      }\n      _x[j].messages[0].data = write_shallow(cruids);\n    }\n    oldbucket.content = compress_iwa_file(write_iwa_file(_x));\n    oldbucket.size = oldbucket.content.length;\n    delete pb[46];\n    var store = parse_shallow(pb[4][0].data);\n    {\n      store[7][0].data = write_varint49(range.e.r + 1);\n      var row_headers = parse_shallow(store[1][0].data);\n      var row_header_ref = parse_TSP_Reference(row_headers[2][0].data);\n      oldbucket = CFB.find(cfb, dependents[row_header_ref].location);\n      _x = parse_iwa_file(decompress_iwa_file(oldbucket.content));\n      {\n        if (_x[0].id != row_header_ref)\n          throw \"Bad HeaderStorageBucket\";\n        var base_bucket = parse_shallow(_x[0].messages[0].data);\n        for (R = 0; R < data.length; ++R) {\n          var _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(R);\n          _bucket[4][0].data = write_varint49(data[R].length);\n          base_bucket[2][R] = { type: base_bucket[2][0].type, data: write_shallow(_bucket) };\n        }\n        _x[0].messages[0].data = write_shallow(base_bucket);\n      }\n      oldbucket.content = compress_iwa_file(write_iwa_file(_x));\n      oldbucket.size = oldbucket.content.length;\n      var col_header_ref = parse_TSP_Reference(store[2][0].data);\n      oldbucket = CFB.find(cfb, dependents[col_header_ref].location);\n      _x = parse_iwa_file(decompress_iwa_file(oldbucket.content));\n      {\n        if (_x[0].id != col_header_ref)\n          throw \"Bad HeaderStorageBucket\";\n        base_bucket = parse_shallow(_x[0].messages[0].data);\n        for (C = 0; C <= range.e.c; ++C) {\n          _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(C);\n          _bucket[4][0].data = write_varint49(range.e.r + 1);\n          base_bucket[2][C] = { type: base_bucket[2][0].type, data: write_shallow(_bucket) };\n        }\n        _x[0].messages[0].data = write_shallow(base_bucket);\n      }\n      oldbucket.content = compress_iwa_file(write_iwa_file(_x));\n      oldbucket.size = oldbucket.content.length;\n      var sstref = parse_TSP_Reference(store[4][0].data);\n      (function() {\n        var sentry = CFB.find(cfb, dependents[sstref].location);\n        var sx = parse_iwa_file(decompress_iwa_file(sentry.content));\n        var sstroot;\n        for (var sxi = 0; sxi < sx.length; ++sxi) {\n          var packet2 = sx[sxi];\n          if (packet2.id == sstref)\n            sstroot = packet2;\n        }\n        var sstdata = parse_shallow(sstroot.messages[0].data);\n        {\n          sstdata[3] = [];\n          var newsst = [];\n          SST.forEach(function(str, i) {\n            newsst[1] = [{ type: 0, data: write_varint49(i) }];\n            newsst[2] = [{ type: 0, data: write_varint49(1) }];\n            newsst[3] = [{ type: 2, data: stru8(str) }];\n            sstdata[3].push({ type: 2, data: write_shallow(newsst) });\n          });\n        }\n        sstroot.messages[0].data = write_shallow(sstdata);\n        var sy = write_iwa_file(sx);\n        var raw32 = compress_iwa_file(sy);\n        sentry.content = raw32;\n        sentry.size = sentry.content.length;\n      })();\n      var tile = parse_shallow(store[3][0].data);\n      {\n        var t = tile[1][0];\n        delete tile[2];\n        var tl = parse_shallow(t.data);\n        {\n          var tileref = parse_TSP_Reference(tl[2][0].data);\n          (function() {\n            var tentry = CFB.find(cfb, dependents[tileref].location);\n            var tx = parse_iwa_file(decompress_iwa_file(tentry.content));\n            var tileroot;\n            for (var sxi = 0; sxi < tx.length; ++sxi) {\n              var packet2 = tx[sxi];\n              if (packet2.id == tileref)\n                tileroot = packet2;\n            }\n            var tiledata = parse_shallow(tileroot.messages[0].data);\n            {\n              delete tiledata[6];\n              delete tile[7];\n              var rowload = new Uint8Array(tiledata[5][0].data);\n              tiledata[5] = [];\n              var cnt = 0;\n              for (var R2 = 0; R2 <= range.e.r; ++R2) {\n                var tilerow = parse_shallow(rowload);\n                cnt += write_tile_row(tilerow, data[R2], SST);\n                tilerow[1][0].data = write_varint49(R2);\n                tiledata[5].push({ data: write_shallow(tilerow), type: 2 });\n              }\n              tiledata[1] = [{ type: 0, data: write_varint49(range.e.c + 1) }];\n              tiledata[2] = [{ type: 0, data: write_varint49(range.e.r + 1) }];\n              tiledata[3] = [{ type: 0, data: write_varint49(cnt) }];\n              tiledata[4] = [{ type: 0, data: write_varint49(range.e.r + 1) }];\n            }\n            tileroot.messages[0].data = write_shallow(tiledata);\n            var ty = write_iwa_file(tx);\n            var raw32 = compress_iwa_file(ty);\n            tentry.content = raw32;\n            tentry.size = tentry.content.length;\n          })();\n        }\n        t.data = write_shallow(tl);\n      }\n      store[3][0].data = write_shallow(tile);\n    }\n    pb[4][0].data = write_shallow(store);\n  }\n  docroot.messages[0].data = write_shallow(pb);\n  var y = write_iwa_file(x);\n  var raw3 = compress_iwa_file(y);\n  entry.content = raw3;\n  entry.size = entry.content.length;\n  return cfb;\n}\nfunction fix_opts_func(defaults/*:Array<Array<any> >*/)/*:{(o:any):void}*/ {\n\treturn function fix_opts(opts) {\n\t\tfor(var i = 0; i != defaults.length; ++i) {\n\t\t\tvar d = defaults[i];\n\t\t\tif(opts[d[0]] === undefined) opts[d[0]] = d[1];\n\t\t\tif(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n\t\t}\n\t};\n}\n\nfunction fix_read_opts(opts) {\nfix_opts_func([\n\t['cellNF', false], /* emit cell number format string as .z */\n\t['cellHTML', true], /* emit html string as .h */\n\t['cellFormula', true], /* emit formulae as .f */\n\t['cellStyles', false], /* emits style/theme as .s */\n\t['cellText', true], /* emit formatted text as .w */\n\t['cellDates', false], /* emit date cells with type `d` */\n\n\t['sheetStubs', false], /* emit empty cells */\n\t['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\n\n\t['bookDeps', false], /* parse calculation chains */\n\t['bookSheets', false], /* only try to get sheet names (no Sheets) */\n\t['bookProps', false], /* only try to get properties (no Sheets) */\n\t['bookFiles', false], /* include raw file structure (keys, files, cfb) */\n\t['bookVBA', false], /* include vba raw data (vbaraw) */\n\n\t['password',''], /* password */\n\t['WTF', false] /* WTF mode (throws errors) */\n])(opts);\n}\n\nfunction fix_write_opts(opts) {\nfix_opts_func([\n\t['cellDates', false], /* write date cells with type `d` */\n\n\t['bookSST', false], /* Generate Shared String Table */\n\n\t['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\n\n\t['compression', false], /* Use file compression */\n\n\t['WTF', false] /* WTF mode (throws errors) */\n])(opts);\n}\nfunction get_sheet_type(n/*:string*/)/*:string*/ {\n\tif(RELS.WS.indexOf(n) > -1) return \"sheet\";\n\tif(RELS.CS && n == RELS.CS) return \"chart\";\n\tif(RELS.DS && n == RELS.DS) return \"dialog\";\n\tif(RELS.MS && n == RELS.MS) return \"macro\";\n\treturn (n && n.length) ? n : \"sheet\";\n}\nfunction safe_parse_wbrels(wbrels, sheets) {\n\tif(!wbrels) return 0;\n\ttry {\n\t\twbrels = sheets.map(function pwbr(w) { if(!w.id) w.id = w.strRelID; return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)]; });\n\t} catch(e) { return null; }\n\treturn !wbrels || wbrels.length === 0 ? null : wbrels;\n}\n\nfunction safe_parse_sheet(zip, path/*:string*/, relsPath/*:string*/, sheet, idx/*:number*/, sheetRels, sheets, stype/*:string*/, opts, wb, themes, styles) {\n\ttry {\n\t\tsheetRels[sheet]=parse_rels(getzipstr(zip, relsPath, true), path);\n\t\tvar data = getzipdata(zip, path);\n\t\tvar _ws;\n\t\tswitch(stype) {\n\t\t\tcase 'sheet':  _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'chart':  _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n\t\t\t\tif(!_ws || !_ws['!drawel']) break;\n\t\t\t\tvar dfile = resolve_path(_ws['!drawel'].Target, path);\n\t\t\t\tvar drelsp = get_rels_path(dfile);\n\t\t\t\tvar draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\n\t\t\t\tvar chartp = resolve_path(draw, dfile);\n\t\t\t\tvar crelsp = get_rels_path(chartp);\n\t\t\t\t_ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);\n\t\t\t\tbreak;\n\t\t\tcase 'macro':  _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'dialog': _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tdefault: throw new Error(\"Unrecognized sheet type \" + stype);\n\t\t}\n\t\tsheets[sheet] = _ws;\n\n\t\t/* scan rels for comments and threaded comments */\n\t\tvar tcomments = [];\n\t\tif(sheetRels && sheetRels[sheet]) keys(sheetRels[sheet]).forEach(function(n) {\n\t\t\tvar dfile = \"\";\n\t\t\tif(sheetRels[sheet][n].Type == RELS.CMNT) {\n\t\t\t\tdfile = resolve_path(sheetRels[sheet][n].Target, path);\n\t\t\t\tvar comments = parse_cmnt(getzipdata(zip, dfile, true), dfile, opts);\n\t\t\t\tif(!comments || !comments.length) return;\n\t\t\t\tsheet_insert_comments(_ws, comments, false);\n\t\t\t}\n\t\t\tif(sheetRels[sheet][n].Type == RELS.TCMNT) {\n\t\t\t\tdfile = resolve_path(sheetRels[sheet][n].Target, path);\n\t\t\t\ttcomments = tcomments.concat(parse_tcmnt_xml(getzipdata(zip, dfile, true), opts));\n\t\t\t}\n\t\t});\n\t\tif(tcomments && tcomments.length) sheet_insert_comments(_ws, tcomments, true, opts.people || []);\n\t} catch(e) { if(opts.WTF) throw e; }\n}\n\nfunction strip_front_slash(x/*:string*/)/*:string*/ { return x.charAt(0) == '/' ? x.slice(1) : x; }\n\nfunction parse_zip(zip/*:ZIP*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tmake_ssf();\n\topts = opts || {};\n\tfix_read_opts(opts);\n\n\t/* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\n\t/* UOC */\n\tif(safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\n\t/* Numbers */\n\tif(safegetzipfile(zip, 'Index/Document.iwa')) {\n\t\tif(typeof Uint8Array == \"undefined\") throw new Error('NUMBERS file parsing requires Uint8Array support');\n\t\tif(typeof parse_numbers_iwa != \"undefined\") {\n\t\t\tif(zip.FileIndex) return parse_numbers_iwa(zip);\n\t\t\tvar _zip = CFB.utils.cfb_new();\n\t\t\tzipentries(zip).forEach(function(e) { zip_add_file(_zip, e, getzipbin(zip, e)); });\n\t\t\treturn parse_numbers_iwa(_zip);\n\t\t}\n\t\tthrow new Error('Unsupported NUMBERS file');\n\t}\n\tif(!safegetzipfile(zip, '[Content_Types].xml')) {\n\t\tif(safegetzipfile(zip, 'index.xml.gz')) throw new Error('Unsupported NUMBERS 08 file');\n\t\tif(safegetzipfile(zip, 'index.xml')) throw new Error('Unsupported NUMBERS 09 file');\n\t\tthrow new Error('Unsupported ZIP file');\n\t}\n\n\tvar entries = zipentries(zip);\n\tvar dir = parse_ct((getzipstr(zip, '[Content_Types].xml')/*:?any*/));\n\tvar xlsb = false;\n\tvar sheets, binname;\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.xml\";\n\t\tif(getzipdata(zip,binname, true)) dir.workbooks.push(binname);\n\t}\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.bin\";\n\t\tif(!getzipdata(zip,binname,true)) throw new Error(\"Could not find workbook\");\n\t\tdir.workbooks.push(binname);\n\t\txlsb = true;\n\t}\n\tif(dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\n\n\tvar themes = ({}/*:any*/);\n\tvar styles = ({}/*:any*/);\n\tif(!opts.bookSheets && !opts.bookProps) {\n\t\tstrs = [];\n\t\tif(dir.sst) try { strs=parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts); } catch(e) { if(opts.WTF) throw e; }\n\n\t\tif(opts.cellStyles && dir.themes.length) themes = parse_theme(getzipstr(zip, dir.themes[0].replace(/^\\//,''), true)||\"\",dir.themes[0], opts);\n\n\t\tif(dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\n\t}\n\n\t/*var externbooks = */dir.links.map(function(link) {\n\t\ttry {\n\t\t\tvar rels = parse_rels(getzipstr(zip, get_rels_path(strip_front_slash(link))), link);\n\t\t\treturn parse_xlink(getzipdata(zip, strip_front_slash(link)), rels, link, opts);\n\t\t} catch(e) {}\n\t});\n\n\tvar wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\n\n\tvar props = {}, propdata = \"\";\n\n\tif(dir.coreprops.length) {\n\t\tpropdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\n\t\tif(propdata) props = parse_core_props(propdata);\n\t\tif(dir.extprops.length !== 0) {\n\t\t\tpropdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\n\t\t\tif(propdata) parse_ext_props(propdata, props, opts);\n\t\t}\n\t}\n\n\tvar custprops = {};\n\tif(!opts.bookSheets || opts.bookProps) {\n\t\tif (dir.custprops.length !== 0) {\n\t\t\tpropdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\n\t\t\tif(propdata) custprops = parse_cust_props(propdata, opts);\n\t\t}\n\t}\n\n\tvar out = ({}/*:any*/);\n\tif(opts.bookSheets || opts.bookProps) {\n\t\tif(wb.Sheets) sheets = wb.Sheets.map(function pluck(x){ return x.name; });\n\t\telse if(props.Worksheets && props.SheetNames.length > 0) sheets=props.SheetNames;\n\t\tif(opts.bookProps) { out.Props = props; out.Custprops = custprops; }\n\t\tif(opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\n\t\tif(opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\n\t}\n\tsheets = {};\n\n\tvar deps = {};\n\tif(opts.bookDeps && dir.calcchain) deps=parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)),dir.calcchain,opts);\n\n\tvar i=0;\n\tvar sheetRels = ({}/*:any*/);\n\tvar path, relsPath;\n\n\t{\n\t\tvar wbsheets = wb.Sheets;\n\t\tprops.Worksheets = wbsheets.length;\n\t\tprops.SheetNames = [];\n\t\tfor(var j = 0; j != wbsheets.length; ++j) {\n\t\t\tprops.SheetNames[j] = wbsheets[j].name;\n\t\t}\n\t}\n\n\tvar wbext = xlsb ? \"bin\" : \"xml\";\n\tvar wbrelsi = dir.workbooks[0].lastIndexOf(\"/\");\n\tvar wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi+1) + \"_rels/\" + dir.workbooks[0].slice(wbrelsi+1) + \".rels\").replace(/^\\//,\"\");\n\tif(!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\n\tvar wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile.replace(/_rels.*/, \"s5s\"));\n\n\tif((dir.metadata || []).length >= 1) {\n\t\t/* TODO: MDX and other types of metadata */\n\t\topts.xlmeta = parse_xlmeta(getzipdata(zip, strip_front_slash(dir.metadata[0])),dir.metadata[0],opts);\n\t}\n\n\tif((dir.people || []).length >= 1) {\n\t\topts.people = parse_people_xml(getzipdata(zip, strip_front_slash(dir.people[0])),opts);\n\t}\n\n\tif(wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\n\n\t/* Numbers iOS hack */\n\tvar nmode = (getzipdata(zip,\"xl/worksheets/sheet.xml\",true))?1:0;\n\twsloop: for(i = 0; i != props.Worksheets; ++i) {\n\t\tvar stype = \"sheet\";\n\t\tif(wbrels && wbrels[i]) {\n\t\t\tpath = 'xl/' + (wbrels[i][1]).replace(/[\\/]?xl\\//, \"\");\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrels[i][1];\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\\/.*$/,\"\") + wbrels[i][1];\n\t\t\tstype = wbrels[i][2];\n\t\t} else {\n\t\t\tpath = 'xl/worksheets/sheet'+(i+1-nmode)+\".\" + wbext;\n\t\t\tpath = path.replace(/sheet0\\./,\"sheet.\");\n\t\t}\n\t\trelsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\n\t\tif(opts && opts.sheets != null) switch(typeof opts.sheets) {\n\t\t\tcase \"number\": if(i != opts.sheets) continue wsloop; break;\n\t\t\tcase \"string\": if(props.SheetNames[i].toLowerCase() != opts.sheets.toLowerCase()) continue wsloop; break;\n\t\t\tdefault: if(Array.isArray && Array.isArray(opts.sheets)) {\n\t\t\t\tvar snjseen = false;\n\t\t\t\tfor(var snj = 0; snj != opts.sheets.length; ++snj) {\n\t\t\t\t\tif(typeof opts.sheets[snj] == \"number\" && opts.sheets[snj] == i) snjseen=1;\n\t\t\t\t\tif(typeof opts.sheets[snj] == \"string\" && opts.sheets[snj].toLowerCase() == props.SheetNames[i].toLowerCase()) snjseen = 1;\n\t\t\t\t}\n\t\t\t\tif(!snjseen) continue wsloop;\n\t\t\t}\n\t\t}\n\t\tsafe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\n\t}\n\n\tout = ({\n\t\tDirectory: dir,\n\t\tWorkbook: wb,\n\t\tProps: props,\n\t\tCustprops: custprops,\n\t\tDeps: deps,\n\t\tSheets: sheets,\n\t\tSheetNames: props.SheetNames,\n\t\tStrings: strs,\n\t\tStyles: styles,\n\t\tThemes: themes,\n\t\tSSF: dup(table_fmt)\n\t}/*:any*/);\n\tif(opts && opts.bookFiles) {\n\t\tif(zip.files) {\n\t\t\tout.keys = entries;\n\t\t\tout.files = zip.files;\n\t\t} else {\n\t\t\tout.keys = [];\n\t\t\tout.files = {};\n\t\t\tzip.FullPaths.forEach(function(p, idx) {\n\t\t\t\tp = p.replace(/^Root Entry[\\/]/, \"\");\n\t\t\t\tout.keys.push(p);\n\t\t\t\tout.files[p] = zip.FileIndex[idx];\n\t\t\t});\n\t\t}\n\t}\n\tif(opts && opts.bookVBA) {\n\t\tif(dir.vba.length > 0) out.vbaraw = getzipdata(zip,strip_front_slash(dir.vba[0]),true);\n\t\telse if(dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin',true);\n\t}\n\treturn out;\n}\n\n/* [MS-OFFCRYPTO] 2.1.1 */\nfunction parse_xlsxcfb(cfb, _opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tvar f = 'Workbook', data = CFB.find(cfb, f);\n\ttry {\n\tf = '/!DataSpaces/Version';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var version = */parse_DataSpaceVersionInfo(data.content);\n\n\t/* 2.3.4.1 */\n\tf = '/!DataSpaces/DataSpaceMap';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar dsm = parse_DataSpaceMap(data.content);\n\tif(dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.2 */\n\tf = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar seds = parse_DataSpaceDefinition(data.content);\n\tif(seds.length != 1 || seds[0] != \"StrongEncryptionTransform\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.3 */\n\tf = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var hdr = */parse_Primary(data.content);\n\t} catch(e) {}\n\n\tf = '/EncryptionInfo';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar einfo = parse_EncryptionInfo(data.content);\n\n\t/* 2.3.4.4 */\n\tf = '/EncryptedPackage';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\n/*global decrypt_agile */\n/*:: declare var decrypt_agile:any; */\n\tif(einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\n/*global decrypt_std76 */\n/*:: declare var decrypt_std76:any; */\n\tif(einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\n\tthrow new Error(\"File is password-protected\");\n}\n\nfunction write_zip(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\tif(opts.bookType == \"ods\") return write_ods(wb, opts);\n\tif(opts.bookType == \"numbers\") return write_numbers_iwa(wb, opts);\n\tif(opts.bookType == \"xlsb\") return write_zip_xlsxb(wb, opts);\n\treturn write_zip_xlsx(wb, opts);\n}\n\n/* XLSX and XLSB writing are very similar.  Originally they were unified in one\n   export function.  This is horrible for tree shaking in the common case (most\n   applications need to export files in one format) so this function supports\n   both formats while write_zip_xlsx only handles XLSX */\nfunction write_zip_xlsxb(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\t_shapeid = 1024;\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = /*::((*/[]/*:: :any):SST)*/; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = opts.bookType == \"xlsb\" ? \"bin\" : \"xml\";\n\tvar vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\n\tvar zip = zip_new();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip_add_file(zip, f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n\t/*::if(!wb.Props) throw \"unreachable\"; */\n\tf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip_add_file(zip, f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\":\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip_add_file(zip, f, write_ws(rId-1, f, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tvar cf = \"\";\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tcf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip_add_file(zip, cf, write_cmnt(comments, cf, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_comments_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip_add_file(zip, f, write_sst(opts.Strings, f, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip_add_file(zip, f, write_wb(wb, f, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tzip_add_file(zip, f, write_theme(wb.Themes, opts));\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip_add_file(zip, f, write_sty(wb, f, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip_add_file(zip, f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tf = \"xl/metadata.\" + wbext;\n\tzip_add_file(zip, f, write_xlmeta(f));\n\tct.metadata.push(f);\n\tadd_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n\n\tzip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n\tzip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n\tzip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\n\nfunction write_zip_xlsx(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\t_shapeid = 1024;\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = /*::((*/[]/*:: :any):SST)*/; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = \"xml\";\n\tvar vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\n\tvar zip = zip_new();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip_add_file(zip, f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n\t/*::if(!wb.Props) throw \"unreachable\"; */\n\tf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip_add_file(zip, f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tvar people = [\"SheetJ5\"];\n\topts.tcid = 0;\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\":\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip_add_file(zip, f, write_ws_xml(rId-1, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tvar cf = \"\";\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tvar needtc = false;\n\t\t\t\tcomments.forEach(function(carr) {\n\t\t\t\t\tcarr[1].forEach(function(c) { if(c.T == true) needtc = true; });\n\t\t\t\t});\n\t\t\t\tif(needtc) {\n\t\t\t\t\tcf = \"xl/threadedComments/threadedComment\" + rId + \".\" + wbext;\n\t\t\t\t\tzip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));\n\t\t\t\t\tct.threadedcomments.push(cf);\n\t\t\t\t\tadd_rels(wsrels, -1, \"../threadedComments/threadedComment\" + rId + \".\" + wbext, RELS.TCMNT);\n\t\t\t\t}\n\n\t\t\t\tcf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip_add_file(zip, cf, write_comments_xml(comments, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_comments_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip_add_file(zip, f, write_sst_xml(opts.Strings, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip_add_file(zip, f, write_wb_xml(wb, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tzip_add_file(zip, f, write_theme(wb.Themes, opts));\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip_add_file(zip, f, write_sty_xml(wb, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip_add_file(zip, f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tf = \"xl/metadata.\" + wbext;\n\tzip_add_file(zip, f, write_xlmeta_xml());\n\tct.metadata.push(f);\n\tadd_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n\n\tif(people.length > 1) {\n\t\tf = \"xl/persons/person.xml\";\n\t\tzip_add_file(zip, f, write_people_xml(people, opts));\n\t\tct.people.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"persons/person.xml\", RELS.PEOPLE);\n\t}\n\n\tzip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n\tzip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n\tzip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\n\nfunction firstbyte(f/*:RawData*/,o/*:?TypeOpts*/)/*:Array<number>*/ {\n\tvar x = \"\";\n\tswitch((o||{}).type || \"base64\") {\n\t\tcase 'buffer': return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n\t\tcase 'base64': x = Base64_decode(f.slice(0,12)); break;\n\t\tcase 'binary': x = f; break;\n\t\tcase 'array':  return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n\t\tdefault: throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\n\t}\n\treturn [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3), x.charCodeAt(4), x.charCodeAt(5), x.charCodeAt(6), x.charCodeAt(7)];\n}\n\nfunction read_cfb(cfb/*:CFBContainer*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tif(CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\n\treturn parse_xlscfb(cfb, opts);\n}\n\nfunction read_zip(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar zip, d = data;\n\tvar o = opts||{};\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tzip = zip_read(d, o);\n\treturn parse_zip(zip, o);\n}\n\nfunction read_plaintext(data/*:string*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar i = 0;\n\tmain: while(i < data.length) switch(data.charCodeAt(i)) {\n\t\tcase 0x0A: case 0x0D: case 0x20: ++i; break;\n\t\tcase 0x3C: return parse_xlml(data.slice(i),o);\n\t\tdefault: break main;\n\t}\n\treturn PRN.to_workbook(data, o);\n}\n\nfunction read_plaintext_raw(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar str = \"\", bytes = firstbyte(data, o);\n\tswitch(o.type) {\n\t\tcase 'base64': str = Base64_decode(data); break;\n\t\tcase 'binary': str = data; break;\n\t\tcase 'buffer': str = data.toString('binary'); break;\n\t\tcase 'array': str = cc2str(data); break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\n\to.type = \"binary\";\n\treturn read_plaintext(str, o);\n}\n\nfunction read_utf16(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar d = data;\n\tif(o.type == 'base64') d = Base64_decode(d);\n\td = $cptable.utils.decode(1200, d.slice(2), 'str');\n\to.type = \"binary\";\n\treturn read_plaintext(d, o);\n}\n\nfunction bstrify(data/*:string*/)/*:string*/ {\n\treturn !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\n}\n\nfunction read_prn(data, d, o, str) {\n\tif(str) { o.type = \"string\"; return PRN.to_workbook(data, o); }\n\treturn PRN.to_workbook(d, o);\n}\n\nfunction readSync(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\treset_cp();\n\tvar o = opts||{};\n\tif(typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), (o = dup(o), o.type = \"array\", o));\n\tif(typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && !o.type) o.type = typeof Deno !== \"undefined\" ? \"buffer\" : \"array\";\n\tvar d = data, n = [0,0,0,0], str = false;\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\t_ssfopts = {};\n\tif(o.dateNF) _ssfopts.dateNF = o.dateNF;\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tif(o.type == \"file\") { o.type = has_buf ? \"buffer\" : \"binary\"; d = read_binary(data); if(typeof Uint8Array !== 'undefined' && !has_buf) o.type = \"array\"; }\n\tif(o.type == \"string\") { str = true; o.type = \"binary\"; o.codepage = 65001; d = bstrify(data); }\n\tif(o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\n\t\t// $FlowIgnore\n\t\tvar ab=new ArrayBuffer(3), vu=new Uint8Array(ab); vu.foo=\"bar\";\n\t\t// $FlowIgnore\n\t\tif(!vu.foo) {o=dup(o); o.type='array'; return readSync(ab2a(d), o);}\n\t}\n\tswitch((n = firstbyte(d, o))[0]) {\n\t\tcase 0xD0: if(n[1] === 0xCF && n[2] === 0x11 && n[3] === 0xE0 && n[4] === 0xA1 && n[5] === 0xB1 && n[6] === 0x1A && n[7] === 0xE1) return read_cfb(CFB.read(d, o), o); break;\n\t\tcase 0x09: if(n[1] <= 0x08) return parse_xlscfb(d, o); break;\n\t\tcase 0x3C: return parse_xlml(d, o);\n\t\tcase 0x49:\n\t\t\tif(n[1] === 0x49 && n[2] === 0x2a && n[3] === 0x00) throw new Error(\"TIFF Image File is not a spreadsheet\");\n\t\t\tif(n[1] === 0x44) return read_wb_ID(d, o);\n\t\t\tbreak;\n\t\tcase 0x54: if(n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o); break;\n\t\tcase 0x50: return (n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09) ? read_zip(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xEF: return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xFF:\n\t\t\tif(n[1] === 0xFE) { return read_utf16(d, o); }\n\t\t\telse if(n[1] === 0x00 && n[2] === 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n\t\t\tbreak;\n\t\tcase 0x00:\n\t\t\tif(n[1] === 0x00) {\n\t\t\t\tif(n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n\t\t\t\tif(n[2] === 0x00 && (n[3] === 0x08 || n[3] === 0x09)) return WK_.to_workbook(d, o);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 0x03: case 0x83: case 0x8B: case 0x8C: return DBF.to_workbook(d, o);\n\t\tcase 0x7B: if(n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return RTF.to_workbook(d, o); break;\n\t\tcase 0x0A: case 0x0D: case 0x20: return read_plaintext_raw(d, o);\n\t\tcase 0x89: if(n[1] === 0x50 && n[2] === 0x4E && n[3] === 0x47) throw new Error(\"PNG Image File is not a spreadsheet\"); break;\n\t}\n\tif(DBF_SUPPORTED_VERSIONS.indexOf(n[0]) > -1 && n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\n\treturn read_prn(data, d, o, str);\n}\n\nfunction readFileSync(filename/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar o = opts||{}; o.type = 'file';\n\treturn readSync(filename, o);\n}\nfunction write_cfb_ctr(cfb/*:CFBContainer*/, o/*:WriteOpts*/)/*:any*/ {\n\tswitch(o.type) {\n\t\tcase \"base64\": case \"binary\": break;\n\t\tcase \"buffer\": case \"array\": o.type = \"\"; break;\n\t\tcase \"file\": return write_dl(o.file, CFB.write(cfb, {type:has_buf ? 'buffer' : \"\"}));\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\treturn CFB.write(cfb, o);\n}\n\n/*:: declare var encrypt_agile:any; */\nfunction write_zip_type(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = dup(opts||{});\n\tvar z = write_zip(wb, o);\n\treturn write_zip_denouement(z, o);\n}\nfunction write_zip_typeXLSX(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = dup(opts||{});\n\tvar z = write_zip_xlsx(wb, o);\n\treturn write_zip_denouement(z, o);\n}\nfunction write_zip_denouement(z/*:any*/, o/*:?WriteOpts*/)/*:any*/ {\n\tvar oopts = {};\n\tvar ftype = has_buf ? \"nodebuffer\" : (typeof Uint8Array !== \"undefined\" ? \"array\" : \"string\");\n\tif(o.compression) oopts.compression = 'DEFLATE';\n\tif(o.password) oopts.type = ftype;\n\telse switch(o.type) {\n\t\tcase \"base64\": oopts.type = \"base64\"; break;\n\t\tcase \"binary\": oopts.type = \"string\"; break;\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tcase \"buffer\":\n\t\tcase \"file\": oopts.type = ftype; break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tvar out = z.FullPaths ? CFB.write(z, {fileType:\"zip\", type: /*::(*/{\"nodebuffer\": \"buffer\", \"string\": \"binary\"}/*:: :any)*/[oopts.type] || oopts.type, compression: !!o.compression}) : z.generate(oopts);\n\tif(typeof Deno !== \"undefined\") {\n\t\tif(typeof out == \"string\") {\n\t\t\tif(o.type == \"binary\" || o.type == \"base64\") return out;\n\t\t\tout = new Uint8Array(s2ab(out));\n\t\t}\n\t}\n/*jshint -W083 */\n\tif(o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o); // eslint-disable-line no-undef\n/*jshint +W083 */\n\tif(o.type === \"file\") return write_dl(o.file, out);\n\treturn o.type == \"string\" ? utf8read(/*::(*/out/*:: :any)*/) : out;\n}\n\nfunction write_cfb_type(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = opts||{};\n\tvar cfb/*:CFBContainer*/ = write_xlscfb(wb, o);\n\treturn write_cfb_ctr(cfb, o);\n}\n\nfunction write_string_type(out/*:string*/, opts/*:WriteOpts*/, bom/*:?string*/)/*:any*/ {\n\tif(!bom) bom = \"\";\n\tvar o = bom + out;\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64_encode(utf8write(o));\n\t\tcase \"binary\": return utf8write(o);\n\t\tcase \"string\": return out;\n\t\tcase \"file\": return write_dl(opts.file, o, 'utf8');\n\t\tcase \"buffer\": {\n\t\t\tif(has_buf) return Buffer_from(o, 'utf8');\n\t\t\telse if(typeof TextEncoder !== \"undefined\") return new TextEncoder().encode(o);\n\t\t\telse return write_string_type(o, {type:'binary'}).split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\nfunction write_stxt_type(out/*:string*/, opts/*:WriteOpts*/)/*:any*/ {\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64_encode(out);\n\t\tcase \"binary\": return out;\n\t\tcase \"string\": return out; /* override in sheet_to_txt */\n\t\tcase \"file\": return write_dl(opts.file, out, 'binary');\n\t\tcase \"buffer\": {\n\t\t\tif(has_buf) return Buffer_from(out, 'binary');\n\t\t\telse return out.split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\n/* TODO: test consistency */\nfunction write_binary_type(out, opts/*:WriteOpts*/)/*:any*/ {\n\tswitch(opts.type) {\n\t\tcase \"string\":\n\t\tcase \"base64\":\n\t\tcase \"binary\":\n\t\t\tvar bstr = \"\";\n\t\t\t// $FlowIgnore\n\t\t\tfor(var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\n\t\t\treturn opts.type == 'base64' ? Base64_encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\n\t\tcase \"file\": return write_dl(opts.file, out);\n\t\tcase \"buffer\": return out;\n\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t}\n}\n\nfunction writeSyncXLSX(wb/*:Workbook*/, opts/*:?WriteOpts*/) {\n\treset_cp();\n\tcheck_wb(wb);\n\tvar o = dup(opts||{});\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\tif(o.type == \"array\") { o.type = \"binary\"; var out/*:string*/ = (writeSyncXLSX(wb, o)/*:any*/); o.type = \"array\"; return s2ab(out); }\n\treturn write_zip_typeXLSX(wb, o);\n}\n\nfunction writeSync(wb/*:Workbook*/, opts/*:?WriteOpts*/) {\n\treset_cp();\n\tcheck_wb(wb);\n\tvar o = dup(opts||{});\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\tif(o.type == \"array\") { o.type = \"binary\"; var out/*:string*/ = (writeSync(wb, o)/*:any*/); o.type = \"array\"; return s2ab(out); }\n\tvar idx = 0;\n\tif(o.sheet) {\n\t\tif(typeof o.sheet == \"number\") idx = o.sheet;\n\t\telse idx = wb.SheetNames.indexOf(o.sheet);\n\t\tif(!wb.SheetNames[idx]) throw new Error(\"Sheet not found: \" + o.sheet + \" : \" + (typeof o.sheet));\n\t}\n\tswitch(o.bookType || 'xlsb') {\n\t\tcase 'xml':\n\t\tcase 'xlml': return write_string_type(write_xlml(wb, o), o);\n\t\tcase 'slk':\n\t\tcase 'sylk': return write_string_type(SYLK.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'htm':\n\t\tcase 'html': return write_string_type(sheet_to_html(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'txt': return write_stxt_type(sheet_to_txt(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'csv': return write_string_type(sheet_to_csv(wb.Sheets[wb.SheetNames[idx]], o), o, \"\\ufeff\");\n\t\tcase 'dif': return write_string_type(DIF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'dbf': return write_binary_type(DBF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'prn': return write_string_type(PRN.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'rtf': return write_string_type(RTF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'eth': return write_string_type(ETH.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'fods': return write_string_type(write_ods(wb, o), o);\n\t\tcase 'wk1': return write_binary_type(WK_.sheet_to_wk1(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'wk3': return write_binary_type(WK_.book_to_wk3(wb, o), o);\n\t\tcase 'biff2': if(!o.biff) o.biff = 2; /* falls through */\n\t\tcase 'biff3': if(!o.biff) o.biff = 3; /* falls through */\n\t\tcase 'biff4': if(!o.biff) o.biff = 4; return write_binary_type(write_biff_buf(wb, o), o);\n\t\tcase 'biff5': if(!o.biff) o.biff = 5; /* falls through */\n\t\tcase 'biff8':\n\t\tcase 'xla':\n\t\tcase 'xls': if(!o.biff) o.biff = 8; return write_cfb_type(wb, o);\n\t\tcase 'xlsx':\n\t\tcase 'xlsm':\n\t\tcase 'xlam':\n\t\tcase 'xlsb':\n\t\tcase 'numbers':\n\t\tcase 'ods': return write_zip_type(wb, o);\n\t\tdefault: throw new Error (\"Unrecognized bookType |\" + o.bookType + \"|\");\n\t}\n}\n\nfunction resolve_book_type(o/*:WriteFileOpts*/) {\n\tif(o.bookType) return;\n\tvar _BT = {\n\t\t\"xls\": \"biff8\",\n\t\t\"htm\": \"html\",\n\t\t\"slk\": \"sylk\",\n\t\t\"socialcalc\": \"eth\",\n\t\t\"Sh33tJS\": \"WTF\"\n\t};\n\tvar ext = o.file.slice(o.file.lastIndexOf(\".\")).toLowerCase();\n\tif(ext.match(/^\\.[a-z]+$/)) o.bookType = ext.slice(1);\n\to.bookType = _BT[o.bookType] || o.bookType;\n}\n\nfunction writeFileSync(wb/*:Workbook*/, filename/*:string*/, opts/*:?WriteFileOpts*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSync(wb, o);\n}\n\nfunction writeFileSyncXLSX(wb/*:Workbook*/, filename/*:string*/, opts/*:?WriteFileOpts*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSyncXLSX(wb, o);\n}\n\n\nfunction writeFileAsync(filename/*:string*/, wb/*:Workbook*/, opts/*:?WriteFileOpts*/, cb/*:?(e?:ErrnoError)=>void*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\to.type = 'buffer';\n\tvar _cb = cb; if(!(_cb instanceof Function)) _cb = (opts/*:any*/);\n\treturn _fs.writeFile(filename, writeSync(wb, o), _cb);\n}\n/*::\ntype MJRObject = {\n\trow: any;\n\tisempty: boolean;\n};\n*/\nfunction make_json_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, header/*:number*/, hdr/*:Array<any>*/, dense/*:boolean*/, o/*:Sheet2JSONOpts*/)/*:MJRObject*/ {\n\tvar rr = encode_row(R);\n\tvar defval = o.defval, raw = o.raw || !Object.prototype.hasOwnProperty.call(o, \"raw\");\n\tvar isempty = true;\n\tvar row/*:any*/ = (header === 1) ? [] : {};\n\tif(header !== 1) {\n\t\tif(Object.defineProperty) try { Object.defineProperty(row, '__rowNum__', {value:R, enumerable:false}); } catch(e) { row.__rowNum__ = R; }\n\t\telse row.__rowNum__ = R;\n\t}\n\tif(!dense || sheet[R]) for (var C = r.s.c; C <= r.e.c; ++C) {\n\t\tvar val = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\tif(val === undefined || val.t === undefined) {\n\t\t\tif(defval === undefined) continue;\n\t\t\tif(hdr[C] != null) { row[hdr[C]] = defval; }\n\t\t\tcontinue;\n\t\t}\n\t\tvar v = val.v;\n\t\tswitch(val.t){\n\t\t\tcase 'z': if(v == null) break; continue;\n\t\t\tcase 'e': v = (v == 0 ? null : void 0); break;\n\t\t\tcase 's': case 'd': case 'b': case 'n': break;\n\t\t\tdefault: throw new Error('unrecognized type ' + val.t);\n\t\t}\n\t\tif(hdr[C] != null) {\n\t\t\tif(v == null) {\n\t\t\t\tif(val.t == \"e\" && v === null) row[hdr[C]] = null;\n\t\t\t\telse if(defval !== undefined) row[hdr[C]] = defval;\n\t\t\t\telse if(raw && v === null) row[hdr[C]] = null;\n\t\t\t\telse continue;\n\t\t\t} else {\n\t\t\t\trow[hdr[C]] = raw && (val.t !== \"n\" || (val.t === \"n\" && o.rawNumbers !== false)) ? v : format_cell(val,v,o);\n\t\t\t}\n\t\t\tif(v != null) isempty = false;\n\t\t}\n\t}\n\treturn { row: row, isempty: isempty };\n}\n\n\nfunction sheet_to_json(sheet/*:Worksheet*/, opts/*:?Sheet2JSONOpts*/) {\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr/*:Array<any>*/ = [], v=0, vv=\"\";\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar o = opts || {};\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\tif(o.header === 1) header = 1;\n\telse if(o.header === \"A\") header = 2;\n\telse if(Array.isArray(o.header)) header = 3;\n\telse if(o.header == null) header = 0;\n\tswitch(typeof range) {\n\t\tcase 'string': r = safe_decode_range(range); break;\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\tdefault: r = range;\n\t}\n\tif(header > 0) offset = 0;\n\tvar rr = encode_row(r.s.r);\n\tvar cols/*:Array<string>*/ = [];\n\tvar out/*:Array<any>*/ = [];\n\tvar outi = 0, counter = 0;\n\tvar dense = Array.isArray(sheet);\n\tvar R = r.s.r, C = 0;\n\tvar header_cnt = {};\n\tif(dense && !sheet[R]) sheet[R] = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\tif(((colinfo[C]||{}).hidden)) continue;\n\t\tcols[C] = encode_col(C);\n\t\tval = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\tswitch(header) {\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\tdefault:\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\tcounter = header_cnt[v] || 0;\n\t\t\t\tif(!counter) header_cnt[v] = 1;\n\t\t\t\telse {\n\t\t\t\t\tdo { vv = v + \"_\" + (counter++); } while(header_cnt[vv]); header_cnt[v] = counter;\n\t\t\t\t\theader_cnt[vv] = 1;\n\t\t\t\t}\n\t\t\t\thdr[C] = vv;\n\t\t}\n\t}\n\tfor (R = r.s.r + offset; R <= r.e.r; ++R) {\n\t\tif ((rowinfo[R]||{}).hidden) continue;\n\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;\n\t}\n\tout.length = outi;\n\treturn out;\n}\n\nvar qreg = /\"/g;\nfunction make_csv_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, fs/*:number*/, rs/*:number*/, FS/*:string*/, o/*:Sheet2CSVOpts*/)/*:?string*/ {\n\tvar isempty = true;\n\tvar row/*:Array<string>*/ = [], txt = \"\", rr = encode_row(R);\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\tif (!cols[C]) continue;\n\t\tvar val = o.dense ? (sheet[R]||[])[C]: sheet[cols[C] + rr];\n\t\tif(val == null) txt = \"\";\n\t\telse if(val.v != null) {\n\t\t\tisempty = false;\n\t\t\ttxt = ''+(o.rawNumbers && val.t == \"n\" ? val.v : format_cell(val, null, o));\n\t\t\tfor(var i = 0, cc = 0; i !== txt.length; ++i) if((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34 || o.forceQuotes) {txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\"; break; }\n\t\t\tif(txt == \"ID\") txt = '\"ID\"';\n\t\t} else if(val.f != null && !val.F) {\n\t\t\tisempty = false;\n\t\t\ttxt = '=' + val.f; if(txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\n\t\t} else txt = \"\";\n\t\t/* NOTE: Excel CSV does not support array formulae */\n\t\trow.push(txt);\n\t}\n\tif(o.blankrows === false && isempty) return null;\n\treturn row.join(FS);\n}\n\nfunction sheet_to_csv(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [];\n\tvar o = opts == null ? {} : opts;\n\tif(sheet == null || sheet[\"!ref\"] == null) return \"\";\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n\tvar row = \"\", cols/*:Array<string>*/ = [];\n\to.dense = Array.isArray(sheet);\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\tvar w = 0;\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\tif ((rowinfo[R]||{}).hidden) continue;\n\t\trow = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\n\t\tif(row == null) { continue; }\n\t\tif(o.strip) row = row.replace(endregex,\"\");\n\t\tif(row || (o.blankrows !== false)) out.push((w++ ? RS : \"\") + row);\n\t}\n\tdelete o.dense;\n\treturn out.join(\"\");\n}\n\nfunction sheet_to_txt(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tif(!opts) opts = {}; opts.FS = \"\\t\"; opts.RS = \"\\n\";\n\tvar s = sheet_to_csv(sheet, opts);\n\tif(typeof $cptable == 'undefined' || opts.type == 'string') return s;\n\tvar o = $cptable.utils.encode(1200, s, 'str');\n\treturn String.fromCharCode(255) + String.fromCharCode(254) + o;\n}\n\nfunction sheet_to_formulae(sheet/*:Worksheet*/)/*:Array<string>*/ {\n\tvar y = \"\", x, val=\"\";\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar r = safe_decode_range(sheet['!ref']), rr = \"\", cols/*:Array<string>*/ = [], C;\n\tvar cmds/*:Array<string>*/ = [];\n\tvar dense = Array.isArray(sheet);\n\tfor(C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\ty = cols[C] + rr;\n\t\t\tx = dense ? (sheet[R]||[])[C] : sheet[y];\n\t\t\tval = \"\";\n\t\t\tif(x === undefined) continue;\n\t\t\telse if(x.F != null) {\n\t\t\t\ty = x.F;\n\t\t\t\tif(!x.f) continue;\n\t\t\t\tval = x.f;\n\t\t\t\tif(y.indexOf(\":\") == -1) y = y + \":\" + y;\n\t\t\t}\n\t\t\tif(x.f != null) val = x.f;\n\t\t\telse if(x.t == 'z') continue;\n\t\t\telse if(x.t == 'n' && x.v != null) val = \"\" + x.v;\n\t\t\telse if(x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";\n\t\t\telse if(x.w !== undefined) val = \"'\" + x.w;\n\t\t\telse if(x.v === undefined) continue;\n\t\t\telse if(x.t == 's') val = \"'\" + x.v;\n\t\t\telse val = \"\"+x.v;\n\t\t\tcmds[cmds.length] = y + \"=\" + val;\n\t\t}\n\t}\n\treturn cmds;\n}\n\nfunction sheet_add_json(_ws/*:?Worksheet*/, js/*:Array<any>*/, opts)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tvar offset = +!o.skipHeader;\n\tvar ws/*:Worksheet*/ = _ws || ({}/*:any*/);\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t}\n\tvar cell/*:Cell*/;\n\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:_C, r:_R + js.length - 1 + offset}}/*:any*/);\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) { _R = _range.e.r + 1; range.e.r = _R + js.length - 1 + offset; }\n\t} else {\n\t\tif(_R == -1) { _R = 0; range.e.r = js.length - 1 + offset; }\n\t}\n\tvar hdr/*:Array<string>*/ = o.header || [], C = 0;\n\n\tjs.forEach(function (JS, R/*:number*/) {\n\t\tkeys(JS).forEach(function(k) {\n\t\t\tif((C=hdr.indexOf(k)) == -1) hdr[C=hdr.length] = k;\n\t\t\tvar v = JS[k];\n\t\t\tvar t = 'z';\n\t\t\tvar z = \"\";\n\t\t\tvar ref = encode_cell({c:_C + C,r:_R + R + offset});\n\t\t\tcell = ws_get_cell_stub(ws, ref);\n\t\t\tif(v && typeof v === 'object' && !(v instanceof Date)){\n\t\t\t\tws[ref] = v;\n\t\t\t} else {\n\t\t\t\tif(typeof v == 'number') t = 'n';\n\t\t\t\telse if(typeof v == 'boolean') t = 'b';\n\t\t\t\telse if(typeof v == 'string') t = 's';\n\t\t\t\telse if(v instanceof Date) {\n\t\t\t\t\tt = 'd';\n\t\t\t\t\tif(!o.cellDates) { t = 'n'; v = datenum(v); }\n\t\t\t\t\tz = (o.dateNF || table_fmt[14]);\n\t\t\t\t}\n\t\t\t\telse if(v === null && o.nullError) { t = 'e'; v = 0; }\n\t\t\t\tif(!cell) ws[ref] = cell = ({t:t, v:v}/*:any*/);\n\t\t\t\telse {\n\t\t\t\t\tcell.t = t; cell.v = v;\n\t\t\t\t\tdelete cell.w; delete cell.R;\n\t\t\t\t\tif(z) cell.z = z;\n\t\t\t\t}\n\t\t\t\tif(z) cell.z = z;\n\t\t\t}\n\t\t});\n\t});\n\trange.e.c = Math.max(range.e.c, _C + hdr.length - 1);\n\tvar __R = encode_row(_R);\n\tif(offset) for(C = 0; C < hdr.length; ++C) ws[encode_col(C + _C) + __R] = {t:'s', v:hdr[C]};\n\tws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction json_to_sheet(js/*:Array<any>*/, opts)/*:Worksheet*/ { return sheet_add_json(null, js, opts); }\n\n/* get cell, creating a stub if necessary */\nfunction ws_get_cell_stub(ws/*:Worksheet*/, R, C/*:?number*/)/*:Cell*/ {\n\t/* A1 cell address */\n\tif(typeof R == \"string\") {\n\t\t/* dense */\n\t\tif(Array.isArray(ws)) {\n\t\t\tvar RC = decode_cell(R);\n\t\t\tif(!ws[RC.r]) ws[RC.r] = [];\n\t\t\treturn ws[RC.r][RC.c] || (ws[RC.r][RC.c] = {t:'z'});\n\t\t}\n\t\treturn ws[R] || (ws[R] = {t:'z'});\n\t}\n\t/* cell address object */\n\tif(typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\n\t/* R and C are 0-based indices */\n\treturn ws_get_cell_stub(ws, encode_cell({r:R,c:C||0}));\n}\n\n/* find sheet index for given name / validate index */\nfunction wb_sheet_idx(wb/*:Workbook*/, sh/*:number|string*/) {\n\tif(typeof sh == \"number\") {\n\t\tif(sh >= 0 && wb.SheetNames.length > sh) return sh;\n\t\tthrow new Error(\"Cannot find sheet # \" + sh);\n\t} else if(typeof sh == \"string\") {\n\t\tvar idx = wb.SheetNames.indexOf(sh);\n\t\tif(idx > -1) return idx;\n\t\tthrow new Error(\"Cannot find sheet name |\" + sh + \"|\");\n\t} else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\n}\n\n/* simple blank workbook object */\nfunction book_new()/*:Workbook*/ {\n\treturn { SheetNames: [], Sheets: {} };\n}\n\n/* add a worksheet to the end of a given workbook */\nfunction book_append_sheet(wb/*:Workbook*/, ws/*:Worksheet*/, name/*:?string*/, roll/*:?boolean*/)/*:string*/ {\n\tvar i = 1;\n\tif(!name) for(; i <= 0xFFFF; ++i, name = undefined) if(wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\n\tif(!name || wb.SheetNames.length >= 0xFFFF) throw new Error(\"Too many worksheets\");\n\tif(roll && wb.SheetNames.indexOf(name) >= 0) {\n\t\tvar m = name.match(/(^.*?)(\\d+)$/);\n\t\ti = m && +m[2] || 0;\n\t\tvar root = m && m[1] || name;\n\t\tfor(++i; i <= 0xFFFF; ++i) if(wb.SheetNames.indexOf(name = root + i) == -1) break;\n\t}\n\tcheck_ws_name(name);\n\tif(wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\n\n\twb.SheetNames.push(name);\n\twb.Sheets[name] = ws;\n\treturn name;\n}\n\n/* set sheet visibility (visible/hidden/very hidden) */\nfunction book_set_sheet_visibility(wb/*:Workbook*/, sh/*:number|string*/, vis/*:number*/) {\n\tif(!wb.Workbook) wb.Workbook = {};\n\tif(!wb.Workbook.Sheets) wb.Workbook.Sheets = [];\n\n\tvar idx = wb_sheet_idx(wb, sh);\n\t// $FlowIgnore\n\tif(!wb.Workbook.Sheets[idx]) wb.Workbook.Sheets[idx] = {};\n\n\tswitch(vis) {\n\t\tcase 0: case 1: case 2: break;\n\t\tdefault: throw new Error(\"Bad sheet visibility setting \" + vis);\n\t}\n\t// $FlowIgnore\n\twb.Workbook.Sheets[idx].Hidden = vis;\n}\n\n/* set number format */\nfunction cell_set_number_format(cell/*:Cell*/, fmt/*:string|number*/) {\n\tcell.z = fmt;\n\treturn cell;\n}\n\n/* set cell hyperlink */\nfunction cell_set_hyperlink(cell/*:Cell*/, target/*:string*/, tooltip/*:?string*/) {\n\tif(!target) {\n\t\tdelete cell.l;\n\t} else {\n\t\tcell.l = ({ Target: target }/*:Hyperlink*/);\n\t\tif(tooltip) cell.l.Tooltip = tooltip;\n\t}\n\treturn cell;\n}\nfunction cell_set_internal_link(cell/*:Cell*/, range/*:string*/, tooltip/*:?string*/) { return cell_set_hyperlink(cell, \"#\" + range, tooltip); }\n\n/* add to cell comments */\nfunction cell_add_comment(cell/*:Cell*/, text/*:string*/, author/*:?string*/) {\n\tif(!cell.c) cell.c = [];\n\tcell.c.push({t:text, a:author||\"SheetJS\"});\n}\n\n/* set array formula and flush related cells */\nfunction sheet_set_array_formula(ws/*:Worksheet*/, range, formula/*:string*/, dynamic/*:boolean*/) {\n\tvar rng = typeof range != \"string\" ? range : safe_decode_range(range);\n\tvar rngstr = typeof range == \"string\" ? range : encode_range(range);\n\tfor(var R = rng.s.r; R <= rng.e.r; ++R) for(var C = rng.s.c; C <= rng.e.c; ++C) {\n\t\tvar cell = ws_get_cell_stub(ws, R, C);\n\t\tcell.t = 'n';\n\t\tcell.F = rngstr;\n\t\tdelete cell.v;\n\t\tif(R == rng.s.r && C == rng.s.c) {\n\t\t\tcell.f = formula;\n\t\t\tif(dynamic) cell.D = true;\n\t\t}\n\t}\n\treturn ws;\n}\n\nvar utils/*:any*/ = {\n\tencode_col: encode_col,\n\tencode_row: encode_row,\n\tencode_cell: encode_cell,\n\tencode_range: encode_range,\n\tdecode_col: decode_col,\n\tdecode_row: decode_row,\n\tsplit_cell: split_cell,\n\tdecode_cell: decode_cell,\n\tdecode_range: decode_range,\n\tformat_cell: format_cell,\n\tsheet_add_aoa: sheet_add_aoa,\n\tsheet_add_json: sheet_add_json,\n\tsheet_add_dom: sheet_add_dom,\n\taoa_to_sheet: aoa_to_sheet,\n\tjson_to_sheet: json_to_sheet,\n\ttable_to_sheet: parse_dom_table,\n\ttable_to_book: table_to_book,\n\tsheet_to_csv: sheet_to_csv,\n\tsheet_to_txt: sheet_to_txt,\n\tsheet_to_json: sheet_to_json,\n\tsheet_to_html: sheet_to_html,\n\tsheet_to_formulae: sheet_to_formulae,\n\tsheet_to_row_object_array: sheet_to_json,\n\tsheet_get_cell: ws_get_cell_stub,\n\tbook_new: book_new,\n\tbook_append_sheet: book_append_sheet,\n\tbook_set_sheet_visibility: book_set_sheet_visibility,\n\tcell_set_number_format: cell_set_number_format,\n\tcell_set_hyperlink: cell_set_hyperlink,\n\tcell_set_internal_link: cell_set_internal_link,\n\tcell_add_comment: cell_add_comment,\n\tsheet_set_array_formula: sheet_set_array_formula,\n\tconsts: {\n\t\tSHEET_VISIBLE: 0,\n\t\tSHEET_HIDDEN: 1,\n\t\tSHEET_VERY_HIDDEN: 2\n\t}\n};\n\nvar _Readable;\nfunction set_readable(R) { _Readable = R; }\n\nfunction write_csv_stream(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tvar stream = _Readable();\n\tvar o = opts == null ? {} : opts;\n\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n\tvar row/*:?string*/ = \"\", cols/*:Array<string>*/ = [];\n\to.dense = Array.isArray(sheet);\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\tvar R = r.s.r;\n\tvar BOM = false, w = 0;\n\tstream._read = function() {\n\t\tif(!BOM) { BOM = true; return stream.push(\"\\uFEFF\"); }\n\t\twhile(R <= r.e.r) {\n\t\t\t++R;\n\t\t\tif ((rowinfo[R-1]||{}).hidden) continue;\n\t\t\trow = make_csv_row(sheet, r, R-1, cols, fs, rs, FS, o);\n\t\t\tif(row != null) {\n\t\t\t\tif(o.strip) row = row.replace(endregex,\"\");\n\t\t\t\tif(row || (o.blankrows !== false)) return stream.push((w++ ? RS : \"\") + row);\n\t\t\t}\n\t\t}\n\t\treturn stream.push(null);\n\t};\n\treturn stream;\n}\n\nfunction write_html_stream(ws/*:Worksheet*/, opts/*:?Sheet2HTMLOpts*/) {\n\tvar stream = _Readable();\n\n\tvar o = opts || {};\n\tvar header = o.header != null ? o.header : HTML_BEGIN;\n\tvar footer = o.footer != null ? o.footer : HTML_END;\n\tstream.push(header);\n\tvar r = decode_range(ws['!ref']);\n\to.dense = Array.isArray(ws);\n\tstream.push(make_html_preamble(ws, r, o));\n\tvar R = r.s.r;\n\tvar end = false;\n\tstream._read = function() {\n\t\tif(R > r.e.r) {\n\t\t\tif(!end) { end = true; stream.push(\"</table>\" + footer); }\n\t\t\treturn stream.push(null);\n\t\t}\n\t\twhile(R <= r.e.r) {\n\t\t\tstream.push(make_html_row(ws, r, R, o));\n\t\t\t++R;\n\t\t\tbreak;\n\t\t}\n\t};\n\treturn stream;\n}\n\nfunction write_json_stream(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tvar stream = _Readable({objectMode:true});\n\n\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr/*:Array<any>*/ = [], v=0, vv=\"\";\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar o = opts || {};\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\tif(o.header === 1) header = 1;\n\telse if(o.header === \"A\") header = 2;\n\telse if(Array.isArray(o.header)) header = 3;\n\tswitch(typeof range) {\n\t\tcase 'string': r = safe_decode_range(range); break;\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\tdefault: r = range;\n\t}\n\tif(header > 0) offset = 0;\n\tvar rr = encode_row(r.s.r);\n\tvar cols/*:Array<string>*/ = [];\n\tvar counter = 0;\n\tvar dense = Array.isArray(sheet);\n\tvar R = r.s.r, C = 0;\n\tvar header_cnt = {};\n\tif(dense && !sheet[R]) sheet[R] = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\tif(((colinfo[C]||{}).hidden)) continue;\n\t\tcols[C] = encode_col(C);\n\t\tval = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\tswitch(header) {\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\tdefault:\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\tcounter = header_cnt[v] || 0;\n\t\t\t\tif(!counter) header_cnt[v] = 1;\n\t\t\t\telse {\n\t\t\t\t\tdo { vv = v + \"_\" + (counter++); } while(header_cnt[vv]); header_cnt[v] = counter;\n\t\t\t\t\theader_cnt[vv] = 1;\n\t\t\t\t}\n\t\t\t\thdr[C] = vv;\n\t\t}\n\t}\n\tR = r.s.r + offset;\n\tstream._read = function() {\n\t\twhile(R <= r.e.r) {\n\t\t\tif ((rowinfo[R-1]||{}).hidden) continue;\n\t\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n\t\t\t++R;\n\t\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) {\n\t\t\t\tstream.push(row.row);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\treturn stream.push(null);\n\t};\n\treturn stream;\n}\n\nvar __stream = {\n\tto_json: write_json_stream,\n\tto_html: write_html_stream,\n\tto_csv: write_csv_stream,\n  set_readable: set_readable\n};\nconst version = XLSX.version;\n\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack___webpack_module__","__webpack_exports__","__webpack_require__","_fs","d","writeFileSync","utils","readSync","data","opts","reset_cp","o","cfb","ArrayBuffer","Uint8Array","dup","type","Deno","n","str","cellStyles","cellNF","sheetStubs","_ssfopts","dateNF","Buffer","isBuffer","has_buf","read_binary","path","readFileSync","$","File","Folder","infile","open","encoding","read","close","e","message","match","codepage","utf8write","ab","vu","foo","ab2a","firstbyte","CFB","find","parse_xlsxcfb","_opts","f","content","blob","id","read_shift","R","parse_CRYPTOVersion","U","W","dsm","parse_DataSpaceMap","l","cnt","parse_DataSpaceMapEntry","len","end","comps","t","v","name","length","seds","parse_DataSpaceDefinition","parse_Primary","hdr","ename","blksz","cmode","einfo","parse_EncryptionInfo","KeyData","xml","vers","Minor","parse_EncInfoStd","flags","sz","h","parse_EncryptionHeader","parse_EncryptionVerifier","parse_EncInfoExt","replace","tagregex","x","y","parsexmltag","strip_ns","forEach","k","encryptedHmacKey","encryptedHmacValue","encs","uri","decrypt_agile","password","decrypt_std76","parse_xlscfb","parse_xlml","read_wb_ID","OLD_WTF","WTF","out","SYLK","to_workbook","PRN","DIF","parse_zip","zip","make_ssf","fix_read_opts","safegetzipfile","parse_ods","parse_manifest","Rn","FEtag","xlml_normalize","xlmlregex","exec","getzipdata","getzipstr","wb","parse_content_xml","utf8read","Props","parse_core_props","FileIndex","parse_numbers_iwa","themes","p","q","pass","sheets","binname","relsPath","_zip","cfb_new","zipentries","zip_add_file","getzipbin","file","safe","getdatabin","getzipfile","entries","dir","parse_ct","ct","new_ct","ctext","nsregex","xmlns","Extension","ContentType","undefined","ct2type","PartName","XMLNS","CT","calcchain","calcchains","sst","strs","style","styles","defaults","xlsb","workbooks","slice","bookSheets","bookProps","parse_sst","s","recordhopper","val","RT","Count","Unique","T","toString","parse_sst_xml","ss","sstr0","sstr1","split","sstr2","i","parse_si","trim","count","uniqueCount","strip_front_slash","parse_theme_xml","parse_sty_bin","NumberFmt","table_fmt","CellXf","Fonts","state","SSF_load","color","theme","themeElements","clrScheme","rgb","rgb_tint","tint","pop","parse_sty_xml","links","map","link","parse_rels","get_rels_path","parse_xlink_bin","rel","parse_wb","Names","supbooks","AppVersion","WBProps","WBView","Sheets","CalcPr","biff","SheetNames","XTI","XLSBRecordEnum","parse_BrtFRTArchID$","Sheet","SID","Ref","stringify_formula","Ptg","concat","parse_wb_defaults","parse_wb_xml","dname","dnstart","idx","wbnsregex","WBPropsDef","w","parsexmlbool","parseInt","codeName","CodeName","Hidden","unescapexml","Name","comment","Comment","localSheetId","hidden","XMLNS_main","indexOf","props","propdata","coreprops","extprops","EXT_PROPS","matchtag","cur","HeadingPairs","TitlesOfParts","load_props_pairs","custprops","parse_cust_props","m","custregex","toks","text","parseFloat","parseDate","console","warn","Worksheets","Custprops","deps","bookDeps","parse_cc","parse_cc_xml","sheetRels","wbsheets","j","wbext","wbrelsi","lastIndexOf","wbrelsfile","wbrels","metadata","xlmeta","parse_xlmeta","metatype","Types","Cell","Value","r","index","parse_xlmeta_xml","lastmeta","offsets","people","displayname","safe_parse_wbrels","strRelID","Target","Type","WS","RELS","CS","DS","MS","nmode","wsloop","stype","toLowerCase","Array","isArray","snjseen","snj","safe_parse_sheet","sheet","rels","_ws","parse_ws_bin","ref","row","cf","C","addr","sstr","rr","cell","cm","vm","dense","refguess","c","merges","ai","af","arrayf","sharedf","colinfo","rowinfo","seencol","parse_BrtShortReal","RR","sheetRows","encode_row","hpt","level","hpx","pt2px","cellText","BErr","iStyleRef","safe_format","numFmtId","encode_col","cellFormula","aii","F","encode_range","cellDates","fmt_is_date","_d","SSF_parse_date_code","Date","H","M","S","u","D","relId","loc","Rel","rfx","encode_cell","width","find_mdw_colw","process_col","above","left","Views","RTL","tmpref","safe_decode_range","parse_ws_xml","data1","data2","mtch","sheetdataregex","sheetPr","sheetprregex","parse_ws_xml_sheetpr","sheetprregex2","ridx","body","ws","dimregex","svs","svsregex","parse_ws_xml_sheetviews","sviewregex","tag","zoomScale","zoom","rightToLeft","columns","cols","colregex","parse_ws_xml_cols","coli","coll","colm","min","colM","max","outlineLevel","parse_ws_xml_data","afilter","afregex","_merge","mergecregex","hlink","hlinkregex","parse_ws_xml_hlinks","location","TargetMode","tooltip","Tooltip","rng","margins","marginregex","parse_ws_xml_margins","margin","parse_cs_bin","parse_cs_xml","dfile","resolve_path","drelsp","draw","parse_drawing","chartp","crelsp","parse_chart","csheet","cs","col","nc","cache","parse_Cache","num","pt","nf","z","tcomments","keys","tidx","CMNT","comments","parse_cmnt","authors","author","iauthor","parse_comments_xml","commentList","authtag","a","cmnttag","authorId","guid","decode_cell","textMatch","rt","cellHTML","sheet_insert_comments","TCMNT","personId","Directory","Workbook","Deps","Strings","Styles","Themes","SSF","bookFiles","files","FullPaths","bookVBA","vba","vbaraw","bin","zip_read","read_prn","Base64_decode","$cptable","decode","read_plaintext","WK_","DBF","RTF","read_plaintext_raw","bytes","cc2str","CRC32","T0","TT","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","safe_split_regex","encregex","coderegex","mtcache","entities","vt_cache","PadArray","InitialCode","XorMatrix","XorRor","CreateXorKey_Method1","numFmtRegex","cellXfRegex","fillsRegex","fontsRegex","bordersRegex","cellregex","rowregex","rregex","isregex","refregex","match_v","match_f","payload","null_cell_xml","write_ws","write_automatic_styles_ods","evert_XLMLDPM","rev_XLSBFillPTNames","XLMLFormatMap","process","XLSX","version","current_codepage","current_ansi","VALID_ANSI","CS2CP","set_ansi","cp","set_cp","char_codes","charCodeAt","utf16beread","String","fromCharCode","join","debom","c1","c2","utf16leread","_getchar","_getansi","Base64_map","Base64_encode","input","c3","e1","e2","e3","e4","isNaN","charAt","versions","node","Buffer_from","nbfs","from","buf","enc","bind","new_raw_buf","alloc","new_unsafe_buf","allocUnsafe","s2a","s2ab","view","a2s","bconcat","bufs","maxlen","set","apply","call","chr0","chr1","_strrev","pad0","fill","pad_","rpad_","pad0r","Math","round","SSF_isgeneral","days","months","SSF_default_map","SSF_default_str","SSF_frac","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","b2","date","time","dow","dout","abs","date1904","setDate","getDate","getFullYear","getMonth","getDay","SSFbasedate","SSFdnthresh","getTime","SSFbase1904","datenum_local","epoch","getTimezoneOffset","SSF_strip_decimal","SSF_general_num","V","log","LOG10E","toPrecision","toFixed","toExponential","substr","toUpperCase","SSF_general","SSF_format","commaify","pct1","frac1","dec1","closeparen","phone","hashq","cc","rnd","dd","pow","dec","_frac","write_num","fmt","write_num_int","ffmt","write_num_cm2","sfmt","mul","write_num_exp2","period","ee","fakee","$$","$1","$2","$3","ri","ff","aval","sign","oa","lres","rres","write_num_flt","den","base","myn","write_num_cm","write_num_exp","SSF_abstime","cfregex2","chkcond","thresh","table","choose_fmt","SSF_split_fmt","in_str","lat","m1","m2","eval_fmt","flen","dt","lst","hr","ssm","bt","ss0","jj","nstr","SSF_write_date","tt","outl","myv","ostr","vv","decpt","lasti","retval","SSF_load_table","tbl","format","load","_table","load_table","parse_date_code","is_date","get_table","SSFImplicit","dateNFregex","slice_by_16_tables","Int32Array","subarray","signed_crc_table","bstr","seed","L","fs","_zlib","exports","dirname","filename","parse_extra_field","prep_blob","tgt","mtime","atime","ctime","mt","get_fs","parse","options","parse_mad","root","di","test","mboundary","boundary","init_cfb","start_di","fcnt","line","parse_mime","fdata","fname","cte","ctype","parse_quoted_printable","oi","cfb_add","unsafe","mver","ssz","nmfs","difat_sec_cnt","dir_start","minifat_start","difat_start","fat_addrs","mv","check_get_mver","chk","HEADER_SIGNATURE","header","check_shifts","shift","dir_cnt","sectors","sectorify","nsectors","ceil","sleuth_fat","ENDOFCHAIN","sector","__readInt32LE","sector_list","make_sector_list","sl","chkd","buf_chain","modulus","seen","nodes","__toBuffer","Paths","read_directory","mini","minifat_store","pl","namelen","__utf16le","clsid","start","size","read_date","storage","get_sector_list","get_mfat_entry","entry","MSSZ","new_buf","build_full_paths","FI","FP","dad","raw","offset","__readUInt32LE","CLSID","seed_cfb","nm","rebuild_cfb","gc","_file","now","fullPaths","Object","create","HEADER_CLSID","sort","namecmp","Z","elt","_write","fileType","write_mad","fp","fi","ca","cstr","dispcnt","csl","qp","get_content_type","ext","ContentTypeMap","write_quoted_printable","encoded","si","tmp","write_base64_76","write_zip","cdirs","method","compression","start_cd","crcs","sz_cd","namebuf","write_shift","outbuf","deflateRawSync","_deflate","write_dos_date","hms","getHours","getMinutes","getSeconds","ymd","mini_size","fat_size","mini_cnt","mfat_cnt","fat_base","fat_cnt","difat_cnt","HEADER_SIG","chainit","consts","DIFSECT","FATSECT","_nm","copy","MAXREGSECT","FREESECT","HEADER_MINOR_VERSION","MAXREGSID","NOSTREAM","EntryTypes","CLEN_ORDER","LEN_LN","DST_LN","use_typed_arrays","bitswap8","bit_swap_8","read_bits_3","bl","read_bits_5","read_bits_7","read_bits_n","write_bits_3","write_bits_8","write_bits_16","realloc","b","zero_fill_array","build_tree","clens","cmap","MAX","ccode","bl_count","Uint16Array","ctree","cleni","bit_swap_n","rev","fix_lmap","fix_dmap","dlens","_deflateRaw","DST_LN_RE","LEN_LN_RE","write_stored","boff","write_huff_fixed","addrs","hash","mlen","len_eb","dst_eb","off","dyn_lmap","dyn_dmap","dyn_cmap","dyn_len_1","dyn_len_2","_inflate","usz","inflate","woff","OL","max_len_1","max_len_2","dyn","_HLIT","_HDIST","_HCLEN","read_bits_4","next_code","hcodes","read_bits_2","h1","h2","bits","code","dst","warn_or_throw","wrn","msg","error","csz","efsz","fcsz","EF","parse_local_file","meth","setMilliseconds","setFullYear","setMonth","setHours","setMinutes","setSeconds","_csz","_usz","ef","_inflateRawSync","InflRaw","InflateRaw","_processChunk","_finishFlushFlag","bytesRead","fpath","cfb_gc","UCFullPaths","UCPaths","UCPath","write","writeFile","cfb_del","splice","cfb_mov","old_name","new_name","ReadShift","CheckField","use_zlib","zlib","_inflateRaw","write_dl","TextEncoder","encode","IE_SaveFile","Blob","a2u","navigator","msSaveBlob","saveAs","URL","document","createElement","createObjectURL","url","chrome","downloads","download","revokeObjectURL","setTimeout","href","appendChild","click","removeChild","ks","o2","prototype","hasOwnProperty","evert_key","obj","key","K","evert","evert_num","basedate","datenum","refdate","dnthresh","refoffset","numdate","setTime","good_pd_date_1","good_pd_date","good_pd","fixdate","arr","debomit","TextDecoder","JSON","stringify","fuzzynum","Number","isFinite","NaN","wt","lower_months","fuzzydate","getYear","lower","split_regex","re","def","getdatastr","asNodeBuffer","asBinary","_data","getContent","g","res","utf8decode","widx","zip_new","result","target","step","XML_HEADER","attregexg","tagregex1","nsregex2","skip_root","skip_LC","eq","quot","encodings","rencoding","decregex","charegex","escapexml","escapexmltag","htmlcharegex","escapehtml","xlml_fixstr","entregex","entrepl","value","utf8reada","orig","utf8readb","ww","utf8readc","utf8corpus","htmldecode","vtregex","vtvregex","vtmregex","parseVector","matches","baseType","wtregex","writetag","wxt_helper","writextag","write_w3cdtf","toISOString","CORE_PROPS","CUST_PROPS","XLMLNS","___toBuffer","___utf16le","__readUInt16LE","___hexlify","__hexlify","___utf8","__readUInt8","__utf8","___lpstr","__lpstr","___cpstr","__cpstr","___lpwstr","__lpwstr","___lpp4","__lpp4","___8lpp4","__8lpp4","___double","read_double_le","Infinity","__double","is_buf","readUInt32LE","readDoubleLE","__readInt16LE","__readInt32BE","oI","oR","oo","lens","__writeUInt32LE","__writeInt32LE","__writeUInt16LE","WriteShift","cppayload","write_double_le","bs","av","LN2","hexstr","fld","pos","parsenoop","cb","tmpbyte","cntbyte","buf_array","newblk","curbuf","endbuf","next","_bufs","write_record","ba","shift_cell_xls","cRel","rRel","shift_range_xls","range","encode_cell_xls","encode_range_xls","decode_row","rowstr","decode_col","colstr","decode_range","ce","safe_format_cell","XF","format_cell","sheet_to_workbook","sheet_add_aoa","_R","_C","origin","_origin","_range","__R","__C","nullError","cell_ref","aoa_to_sheet","write_UInt32LE","parse_XLWideString","cchCharacters","write_XLWideString","_null","parse_RichStr","rgsStrRun","dwSizeStrRun","ich","ifnt","parse_XLSBCell","write_XLSBCell","parse_XLSBShortCell","write_XLSBShortCell","parse_XLNullableWideString","write_XLNullableWideString","parse_RkNumber","fX100","fInt","RK","write_RkNumber","d100","parse_RfX","write_UncheckedRfX","parse_Xnum","write_Xnum","write_BrtColor","auto","nTS","parse_ClipboardFormatOrString","ClipFmt","VT_CUSTOM","DocSummaryPIDDSI","SummaryPIDSI","CountryEnum","XLSFillPattern","XLSIcv","RBErr","CT_LIST","xlsx","xlsm","xlam","xltx","charts","dialogs","macros","threadedcomments","drawings","TODO","write_ct","type2ct","evert_arr","xsd","xsi","f1","bookType","f2","f3","WB","SHEET","HLINK","VML","XPATH","XMISS","XLINK","CXML","CXMLP","SST","STY","THEME","CHART","CHARTEX","IMG","DRAW","XLMETA","PEOPLE","VBA","currentFilePath","Id","write_rels","rid","add_rels","rId","relobj","targetmode","write_rdf_type","write_meta_ods","CORE_PROPS_REGEX","cp_doit","write_core_props","dc","dcterms","dcmitype","CreatedDate","ModifiedDate","PseudoPropsPairs","HP","TOP","hp","parts","NamedRanges","DefinedNames","Chartsheets","ChartNames","write_ext_props","Application","vt","write_cust_props","pid","write_vt","XLMLDocPropsMap","Title","Subject","Author","Keywords","Comments","LastAuthor","RevNumber","LastPrinted","Category","Manager","Company","ContentStatus","Identifier","Language","parse_FILETIME","dwLowDateTime","dwHighDateTime","parse_lpstr","pad","parse_lpwstr","parse_VtStringBase","stringType","parse_VtString","parse_dictionary","CodePage","dict","parse_BLOB","parse_TypedPropertyValue","ret","Size","parse_VtUnalignedString","parse_VtVecHeadingPairValue","cElements","parse_VtHeadingPair","headingString","parse_VtVecLpwstrValue","parse_VtVecUnalignedLpstrValue","write_TypedPropertyValue","parse_PropertySet","PIDSI","start_addr","NumProps","Dictionary","DictObj","PropID","Offset","PropH","fail","piddsi","oldpos","parsebool","XLSPSSkip","write_PropertySet","RE","piao","prop","pr","pio","unshift","pinfo","guess_property_type","parse_PropertySetStream","PSet1","NumSets","FMTID0","FMTID1","Offset0","Offset1","SystemIdentifier","PSet0","rval","FMTID","write_PropertySetStream","entries2","clsid2","ps0","ps1","parsenoop2","writebool","parseuint16","writeuint16","parseuint16a","parslurp","write_Bes","parse_ShortXLUnicodeString","cch","parse_XLUnicodeStringNoCch","fHighByte","parse_XLUnicodeString","parse_XLUnicodeString2","write_XLUnicodeString","parse_HyperlinkString","write_HyperlinkString","parse_LongRGBA","parse_LongRGB","parse_XLSCell","ixfe","write_XLSCell","parse_RkRec","parse_Ref8U","rwFirst","rwLast","write_Ref8U","parse_RefU","parse_FtCmo","ot","parse_FtSkip","FtTab","fSharedNote","parse_BOF","BIFFVer","write_BOF","parse_DefaultRowHeight","miyRw","Unsynced","DyZero","ExAsc","ExDsc","parse_Dimensions","write_XF","ixfeP","b5","parse_BoolErr","parse_XLHeaderFooter","parse_ExternName","fBuiltIn","fWantAdvise","fWantPict","fOle","fOleLink","fIcon","sbcch","parse_AddinUdf","udfName","XLSLblBuiltIn","parse_Lbl","rgcb","rgce","chKey","cce","itab","npflen","parse_Rgce","parse_RgbExtra","parse_ExternSheet","parse_XTI","parse_Array","parse_Ref","parse_ArrayParsedFormula","parse_BIFF5OT","cchName","parse_ColInfo","colFirst","colLast","coldx","DBF_SUPPORTED_VERSIONS","dbf_codepage_map","dbf_reverse_map","dbf_to_sheet","dbf_to_aoa","ft","memo","vfp","l7","nrow","fpos","rlen","current_cp","fields","field","hend","wch","_RLEN","to_sheet","from_sheet","aoa","sheet_to_json","headers","hcnt","coltypes","colwidths","coldecimals","guess","_guess","hf","_f","hb","rout","_n","_s","sylk_escapes","AA","BA","CA","DA","HA","JA","AE","BE","CE","HE","AI","BI","CI","HI","AO","BO","CO","DO","HO","AU","BU","CU","HU","Aa","Ba","Ca","Da","Ha","Ja","Ae","Be","Ce","He","Ai","Bi","Ci","Hi","Ao","Bo","Co","Do","Ho","Au","Bu","Cu","Hu","KC","Kc","DN","Dn","Hy","sylk_char_regex","sylk_char_fn","_","decode_sylk_char","newcc","sylk_to_aoa_str","records","rj","formats","next_cell_format","sht","cw","Mval","rstr","record","C_seen_K","C_seen_X","C_seen_S","C_seen_E","formula","rc_to_a1","shrbase","shift_formula_str","F_seen","sylk_to_sheet","aoasht","sylk_to_aoa","preamble","write_ws_cols_sylk","rec","wpx","width2px","px2char","write_ws_rows_sylk","rows","px2pt","coord","write_ws_cell_sylk","a1_to_rc","push_field","push_value","dif_to_aoa_str","dif_to_sheet","dif_to_aoa","topic","DIF_XL","ETH","eth_to_sheet","eth_to_aoa","sep","sheet_to_eth_data","set_text_arr","guess_seps","guess_sep_weights","guess_sep","instr","prn_to_sheet","FS","dsv_to_sheet_str","sepcc","startcc","_re","finish_cell","Y","datestr","timestr","outer","prn_to_aoa_str","lines","lotushopper","Enum","WK1Enum","lotus_to_workbook_buf","next_n","sidx","snames","realnames","qpro","tmpcell","WK3Enum","osheets","rnames","parse_cell","parse_LABEL","wk1_parse_rc","FuncTab","BinOpTab","parse_cell_3","parse_NUMBER_17","v1","v2","parse_NUMBER_27","parse_SHEETNAMECS","wk1_fmla_to_csf","argc","argL","argR","args","sheet_to_wk1","write_biff_rec","max_R","write_INTEGER","write_NUMBER","write_LABEL","book_to_wk3","write_BOF_WK3","wscnt","write_XFORMAT_SHEETNAME","wsidx","write_NUMBER_17","log2","write_LABEL_16","parse_rs","tregex","rpregex","parse_r","rpr","parse_rpr","font","shadow","outline","strike","uval","family","valign","rend","rs","filter","rs_to_html","nlregex","r_to_html","intro","outro","align","terms","sitregex","sirregex","sirphregex","html","straywsregex","write_sst_xml","bookSST","sitag","write_BrtSSTItem","write_sst_bin","_JS2ANSI","Major","Flags","AlgID","valid","AlgIDHash","KeySize","ProviderType","CSPName","Salt","Verifier","VerifierHash","crypto_CreatePasswordVerifier_Method1","Password","PasswordArray","PasswordDecoded","Intermediate3","Intermediate1","crypto_CreateXorArray_Method1","byte1","byte2","Byte","XorKey","CurrentElement","Char","Temp","PasswordLastChar","PadIndex","Index","ObfuscationArray","crypto_DecryptData_Method1","Data","XorArrayIndex","XorArray","O","crypto_MakeXorDecryptor","rtf_to_sheet","rtf_to_sheet_str","rowtf","rtfre","last_index","lastIndex","rgb2Hex","hex","hsl","rgb2HSL","G","H6","L2","hsl2RGB","X","h6","MDW","px","char2width","chr","cycle_width","collw","delta","_MDW","customWidth","XLMLPatternTypeMap","cellXF_uint","cellXF_bool","parse_numFmts","formatCode","parse_fonts","bold","italic","underline","condense","extend","vertAlign","scheme","indexed","icv","parse_fills","Fills","patternType","bgColor","fgColor","parse_borders","Borders","border","diagonalUp","diagonalDown","parse_cellXfs","xf","alignment","vertical","horizontal","textRotation","indent","wrapText","write_sty_xml","NF","cellXfs","XLSBFillPTNames","write_BrtFill","fls","write_BrtXF","write_Blxf","write_sty_bin","grbit","sss","write_FMTS_bin","write_BrtFmt","charset","fontId","fillId","borderId","xfId","builtinId","XLSXThemeClrScheme","parse_clrScheme","lastClr","parse_fontScheme","parse_fmtScheme","clrsregex","fntsregex","fmtsregex","themeltregex","write_theme","themeXLSX","write_xlmeta_bin","write_BrtMdb","mdb","write_xlmeta_xml","_shapeid","write_comments_vml","csize","bbox","joinstyle","gradientshapeok","coordsize","fillopts","angle","fillparm","fillxml","fillcolor","strokecolor","on","threaded","write_comments_xml","ID","lastauthor","ts","write_comments_bin","run","VBAFMTS","rcregex","rcbase","rcfunc","fstr","crefregex","$0","$4","$5","_xlfn","parseread1","parse_ColRelU","parse_RgceArea","parse_RgceArea_BIFF2","parse_RgceLoc","parse_PtgAttrBaxcel","bitSemi","parse_PtgAttrSpaceType","parse_PtgElfLoc","fQuoted","parse_PtgElfNoop","parse_PtgElfLel","PtgListRT","PtgTypes","iftab","FtabArgc","Ftab","cparams","tab","Cetab","nameindex","parse_RgceLocRel","rl","cl","parse_RgceAreaRel","ixti","PtgDupes","Ptg18","coltype","Ptg19","bitIf","bitGoto","parse_PtgExtraArray","parse_SerAr","parse_PtgExtraMem","ptgs","PtgBinOp","PtgAdd","PtgConcat","PtgDiv","PtgEq","PtgGe","PtgGt","PtgLe","PtgLt","PtgMul","PtgNe","PtgPower","PtgSub","get_ixti_raw","get_ixti","ixtiraw","formula_quote_sheet_name","sname","stack","nameidx","last_sp","sp","fflen","func","lbl","names","xlfn","externbook","bookidx","ixtidata","lp","rp","parsedf","fnd","stringify_array","PtgNonDisp","_left","parse_Formula","parse_FormulaValue","cbf","parse_XLSCellParsedFormula","shared","parse_XLSBParsedFormula","ods_to_csf_formula","ods_to_csf_3D","browser_has_Map","Map","get_sst_id","has","revarr","get","col_obj_w","default_margins","mode","defs","right","top","bottom","footer","get_cell_style","revssf","ssf","applyNumberFormat","fmtid","fillid","raw_rgb","sheetprot_deffalse","sheetprot_deftrue","sdata","ftag","cells","cref","tagr","tagc","do_format","rowobj","rowrite","marr","marrlen","xlen","rstarti","outa","ht","rslice","___f","shift_formula_xlsx","_tag","_r","write_ws_xml","rdata","_drawing","write_ws_xml_sheetpr","needed","cname","outlineprops","summaryBelow","summaryRight","sview","workbookViewId","sheetFormat","defaultRowHeight","baseColWidth","outlineLevelRow","write_ws_xml_cols","write_ws_xml_data","params","height","_cell","write_ws_xml_cell","oldt","oldv","os","revStrings","customHeight","write_ws_xml_autofilter","write_ws_xml_merges","relc","ignoreEC","numberStoredAsText","sqref","BrtMarginKeys","write_ws_bin","write_BrtWsProp","write_XLSBCodeName","write_BrtWsDim","write_CELLTABLE","cap","write_row_header","write_BrtRowHdr","ncolspan","lcs","caddr","first","last","last_seen","write_ws_bin_cell","ncell","write_SHEETPROTECT","write_AUTOFILTER","write_MERGECELLS","write_BrtMergeCell","locidx","write_RelID","write_IGNOREECS","write_LEGACYDRAWING","WBViewDef","SheetDef","CalcPrDef","push_defaults_array","push_defaults","badchars","check_ws_name","_good","write_wb_xml","write_names","workbookPr","sheetId","ArchID","write_wb_bin","write_BrtFileVersion","filterPrivacy","write_BOOKVIEWS","vistab","write_BUNDLESHS","iTabID","attregexg2","attregex2","xlml_parsexmltag","words","parse_xlml_xml","opening","ishtml","_o","html_to_workbook","html_to_sheet","book_new","book_append_sheet","csty","sheetnames","cursheet","sheetname","dtag","didx","stag","fidx","pidx","cstys","wsprops","raw_Rn3","parse_xlml_data","sid","StyleID","interiors","Interior","Parent","UTC","safe_format_xlml","Formula","ArrayRange","HRef","HRefScreenTip","MergeAcross","MergeDown","cma","cmd","xlml_parsexmltagobj","AutoFitHeight","Height","process_style_xlml","I","Pattern","Format","ssfidx","Width","_col","Span","_NamedRange","_DefinedName","RefersTo","AutoFilter","Range","Margin","pagemargins","Top","Left","Right","Bottom","xlml_set_custprop","oval","write_name_xlml","CONTINUE_RT","safe_format_xf","make_cell","PSCLSID","SI","DSI","UDI","CompObj","parse_compobj","AnsiUserType","AnsiClipboardFormat","Reserved1","UnicodeClipboardFormat","Reserved2","WorkbookP","newcfb","parse_workbook","temp_val","country","last_lbl","lastcell","cmnt","rngC","rngR","last_formula","cur_sheet","Preamble","last_cell","XFs","palette","get_rgb","process_cell_style","xfd","icvFore","icvBack","addcell","file_depth","afi","rrtabid","lastuser","winlocked","wtf","objects","last_RT","BIFF2Fmt","BIFF2FmtTable","FilterDatabases","seen_codepage","RecordType","XLSRecordEnum","slurp","insitu","nextrt","ll","Date1904","WriteProtect","cpval","CalcRefMode","FullCalc","fDialog","fBelow","fRight","ExternCount","tmpri","biffguess","fakebs8","hs","rknum","rkrec","_fr","_fc","_fe","_arraystart","isst","_j","_ixfe","b4idx","b2idx","cmo","lastobj","TxO","ImData","noteobj","update_xfext","xfext","xfe","Encryption","Metadata","Country","newpath","parse_xls_props","DocSummary","Summary","parse_XLSBCellParsedFormula","parse_XLNameWideString","parse_XLSBNameParsedFormula","fBold","fItalic","fUnderline","fStrikeout","fOutline","fShadow","fCondense","fExtend","bCharSet","parse_BrtColor","bR","bG","bB","ixfeParent","ifmt","parse_XLSBCodeName","defaultThemeVersion","strName","autoCompressPictures","backupFile","checkCompatibility","hidePivotFieldList","promptedSolutions","publishItems","refreshAllConnections","saveExternalLinkValues","showBorderUnselectedTables","showInkAnnotation","showObjects","showPivotChartFilter","updateLinks","parse_RelID","fAlwaysCalc","parse_XLSBArrayParsedFormula","parse_UncheckedRfX","parse_XLSBSharedParsedFormula","display","parse_NoteSh","idObj","stAuthor","Info","parse_RC4Header","EncryptionVersionInfo","EncryptedVerifier","EncryptedVerifierHash","parse_RC4CryptoHeader","EncryptionHeader","EncryptionVerifier","verificationBytes","verifier","dyHeight","fl","Pos","Dim","CurTab","FirstTab","Selected","TabRatio","UserName","fts","parse_FtArray","ccv","rw","rkrecs","lastcol","ixfes","fStyle","alc","fWrap","alcV","fJustLast","trot","cIndent","fShrinkToFit","iReadOrder","fAtrNum","fAtrFnt","fAtrAlc","fAtrBdr","fAtrPat","fAtrProt","dgLeft","dgRight","dgTop","dgBottom","icvLeft","icvRight","grbitDiag","icvTop","icvBottom","icvDiag","dgDiag","fsxButton","cmcs","ucnt","parse_XLUnicodeRichExtendedString","cbExtRst","fExtSt","fRichSt","cRun","extsst","dsst","ctab","virtPath","rgst","texts","cchText","parse_Hyperlink","sVer","displayName","targetFrameName","moniker","oleMoniker","fileTime","Loc","parse_HyperlinkMoniker","extra","parse_FileMoniker","cAnti","ansiPath","xnum","cUse","wzTooltip","cxfs","crc","cexts","parse_ExtProp","extType","parse_FullColorExt","xclrType","nTintShade","xclrValue","parse_IcvXF","cchComment","dwThemeVersion","themeXML","fullcalc","area","env","lcb","write_BIFF2Cell","write_biff_buf","write_biff8_buf","fix_write_opts","write_ws_biff8","guts","_WB","_sheet","b8","MAX_ROWS","write_ws_cols_biff8","write_ws_biff8_cell","bf","write_Formula","o1","write_FormulaValue","o3","write_MergeCells","write_ws_biff8_hlinks","HL","write_HLink","hl","write_Hyperlink","hashidx","Pretarget","write_HLinkTooltip","write_biff8_global","_sheets","_wb","writezeroes","write_WriteAccess","write_RRTabId","safe1904","write_Format","write_CELLXFS_biff8","write_biff_continue","write_SST","write_XLUnicodeRichExtendedString","xlstr","otext","blen","write_BoundSheet8","write_biff2_buf","write_ws_biff2","write_ws_biff2_cell","mtch2","RS","hd","midx","colspan","rowspan","_t","sheet_to_html","make_html_row","editable","sheet_add_dom","or_R","or_C","getElementsByTagName","is_dom_element_hidden","elts","children","hasAttribute","getAttribute","innerHTML","Aelts","Aelti","parse_dom_table","element","get_computed_style","ownerDocument","defaultView","getComputedStyle","getPropertyValue","number_formats_ods","day","month","year","hours","minutes","seconds","era","quarter","sheetag","rowtag","NFtag","ctag","textp","textpidx","textR","row_ol","number_format_map","mrange","mR","rowpeat","colpeat","atag","_Ref","creator","creatoridx","isstub","intable","rptR","parse_isodur","sec","rpt","nrange","ptp","fixed","write_styles_ods","write_content_ods","mi","ods","ROWS","skip","_Fref","text_p","_tgt","cidx","colobj","attr","fods","write_ods","manifest","rdf","write_rdf","write_manifest","u8_to_dataview","array","DataView","buffer","byteOffset","byteLength","u8str","u8","u8concat","u8a","reduce","acc","popcnt","parse_varint49","ptr","varint","write_varint49","varint_to_i32","i32","parse_shallow","write_shallow","proto","item","mappa","parse_iwa_file","_a","messages","meta","merge","write_iwa_file","ias","ia","midata","aipayload","mid","decompress_iwa_file","parse_snappy_chunk","chunks","compress_iwa_file","frame","write_new_storage","dv","writeDecimal128LE","exp","mantissa","setFloat64","setUint32","write_old_storage","parse_TSP_Reference","pb","parse_TST_TableDataList","le","rtp","rtpref","mtype","tswpsa","_b","_c","indices","packets","packet","docroot","iwam","parse_TN_DocumentArchive","sheetoffs","root2","shapeoffs","parse_TST_TableInfoArchive","tableref","parse_TST_TableModelArchive","store","rsst","tile","tl","_tile","parse_TST_TileRowInfo","_e","_g","_h","_i","_k","_l","_m","used_storage_u8","used_storage","wide_offsets","used_storage_offsets","getUint16","nrows","parse_cell_storage","parse_old_storage","getUint32","data_offset","ieee","getFloat64","parse_new_storage","d128","readDecimal128LE","fix_opts_func","main","write_cfb_ctr","write_string_type","bom","write_binary_type","resolve_book_type","_BT","writeSync","check_wb","check_wb_names","N","codes","cn","check_ws","write_xlml","BLACKLIST","write_ws_xlml","write_ws_xlml_names","write_ws_xlml_table","write_ws_xlml_row","write_ws_xlml_cell","_v","write_ws_xlml_wsopts","scenarios","selectLockedCells","selectUnlockedCells","write_names_xlml","write_stxt_type","sheet_to_txt","sheet_to_csv","write_xlscfb","wbpath","write_xls_props","Keys","DSEntries","SEntries","CEntries","DocSummaryRE","SummaryRE","CEntries2","fill_vba_xls","write_zip_denouement","oopts","ftype","generate","encrypt_agile","write_numbers_iwa","numbers","trunc","dependents","x2","packet2","y2","indices_varint","ivi","some","mess","u8contains","search","xi","sheetrootref","cruidsref","oldbucket","_x","cruids","uuid","row_header_ref","row_headers","base_bucket","_bucket","col_header_ref","sstref","sstroot","sentry","sx","sxi","sstdata","newsst","raw32","tileref","tileroot","tentry","tx","tiledata","rowload","R2","tilerow","write_tile_row","tri","celload","_celload","last_offset","cell_storage","_dv","_last_offset","_cell_storage","setUint16","raw3","write_zip_xlsxb","vbafmt","_sn","wsrels","need_vml","rId1","write_zip_xlsx","tcid","needtc","carr","write_tcmnt_xml","rootid","tcopts","parentId","person","userId","providerId","outi","counter","header_cnt","skipHidden","make_json_row","defval","isempty","defineProperty","enumerable","__rowNum__","rawNumbers","blankrows","qreg","endregex","make_csv_row","txt","forceQuotes","strip","sheet_add_json","js","skipHeader","JS","ws_get_cell_stub","RC","roll","cell_set_hyperlink","split_cell","json_to_sheet","table_to_sheet","table_to_book","sheet_to_formulae","cmds","sheet_to_row_object_array","sheet_get_cell","book_set_sheet_visibility","sh","vis","wb_sheet_idx","cell_set_number_format","cell_set_internal_link","cell_add_comment","sheet_set_array_formula","dynamic","rngstr","SHEET_VISIBLE","SHEET_HIDDEN","SHEET_VERY_HIDDEN"],"sourceRoot":""}