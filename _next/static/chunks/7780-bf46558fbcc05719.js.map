{"version":3,"file":"static/chunks/7780-bf46558fbcc05719.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CopyOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/EnterOutlined.js","webpack://_N_E/./node_modules/antd/es/style/operationUnit.js","webpack://_N_E/./node_modules/antd/node_modules/@ant-design/icons/es/icons/CopyOutlined.js","webpack://_N_E/./node_modules/antd/node_modules/@ant-design/icons/es/icons/EditOutlined.js","webpack://_N_E/./node_modules/antd/es/_util/transButton.js","webpack://_N_E/./node_modules/antd/node_modules/@ant-design/icons/es/icons/EnterOutlined.js","webpack://_N_E/./node_modules/antd/es/typography/style/mixins.js","webpack://_N_E/./node_modules/antd/es/typography/style/index.js","webpack://_N_E/./node_modules/antd/es/typography/Editable.js","webpack://_N_E/./node_modules/antd/es/typography/hooks/useMergedConfig.js","webpack://_N_E/./node_modules/antd/es/typography/hooks/useUpdatedEffect.js","webpack://_N_E/./node_modules/antd/es/typography/Typography.js","webpack://_N_E/./node_modules/antd/es/typography/Base/Ellipsis.js","webpack://_N_E/./node_modules/antd/es/typography/Base/EllipsisTooltip.js","webpack://_N_E/./node_modules/antd/es/typography/Base/index.js","webpack://_N_E/./node_modules/antd/es/typography/Link.js","webpack://_N_E/./node_modules/antd/es/typography/Paragraph.js","webpack://_N_E/./node_modules/antd/es/typography/Text.js","webpack://_N_E/./node_modules/antd/es/typography/Title.js","webpack://_N_E/./node_modules/antd/es/typography/index.js","webpack://_N_E/./node_modules/antd/node_modules/@ant-design/icons/es/icons/CheckOutlined.js","webpack://_N_E/./node_modules/copy-to-clipboard/index.js","webpack://_N_E/./node_modules/rc-util/es/Dom/styleChecker.js","webpack://_N_E/./node_modules/toggle-selection/index.js","webpack://_N_E/<anon>"],"sourcesContent":["// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","// This icon file is generated automatically.\nvar CopyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z\" } }] }, \"name\": \"copy\", \"theme\": \"outlined\" };\nexport default CopyOutlined;\n","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","// This icon file is generated automatically.\nvar EnterOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 170h-60c-4.4 0-8 3.6-8 8v518H310v-73c0-6.7-7.8-10.5-13-6.3l-141.9 112a8 8 0 000 12.6l141.9 112c5.3 4.2 13 .4 13-6.3v-75h498c35.3 0 64-28.7 64-64V178c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"enter\", \"theme\": \"outlined\" };\nexport default EnterOutlined;\n","// eslint-disable-next-line import/prefer-default-export\nexport const operationUnit = token => ({\n  // FIXME: This use link but is a operation unit. Seems should be a colorPrimary.\n  // And Typography use this to generate link style which should not do this.\n  color: token.colorLink,\n  textDecoration: 'none',\n  outline: 'none',\n  cursor: 'pointer',\n  transition: `color ${token.motionDurationSlow}`,\n  '&:focus, &:hover': {\n    color: token.colorLinkHover\n  },\n  '&:active': {\n    color: token.colorLinkActive\n  }\n});","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CopyOutlinedSvg from \"@ant-design/icons-svg/es/asn/CopyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CopyOutlined = function CopyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CopyOutlinedSvg\n  }));\n};\nCopyOutlined.displayName = 'CopyOutlined';\nexport default /*#__PURE__*/React.forwardRef(CopyOutlined);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/**\n * Wrap of sub component which need use as Button capacity (like Icon component).\n *\n * This helps accessibility reader to tread as a interactive button to operation.\n */\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nconst inlineStyle = {\n  border: 0,\n  background: 'transparent',\n  padding: 0,\n  lineHeight: 'inherit',\n  display: 'inline-block'\n};\nconst TransButton = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const onKeyDown = event => {\n    const {\n      keyCode\n    } = event;\n    if (keyCode === KeyCode.ENTER) {\n      event.preventDefault();\n    }\n  };\n  const onKeyUp = event => {\n    const {\n      keyCode\n    } = event;\n    const {\n      onClick\n    } = props;\n    if (keyCode === KeyCode.ENTER && onClick) {\n      onClick();\n    }\n  };\n  const {\n      style,\n      noStyle,\n      disabled\n    } = props,\n    restProps = __rest(props, [\"style\", \"noStyle\", \"disabled\"]);\n  let mergedStyle = {};\n  if (!noStyle) {\n    mergedStyle = Object.assign({}, inlineStyle);\n  }\n  if (disabled) {\n    mergedStyle.pointerEvents = 'none';\n  }\n  mergedStyle = Object.assign(Object.assign({}, mergedStyle), style);\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"button\",\n    tabIndex: 0,\n    ref: ref\n  }, restProps, {\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    style: mergedStyle\n  }));\n});\nexport default TransButton;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EnterOutlinedSvg from \"@ant-design/icons-svg/es/asn/EnterOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EnterOutlined = function EnterOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EnterOutlinedSvg\n  }));\n};\nEnterOutlined.displayName = 'EnterOutlined';\nexport default /*#__PURE__*/React.forwardRef(EnterOutlined);","/*\n.typography-title(@fontSize; @fontWeight; @lineHeight; @headingColor; @headingMarginBottom;) {\n  margin-bottom: @headingMarginBottom;\n  color: @headingColor;\n  font-weight: @fontWeight;\n  fontSize: @fontSize;\n  line-height: @lineHeight;\n}\n*/\nimport { gold } from '@ant-design/colors';\nimport { initInputToken } from '../../input/style';\nimport { operationUnit } from '../../style';\n// eslint-disable-next-line import/prefer-default-export\nconst getTitleStyle = (fontSize, lineHeight, color, token) => {\n  const {\n    sizeMarginHeadingVerticalEnd,\n    fontWeightStrong\n  } = token;\n  return {\n    marginBottom: sizeMarginHeadingVerticalEnd,\n    color,\n    fontWeight: fontWeightStrong,\n    fontSize,\n    lineHeight\n  };\n};\n// eslint-disable-next-line import/prefer-default-export\nexport const getTitleStyles = token => {\n  const headings = [1, 2, 3, 4, 5];\n  const styles = {};\n  headings.forEach(headingLevel => {\n    styles[`\n      h${headingLevel}&,\n      div&-h${headingLevel},\n      div&-h${headingLevel} > textarea,\n      h${headingLevel}\n    `] = getTitleStyle(token[`fontSizeHeading${headingLevel}`], token[`lineHeightHeading${headingLevel}`], token.colorTextHeading, token);\n  });\n  return styles;\n};\nexport const getLinkStyles = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    'a&, a': Object.assign(Object.assign({}, operationUnit(token)), {\n      textDecoration: token.linkDecoration,\n      '&:active, &:hover': {\n        textDecoration: token.linkHoverDecoration\n      },\n      [`&[disabled], &${componentCls}-disabled`]: {\n        color: token.colorTextDisabled,\n        cursor: 'not-allowed',\n        '&:active, &:hover': {\n          color: token.colorTextDisabled\n        },\n        '&:active': {\n          pointerEvents: 'none'\n        }\n      }\n    })\n  };\n};\nexport const getResetStyles = token => ({\n  code: {\n    margin: '0 0.2em',\n    paddingInline: '0.4em',\n    paddingBlock: '0.2em 0.1em',\n    fontSize: '85%',\n    fontFamily: token.fontFamilyCode,\n    background: 'rgba(150, 150, 150, 0.1)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderRadius: 3\n  },\n  kbd: {\n    margin: '0 0.2em',\n    paddingInline: '0.4em',\n    paddingBlock: '0.15em 0.1em',\n    fontSize: '90%',\n    fontFamily: token.fontFamilyCode,\n    background: 'rgba(150, 150, 150, 0.06)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderBottomWidth: 2,\n    borderRadius: 3\n  },\n  mark: {\n    padding: 0,\n    // FIXME hardcode in v4\n    backgroundColor: gold[2]\n  },\n  'u, ins': {\n    textDecoration: 'underline',\n    textDecorationSkipInk: 'auto'\n  },\n  's, del': {\n    textDecoration: 'line-through'\n  },\n  strong: {\n    fontWeight: 600\n  },\n  // list\n  'ul, ol': {\n    marginInline: 0,\n    marginBlock: '0 1em',\n    padding: 0,\n    li: {\n      marginInline: '20px 0',\n      marginBlock: 0,\n      paddingInline: '4px 0',\n      paddingBlock: 0\n    }\n  },\n  ul: {\n    listStyleType: 'circle',\n    ul: {\n      listStyleType: 'disc'\n    }\n  },\n  ol: {\n    listStyleType: 'decimal'\n  },\n  // pre & block\n  'pre, blockquote': {\n    margin: '1em 0'\n  },\n  pre: {\n    padding: '0.4em 0.6em',\n    whiteSpace: 'pre-wrap',\n    wordWrap: 'break-word',\n    background: 'rgba(150, 150, 150, 0.1)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderRadius: 3,\n    fontFamily: token.fontFamilyCode,\n    // Compatible for marked\n    code: {\n      display: 'inline',\n      margin: 0,\n      padding: 0,\n      fontSize: 'inherit',\n      fontFamily: 'inherit',\n      background: 'transparent',\n      border: 0\n    }\n  },\n  blockquote: {\n    paddingInline: '0.6em 0',\n    paddingBlock: 0,\n    borderInlineStart: '4px solid rgba(100, 100, 100, 0.2)',\n    opacity: 0.85\n  }\n});\nexport const getEditableStyles = token => {\n  const {\n    componentCls\n  } = token;\n  const inputToken = initInputToken(token);\n  const inputShift = inputToken.inputPaddingVertical + 1;\n  return {\n    '&-edit-content': {\n      position: 'relative',\n      'div&': {\n        insetInlineStart: -token.paddingSM,\n        marginTop: -inputShift,\n        marginBottom: `calc(1em - ${inputShift}px)`\n      },\n      [`${componentCls}-edit-content-confirm`]: {\n        position: 'absolute',\n        insetInlineEnd: token.marginXS + 2,\n        insetBlockEnd: token.marginXS,\n        color: token.colorTextDescription,\n        // default style\n        fontWeight: 'normal',\n        fontSize: token.fontSize,\n        fontStyle: 'normal',\n        pointerEvents: 'none'\n      },\n      textarea: {\n        margin: '0!important',\n        // Fix Editable Textarea flash in Firefox\n        MozTransition: 'none',\n        height: '1em'\n      }\n    }\n  };\n};\nexport const getCopyableStyles = token => ({\n  '&-copy-success': {\n    [`\n    &,\n    &:hover,\n    &:focus`]: {\n      color: token.colorSuccess\n    }\n  }\n});\nexport const getEllipsisStyles = () => ({\n  [`\n  a&-ellipsis,\n  span&-ellipsis\n  `]: {\n    display: 'inline-block',\n    maxWidth: '100%'\n  },\n  '&-single-line': {\n    whiteSpace: 'nowrap'\n  },\n  '&-ellipsis-single-line': {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    // https://blog.csdn.net/iefreer/article/details/50421025\n    'a&, span&': {\n      verticalAlign: 'bottom'\n    }\n  },\n  '&-ellipsis-multiple-line': {\n    display: '-webkit-box',\n    overflow: 'hidden',\n    WebkitLineClamp: 3,\n    WebkitBoxOrient: 'vertical'\n  }\n});","import { genComponentStyleHook } from '../../theme/internal';\nimport { getCopyableStyles, getEditableStyles, getEllipsisStyles, getLinkStyles, getResetStyles, getTitleStyles } from './mixins';\nimport { operationUnit } from '../../style';\nconst genTypographyStyle = token => {\n  const {\n    componentCls,\n    sizeMarginHeadingVerticalStart\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n      color: token.colorText,\n      wordBreak: 'break-word',\n      lineHeight: token.lineHeight,\n      [`&${componentCls}-secondary`]: {\n        color: token.colorTextDescription\n      },\n      [`&${componentCls}-success`]: {\n        color: token.colorSuccess\n      },\n      [`&${componentCls}-warning`]: {\n        color: token.colorWarning\n      },\n      [`&${componentCls}-danger`]: {\n        color: token.colorError,\n        'a&:active, a&:focus': {\n          color: token.colorErrorActive\n        },\n        'a&:hover': {\n          color: token.colorErrorHover\n        }\n      },\n      [`&${componentCls}-disabled`]: {\n        color: token.colorTextDisabled,\n        cursor: 'not-allowed',\n        userSelect: 'none'\n      },\n      [`\n        div&,\n        p\n      `]: {\n        marginBottom: '1em'\n      }\n    }, getTitleStyles(token)), {\n      [`\n      & + h1${componentCls},\n      & + h2${componentCls},\n      & + h3${componentCls},\n      & + h4${componentCls},\n      & + h5${componentCls}\n      `]: {\n        marginTop: sizeMarginHeadingVerticalStart\n      },\n      [`\n      div,\n      ul,\n      li,\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5`]: {\n        [`\n        + h1,\n        + h2,\n        + h3,\n        + h4,\n        + h5\n        `]: {\n          marginTop: sizeMarginHeadingVerticalStart\n        }\n      }\n    }), getResetStyles(token)), getLinkStyles(token)), {\n      // Operation\n      [`\n        ${componentCls}-expand,\n        ${componentCls}-edit,\n        ${componentCls}-copy\n      `]: Object.assign(Object.assign({}, operationUnit(token)), {\n        marginInlineStart: token.marginXXS\n      })\n    }), getEditableStyles(token)), getCopyableStyles(token)), getEllipsisStyles()), {\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Typography', token => [genTypographyStyle(token)], {\n  sizeMarginHeadingVerticalStart: '1.2em',\n  sizeMarginHeadingVerticalEnd: '0.5em'\n});","import EnterOutlined from \"@ant-design/icons/es/icons/EnterOutlined\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport TextArea from '../input/TextArea';\nimport { cloneElement } from '../_util/reactNode';\nimport useStyle from './style';\nconst Editable = _ref => {\n  let {\n    prefixCls,\n    'aria-label': ariaLabel,\n    className,\n    style,\n    direction,\n    maxLength,\n    autoSize = true,\n    value,\n    onSave,\n    onCancel,\n    onEnd,\n    component,\n    enterIcon = /*#__PURE__*/React.createElement(EnterOutlined, null)\n  } = _ref;\n  const ref = React.useRef(null);\n  const inComposition = React.useRef(false);\n  const lastKeyCode = React.useRef();\n  const [current, setCurrent] = React.useState(value);\n  React.useEffect(() => {\n    setCurrent(value);\n  }, [value]);\n  React.useEffect(() => {\n    if (ref.current && ref.current.resizableTextArea) {\n      const {\n        textArea\n      } = ref.current.resizableTextArea;\n      textArea.focus();\n      const {\n        length\n      } = textArea.value;\n      textArea.setSelectionRange(length, length);\n    }\n  }, []);\n  const onChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setCurrent(target.value.replace(/[\\n\\r]/g, ''));\n  };\n  const onCompositionStart = () => {\n    inComposition.current = true;\n  };\n  const onCompositionEnd = () => {\n    inComposition.current = false;\n  };\n  const onKeyDown = _ref3 => {\n    let {\n      keyCode\n    } = _ref3;\n    // We don't record keyCode when IME is using\n    if (inComposition.current) return;\n    lastKeyCode.current = keyCode;\n  };\n  const confirmChange = () => {\n    onSave(current.trim());\n  };\n  const onKeyUp = _ref4 => {\n    let {\n      keyCode,\n      ctrlKey,\n      altKey,\n      metaKey,\n      shiftKey\n    } = _ref4;\n    // Check if it's a real key\n    if (lastKeyCode.current === keyCode && !inComposition.current && !ctrlKey && !altKey && !metaKey && !shiftKey) {\n      if (keyCode === KeyCode.ENTER) {\n        confirmChange();\n        onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n      } else if (keyCode === KeyCode.ESC) {\n        onCancel();\n      }\n    }\n  };\n  const onBlur = () => {\n    confirmChange();\n  };\n  const textClassName = component ? `${prefixCls}-${component}` : '';\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const textAreaClassName = classNames(prefixCls, `${prefixCls}-edit-content`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, textClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: textAreaClassName,\n    style: style\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    ref: ref,\n    maxLength: maxLength,\n    value: current,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd,\n    onBlur: onBlur,\n    \"aria-label\": ariaLabel,\n    rows: 1,\n    autoSize: autoSize\n  }), enterIcon !== null ? cloneElement(enterIcon, {\n    className: `${prefixCls}-edit-content-confirm`\n  }) : null));\n};\nexport default Editable;","import * as React from 'react';\nexport default function useMergedConfig(propConfig, templateConfig) {\n  return React.useMemo(() => {\n    const support = !!propConfig;\n    return [support, Object.assign(Object.assign({}, templateConfig), support && typeof propConfig === 'object' ? propConfig : null)];\n  }, [propConfig]);\n}","import * as React from 'react';\n/** Similar with `useEffect` but only trigger after mounted */\nconst useUpdatedEffect = (callback, conditions) => {\n  const mountRef = React.useRef(false);\n  React.useEffect(() => {\n    if (mountRef.current) {\n      callback();\n    } else {\n      mountRef.current = true;\n    }\n  }, conditions);\n};\nexport default useUpdatedEffect;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nimport useStyle from './style';\nconst Typography = /*#__PURE__*/React.forwardRef((_a, ref) => {\n  var {\n      prefixCls: customizePrefixCls,\n      component: Component = 'article',\n      className,\n      rootClassName,\n      setContentRef,\n      children,\n      direction: typographyDirection\n    } = _a,\n    restProps = __rest(_a, [\"prefixCls\", \"component\", \"className\", \"rootClassName\", \"setContentRef\", \"children\", \"direction\"]);\n  const {\n    getPrefixCls,\n    direction: contextDirection\n  } = React.useContext(ConfigContext);\n  const direction = typographyDirection !== null && typographyDirection !== void 0 ? typographyDirection : contextDirection;\n  let mergedRef = ref;\n  if (setContentRef) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Typography', '`setContentRef` is deprecated. Please use `ref` instead.') : void 0;\n    mergedRef = composeRef(ref, setContentRef);\n  }\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const componentClassName = classNames(prefixCls, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  return wrapSSR(\n  /*#__PURE__*/\n  // @ts-expect-error: Expression produces a union type that is too complex to represent.\n  React.createElement(Component, Object.assign({\n    className: componentClassName,\n    ref: mergedRef\n  }, restProps), children));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Typography.displayName = 'Typography';\n}\n// es default export should use const instead of let\nexport default Typography;","import toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nfunction cuttable(node) {\n  const type = typeof node;\n  return type === 'string' || type === 'number';\n}\nfunction getNodesLen(nodeList) {\n  let totalLen = 0;\n  nodeList.forEach(node => {\n    if (cuttable(node)) {\n      totalLen += String(node).length;\n    } else {\n      totalLen += 1;\n    }\n  });\n  return totalLen;\n}\nfunction sliceNodes(nodeList, len) {\n  let currLen = 0;\n  const currentNodeList = [];\n  for (let i = 0; i < nodeList.length; i += 1) {\n    // Match to return\n    if (currLen === len) {\n      return currentNodeList;\n    }\n    const node = nodeList[i];\n    const canCut = cuttable(node);\n    const nodeLen = canCut ? String(node).length : 1;\n    const nextLen = currLen + nodeLen;\n    // Exceed but current not which means we need cut this\n    // This will not happen on validate ReactElement\n    if (nextLen > len) {\n      const restLen = len - currLen;\n      currentNodeList.push(String(node).slice(0, restLen));\n      return currentNodeList;\n    }\n    currentNodeList.push(node);\n    currLen = nextLen;\n  }\n  return nodeList;\n}\nconst NONE = 0;\nconst PREPARE = 1;\nconst WALKING = 2;\nconst DONE_WITH_ELLIPSIS = 3;\nconst DONE_WITHOUT_ELLIPSIS = 4;\nconst Ellipsis = _ref => {\n  let {\n    enabledMeasure,\n    children,\n    text,\n    width,\n    fontSize,\n    rows,\n    onEllipsis\n  } = _ref;\n  const [[startLen, midLen, endLen], setCutLength] = React.useState([0, 0, 0]);\n  const [walkingState, setWalkingState] = React.useState(NONE);\n  const [singleRowHeight, setSingleRowHeight] = React.useState(0);\n  const singleRowRef = React.useRef(null);\n  const midRowRef = React.useRef(null);\n  const nodeList = React.useMemo(() => toArray(text), [text]);\n  const totalLen = React.useMemo(() => getNodesLen(nodeList), [nodeList]);\n  const mergedChildren = React.useMemo(() => {\n    if (!enabledMeasure || walkingState !== DONE_WITH_ELLIPSIS) {\n      return children(nodeList, false);\n    }\n    return children(sliceNodes(nodeList, midLen), midLen < totalLen);\n  }, [enabledMeasure, walkingState, children, nodeList, midLen, totalLen]);\n  // ======================== Walk ========================\n  useIsomorphicLayoutEffect(() => {\n    if (enabledMeasure && width && fontSize && totalLen) {\n      setWalkingState(PREPARE);\n      setCutLength([0, Math.ceil(totalLen / 2), totalLen]);\n    }\n  }, [enabledMeasure, width, fontSize, text, totalLen, rows]);\n  useIsomorphicLayoutEffect(() => {\n    var _a;\n    if (walkingState === PREPARE) {\n      setSingleRowHeight(((_a = singleRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0);\n    }\n  }, [walkingState]);\n  useIsomorphicLayoutEffect(() => {\n    var _a, _b;\n    if (singleRowHeight) {\n      if (walkingState === PREPARE) {\n        // Ignore if position is enough\n        const midHeight = ((_a = midRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n        const maxHeight = rows * singleRowHeight;\n        if (midHeight <= maxHeight) {\n          setWalkingState(DONE_WITHOUT_ELLIPSIS);\n          onEllipsis(false);\n        } else {\n          setWalkingState(WALKING);\n        }\n      } else if (walkingState === WALKING) {\n        if (startLen !== endLen) {\n          const midHeight = ((_b = midRowRef.current) === null || _b === void 0 ? void 0 : _b.offsetHeight) || 0;\n          const maxHeight = rows * singleRowHeight;\n          let nextStartLen = startLen;\n          let nextEndLen = endLen;\n          // We reach the last round\n          if (startLen === endLen - 1) {\n            nextEndLen = startLen;\n          } else if (midHeight <= maxHeight) {\n            nextStartLen = midLen;\n          } else {\n            nextEndLen = midLen;\n          }\n          const nextMidLen = Math.ceil((nextStartLen + nextEndLen) / 2);\n          setCutLength([nextStartLen, nextMidLen, nextEndLen]);\n        } else {\n          setWalkingState(DONE_WITH_ELLIPSIS);\n          onEllipsis(true);\n        }\n      }\n    }\n  }, [walkingState, startLen, endLen, rows, singleRowHeight]);\n  // ======================= Render =======================\n  const measureStyle = {\n    width,\n    whiteSpace: 'normal',\n    margin: 0,\n    padding: 0\n  };\n  const renderMeasure = (content, ref, style) => /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    ref: ref,\n    style: Object.assign({\n      position: 'fixed',\n      display: 'block',\n      left: 0,\n      top: 0,\n      zIndex: -9999,\n      visibility: 'hidden',\n      pointerEvents: 'none',\n      fontSize: Math.floor(fontSize / 2) * 2\n    }, style)\n  }, content);\n  const renderMeasureSlice = (len, ref) => {\n    const sliceNodeList = sliceNodes(nodeList, len);\n    return renderMeasure(children(sliceNodeList, true), ref, measureStyle);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mergedChildren, enabledMeasure && walkingState !== DONE_WITH_ELLIPSIS && walkingState !== DONE_WITHOUT_ELLIPSIS && /*#__PURE__*/React.createElement(React.Fragment, null, renderMeasure('lg', singleRowRef, {\n    wordBreak: 'keep-all',\n    whiteSpace: 'nowrap'\n  }), walkingState === PREPARE ? renderMeasure(children(nodeList, false), midRowRef, measureStyle) : renderMeasureSlice(midLen, midRowRef)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ellipsis.displayName = 'Ellipsis';\n}\nexport default Ellipsis;","import * as React from 'react';\nimport Tooltip from '../../tooltip';\nconst EllipsisTooltip = _ref => {\n  let {\n    enabledEllipsis,\n    isEllipsis,\n    children,\n    tooltipProps\n  } = _ref;\n  if (!(tooltipProps === null || tooltipProps === void 0 ? void 0 : tooltipProps.title) || !enabledEllipsis) {\n    return children;\n  }\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    open: isEllipsis ? undefined : false\n  }, tooltipProps), children);\n};\nif (process.env.NODE_ENV !== 'production') {\n  EllipsisTooltip.displayName = 'EllipsisTooltip';\n}\nexport default EllipsisTooltip;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [textLocale] = useLocale('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef();\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  const cleanCopyId = () => {\n    window.clearTimeout(copyIdRef.current);\n  };\n  const onCopyClick = e => {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = window.setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(() => cleanCopyId, []);\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  !mergedEnableEllipsis ||\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = e => {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = React.useState(0);\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) return;\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    const systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = needEllipsis => [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, resizeRef => /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  }))));\n});\nexport default Base;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport Base from './Base';\nconst Link = /*#__PURE__*/React.forwardRef((_a, ref) => {\n  var {\n      ellipsis,\n      rel\n    } = _a,\n    restProps = __rest(_a, [\"ellipsis\", \"rel\"]);\n  process.env.NODE_ENV !== \"production\" ? warning(typeof ellipsis !== 'object', 'Typography.Link', '`ellipsis` only supports boolean value.') : void 0;\n  const mergedProps = Object.assign(Object.assign({}, restProps), {\n    rel: rel === undefined && restProps.target === '_blank' ? 'noopener noreferrer' : rel\n  });\n  // @ts-expect-error: https://github.com/ant-design/ant-design/issues/26622\n  delete mergedProps.navigate;\n  return /*#__PURE__*/React.createElement(Base, Object.assign({}, mergedProps, {\n    ref: ref,\n    ellipsis: !!ellipsis,\n    component: \"a\"\n  }));\n});\nexport default Link;","import * as React from 'react';\nimport Base from './Base';\nconst Paragraph = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Base, Object.assign({\n  ref: ref\n}, props, {\n  component: \"div\"\n})));\nexport default Paragraph;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport Base from './Base';\nconst Text = (_a, ref) => {\n  var {\n      ellipsis\n    } = _a,\n    restProps = __rest(_a, [\"ellipsis\"]);\n  const mergedEllipsis = React.useMemo(() => {\n    if (ellipsis && typeof ellipsis === 'object') {\n      return omit(ellipsis, ['expandable', 'rows']);\n    }\n    return ellipsis;\n  }, [ellipsis]);\n  process.env.NODE_ENV !== \"production\" ? warning(typeof ellipsis !== 'object' || !ellipsis || !('expandable' in ellipsis) && !('rows' in ellipsis), 'Typography.Text', '`ellipsis` do not support `expandable` or `rows` props.') : void 0;\n  return /*#__PURE__*/React.createElement(Base, Object.assign({\n    ref: ref\n  }, restProps, {\n    ellipsis: mergedEllipsis,\n    component: \"span\"\n  }));\n};\nexport default /*#__PURE__*/React.forwardRef(Text);","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport Base from './Base';\nconst TITLE_ELE_LIST = [1, 2, 3, 4, 5];\nconst Title = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      level = 1\n    } = props,\n    restProps = __rest(props, [\"level\"]);\n  let component;\n  if (TITLE_ELE_LIST.includes(level)) {\n    component = `h${level}`;\n  } else {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Typography.Title', 'Title only accept `1 | 2 | 3 | 4 | 5` as `level` value. And `5` need 4.6.0+ version.') : void 0;\n    component = 'h1';\n  }\n  return /*#__PURE__*/React.createElement(Base, Object.assign({\n    ref: ref\n  }, restProps, {\n    component: component\n  }));\n});\nexport default Title;","import Link from './Link';\nimport Paragraph from './Paragraph';\nimport Text from './Text';\nimport Title from './Title';\nimport OriginTypography from './Typography';\nconst Typography = OriginTypography;\nTypography.Text = Text;\nTypography.Link = Link;\nTypography.Title = Title;\nTypography.Paragraph = Paragraph;\nexport default Typography;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import canUseDom from \"./canUseDom\";\nvar isStyleNameSupport = function isStyleNameSupport(styleName) {\n  if (canUseDom() && window.document.documentElement) {\n    var styleNameList = Array.isArray(styleName) ? styleName : [styleName];\n    var documentElement = window.document.documentElement;\n    return styleNameList.some(function (name) {\n      return name in documentElement.style;\n    });\n  }\n  return false;\n};\nvar isStyleValueSupport = function isStyleValueSupport(styleName, value) {\n  if (!isStyleNameSupport(styleName)) {\n    return false;\n  }\n  var ele = document.createElement('div');\n  var origin = ele.style[styleName];\n  ele.style[styleName] = value;\n  return ele.style[styleName] !== origin;\n};\nexport function isStyleSupport(styleName, styleValue) {\n  if (!Array.isArray(styleName) && styleValue !== undefined) {\n    return isStyleValueSupport(styleName, styleValue);\n  }\n  return isStyleNameSupport(styleName);\n}","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[7780],{\n\n/***/ 32857:\n/***/ (function(__unused_webpack_module, __webpack_exports__) {\n\n\"use strict\";\n// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\n/* harmony default export */ __webpack_exports__[\"Z\"] = (CheckOutlined);\n\n\n/***/ }),\n\n/***/ 48820:\n/***/ (function(__unused_webpack_module, __webpack_exports__) {\n\n\"use strict\";\n// This icon file is generated automatically.\nvar CopyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z\" } }] }, \"name\": \"copy\", \"theme\": \"outlined\" };\n/* harmony default export */ __webpack_exports__[\"Z\"] = (CopyOutlined);\n\n\n/***/ }),\n\n/***/ 27363:\n/***/ (function(__unused_webpack_module, __webpack_exports__) {\n\n\"use strict\";\n// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\n/* harmony default export */ __webpack_exports__[\"Z\"] = (EditOutlined);\n\n\n/***/ }),\n\n/***/ 63404:\n/***/ (function(__unused_webpack_module, __webpack_exports__) {\n\n\"use strict\";\n// This icon file is generated automatically.\nvar EnterOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 170h-60c-4.4 0-8 3.6-8 8v518H310v-73c0-6.7-7.8-10.5-13-6.3l-141.9 112a8 8 0 000 12.6l141.9 112c5.3 4.2 13 .4 13-6.3v-75h498c35.3 0 64-28.7 64-64V178c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"enter\", \"theme\": \"outlined\" };\n/* harmony default export */ __webpack_exports__[\"Z\"] = (EnterOutlined);\n\n\n/***/ }),\n\n/***/ 49867:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"N\": function() { return /* binding */ operationUnit; }\n/* harmony export */ });\n// eslint-disable-next-line import/prefer-default-export\nconst operationUnit = token => ({\n  // FIXME: This use link but is a operation unit. Seems should be a colorPrimary.\n  // And Typography use this to generate link style which should not do this.\n  color: token.colorLink,\n  textDecoration: 'none',\n  outline: 'none',\n  cursor: 'pointer',\n  transition: `color ${token.motionDurationSlow}`,\n  '&:focus, &:hover': {\n    color: token.colorLinkHover\n  },\n  '&:active': {\n    color: token.colorLinkActive\n  }\n});\n\n/***/ }),\n\n/***/ 7780:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ typography; }\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/antd/node_modules/@ant-design/icons/es/icons/CheckOutlined.js\nvar CheckOutlined = __webpack_require__(64894);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\nvar objectSpread2 = __webpack_require__(1413);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons-svg/es/asn/CopyOutlined.js\nvar asn_CopyOutlined = __webpack_require__(48820);\n// EXTERNAL MODULE: ./node_modules/antd/node_modules/@ant-design/icons/es/components/AntdIcon.js + 3 modules\nvar AntdIcon = __webpack_require__(93771);\n;// CONCATENATED MODULE: ./node_modules/antd/node_modules/@ant-design/icons/es/icons/CopyOutlined.js\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\n\n\nvar CopyOutlined = function CopyOutlined(props, ref) {\n  return /*#__PURE__*/react.createElement(AntdIcon/* default */.Z, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, props), {}, {\n    ref: ref,\n    icon: asn_CopyOutlined/* default */.Z\n  }));\n};\nCopyOutlined.displayName = 'CopyOutlined';\n/* harmony default export */ var icons_CopyOutlined = (/*#__PURE__*/react.forwardRef(CopyOutlined));\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js\nvar asn_EditOutlined = __webpack_require__(27363);\n;// CONCATENATED MODULE: ./node_modules/antd/node_modules/@ant-design/icons/es/icons/EditOutlined.js\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\n\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/react.createElement(AntdIcon/* default */.Z, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, props), {}, {\n    ref: ref,\n    icon: asn_EditOutlined/* default */.Z\n  }));\n};\nEditOutlined.displayName = 'EditOutlined';\n/* harmony default export */ var icons_EditOutlined = (/*#__PURE__*/react.forwardRef(EditOutlined));\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(94184);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: ./node_modules/copy-to-clipboard/index.js\nvar copy_to_clipboard = __webpack_require__(20640);\nvar copy_to_clipboard_default = /*#__PURE__*/__webpack_require__.n(copy_to_clipboard);\n// EXTERNAL MODULE: ./node_modules/rc-resize-observer/es/index.js + 4 modules\nvar es = __webpack_require__(48555);\n// EXTERNAL MODULE: ./node_modules/rc-util/es/Children/toArray.js\nvar toArray = __webpack_require__(50344);\n// EXTERNAL MODULE: ./node_modules/rc-util/es/hooks/useLayoutEffect.js\nvar useLayoutEffect = __webpack_require__(8410);\n// EXTERNAL MODULE: ./node_modules/rc-util/es/hooks/useMergedState.js\nvar useMergedState = __webpack_require__(21770);\n// EXTERNAL MODULE: ./node_modules/rc-util/es/omit.js\nvar omit = __webpack_require__(98423);\n// EXTERNAL MODULE: ./node_modules/rc-util/es/ref.js\nvar es_ref = __webpack_require__(42550);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/context.js\nvar context = __webpack_require__(53124);\n// EXTERNAL MODULE: ./node_modules/antd/es/locale/useLocale.js\nvar useLocale = __webpack_require__(10110);\n// EXTERNAL MODULE: ./node_modules/antd/es/tooltip/index.js + 3 modules\nvar es_tooltip = __webpack_require__(83062);\n// EXTERNAL MODULE: ./node_modules/rc-util/es/Dom/styleChecker.js\nvar styleChecker = __webpack_require__(79370);\n// EXTERNAL MODULE: ./node_modules/rc-util/es/KeyCode.js\nvar KeyCode = __webpack_require__(15105);\n;// CONCATENATED MODULE: ./node_modules/antd/es/_util/transButton.js\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/**\n * Wrap of sub component which need use as Button capacity (like Icon component).\n *\n * This helps accessibility reader to tread as a interactive button to operation.\n */\n\n\nconst inlineStyle = {\n  border: 0,\n  background: 'transparent',\n  padding: 0,\n  lineHeight: 'inherit',\n  display: 'inline-block'\n};\nconst TransButton = /*#__PURE__*/react.forwardRef((props, ref) => {\n  const onKeyDown = event => {\n    const {\n      keyCode\n    } = event;\n    if (keyCode === KeyCode/* default.ENTER */.Z.ENTER) {\n      event.preventDefault();\n    }\n  };\n  const onKeyUp = event => {\n    const {\n      keyCode\n    } = event;\n    const {\n      onClick\n    } = props;\n    if (keyCode === KeyCode/* default.ENTER */.Z.ENTER && onClick) {\n      onClick();\n    }\n  };\n  const {\n      style,\n      noStyle,\n      disabled\n    } = props,\n    restProps = __rest(props, [\"style\", \"noStyle\", \"disabled\"]);\n  let mergedStyle = {};\n  if (!noStyle) {\n    mergedStyle = Object.assign({}, inlineStyle);\n  }\n  if (disabled) {\n    mergedStyle.pointerEvents = 'none';\n  }\n  mergedStyle = Object.assign(Object.assign({}, mergedStyle), style);\n  return /*#__PURE__*/react.createElement(\"div\", Object.assign({\n    role: \"button\",\n    tabIndex: 0,\n    ref: ref\n  }, restProps, {\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    style: mergedStyle\n  }));\n});\n/* harmony default export */ var transButton = (TransButton);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons-svg/es/asn/EnterOutlined.js\nvar asn_EnterOutlined = __webpack_require__(63404);\n;// CONCATENATED MODULE: ./node_modules/antd/node_modules/@ant-design/icons/es/icons/EnterOutlined.js\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\n\n\nvar EnterOutlined = function EnterOutlined(props, ref) {\n  return /*#__PURE__*/react.createElement(AntdIcon/* default */.Z, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, props), {}, {\n    ref: ref,\n    icon: asn_EnterOutlined/* default */.Z\n  }));\n};\nEnterOutlined.displayName = 'EnterOutlined';\n/* harmony default export */ var icons_EnterOutlined = (/*#__PURE__*/react.forwardRef(EnterOutlined));\n// EXTERNAL MODULE: ./node_modules/antd/es/input/TextArea.js + 4 modules\nvar TextArea = __webpack_require__(22913);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/reactNode.js\nvar reactNode = __webpack_require__(96159);\n// EXTERNAL MODULE: ./node_modules/antd/es/theme/util/genComponentStyleHook.js\nvar genComponentStyleHook = __webpack_require__(67968);\n// EXTERNAL MODULE: ./node_modules/antd/node_modules/@ant-design/colors/es/index.js + 1 modules\nvar colors_es = __webpack_require__(78589);\n// EXTERNAL MODULE: ./node_modules/antd/es/input/style/index.js\nvar style = __webpack_require__(47673);\n// EXTERNAL MODULE: ./node_modules/antd/es/style/operationUnit.js\nvar operationUnit = __webpack_require__(49867);\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/style/mixins.js\n/*\n.typography-title(@fontSize; @fontWeight; @lineHeight; @headingColor; @headingMarginBottom;) {\n  margin-bottom: @headingMarginBottom;\n  color: @headingColor;\n  font-weight: @fontWeight;\n  fontSize: @fontSize;\n  line-height: @lineHeight;\n}\n*/\n\n\n\n// eslint-disable-next-line import/prefer-default-export\nconst getTitleStyle = (fontSize, lineHeight, color, token) => {\n  const {\n    sizeMarginHeadingVerticalEnd,\n    fontWeightStrong\n  } = token;\n  return {\n    marginBottom: sizeMarginHeadingVerticalEnd,\n    color,\n    fontWeight: fontWeightStrong,\n    fontSize,\n    lineHeight\n  };\n};\n// eslint-disable-next-line import/prefer-default-export\nconst getTitleStyles = token => {\n  const headings = [1, 2, 3, 4, 5];\n  const styles = {};\n  headings.forEach(headingLevel => {\n    styles[`\n      h${headingLevel}&,\n      div&-h${headingLevel},\n      div&-h${headingLevel} > textarea,\n      h${headingLevel}\n    `] = getTitleStyle(token[`fontSizeHeading${headingLevel}`], token[`lineHeightHeading${headingLevel}`], token.colorTextHeading, token);\n  });\n  return styles;\n};\nconst getLinkStyles = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    'a&, a': Object.assign(Object.assign({}, (0,operationUnit/* operationUnit */.N)(token)), {\n      textDecoration: token.linkDecoration,\n      '&:active, &:hover': {\n        textDecoration: token.linkHoverDecoration\n      },\n      [`&[disabled], &${componentCls}-disabled`]: {\n        color: token.colorTextDisabled,\n        cursor: 'not-allowed',\n        '&:active, &:hover': {\n          color: token.colorTextDisabled\n        },\n        '&:active': {\n          pointerEvents: 'none'\n        }\n      }\n    })\n  };\n};\nconst getResetStyles = token => ({\n  code: {\n    margin: '0 0.2em',\n    paddingInline: '0.4em',\n    paddingBlock: '0.2em 0.1em',\n    fontSize: '85%',\n    fontFamily: token.fontFamilyCode,\n    background: 'rgba(150, 150, 150, 0.1)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderRadius: 3\n  },\n  kbd: {\n    margin: '0 0.2em',\n    paddingInline: '0.4em',\n    paddingBlock: '0.15em 0.1em',\n    fontSize: '90%',\n    fontFamily: token.fontFamilyCode,\n    background: 'rgba(150, 150, 150, 0.06)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderBottomWidth: 2,\n    borderRadius: 3\n  },\n  mark: {\n    padding: 0,\n    // FIXME hardcode in v4\n    backgroundColor: colors_es/* gold.2 */.EV[2]\n  },\n  'u, ins': {\n    textDecoration: 'underline',\n    textDecorationSkipInk: 'auto'\n  },\n  's, del': {\n    textDecoration: 'line-through'\n  },\n  strong: {\n    fontWeight: 600\n  },\n  // list\n  'ul, ol': {\n    marginInline: 0,\n    marginBlock: '0 1em',\n    padding: 0,\n    li: {\n      marginInline: '20px 0',\n      marginBlock: 0,\n      paddingInline: '4px 0',\n      paddingBlock: 0\n    }\n  },\n  ul: {\n    listStyleType: 'circle',\n    ul: {\n      listStyleType: 'disc'\n    }\n  },\n  ol: {\n    listStyleType: 'decimal'\n  },\n  // pre & block\n  'pre, blockquote': {\n    margin: '1em 0'\n  },\n  pre: {\n    padding: '0.4em 0.6em',\n    whiteSpace: 'pre-wrap',\n    wordWrap: 'break-word',\n    background: 'rgba(150, 150, 150, 0.1)',\n    border: '1px solid rgba(100, 100, 100, 0.2)',\n    borderRadius: 3,\n    fontFamily: token.fontFamilyCode,\n    // Compatible for marked\n    code: {\n      display: 'inline',\n      margin: 0,\n      padding: 0,\n      fontSize: 'inherit',\n      fontFamily: 'inherit',\n      background: 'transparent',\n      border: 0\n    }\n  },\n  blockquote: {\n    paddingInline: '0.6em 0',\n    paddingBlock: 0,\n    borderInlineStart: '4px solid rgba(100, 100, 100, 0.2)',\n    opacity: 0.85\n  }\n});\nconst getEditableStyles = token => {\n  const {\n    componentCls\n  } = token;\n  const inputToken = (0,style/* initInputToken */.e5)(token);\n  const inputShift = inputToken.inputPaddingVertical + 1;\n  return {\n    '&-edit-content': {\n      position: 'relative',\n      'div&': {\n        insetInlineStart: -token.paddingSM,\n        marginTop: -inputShift,\n        marginBottom: `calc(1em - ${inputShift}px)`\n      },\n      [`${componentCls}-edit-content-confirm`]: {\n        position: 'absolute',\n        insetInlineEnd: token.marginXS + 2,\n        insetBlockEnd: token.marginXS,\n        color: token.colorTextDescription,\n        // default style\n        fontWeight: 'normal',\n        fontSize: token.fontSize,\n        fontStyle: 'normal',\n        pointerEvents: 'none'\n      },\n      textarea: {\n        margin: '0!important',\n        // Fix Editable Textarea flash in Firefox\n        MozTransition: 'none',\n        height: '1em'\n      }\n    }\n  };\n};\nconst getCopyableStyles = token => ({\n  '&-copy-success': {\n    [`\n    &,\n    &:hover,\n    &:focus`]: {\n      color: token.colorSuccess\n    }\n  }\n});\nconst getEllipsisStyles = () => ({\n  [`\n  a&-ellipsis,\n  span&-ellipsis\n  `]: {\n    display: 'inline-block',\n    maxWidth: '100%'\n  },\n  '&-single-line': {\n    whiteSpace: 'nowrap'\n  },\n  '&-ellipsis-single-line': {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    // https://blog.csdn.net/iefreer/article/details/50421025\n    'a&, span&': {\n      verticalAlign: 'bottom'\n    }\n  },\n  '&-ellipsis-multiple-line': {\n    display: '-webkit-box',\n    overflow: 'hidden',\n    WebkitLineClamp: 3,\n    WebkitBoxOrient: 'vertical'\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/style/index.js\n\n\n\nconst genTypographyStyle = token => {\n  const {\n    componentCls,\n    sizeMarginHeadingVerticalStart\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n      color: token.colorText,\n      wordBreak: 'break-word',\n      lineHeight: token.lineHeight,\n      [`&${componentCls}-secondary`]: {\n        color: token.colorTextDescription\n      },\n      [`&${componentCls}-success`]: {\n        color: token.colorSuccess\n      },\n      [`&${componentCls}-warning`]: {\n        color: token.colorWarning\n      },\n      [`&${componentCls}-danger`]: {\n        color: token.colorError,\n        'a&:active, a&:focus': {\n          color: token.colorErrorActive\n        },\n        'a&:hover': {\n          color: token.colorErrorHover\n        }\n      },\n      [`&${componentCls}-disabled`]: {\n        color: token.colorTextDisabled,\n        cursor: 'not-allowed',\n        userSelect: 'none'\n      },\n      [`\n        div&,\n        p\n      `]: {\n        marginBottom: '1em'\n      }\n    }, getTitleStyles(token)), {\n      [`\n      & + h1${componentCls},\n      & + h2${componentCls},\n      & + h3${componentCls},\n      & + h4${componentCls},\n      & + h5${componentCls}\n      `]: {\n        marginTop: sizeMarginHeadingVerticalStart\n      },\n      [`\n      div,\n      ul,\n      li,\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5`]: {\n        [`\n        + h1,\n        + h2,\n        + h3,\n        + h4,\n        + h5\n        `]: {\n          marginTop: sizeMarginHeadingVerticalStart\n        }\n      }\n    }), getResetStyles(token)), getLinkStyles(token)), {\n      // Operation\n      [`\n        ${componentCls}-expand,\n        ${componentCls}-edit,\n        ${componentCls}-copy\n      `]: Object.assign(Object.assign({}, (0,operationUnit/* operationUnit */.N)(token)), {\n        marginInlineStart: token.marginXXS\n      })\n    }), getEditableStyles(token)), getCopyableStyles(token)), getEllipsisStyles()), {\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\n/* harmony default export */ var typography_style = ((0,genComponentStyleHook/* default */.Z)('Typography', token => [genTypographyStyle(token)], {\n  sizeMarginHeadingVerticalStart: '1.2em',\n  sizeMarginHeadingVerticalEnd: '0.5em'\n}));\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/Editable.js\n\n\n\n\n\n\n\nconst Editable = _ref => {\n  let {\n    prefixCls,\n    'aria-label': ariaLabel,\n    className,\n    style,\n    direction,\n    maxLength,\n    autoSize = true,\n    value,\n    onSave,\n    onCancel,\n    onEnd,\n    component,\n    enterIcon = /*#__PURE__*/react.createElement(icons_EnterOutlined, null)\n  } = _ref;\n  const ref = react.useRef(null);\n  const inComposition = react.useRef(false);\n  const lastKeyCode = react.useRef();\n  const [current, setCurrent] = react.useState(value);\n  react.useEffect(() => {\n    setCurrent(value);\n  }, [value]);\n  react.useEffect(() => {\n    if (ref.current && ref.current.resizableTextArea) {\n      const {\n        textArea\n      } = ref.current.resizableTextArea;\n      textArea.focus();\n      const {\n        length\n      } = textArea.value;\n      textArea.setSelectionRange(length, length);\n    }\n  }, []);\n  const onChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setCurrent(target.value.replace(/[\\n\\r]/g, ''));\n  };\n  const onCompositionStart = () => {\n    inComposition.current = true;\n  };\n  const onCompositionEnd = () => {\n    inComposition.current = false;\n  };\n  const onKeyDown = _ref3 => {\n    let {\n      keyCode\n    } = _ref3;\n    // We don't record keyCode when IME is using\n    if (inComposition.current) return;\n    lastKeyCode.current = keyCode;\n  };\n  const confirmChange = () => {\n    onSave(current.trim());\n  };\n  const onKeyUp = _ref4 => {\n    let {\n      keyCode,\n      ctrlKey,\n      altKey,\n      metaKey,\n      shiftKey\n    } = _ref4;\n    // Check if it's a real key\n    if (lastKeyCode.current === keyCode && !inComposition.current && !ctrlKey && !altKey && !metaKey && !shiftKey) {\n      if (keyCode === KeyCode/* default.ENTER */.Z.ENTER) {\n        confirmChange();\n        onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n      } else if (keyCode === KeyCode/* default.ESC */.Z.ESC) {\n        onCancel();\n      }\n    }\n  };\n  const onBlur = () => {\n    confirmChange();\n  };\n  const textClassName = component ? `${prefixCls}-${component}` : '';\n  const [wrapSSR, hashId] = typography_style(prefixCls);\n  const textAreaClassName = classnames_default()(prefixCls, `${prefixCls}-edit-content`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, textClassName, hashId);\n  return wrapSSR( /*#__PURE__*/react.createElement(\"div\", {\n    className: textAreaClassName,\n    style: style\n  }, /*#__PURE__*/react.createElement(TextArea/* default */.Z, {\n    ref: ref,\n    maxLength: maxLength,\n    value: current,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd,\n    onBlur: onBlur,\n    \"aria-label\": ariaLabel,\n    rows: 1,\n    autoSize: autoSize\n  }), enterIcon !== null ? (0,reactNode/* cloneElement */.Tm)(enterIcon, {\n    className: `${prefixCls}-edit-content-confirm`\n  }) : null));\n};\n/* harmony default export */ var typography_Editable = (Editable);\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/hooks/useMergedConfig.js\n\nfunction useMergedConfig(propConfig, templateConfig) {\n  return react.useMemo(() => {\n    const support = !!propConfig;\n    return [support, Object.assign(Object.assign({}, templateConfig), support && typeof propConfig === 'object' ? propConfig : null)];\n  }, [propConfig]);\n}\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/hooks/useUpdatedEffect.js\n\n/** Similar with `useEffect` but only trigger after mounted */\nconst useUpdatedEffect = (callback, conditions) => {\n  const mountRef = react.useRef(false);\n  react.useEffect(() => {\n    if (mountRef.current) {\n      callback();\n    } else {\n      mountRef.current = true;\n    }\n  }, conditions);\n};\n/* harmony default export */ var hooks_useUpdatedEffect = (useUpdatedEffect);\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/Typography.js\nvar Typography_rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\nconst Typography = /*#__PURE__*/react.forwardRef((_a, ref) => {\n  var {\n      prefixCls: customizePrefixCls,\n      component: Component = 'article',\n      className,\n      rootClassName,\n      setContentRef,\n      children,\n      direction: typographyDirection\n    } = _a,\n    restProps = Typography_rest(_a, [\"prefixCls\", \"component\", \"className\", \"rootClassName\", \"setContentRef\", \"children\", \"direction\"]);\n  const {\n    getPrefixCls,\n    direction: contextDirection\n  } = react.useContext(context/* ConfigContext */.E_);\n  const direction = typographyDirection !== null && typographyDirection !== void 0 ? typographyDirection : contextDirection;\n  let mergedRef = ref;\n  if (setContentRef) {\n     false ? 0 : void 0;\n    mergedRef = (0,es_ref/* composeRef */.sQ)(ref, setContentRef);\n  }\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = typography_style(prefixCls);\n  const componentClassName = classnames_default()(prefixCls, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  return wrapSSR(\n  /*#__PURE__*/\n  // @ts-expect-error: Expression produces a union type that is too complex to represent.\n  react.createElement(Component, Object.assign({\n    className: componentClassName,\n    ref: mergedRef\n  }, restProps), children));\n});\nif (false) {}\n// es default export should use const instead of let\n/* harmony default export */ var typography_Typography = (Typography);\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/Base/Ellipsis.js\n\n\n\nfunction cuttable(node) {\n  const type = typeof node;\n  return type === 'string' || type === 'number';\n}\nfunction getNodesLen(nodeList) {\n  let totalLen = 0;\n  nodeList.forEach(node => {\n    if (cuttable(node)) {\n      totalLen += String(node).length;\n    } else {\n      totalLen += 1;\n    }\n  });\n  return totalLen;\n}\nfunction sliceNodes(nodeList, len) {\n  let currLen = 0;\n  const currentNodeList = [];\n  for (let i = 0; i < nodeList.length; i += 1) {\n    // Match to return\n    if (currLen === len) {\n      return currentNodeList;\n    }\n    const node = nodeList[i];\n    const canCut = cuttable(node);\n    const nodeLen = canCut ? String(node).length : 1;\n    const nextLen = currLen + nodeLen;\n    // Exceed but current not which means we need cut this\n    // This will not happen on validate ReactElement\n    if (nextLen > len) {\n      const restLen = len - currLen;\n      currentNodeList.push(String(node).slice(0, restLen));\n      return currentNodeList;\n    }\n    currentNodeList.push(node);\n    currLen = nextLen;\n  }\n  return nodeList;\n}\nconst NONE = 0;\nconst PREPARE = 1;\nconst WALKING = 2;\nconst DONE_WITH_ELLIPSIS = 3;\nconst DONE_WITHOUT_ELLIPSIS = 4;\nconst Ellipsis = _ref => {\n  let {\n    enabledMeasure,\n    children,\n    text,\n    width,\n    fontSize,\n    rows,\n    onEllipsis\n  } = _ref;\n  const [[startLen, midLen, endLen], setCutLength] = react.useState([0, 0, 0]);\n  const [walkingState, setWalkingState] = react.useState(NONE);\n  const [singleRowHeight, setSingleRowHeight] = react.useState(0);\n  const singleRowRef = react.useRef(null);\n  const midRowRef = react.useRef(null);\n  const nodeList = react.useMemo(() => (0,toArray/* default */.Z)(text), [text]);\n  const totalLen = react.useMemo(() => getNodesLen(nodeList), [nodeList]);\n  const mergedChildren = react.useMemo(() => {\n    if (!enabledMeasure || walkingState !== DONE_WITH_ELLIPSIS) {\n      return children(nodeList, false);\n    }\n    return children(sliceNodes(nodeList, midLen), midLen < totalLen);\n  }, [enabledMeasure, walkingState, children, nodeList, midLen, totalLen]);\n  // ======================== Walk ========================\n  (0,useLayoutEffect/* default */.Z)(() => {\n    if (enabledMeasure && width && fontSize && totalLen) {\n      setWalkingState(PREPARE);\n      setCutLength([0, Math.ceil(totalLen / 2), totalLen]);\n    }\n  }, [enabledMeasure, width, fontSize, text, totalLen, rows]);\n  (0,useLayoutEffect/* default */.Z)(() => {\n    var _a;\n    if (walkingState === PREPARE) {\n      setSingleRowHeight(((_a = singleRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0);\n    }\n  }, [walkingState]);\n  (0,useLayoutEffect/* default */.Z)(() => {\n    var _a, _b;\n    if (singleRowHeight) {\n      if (walkingState === PREPARE) {\n        // Ignore if position is enough\n        const midHeight = ((_a = midRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n        const maxHeight = rows * singleRowHeight;\n        if (midHeight <= maxHeight) {\n          setWalkingState(DONE_WITHOUT_ELLIPSIS);\n          onEllipsis(false);\n        } else {\n          setWalkingState(WALKING);\n        }\n      } else if (walkingState === WALKING) {\n        if (startLen !== endLen) {\n          const midHeight = ((_b = midRowRef.current) === null || _b === void 0 ? void 0 : _b.offsetHeight) || 0;\n          const maxHeight = rows * singleRowHeight;\n          let nextStartLen = startLen;\n          let nextEndLen = endLen;\n          // We reach the last round\n          if (startLen === endLen - 1) {\n            nextEndLen = startLen;\n          } else if (midHeight <= maxHeight) {\n            nextStartLen = midLen;\n          } else {\n            nextEndLen = midLen;\n          }\n          const nextMidLen = Math.ceil((nextStartLen + nextEndLen) / 2);\n          setCutLength([nextStartLen, nextMidLen, nextEndLen]);\n        } else {\n          setWalkingState(DONE_WITH_ELLIPSIS);\n          onEllipsis(true);\n        }\n      }\n    }\n  }, [walkingState, startLen, endLen, rows, singleRowHeight]);\n  // ======================= Render =======================\n  const measureStyle = {\n    width,\n    whiteSpace: 'normal',\n    margin: 0,\n    padding: 0\n  };\n  const renderMeasure = (content, ref, style) => /*#__PURE__*/react.createElement(\"span\", {\n    \"aria-hidden\": true,\n    ref: ref,\n    style: Object.assign({\n      position: 'fixed',\n      display: 'block',\n      left: 0,\n      top: 0,\n      zIndex: -9999,\n      visibility: 'hidden',\n      pointerEvents: 'none',\n      fontSize: Math.floor(fontSize / 2) * 2\n    }, style)\n  }, content);\n  const renderMeasureSlice = (len, ref) => {\n    const sliceNodeList = sliceNodes(nodeList, len);\n    return renderMeasure(children(sliceNodeList, true), ref, measureStyle);\n  };\n  return /*#__PURE__*/react.createElement(react.Fragment, null, mergedChildren, enabledMeasure && walkingState !== DONE_WITH_ELLIPSIS && walkingState !== DONE_WITHOUT_ELLIPSIS && /*#__PURE__*/react.createElement(react.Fragment, null, renderMeasure('lg', singleRowRef, {\n    wordBreak: 'keep-all',\n    whiteSpace: 'nowrap'\n  }), walkingState === PREPARE ? renderMeasure(children(nodeList, false), midRowRef, measureStyle) : renderMeasureSlice(midLen, midRowRef)));\n};\nif (false) {}\n/* harmony default export */ var Base_Ellipsis = (Ellipsis);\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/Base/EllipsisTooltip.js\n\n\nconst EllipsisTooltip = _ref => {\n  let {\n    enabledEllipsis,\n    isEllipsis,\n    children,\n    tooltipProps\n  } = _ref;\n  if (!(tooltipProps === null || tooltipProps === void 0 ? void 0 : tooltipProps.title) || !enabledEllipsis) {\n    return children;\n  }\n  return /*#__PURE__*/react.createElement(es_tooltip/* default */.Z, Object.assign({\n    open: isEllipsis ? undefined : false\n  }, tooltipProps), children);\n};\nif (false) {}\n/* harmony default export */ var Base_EllipsisTooltip = (EllipsisTooltip);\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/Base/index.js\nvar Base_rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/react.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/react.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = Base_rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = react.useContext(context/* ConfigContext */.E_);\n  const [textLocale] = (0,useLocale/* default */.Z)('Text');\n  const typographyRef = react.useRef(null);\n  const editIconRef = react.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = (0,omit/* default */.Z)(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = (0,useMergedState/* default */.Z)(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  hooks_useUpdatedEffect(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = react.useState(false);\n  const copyIdRef = react.useRef();\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  const cleanCopyId = () => {\n    window.clearTimeout(copyIdRef.current);\n  };\n  const onCopyClick = e => {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy_to_clipboard_default()(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = window.setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  react.useEffect(() => cleanCopyId, []);\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = react.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = react.useState(false);\n  const [expanded, setExpanded] = react.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = react.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = react.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = react.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = react.useMemo(() =>\n  // Disable ellipsis\n  !mergedEnableEllipsis ||\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  (0,useLayoutEffect/* default */.Z)(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport((0,styleChecker/* isStyleSupport */.G)('webkitLineClamp'));\n      setIsTextOverflowSupport((0,styleChecker/* isStyleSupport */.G)('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = react.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = e => {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = react.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = react.useState(0);\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  react.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  react.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/react.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = react.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/react.createElement(typography_Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n    return /*#__PURE__*/react.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = (0,toArray/* default */.Z)(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/react.createElement(es_tooltip/* default */.Z, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/react.createElement(transButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/react.createElement(icons_EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) return;\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    const systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/react.createElement(es_tooltip/* default */.Z, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/react.createElement(transButton, {\n      className: classnames_default()(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/react.createElement(CheckOutlined/* default */.Z, null), true) : getNode(iconNodes[0], /*#__PURE__*/react.createElement(icons_CopyOutlined, null), true)));\n  };\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = needEllipsis => [needEllipsis && /*#__PURE__*/react.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  return /*#__PURE__*/react.createElement(es/* default */.Z, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, resizeRef => /*#__PURE__*/react.createElement(Base_EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/react.createElement(typography_Typography, Object.assign({\n    className: classnames_default()({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: (0,es_ref/* composeRef */.sQ)(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/react.createElement(Base_Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/react.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/react.createElement(react.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  }))));\n});\n/* harmony default export */ var typography_Base = (Base);\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/Link.js\nvar Link_rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\nconst Link = /*#__PURE__*/react.forwardRef((_a, ref) => {\n  var {\n      ellipsis,\n      rel\n    } = _a,\n    restProps = Link_rest(_a, [\"ellipsis\", \"rel\"]);\n   false ? 0 : void 0;\n  const mergedProps = Object.assign(Object.assign({}, restProps), {\n    rel: rel === undefined && restProps.target === '_blank' ? 'noopener noreferrer' : rel\n  });\n  // @ts-expect-error: https://github.com/ant-design/ant-design/issues/26622\n  delete mergedProps.navigate;\n  return /*#__PURE__*/react.createElement(typography_Base, Object.assign({}, mergedProps, {\n    ref: ref,\n    ellipsis: !!ellipsis,\n    component: \"a\"\n  }));\n});\n/* harmony default export */ var typography_Link = (Link);\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/Paragraph.js\n\n\nconst Paragraph = /*#__PURE__*/react.forwardRef((props, ref) => /*#__PURE__*/react.createElement(typography_Base, Object.assign({\n  ref: ref\n}, props, {\n  component: \"div\"\n})));\n/* harmony default export */ var typography_Paragraph = (Paragraph);\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/Text.js\nvar Text_rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\nconst Text = (_a, ref) => {\n  var {\n      ellipsis\n    } = _a,\n    restProps = Text_rest(_a, [\"ellipsis\"]);\n  const mergedEllipsis = react.useMemo(() => {\n    if (ellipsis && typeof ellipsis === 'object') {\n      return (0,omit/* default */.Z)(ellipsis, ['expandable', 'rows']);\n    }\n    return ellipsis;\n  }, [ellipsis]);\n   false ? 0 : void 0;\n  return /*#__PURE__*/react.createElement(typography_Base, Object.assign({\n    ref: ref\n  }, restProps, {\n    ellipsis: mergedEllipsis,\n    component: \"span\"\n  }));\n};\n/* harmony default export */ var typography_Text = (/*#__PURE__*/react.forwardRef(Text));\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/Title.js\nvar Title_rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\nconst TITLE_ELE_LIST = [1, 2, 3, 4, 5];\nconst Title = /*#__PURE__*/react.forwardRef((props, ref) => {\n  const {\n      level = 1\n    } = props,\n    restProps = Title_rest(props, [\"level\"]);\n  let component;\n  if (TITLE_ELE_LIST.includes(level)) {\n    component = `h${level}`;\n  } else {\n     false ? 0 : void 0;\n    component = 'h1';\n  }\n  return /*#__PURE__*/react.createElement(typography_Base, Object.assign({\n    ref: ref\n  }, restProps, {\n    component: component\n  }));\n});\n/* harmony default export */ var typography_Title = (Title);\n;// CONCATENATED MODULE: ./node_modules/antd/es/typography/index.js\n\n\n\n\n\nconst es_typography_Typography = typography_Typography;\nes_typography_Typography.Text = typography_Text;\nes_typography_Typography.Link = typography_Link;\nes_typography_Typography.Title = typography_Title;\nes_typography_Typography.Paragraph = typography_Paragraph;\n/* harmony default export */ var typography = (es_typography_Typography);\n\n/***/ }),\n\n/***/ 64894:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1413);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);\n/* harmony import */ var _ant_design_icons_svg_es_asn_CheckOutlined__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(32857);\n/* harmony import */ var _components_AntdIcon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(93771);\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\n\n\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_AntdIcon__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z, (0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)((0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)({}, props), {}, {\n    ref: ref,\n    icon: _ant_design_icons_svg_es_asn_CheckOutlined__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z\n  }));\n};\nCheckOutlined.displayName = 'CheckOutlined';\n/* harmony default export */ __webpack_exports__[\"Z\"] = (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(CheckOutlined));\n\n/***/ }),\n\n/***/ 20640:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar deselectCurrent = __webpack_require__(11742);\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n\n\n/***/ }),\n\n/***/ 79370:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"G\": function() { return /* binding */ isStyleSupport; }\n/* harmony export */ });\n/* harmony import */ var _canUseDom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(98924);\n\nvar isStyleNameSupport = function isStyleNameSupport(styleName) {\n  if ((0,_canUseDom__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)() && window.document.documentElement) {\n    var styleNameList = Array.isArray(styleName) ? styleName : [styleName];\n    var documentElement = window.document.documentElement;\n    return styleNameList.some(function (name) {\n      return name in documentElement.style;\n    });\n  }\n  return false;\n};\nvar isStyleValueSupport = function isStyleValueSupport(styleName, value) {\n  if (!isStyleNameSupport(styleName)) {\n    return false;\n  }\n  var ele = document.createElement('div');\n  var origin = ele.style[styleName];\n  ele.style[styleName] = value;\n  return ele.style[styleName] !== origin;\n};\nfunction isStyleSupport(styleName, styleValue) {\n  if (!Array.isArray(styleName) && styleValue !== undefined) {\n    return isStyleValueSupport(styleName, styleValue);\n  }\n  return isStyleNameSupport(styleName);\n}\n\n/***/ }),\n\n/***/ 11742:\n/***/ (function(module) {\n\n\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","d","operationUnit","token","color","colorLink","textDecoration","outline","cursor","transition","motionDurationSlow","colorLinkHover","colorLinkActive","typography","react","CheckOutlined","objectSpread2","asn_CopyOutlined","AntdIcon","CopyOutlined","props","ref","createElement","Z","icon","displayName","icons_CopyOutlined","forwardRef","asn_EditOutlined","EditOutlined","icons_EditOutlined","classnames","classnames_default","n","copy_to_clipboard","copy_to_clipboard_default","es","toArray","useLayoutEffect","useMergedState","omit","es_ref","context","useLocale","es_tooltip","styleChecker","KeyCode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","inlineStyle","border","background","padding","lineHeight","display","TransButton","onKeyDown","event","keyCode","ENTER","preventDefault","onKeyUp","onClick","style","noStyle","disabled","restProps","mergedStyle","assign","pointerEvents","role","tabIndex","asn_EnterOutlined","EnterOutlined","icons_EnterOutlined","TextArea","reactNode","genComponentStyleHook","colors_es","getTitleStyle","fontSize","sizeMarginHeadingVerticalEnd","fontWeightStrong","marginBottom","fontWeight","getTitleStyles","styles","headings","forEach","headingLevel","colorTextHeading","getLinkStyles","componentCls","N","linkDecoration","linkHoverDecoration","colorTextDisabled","getResetStyles","code","margin","paddingInline","paddingBlock","fontFamily","fontFamilyCode","borderRadius","kbd","borderBottomWidth","mark","backgroundColor","EV","textDecorationSkipInk","strong","marginInline","marginBlock","li","ul","listStyleType","ol","pre","whiteSpace","wordWrap","blockquote","borderInlineStart","opacity","getEditableStyles","inputToken","e5","inputShift","inputPaddingVertical","position","insetInlineStart","paddingSM","marginTop","insetInlineEnd","marginXS","insetBlockEnd","colorTextDescription","fontStyle","textarea","MozTransition","height","getCopyableStyles","colorSuccess","getEllipsisStyles","maxWidth","overflow","textOverflow","verticalAlign","WebkitLineClamp","WebkitBoxOrient","genTypographyStyle","sizeMarginHeadingVerticalStart","colorText","wordBreak","colorWarning","colorError","colorErrorActive","colorErrorHover","userSelect","marginInlineStart","marginXXS","direction","typography_style","Editable","_ref","prefixCls","ariaLabel","className","maxLength","autoSize","value","onSave","onCancel","onEnd","component","enterIcon","useRef","inComposition","lastKeyCode","current","setCurrent","useState","useEffect","resizableTextArea","textArea","focus","setSelectionRange","onChange","_ref2","target","replace","onCompositionStart","onCompositionEnd","_ref3","confirmChange","trim","_ref4","ctrlKey","altKey","metaKey","shiftKey","ESC","onBlur","textClassName","wrapSSR","hashId","textAreaClassName","rows","Tm","useMergedConfig","propConfig","templateConfig","useMemo","support","useUpdatedEffect","callback","conditions","mountRef","Typography_rest","Typography","_a","customizePrefixCls","Component","rootClassName","setContentRef","children","typographyDirection","getPrefixCls","contextDirection","useContext","E_","mergedRef","sQ","componentClassName","cuttable","node","type","sliceNodes","nodeList","len","currLen","currentNodeList","canCut","nodeLen","String","nextLen","restLen","slice","Ellipsis","enabledMeasure","text","width","onEllipsis","startLen","midLen","endLen","setCutLength","walkingState","setWalkingState","singleRowHeight","setSingleRowHeight","singleRowRef","midRowRef","totalLen","mergedChildren","Math","ceil","offsetHeight","_b","midHeight","nextStartLen","nextEndLen","nextMidLen","measureStyle","renderMeasure","content","left","top","zIndex","visibility","floor","Fragment","renderMeasureSlice","sliceNodeList","EllipsisTooltip","enabledEllipsis","isEllipsis","tooltipProps","title","open","undefined","Base_rest","getNode","dom","defaultNode","needDom","toList","val","Array","isArray","Base","_c","ellipsis","editable","copyable","textLocale","typographyRef","editIconRef","textProps","enableEdit","editConfig","editing","setEditing","triggerType","triggerEdit","edit","onStart","hooks_useUpdatedEffect","onEditClick","onEditChange","onEditCancel","enableCopy","copyConfig","copied","setCopied","copyIdRef","copyOptions","format","cleanCopyId","window","clearTimeout","onCopyClick","stopPropagation","setTimeout","onCopy","isLineClampSupport","setIsLineClampSupport","isTextOverflowSupport","setIsTextOverflowSupport","expanded","setExpanded","isJsEllipsis","setIsJsEllipsis","isNativeEllipsis","setIsNativeEllipsis","isNativeVisible","setIsNativeVisible","enableEllipsis","ellipsisConfig","expandable","mergedEnableEllipsis","needMeasureEllipsis","suffix","G","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","onExpand","ellipsisWidth","setEllipsisWidth","ellipsisFontSize","setEllipsisFontSize","onResize","element","offsetWidth","parseInt","getComputedStyle","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","scrollHeight","scrollWidth","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltip","isValidElement","topAriaLabel","isValid","includes","renderExpand","expandContent","symbol","expand","key","renderEdit","editTitle","renderCopy","tooltips","tooltipNodes","iconNodes","copyTitle","copy","systemStr","renderOperations","renderExpanded","renderEllipsis","needEllipsis","resizeRef","toString","renderNode","wrappedContext","wrapperDecorations","underline","delete","del","keyboard","italic","currentContent","wrap","tag","needed","Link_rest","Link","rel","mergedProps","navigate","Paragraph","Text_rest","Text","mergedEllipsis","typography_Text","Title_rest","TITLE_ELE_LIST","Title","level","es_typography_Typography","_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_0__","_ant_design_icons_svg_es_asn_CheckOutlined__WEBPACK_IMPORTED_MODULE_3__","_components_AntdIcon__WEBPACK_IMPORTED_MODULE_1__","module","__unused_webpack_exports","deselectCurrent","clipboardToIE11Formatting","exports","options","message","copyKey","debug","reselectPrevious","range","selection","success","document","createRange","getSelection","textContent","ariaHidden","all","clip","webkitUserSelect","MozUserSelect","msUserSelect","addEventListener","clipboardData","console","warn","clearData","setData","body","appendChild","selectNodeContents","addRange","execCommand","err","error","test","navigator","userAgent","prompt","removeRange","removeAllRanges","removeChild","isStyleSupport","_canUseDom__WEBPACK_IMPORTED_MODULE_0__","isStyleNameSupport","styleName","documentElement","styleNameList","some","name","isStyleValueSupport","ele","origin","styleValue","rangeCount","active","activeElement","ranges","getRangeAt","tagName","toUpperCase","blur"],"sourceRoot":""}